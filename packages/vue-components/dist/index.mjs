import { openBlock as re, createElementBlock as ie, createElementVNode as le, defineComponent as pn, ref as Me, computed as Un, renderSlot as hs, toDisplayString as Hn, createBlock as dt, createVNode as be, Fragment as Sn, withCtx as Ks, renderList as mt, normalizeClass as Vn, withDirectives as eo, vShow as no, toRefs as to, watch as so, onBeforeMount as oo, inject as ro, h as co, provide as ao } from "vue";
const io = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  "'": "&#39;",
  '"': "&quot;"
}, lo = /[&<>'"]/g, Fe = (n) => n.replace(
  lo,
  (e) => io[e]
), ds = (n, { shouldAllowHtml: e, shouldEscapeText: t }) => {
  const s = n.children ?? [], r = ["text", "emoji", "code_inline"];
  return e && r.push("html_inline"), s.filter(
    (a) => {
      var c;
      return r.includes(a.type) && // filter permalink symbol that generated by markdown-it-anchor
      !((c = a.meta) != null && c.isPermalinkSymbol);
    }
  ).reduce((a, c) => t && (c.type === "code_inline" || c.type === "text") ? `${a}${Fe(c.content)}` : `${a}${c.content}`, "").trim();
}, ms = (n, {
  level: e,
  shouldAllowHtml: t,
  shouldAllowNested: s,
  shouldEscapeText: r,
  slugify: o,
  format: a
}) => {
  const c = [], l = [], i = (p) => {
    for (; l.length !== 0 && p.level <= l[0].level; )
      l.shift();
    l.length === 0 ? (c.push(p), l.push(p)) : (l[0].children.push(p), l.unshift(p));
  };
  for (let p = 0; p < n.length; p += 1) {
    const h = n[p];
    if ((h == null ? void 0 : h.type) !== "heading_open" || (h == null ? void 0 : h.level) !== 0 && !s)
      continue;
    const d = Number.parseInt(h.tag.slice(1), 10);
    if (!e.includes(d))
      continue;
    const m = n[p + 1];
    if (!m)
      continue;
    const f = ds(m, {
      shouldAllowHtml: t,
      shouldEscapeText: r
    }), L = h.attrGet("id") ?? o(f);
    i({
      level: d,
      title: (a == null ? void 0 : a(f)) ?? f,
      slug: L,
      link: `#${L}`,
      children: []
    });
  }
  return c;
}, uo = /[\u0000-\u001f]/g, po = /[\s~`!@#$%^&*()\-_+=[\]{}|\\;:"'“”‘’<>,.?/]+/g, ho = /[\u0300-\u036F]/g, on = (n) => n.normalize("NFKD").replace(ho, "").replace(uo, "").replace(po, "-").replace(/-{2,}/g, "-").replace(/^-+|-+$/g, "").replace(/^(\d)/, "_$1").toLowerCase(), mo = (n, {
  level: e = [2, 3],
  shouldAllowNested: t = !1,
  slugify: s = on,
  format: r
} = {}) => {
  const o = n.renderer.render.bind(n.renderer);
  n.renderer.render = (a, c, l) => (l.headers = ms(a, {
    level: e,
    shouldAllowHtml: !1,
    shouldAllowNested: t,
    shouldEscapeText: !1,
    slugify: s,
    format: r
  }), o(a, c, l));
}, fo = (n) => {
  const e = n.renderer.render.bind(n.renderer);
  n.renderer.render = (t, s, r) => {
    const o = t.findIndex((a) => a.tag === "h1");
    return r.title = o > -1 ? ds(t[o + 1], {
      shouldAllowHtml: !1,
      shouldEscapeText: !1
    }) : "", e(t, s, r);
  };
}, go = ({
  listTag: n,
  listClass: e,
  itemClass: t,
  linkTag: s,
  linkClass: r
}) => {
  const o = Fe(n), a = e ? ` class="${Fe(e)}"` : "", c = "li", l = t ? ` class="${Fe(t)}"` : "", i = Fe(s), p = r ? ` class="${Fe(r)}"` : "", h = (m) => s === "router-link" ? ` to="${m}"` : ` href="${m}"`, d = (m) => `<${o}${a}>${m.map(
    (f) => `<${c}${l}${l}><${i}${p}${h(f.link)}>${f.title}</${i}>${f.children.length > 0 ? d(f.children) : ""}</${c}>`
  ).join("")}</${o}>`;
  return d;
}, _o = ({
  pattern: n,
  containerTag: e,
  containerClass: t
}) => (s, r, o, a) => {
  if (s.sCount[r] - s.blkIndent >= 4)
    return !1;
  const c = s.bMarks[r] + s.tShift[r], l = s.eMarks[r], i = s.src.slice(c, l).split(" ")[0];
  if (!n.test(i))
    return !1;
  if (a)
    return !0;
  s.line = r + 1;
  const p = s.push("toc_open", e, 1);
  p.markup = "", p.map = [r, s.line], t && p.attrSet("class", t);
  const h = s.push("toc_body", "", 0);
  h.markup = i, h.map = [r, s.line], h.hidden = !0;
  const d = s.push("toc_close", e, -1);
  return d.markup = "", h.map = [r, s.line], !0;
}, bo = (n, {
  pattern: e = /^\[\[toc\]\]$/i,
  slugify: t = on,
  format: s,
  level: r = [2, 3],
  shouldAllowNested: o = !1,
  containerTag: a = "nav",
  containerClass: c = "table-of-contents",
  listTag: l = "ul",
  listClass: i = "",
  itemClass: p = "",
  linkTag: h = "a",
  linkClass: d = ""
} = {}) => {
  n.block.ruler.before(
    "heading",
    "toc",
    _o({
      pattern: e,
      containerTag: a,
      containerClass: c
    }),
    {
      alt: ["paragraph", "reference", "blockquote"]
    }
  );
  const m = go({
    listTag: l,
    listClass: i,
    itemClass: p,
    linkTag: h,
    linkClass: d
  });
  n.renderer.rules.toc_body = (f) => m(
    ms(f, {
      level: r,
      shouldAllowHtml: !0,
      shouldAllowNested: o,
      shouldEscapeText: !0,
      slugify: t,
      format: s
    })
  );
};
var fs = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function hn(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
function ko(n) {
  if (n.__esModule)
    return n;
  var e = n.default;
  if (typeof e == "function") {
    var t = function s() {
      if (this instanceof s) {
        var r = [null];
        r.push.apply(r, arguments);
        var o = Function.bind.apply(e, r);
        return new o();
      }
      return e.apply(this, arguments);
    };
    t.prototype = e.prototype;
  } else
    t = {};
  return Object.defineProperty(t, "__esModule", { value: !0 }), Object.keys(n).forEach(function(s) {
    var r = Object.getOwnPropertyDescriptor(n, s);
    Object.defineProperty(t, s, r.get ? r : {
      enumerable: !0,
      get: function() {
        return n[s];
      }
    });
  }), t;
}
var B = {};
const yo = "Á", wo = "á", vo = "Ă", xo = "ă", Ao = "∾", So = "∿", Lo = "∾̳", No = "Â", Co = "â", Eo = "´", To = "А", Do = "а", jo = "Æ", qo = "æ", Ro = "⁡", Po = "𝔄", Io = "𝔞", Oo = "À", Fo = "à", Mo = "ℵ", Bo = "ℵ", $o = "Α", zo = "α", Go = "Ā", Uo = "ā", Ho = "⨿", Vo = "&", Wo = "&", Zo = "⩕", Jo = "⩓", Qo = "∧", Yo = "⩜", Xo = "⩘", Ko = "⩚", er = "∠", nr = "⦤", tr = "∠", sr = "⦨", or = "⦩", rr = "⦪", cr = "⦫", ar = "⦬", ir = "⦭", lr = "⦮", ur = "⦯", pr = "∡", hr = "∟", dr = "⊾", mr = "⦝", fr = "∢", gr = "Å", _r = "⍼", br = "Ą", kr = "ą", yr = "𝔸", wr = "𝕒", vr = "⩯", xr = "≈", Ar = "⩰", Sr = "≊", Lr = "≋", Nr = "'", Cr = "⁡", Er = "≈", Tr = "≊", Dr = "Å", jr = "å", qr = "𝒜", Rr = "𝒶", Pr = "≔", Ir = "*", Or = "≈", Fr = "≍", Mr = "Ã", Br = "ã", $r = "Ä", zr = "ä", Gr = "∳", Ur = "⨑", Hr = "≌", Vr = "϶", Wr = "‵", Zr = "∽", Jr = "⋍", Qr = "∖", Yr = "⫧", Xr = "⊽", Kr = "⌅", ec = "⌆", nc = "⌅", tc = "⎵", sc = "⎶", oc = "≌", rc = "Б", cc = "б", ac = "„", ic = "∵", lc = "∵", uc = "∵", pc = "⦰", hc = "϶", dc = "ℬ", mc = "ℬ", fc = "Β", gc = "β", _c = "ℶ", bc = "≬", kc = "𝔅", yc = "𝔟", wc = "⋂", vc = "◯", xc = "⋃", Ac = "⨀", Sc = "⨁", Lc = "⨂", Nc = "⨆", Cc = "★", Ec = "▽", Tc = "△", Dc = "⨄", jc = "⋁", qc = "⋀", Rc = "⤍", Pc = "⧫", Ic = "▪", Oc = "▴", Fc = "▾", Mc = "◂", Bc = "▸", $c = "␣", zc = "▒", Gc = "░", Uc = "▓", Hc = "█", Vc = "=⃥", Wc = "≡⃥", Zc = "⫭", Jc = "⌐", Qc = "𝔹", Yc = "𝕓", Xc = "⊥", Kc = "⊥", ea = "⋈", na = "⧉", ta = "┐", sa = "╕", oa = "╖", ra = "╗", ca = "┌", aa = "╒", ia = "╓", la = "╔", ua = "─", pa = "═", ha = "┬", da = "╤", ma = "╥", fa = "╦", ga = "┴", _a = "╧", ba = "╨", ka = "╩", ya = "⊟", wa = "⊞", va = "⊠", xa = "┘", Aa = "╛", Sa = "╜", La = "╝", Na = "└", Ca = "╘", Ea = "╙", Ta = "╚", Da = "│", ja = "║", qa = "┼", Ra = "╪", Pa = "╫", Ia = "╬", Oa = "┤", Fa = "╡", Ma = "╢", Ba = "╣", $a = "├", za = "╞", Ga = "╟", Ua = "╠", Ha = "‵", Va = "˘", Wa = "˘", Za = "¦", Ja = "𝒷", Qa = "ℬ", Ya = "⁏", Xa = "∽", Ka = "⋍", ei = "⧅", ni = "\\", ti = "⟈", si = "•", oi = "•", ri = "≎", ci = "⪮", ai = "≏", ii = "≎", li = "≏", ui = "Ć", pi = "ć", hi = "⩄", di = "⩉", mi = "⩋", fi = "∩", gi = "⋒", _i = "⩇", bi = "⩀", ki = "ⅅ", yi = "∩︀", wi = "⁁", vi = "ˇ", xi = "ℭ", Ai = "⩍", Si = "Č", Li = "č", Ni = "Ç", Ci = "ç", Ei = "Ĉ", Ti = "ĉ", Di = "∰", ji = "⩌", qi = "⩐", Ri = "Ċ", Pi = "ċ", Ii = "¸", Oi = "¸", Fi = "⦲", Mi = "¢", Bi = "·", $i = "·", zi = "𝔠", Gi = "ℭ", Ui = "Ч", Hi = "ч", Vi = "✓", Wi = "✓", Zi = "Χ", Ji = "χ", Qi = "ˆ", Yi = "≗", Xi = "↺", Ki = "↻", el = "⊛", nl = "⊚", tl = "⊝", sl = "⊙", ol = "®", rl = "Ⓢ", cl = "⊖", al = "⊕", il = "⊗", ll = "○", ul = "⧃", pl = "≗", hl = "⨐", dl = "⫯", ml = "⧂", fl = "∲", gl = "”", _l = "’", bl = "♣", kl = "♣", yl = ":", wl = "∷", vl = "⩴", xl = "≔", Al = "≔", Sl = ",", Ll = "@", Nl = "∁", Cl = "∘", El = "∁", Tl = "ℂ", Dl = "≅", jl = "⩭", ql = "≡", Rl = "∮", Pl = "∯", Il = "∮", Ol = "𝕔", Fl = "ℂ", Ml = "∐", Bl = "∐", $l = "©", zl = "©", Gl = "℗", Ul = "∳", Hl = "↵", Vl = "✗", Wl = "⨯", Zl = "𝒞", Jl = "𝒸", Ql = "⫏", Yl = "⫑", Xl = "⫐", Kl = "⫒", eu = "⋯", nu = "⤸", tu = "⤵", su = "⋞", ou = "⋟", ru = "↶", cu = "⤽", au = "⩈", iu = "⩆", lu = "≍", uu = "∪", pu = "⋓", hu = "⩊", du = "⊍", mu = "⩅", fu = "∪︀", gu = "↷", _u = "⤼", bu = "⋞", ku = "⋟", yu = "⋎", wu = "⋏", vu = "¤", xu = "↶", Au = "↷", Su = "⋎", Lu = "⋏", Nu = "∲", Cu = "∱", Eu = "⌭", Tu = "†", Du = "‡", ju = "ℸ", qu = "↓", Ru = "↡", Pu = "⇓", Iu = "‐", Ou = "⫤", Fu = "⊣", Mu = "⤏", Bu = "˝", $u = "Ď", zu = "ď", Gu = "Д", Uu = "д", Hu = "‡", Vu = "⇊", Wu = "ⅅ", Zu = "ⅆ", Ju = "⤑", Qu = "⩷", Yu = "°", Xu = "∇", Ku = "Δ", ep = "δ", np = "⦱", tp = "⥿", sp = "𝔇", op = "𝔡", rp = "⥥", cp = "⇃", ap = "⇂", ip = "´", lp = "˙", up = "˝", pp = "`", hp = "˜", dp = "⋄", mp = "⋄", fp = "⋄", gp = "♦", _p = "♦", bp = "¨", kp = "ⅆ", yp = "ϝ", wp = "⋲", vp = "÷", xp = "÷", Ap = "⋇", Sp = "⋇", Lp = "Ђ", Np = "ђ", Cp = "⌞", Ep = "⌍", Tp = "$", Dp = "𝔻", jp = "𝕕", qp = "¨", Rp = "˙", Pp = "⃜", Ip = "≐", Op = "≑", Fp = "≐", Mp = "∸", Bp = "∔", $p = "⊡", zp = "⌆", Gp = "∯", Up = "¨", Hp = "⇓", Vp = "⇐", Wp = "⇔", Zp = "⫤", Jp = "⟸", Qp = "⟺", Yp = "⟹", Xp = "⇒", Kp = "⊨", eh = "⇑", nh = "⇕", th = "∥", sh = "⤓", oh = "↓", rh = "↓", ch = "⇓", ah = "⇵", ih = "̑", lh = "⇊", uh = "⇃", ph = "⇂", hh = "⥐", dh = "⥞", mh = "⥖", fh = "↽", gh = "⥟", _h = "⥗", bh = "⇁", kh = "↧", yh = "⊤", wh = "⤐", vh = "⌟", xh = "⌌", Ah = "𝒟", Sh = "𝒹", Lh = "Ѕ", Nh = "ѕ", Ch = "⧶", Eh = "Đ", Th = "đ", Dh = "⋱", jh = "▿", qh = "▾", Rh = "⇵", Ph = "⥯", Ih = "⦦", Oh = "Џ", Fh = "џ", Mh = "⟿", Bh = "É", $h = "é", zh = "⩮", Gh = "Ě", Uh = "ě", Hh = "Ê", Vh = "ê", Wh = "≖", Zh = "≕", Jh = "Э", Qh = "э", Yh = "⩷", Xh = "Ė", Kh = "ė", ed = "≑", nd = "ⅇ", td = "≒", sd = "𝔈", od = "𝔢", rd = "⪚", cd = "È", ad = "è", id = "⪖", ld = "⪘", ud = "⪙", pd = "∈", hd = "⏧", dd = "ℓ", md = "⪕", fd = "⪗", gd = "Ē", _d = "ē", bd = "∅", kd = "∅", yd = "◻", wd = "∅", vd = "▫", xd = " ", Ad = " ", Sd = " ", Ld = "Ŋ", Nd = "ŋ", Cd = " ", Ed = "Ę", Td = "ę", Dd = "𝔼", jd = "𝕖", qd = "⋕", Rd = "⧣", Pd = "⩱", Id = "ε", Od = "Ε", Fd = "ε", Md = "ϵ", Bd = "≖", $d = "≕", zd = "≂", Gd = "⪖", Ud = "⪕", Hd = "⩵", Vd = "=", Wd = "≂", Zd = "≟", Jd = "⇌", Qd = "≡", Yd = "⩸", Xd = "⧥", Kd = "⥱", em = "≓", nm = "ℯ", tm = "ℰ", sm = "≐", om = "⩳", rm = "≂", cm = "Η", am = "η", im = "Ð", lm = "ð", um = "Ë", pm = "ë", hm = "€", dm = "!", mm = "∃", fm = "∃", gm = "ℰ", _m = "ⅇ", bm = "ⅇ", km = "≒", ym = "Ф", wm = "ф", vm = "♀", xm = "ﬃ", Am = "ﬀ", Sm = "ﬄ", Lm = "𝔉", Nm = "𝔣", Cm = "ﬁ", Em = "◼", Tm = "▪", Dm = "fj", jm = "♭", qm = "ﬂ", Rm = "▱", Pm = "ƒ", Im = "𝔽", Om = "𝕗", Fm = "∀", Mm = "∀", Bm = "⋔", $m = "⫙", zm = "ℱ", Gm = "⨍", Um = "½", Hm = "⅓", Vm = "¼", Wm = "⅕", Zm = "⅙", Jm = "⅛", Qm = "⅔", Ym = "⅖", Xm = "¾", Km = "⅗", ef = "⅜", nf = "⅘", tf = "⅚", sf = "⅝", of = "⅞", rf = "⁄", cf = "⌢", af = "𝒻", lf = "ℱ", uf = "ǵ", pf = "Γ", hf = "γ", df = "Ϝ", mf = "ϝ", ff = "⪆", gf = "Ğ", _f = "ğ", bf = "Ģ", kf = "Ĝ", yf = "ĝ", wf = "Г", vf = "г", xf = "Ġ", Af = "ġ", Sf = "≥", Lf = "≧", Nf = "⪌", Cf = "⋛", Ef = "≥", Tf = "≧", Df = "⩾", jf = "⪩", qf = "⩾", Rf = "⪀", Pf = "⪂", If = "⪄", Of = "⋛︀", Ff = "⪔", Mf = "𝔊", Bf = "𝔤", $f = "≫", zf = "⋙", Gf = "⋙", Uf = "ℷ", Hf = "Ѓ", Vf = "ѓ", Wf = "⪥", Zf = "≷", Jf = "⪒", Qf = "⪤", Yf = "⪊", Xf = "⪊", Kf = "⪈", eg = "≩", ng = "⪈", tg = "≩", sg = "⋧", og = "𝔾", rg = "𝕘", cg = "`", ag = "≥", ig = "⋛", lg = "≧", ug = "⪢", pg = "≷", hg = "⩾", dg = "≳", mg = "𝒢", fg = "ℊ", gg = "≳", _g = "⪎", bg = "⪐", kg = "⪧", yg = "⩺", wg = ">", vg = ">", xg = "≫", Ag = "⋗", Sg = "⦕", Lg = "⩼", Ng = "⪆", Cg = "⥸", Eg = "⋗", Tg = "⋛", Dg = "⪌", jg = "≷", qg = "≳", Rg = "≩︀", Pg = "≩︀", Ig = "ˇ", Og = " ", Fg = "½", Mg = "ℋ", Bg = "Ъ", $g = "ъ", zg = "⥈", Gg = "↔", Ug = "⇔", Hg = "↭", Vg = "^", Wg = "ℏ", Zg = "Ĥ", Jg = "ĥ", Qg = "♥", Yg = "♥", Xg = "…", Kg = "⊹", e_ = "𝔥", n_ = "ℌ", t_ = "ℋ", s_ = "⤥", o_ = "⤦", r_ = "⇿", c_ = "∻", a_ = "↩", i_ = "↪", l_ = "𝕙", u_ = "ℍ", p_ = "―", h_ = "─", d_ = "𝒽", m_ = "ℋ", f_ = "ℏ", g_ = "Ħ", __ = "ħ", b_ = "≎", k_ = "≏", y_ = "⁃", w_ = "‐", v_ = "Í", x_ = "í", A_ = "⁣", S_ = "Î", L_ = "î", N_ = "И", C_ = "и", E_ = "İ", T_ = "Е", D_ = "е", j_ = "¡", q_ = "⇔", R_ = "𝔦", P_ = "ℑ", I_ = "Ì", O_ = "ì", F_ = "ⅈ", M_ = "⨌", B_ = "∭", $_ = "⧜", z_ = "℩", G_ = "Ĳ", U_ = "ĳ", H_ = "Ī", V_ = "ī", W_ = "ℑ", Z_ = "ⅈ", J_ = "ℐ", Q_ = "ℑ", Y_ = "ı", X_ = "ℑ", K_ = "⊷", eb = "Ƶ", nb = "⇒", tb = "℅", sb = "∞", ob = "⧝", rb = "ı", cb = "⊺", ab = "∫", ib = "∬", lb = "ℤ", ub = "∫", pb = "⊺", hb = "⋂", db = "⨗", mb = "⨼", fb = "⁣", gb = "⁢", _b = "Ё", bb = "ё", kb = "Į", yb = "į", wb = "𝕀", vb = "𝕚", xb = "Ι", Ab = "ι", Sb = "⨼", Lb = "¿", Nb = "𝒾", Cb = "ℐ", Eb = "∈", Tb = "⋵", Db = "⋹", jb = "⋴", qb = "⋳", Rb = "∈", Pb = "⁢", Ib = "Ĩ", Ob = "ĩ", Fb = "І", Mb = "і", Bb = "Ï", $b = "ï", zb = "Ĵ", Gb = "ĵ", Ub = "Й", Hb = "й", Vb = "𝔍", Wb = "𝔧", Zb = "ȷ", Jb = "𝕁", Qb = "𝕛", Yb = "𝒥", Xb = "𝒿", Kb = "Ј", ek = "ј", nk = "Є", tk = "є", sk = "Κ", ok = "κ", rk = "ϰ", ck = "Ķ", ak = "ķ", ik = "К", lk = "к", uk = "𝔎", pk = "𝔨", hk = "ĸ", dk = "Х", mk = "х", fk = "Ќ", gk = "ќ", _k = "𝕂", bk = "𝕜", kk = "𝒦", yk = "𝓀", wk = "⇚", vk = "Ĺ", xk = "ĺ", Ak = "⦴", Sk = "ℒ", Lk = "Λ", Nk = "λ", Ck = "⟨", Ek = "⟪", Tk = "⦑", Dk = "⟨", jk = "⪅", qk = "ℒ", Rk = "«", Pk = "⇤", Ik = "⤟", Ok = "←", Fk = "↞", Mk = "⇐", Bk = "⤝", $k = "↩", zk = "↫", Gk = "⤹", Uk = "⥳", Hk = "↢", Vk = "⤙", Wk = "⤛", Zk = "⪫", Jk = "⪭", Qk = "⪭︀", Yk = "⤌", Xk = "⤎", Kk = "❲", ey = "{", ny = "[", ty = "⦋", sy = "⦏", oy = "⦍", ry = "Ľ", cy = "ľ", ay = "Ļ", iy = "ļ", ly = "⌈", uy = "{", py = "Л", hy = "л", dy = "⤶", my = "“", fy = "„", gy = "⥧", _y = "⥋", by = "↲", ky = "≤", yy = "≦", wy = "⟨", vy = "⇤", xy = "←", Ay = "←", Sy = "⇐", Ly = "⇆", Ny = "↢", Cy = "⌈", Ey = "⟦", Ty = "⥡", Dy = "⥙", jy = "⇃", qy = "⌊", Ry = "↽", Py = "↼", Iy = "⇇", Oy = "↔", Fy = "↔", My = "⇔", By = "⇆", $y = "⇋", zy = "↭", Gy = "⥎", Uy = "↤", Hy = "⊣", Vy = "⥚", Wy = "⋋", Zy = "⧏", Jy = "⊲", Qy = "⊴", Yy = "⥑", Xy = "⥠", Ky = "⥘", ew = "↿", nw = "⥒", tw = "↼", sw = "⪋", ow = "⋚", rw = "≤", cw = "≦", aw = "⩽", iw = "⪨", lw = "⩽", uw = "⩿", pw = "⪁", hw = "⪃", dw = "⋚︀", mw = "⪓", fw = "⪅", gw = "⋖", _w = "⋚", bw = "⪋", kw = "⋚", yw = "≦", ww = "≶", vw = "≶", xw = "⪡", Aw = "≲", Sw = "⩽", Lw = "≲", Nw = "⥼", Cw = "⌊", Ew = "𝔏", Tw = "𝔩", Dw = "≶", jw = "⪑", qw = "⥢", Rw = "↽", Pw = "↼", Iw = "⥪", Ow = "▄", Fw = "Љ", Mw = "љ", Bw = "⇇", $w = "≪", zw = "⋘", Gw = "⌞", Uw = "⇚", Hw = "⥫", Vw = "◺", Ww = "Ŀ", Zw = "ŀ", Jw = "⎰", Qw = "⎰", Yw = "⪉", Xw = "⪉", Kw = "⪇", e0 = "≨", n0 = "⪇", t0 = "≨", s0 = "⋦", o0 = "⟬", r0 = "⇽", c0 = "⟦", a0 = "⟵", i0 = "⟵", l0 = "⟸", u0 = "⟷", p0 = "⟷", h0 = "⟺", d0 = "⟼", m0 = "⟶", f0 = "⟶", g0 = "⟹", _0 = "↫", b0 = "↬", k0 = "⦅", y0 = "𝕃", w0 = "𝕝", v0 = "⨭", x0 = "⨴", A0 = "∗", S0 = "_", L0 = "↙", N0 = "↘", C0 = "◊", E0 = "◊", T0 = "⧫", D0 = "(", j0 = "⦓", q0 = "⇆", R0 = "⌟", P0 = "⇋", I0 = "⥭", O0 = "‎", F0 = "⊿", M0 = "‹", B0 = "𝓁", $0 = "ℒ", z0 = "↰", G0 = "↰", U0 = "≲", H0 = "⪍", V0 = "⪏", W0 = "[", Z0 = "‘", J0 = "‚", Q0 = "Ł", Y0 = "ł", X0 = "⪦", K0 = "⩹", ev = "<", nv = "<", tv = "≪", sv = "⋖", ov = "⋋", rv = "⋉", cv = "⥶", av = "⩻", iv = "◃", lv = "⊴", uv = "◂", pv = "⦖", hv = "⥊", dv = "⥦", mv = "≨︀", fv = "≨︀", gv = "¯", _v = "♂", bv = "✠", kv = "✠", yv = "↦", wv = "↦", vv = "↧", xv = "↤", Av = "↥", Sv = "▮", Lv = "⨩", Nv = "М", Cv = "м", Ev = "—", Tv = "∺", Dv = "∡", jv = " ", qv = "ℳ", Rv = "𝔐", Pv = "𝔪", Iv = "℧", Ov = "µ", Fv = "*", Mv = "⫰", Bv = "∣", $v = "·", zv = "⊟", Gv = "−", Uv = "∸", Hv = "⨪", Vv = "∓", Wv = "⫛", Zv = "…", Jv = "∓", Qv = "⊧", Yv = "𝕄", Xv = "𝕞", Kv = "∓", e1 = "𝓂", n1 = "ℳ", t1 = "∾", s1 = "Μ", o1 = "μ", r1 = "⊸", c1 = "⊸", a1 = "∇", i1 = "Ń", l1 = "ń", u1 = "∠⃒", p1 = "≉", h1 = "⩰̸", d1 = "≋̸", m1 = "ŉ", f1 = "≉", g1 = "♮", _1 = "ℕ", b1 = "♮", k1 = " ", y1 = "≎̸", w1 = "≏̸", v1 = "⩃", x1 = "Ň", A1 = "ň", S1 = "Ņ", L1 = "ņ", N1 = "≇", C1 = "⩭̸", E1 = "⩂", T1 = "Н", D1 = "н", j1 = "–", q1 = "⤤", R1 = "↗", P1 = "⇗", I1 = "↗", O1 = "≠", F1 = "≐̸", M1 = "​", B1 = "​", $1 = "​", z1 = "​", G1 = "≢", U1 = "⤨", H1 = "≂̸", V1 = "≫", W1 = "≪", Z1 = `
`, J1 = "∄", Q1 = "∄", Y1 = "𝔑", X1 = "𝔫", K1 = "≧̸", ex = "≱", nx = "≱", tx = "≧̸", sx = "⩾̸", ox = "⩾̸", rx = "⋙̸", cx = "≵", ax = "≫⃒", ix = "≯", lx = "≯", ux = "≫̸", px = "↮", hx = "⇎", dx = "⫲", mx = "∋", fx = "⋼", gx = "⋺", _x = "∋", bx = "Њ", kx = "њ", yx = "↚", wx = "⇍", vx = "‥", xx = "≦̸", Ax = "≰", Sx = "↚", Lx = "⇍", Nx = "↮", Cx = "⇎", Ex = "≰", Tx = "≦̸", Dx = "⩽̸", jx = "⩽̸", qx = "≮", Rx = "⋘̸", Px = "≴", Ix = "≪⃒", Ox = "≮", Fx = "⋪", Mx = "⋬", Bx = "≪̸", $x = "∤", zx = "⁠", Gx = " ", Ux = "𝕟", Hx = "ℕ", Vx = "⫬", Wx = "¬", Zx = "≢", Jx = "≭", Qx = "∦", Yx = "∉", Xx = "≠", Kx = "≂̸", eA = "∄", nA = "≯", tA = "≱", sA = "≧̸", oA = "≫̸", rA = "≹", cA = "⩾̸", aA = "≵", iA = "≎̸", lA = "≏̸", uA = "∉", pA = "⋵̸", hA = "⋹̸", dA = "∉", mA = "⋷", fA = "⋶", gA = "⧏̸", _A = "⋪", bA = "⋬", kA = "≮", yA = "≰", wA = "≸", vA = "≪̸", xA = "⩽̸", AA = "≴", SA = "⪢̸", LA = "⪡̸", NA = "∌", CA = "∌", EA = "⋾", TA = "⋽", DA = "⊀", jA = "⪯̸", qA = "⋠", RA = "∌", PA = "⧐̸", IA = "⋫", OA = "⋭", FA = "⊏̸", MA = "⋢", BA = "⊐̸", $A = "⋣", zA = "⊂⃒", GA = "⊈", UA = "⊁", HA = "⪰̸", VA = "⋡", WA = "≿̸", ZA = "⊃⃒", JA = "⊉", QA = "≁", YA = "≄", XA = "≇", KA = "≉", eS = "∤", nS = "∦", tS = "∦", sS = "⫽⃥", oS = "∂̸", rS = "⨔", cS = "⊀", aS = "⋠", iS = "⊀", lS = "⪯̸", uS = "⪯̸", pS = "⤳̸", hS = "↛", dS = "⇏", mS = "↝̸", fS = "↛", gS = "⇏", _S = "⋫", bS = "⋭", kS = "⊁", yS = "⋡", wS = "⪰̸", vS = "𝒩", xS = "𝓃", AS = "∤", SS = "∦", LS = "≁", NS = "≄", CS = "≄", ES = "∤", TS = "∦", DS = "⋢", jS = "⋣", qS = "⊄", RS = "⫅̸", PS = "⊈", IS = "⊂⃒", OS = "⊈", FS = "⫅̸", MS = "⊁", BS = "⪰̸", $S = "⊅", zS = "⫆̸", GS = "⊉", US = "⊃⃒", HS = "⊉", VS = "⫆̸", WS = "≹", ZS = "Ñ", JS = "ñ", QS = "≸", YS = "⋪", XS = "⋬", KS = "⋫", eL = "⋭", nL = "Ν", tL = "ν", sL = "#", oL = "№", rL = " ", cL = "≍⃒", aL = "⊬", iL = "⊭", lL = "⊮", uL = "⊯", pL = "≥⃒", hL = ">⃒", dL = "⤄", mL = "⧞", fL = "⤂", gL = "≤⃒", _L = "<⃒", bL = "⊴⃒", kL = "⤃", yL = "⊵⃒", wL = "∼⃒", vL = "⤣", xL = "↖", AL = "⇖", SL = "↖", LL = "⤧", NL = "Ó", CL = "ó", EL = "⊛", TL = "Ô", DL = "ô", jL = "⊚", qL = "О", RL = "о", PL = "⊝", IL = "Ő", OL = "ő", FL = "⨸", ML = "⊙", BL = "⦼", $L = "Œ", zL = "œ", GL = "⦿", UL = "𝔒", HL = "𝔬", VL = "˛", WL = "Ò", ZL = "ò", JL = "⧁", QL = "⦵", YL = "Ω", XL = "∮", KL = "↺", eN = "⦾", nN = "⦻", tN = "‾", sN = "⧀", oN = "Ō", rN = "ō", cN = "Ω", aN = "ω", iN = "Ο", lN = "ο", uN = "⦶", pN = "⊖", hN = "𝕆", dN = "𝕠", mN = "⦷", fN = "“", gN = "‘", _N = "⦹", bN = "⊕", kN = "↻", yN = "⩔", wN = "∨", vN = "⩝", xN = "ℴ", AN = "ℴ", SN = "ª", LN = "º", NN = "⊶", CN = "⩖", EN = "⩗", TN = "⩛", DN = "Ⓢ", jN = "𝒪", qN = "ℴ", RN = "Ø", PN = "ø", IN = "⊘", ON = "Õ", FN = "õ", MN = "⨶", BN = "⨷", $N = "⊗", zN = "Ö", GN = "ö", UN = "⌽", HN = "‾", VN = "⏞", WN = "⎴", ZN = "⏜", JN = "¶", QN = "∥", YN = "∥", XN = "⫳", KN = "⫽", eC = "∂", nC = "∂", tC = "П", sC = "п", oC = "%", rC = ".", cC = "‰", aC = "⊥", iC = "‱", lC = "𝔓", uC = "𝔭", pC = "Φ", hC = "φ", dC = "ϕ", mC = "ℳ", fC = "☎", gC = "Π", _C = "π", bC = "⋔", kC = "ϖ", yC = "ℏ", wC = "ℎ", vC = "ℏ", xC = "⨣", AC = "⊞", SC = "⨢", LC = "+", NC = "∔", CC = "⨥", EC = "⩲", TC = "±", DC = "±", jC = "⨦", qC = "⨧", RC = "±", PC = "ℌ", IC = "⨕", OC = "𝕡", FC = "ℙ", MC = "£", BC = "⪷", $C = "⪻", zC = "≺", GC = "≼", UC = "⪷", HC = "≺", VC = "≼", WC = "≺", ZC = "⪯", JC = "≼", QC = "≾", YC = "⪯", XC = "⪹", KC = "⪵", eE = "⋨", nE = "⪯", tE = "⪳", sE = "≾", oE = "′", rE = "″", cE = "ℙ", aE = "⪹", iE = "⪵", lE = "⋨", uE = "∏", pE = "∏", hE = "⌮", dE = "⌒", mE = "⌓", fE = "∝", gE = "∝", _E = "∷", bE = "∝", kE = "≾", yE = "⊰", wE = "𝒫", vE = "𝓅", xE = "Ψ", AE = "ψ", SE = " ", LE = "𝔔", NE = "𝔮", CE = "⨌", EE = "𝕢", TE = "ℚ", DE = "⁗", jE = "𝒬", qE = "𝓆", RE = "ℍ", PE = "⨖", IE = "?", OE = "≟", FE = '"', ME = '"', BE = "⇛", $E = "∽̱", zE = "Ŕ", GE = "ŕ", UE = "√", HE = "⦳", VE = "⟩", WE = "⟫", ZE = "⦒", JE = "⦥", QE = "⟩", YE = "»", XE = "⥵", KE = "⇥", eT = "⤠", nT = "⤳", tT = "→", sT = "↠", oT = "⇒", rT = "⤞", cT = "↪", aT = "↬", iT = "⥅", lT = "⥴", uT = "⤖", pT = "↣", hT = "↝", dT = "⤚", mT = "⤜", fT = "∶", gT = "ℚ", _T = "⤍", bT = "⤏", kT = "⤐", yT = "❳", wT = "}", vT = "]", xT = "⦌", AT = "⦎", ST = "⦐", LT = "Ř", NT = "ř", CT = "Ŗ", ET = "ŗ", TT = "⌉", DT = "}", jT = "Р", qT = "р", RT = "⤷", PT = "⥩", IT = "”", OT = "”", FT = "↳", MT = "ℜ", BT = "ℛ", $T = "ℜ", zT = "ℝ", GT = "ℜ", UT = "▭", HT = "®", VT = "®", WT = "∋", ZT = "⇋", JT = "⥯", QT = "⥽", YT = "⌋", XT = "𝔯", KT = "ℜ", eD = "⥤", nD = "⇁", tD = "⇀", sD = "⥬", oD = "Ρ", rD = "ρ", cD = "ϱ", aD = "⟩", iD = "⇥", lD = "→", uD = "→", pD = "⇒", hD = "⇄", dD = "↣", mD = "⌉", fD = "⟧", gD = "⥝", _D = "⥕", bD = "⇂", kD = "⌋", yD = "⇁", wD = "⇀", vD = "⇄", xD = "⇌", AD = "⇉", SD = "↝", LD = "↦", ND = "⊢", CD = "⥛", ED = "⋌", TD = "⧐", DD = "⊳", jD = "⊵", qD = "⥏", RD = "⥜", PD = "⥔", ID = "↾", OD = "⥓", FD = "⇀", MD = "˚", BD = "≓", $D = "⇄", zD = "⇌", GD = "‏", UD = "⎱", HD = "⎱", VD = "⫮", WD = "⟭", ZD = "⇾", JD = "⟧", QD = "⦆", YD = "𝕣", XD = "ℝ", KD = "⨮", ej = "⨵", nj = "⥰", tj = ")", sj = "⦔", oj = "⨒", rj = "⇉", cj = "⇛", aj = "›", ij = "𝓇", lj = "ℛ", uj = "↱", pj = "↱", hj = "]", dj = "’", mj = "’", fj = "⋌", gj = "⋊", _j = "▹", bj = "⊵", kj = "▸", yj = "⧎", wj = "⧴", vj = "⥨", xj = "℞", Aj = "Ś", Sj = "ś", Lj = "‚", Nj = "⪸", Cj = "Š", Ej = "š", Tj = "⪼", Dj = "≻", jj = "≽", qj = "⪰", Rj = "⪴", Pj = "Ş", Ij = "ş", Oj = "Ŝ", Fj = "ŝ", Mj = "⪺", Bj = "⪶", $j = "⋩", zj = "⨓", Gj = "≿", Uj = "С", Hj = "с", Vj = "⊡", Wj = "⋅", Zj = "⩦", Jj = "⤥", Qj = "↘", Yj = "⇘", Xj = "↘", Kj = "§", eq = ";", nq = "⤩", tq = "∖", sq = "∖", oq = "✶", rq = "𝔖", cq = "𝔰", aq = "⌢", iq = "♯", lq = "Щ", uq = "щ", pq = "Ш", hq = "ш", dq = "↓", mq = "←", fq = "∣", gq = "∥", _q = "→", bq = "↑", kq = "­", yq = "Σ", wq = "σ", vq = "ς", xq = "ς", Aq = "∼", Sq = "⩪", Lq = "≃", Nq = "≃", Cq = "⪞", Eq = "⪠", Tq = "⪝", Dq = "⪟", jq = "≆", qq = "⨤", Rq = "⥲", Pq = "←", Iq = "∘", Oq = "∖", Fq = "⨳", Mq = "⧤", Bq = "∣", $q = "⌣", zq = "⪪", Gq = "⪬", Uq = "⪬︀", Hq = "Ь", Vq = "ь", Wq = "⌿", Zq = "⧄", Jq = "/", Qq = "𝕊", Yq = "𝕤", Xq = "♠", Kq = "♠", eR = "∥", nR = "⊓", tR = "⊓︀", sR = "⊔", oR = "⊔︀", rR = "√", cR = "⊏", aR = "⊑", iR = "⊏", lR = "⊑", uR = "⊐", pR = "⊒", hR = "⊐", dR = "⊒", mR = "□", fR = "□", gR = "⊓", _R = "⊏", bR = "⊑", kR = "⊐", yR = "⊒", wR = "⊔", vR = "▪", xR = "□", AR = "▪", SR = "→", LR = "𝒮", NR = "𝓈", CR = "∖", ER = "⌣", TR = "⋆", DR = "⋆", jR = "☆", qR = "★", RR = "ϵ", PR = "ϕ", IR = "¯", OR = "⊂", FR = "⋐", MR = "⪽", BR = "⫅", $R = "⊆", zR = "⫃", GR = "⫁", UR = "⫋", HR = "⊊", VR = "⪿", WR = "⥹", ZR = "⊂", JR = "⋐", QR = "⊆", YR = "⫅", XR = "⊆", KR = "⊊", e2 = "⫋", n2 = "⫇", t2 = "⫕", s2 = "⫓", o2 = "⪸", r2 = "≻", c2 = "≽", a2 = "≻", i2 = "⪰", l2 = "≽", u2 = "≿", p2 = "⪰", h2 = "⪺", d2 = "⪶", m2 = "⋩", f2 = "≿", g2 = "∋", _2 = "∑", b2 = "∑", k2 = "♪", y2 = "¹", w2 = "²", v2 = "³", x2 = "⊃", A2 = "⋑", S2 = "⪾", L2 = "⫘", N2 = "⫆", C2 = "⊇", E2 = "⫄", T2 = "⊃", D2 = "⊇", j2 = "⟉", q2 = "⫗", R2 = "⥻", P2 = "⫂", I2 = "⫌", O2 = "⊋", F2 = "⫀", M2 = "⊃", B2 = "⋑", $2 = "⊇", z2 = "⫆", G2 = "⊋", U2 = "⫌", H2 = "⫈", V2 = "⫔", W2 = "⫖", Z2 = "⤦", J2 = "↙", Q2 = "⇙", Y2 = "↙", X2 = "⤪", K2 = "ß", eP = "	", nP = "⌖", tP = "Τ", sP = "τ", oP = "⎴", rP = "Ť", cP = "ť", aP = "Ţ", iP = "ţ", lP = "Т", uP = "т", pP = "⃛", hP = "⌕", dP = "𝔗", mP = "𝔱", fP = "∴", gP = "∴", _P = "∴", bP = "Θ", kP = "θ", yP = "ϑ", wP = "ϑ", vP = "≈", xP = "∼", AP = "  ", SP = " ", LP = " ", NP = "≈", CP = "∼", EP = "Þ", TP = "þ", DP = "˜", jP = "∼", qP = "≃", RP = "≅", PP = "≈", IP = "⨱", OP = "⊠", FP = "×", MP = "⨰", BP = "∭", $P = "⤨", zP = "⌶", GP = "⫱", UP = "⊤", HP = "𝕋", VP = "𝕥", WP = "⫚", ZP = "⤩", JP = "‴", QP = "™", YP = "™", XP = "▵", KP = "▿", eI = "◃", nI = "⊴", tI = "≜", sI = "▹", oI = "⊵", rI = "◬", cI = "≜", aI = "⨺", iI = "⃛", lI = "⨹", uI = "⧍", pI = "⨻", hI = "⏢", dI = "𝒯", mI = "𝓉", fI = "Ц", gI = "ц", _I = "Ћ", bI = "ћ", kI = "Ŧ", yI = "ŧ", wI = "≬", vI = "↞", xI = "↠", AI = "Ú", SI = "ú", LI = "↑", NI = "↟", CI = "⇑", EI = "⥉", TI = "Ў", DI = "ў", jI = "Ŭ", qI = "ŭ", RI = "Û", PI = "û", II = "У", OI = "у", FI = "⇅", MI = "Ű", BI = "ű", $I = "⥮", zI = "⥾", GI = "𝔘", UI = "𝔲", HI = "Ù", VI = "ù", WI = "⥣", ZI = "↿", JI = "↾", QI = "▀", YI = "⌜", XI = "⌜", KI = "⌏", eO = "◸", nO = "Ū", tO = "ū", sO = "¨", oO = "_", rO = "⏟", cO = "⎵", aO = "⏝", iO = "⋃", lO = "⊎", uO = "Ų", pO = "ų", hO = "𝕌", dO = "𝕦", mO = "⤒", fO = "↑", gO = "↑", _O = "⇑", bO = "⇅", kO = "↕", yO = "↕", wO = "⇕", vO = "⥮", xO = "↿", AO = "↾", SO = "⊎", LO = "↖", NO = "↗", CO = "υ", EO = "ϒ", TO = "ϒ", DO = "Υ", jO = "υ", qO = "↥", RO = "⊥", PO = "⇈", IO = "⌝", OO = "⌝", FO = "⌎", MO = "Ů", BO = "ů", $O = "◹", zO = "𝒰", GO = "𝓊", UO = "⋰", HO = "Ũ", VO = "ũ", WO = "▵", ZO = "▴", JO = "⇈", QO = "Ü", YO = "ü", XO = "⦧", KO = "⦜", eF = "ϵ", nF = "ϰ", tF = "∅", sF = "ϕ", oF = "ϖ", rF = "∝", cF = "↕", aF = "⇕", iF = "ϱ", lF = "ς", uF = "⊊︀", pF = "⫋︀", hF = "⊋︀", dF = "⫌︀", mF = "ϑ", fF = "⊲", gF = "⊳", _F = "⫨", bF = "⫫", kF = "⫩", yF = "В", wF = "в", vF = "⊢", xF = "⊨", AF = "⊩", SF = "⊫", LF = "⫦", NF = "⊻", CF = "∨", EF = "⋁", TF = "≚", DF = "⋮", jF = "|", qF = "‖", RF = "|", PF = "‖", IF = "∣", OF = "|", FF = "❘", MF = "≀", BF = " ", $F = "𝔙", zF = "𝔳", GF = "⊲", UF = "⊂⃒", HF = "⊃⃒", VF = "𝕍", WF = "𝕧", ZF = "∝", JF = "⊳", QF = "𝒱", YF = "𝓋", XF = "⫋︀", KF = "⊊︀", e3 = "⫌︀", n3 = "⊋︀", t3 = "⊪", s3 = "⦚", o3 = "Ŵ", r3 = "ŵ", c3 = "⩟", a3 = "∧", i3 = "⋀", l3 = "≙", u3 = "℘", p3 = "𝔚", h3 = "𝔴", d3 = "𝕎", m3 = "𝕨", f3 = "℘", g3 = "≀", _3 = "≀", b3 = "𝒲", k3 = "𝓌", y3 = "⋂", w3 = "◯", v3 = "⋃", x3 = "▽", A3 = "𝔛", S3 = "𝔵", L3 = "⟷", N3 = "⟺", C3 = "Ξ", E3 = "ξ", T3 = "⟵", D3 = "⟸", j3 = "⟼", q3 = "⋻", R3 = "⨀", P3 = "𝕏", I3 = "𝕩", O3 = "⨁", F3 = "⨂", M3 = "⟶", B3 = "⟹", $3 = "𝒳", z3 = "𝓍", G3 = "⨆", U3 = "⨄", H3 = "△", V3 = "⋁", W3 = "⋀", Z3 = "Ý", J3 = "ý", Q3 = "Я", Y3 = "я", X3 = "Ŷ", K3 = "ŷ", eM = "Ы", nM = "ы", tM = "¥", sM = "𝔜", oM = "𝔶", rM = "Ї", cM = "ї", aM = "𝕐", iM = "𝕪", lM = "𝒴", uM = "𝓎", pM = "Ю", hM = "ю", dM = "ÿ", mM = "Ÿ", fM = "Ź", gM = "ź", _M = "Ž", bM = "ž", kM = "З", yM = "з", wM = "Ż", vM = "ż", xM = "ℨ", AM = "​", SM = "Ζ", LM = "ζ", NM = "𝔷", CM = "ℨ", EM = "Ж", TM = "ж", DM = "⇝", jM = "𝕫", qM = "ℤ", RM = "𝒵", PM = "𝓏", IM = "‍", OM = "‌", FM = {
  Aacute: yo,
  aacute: wo,
  Abreve: vo,
  abreve: xo,
  ac: Ao,
  acd: So,
  acE: Lo,
  Acirc: No,
  acirc: Co,
  acute: Eo,
  Acy: To,
  acy: Do,
  AElig: jo,
  aelig: qo,
  af: Ro,
  Afr: Po,
  afr: Io,
  Agrave: Oo,
  agrave: Fo,
  alefsym: Mo,
  aleph: Bo,
  Alpha: $o,
  alpha: zo,
  Amacr: Go,
  amacr: Uo,
  amalg: Ho,
  amp: Vo,
  AMP: Wo,
  andand: Zo,
  And: Jo,
  and: Qo,
  andd: Yo,
  andslope: Xo,
  andv: Ko,
  ang: er,
  ange: nr,
  angle: tr,
  angmsdaa: sr,
  angmsdab: or,
  angmsdac: rr,
  angmsdad: cr,
  angmsdae: ar,
  angmsdaf: ir,
  angmsdag: lr,
  angmsdah: ur,
  angmsd: pr,
  angrt: hr,
  angrtvb: dr,
  angrtvbd: mr,
  angsph: fr,
  angst: gr,
  angzarr: _r,
  Aogon: br,
  aogon: kr,
  Aopf: yr,
  aopf: wr,
  apacir: vr,
  ap: xr,
  apE: Ar,
  ape: Sr,
  apid: Lr,
  apos: Nr,
  ApplyFunction: Cr,
  approx: Er,
  approxeq: Tr,
  Aring: Dr,
  aring: jr,
  Ascr: qr,
  ascr: Rr,
  Assign: Pr,
  ast: Ir,
  asymp: Or,
  asympeq: Fr,
  Atilde: Mr,
  atilde: Br,
  Auml: $r,
  auml: zr,
  awconint: Gr,
  awint: Ur,
  backcong: Hr,
  backepsilon: Vr,
  backprime: Wr,
  backsim: Zr,
  backsimeq: Jr,
  Backslash: Qr,
  Barv: Yr,
  barvee: Xr,
  barwed: Kr,
  Barwed: ec,
  barwedge: nc,
  bbrk: tc,
  bbrktbrk: sc,
  bcong: oc,
  Bcy: rc,
  bcy: cc,
  bdquo: ac,
  becaus: ic,
  because: lc,
  Because: uc,
  bemptyv: pc,
  bepsi: hc,
  bernou: dc,
  Bernoullis: mc,
  Beta: fc,
  beta: gc,
  beth: _c,
  between: bc,
  Bfr: kc,
  bfr: yc,
  bigcap: wc,
  bigcirc: vc,
  bigcup: xc,
  bigodot: Ac,
  bigoplus: Sc,
  bigotimes: Lc,
  bigsqcup: Nc,
  bigstar: Cc,
  bigtriangledown: Ec,
  bigtriangleup: Tc,
  biguplus: Dc,
  bigvee: jc,
  bigwedge: qc,
  bkarow: Rc,
  blacklozenge: Pc,
  blacksquare: Ic,
  blacktriangle: Oc,
  blacktriangledown: Fc,
  blacktriangleleft: Mc,
  blacktriangleright: Bc,
  blank: $c,
  blk12: zc,
  blk14: Gc,
  blk34: Uc,
  block: Hc,
  bne: Vc,
  bnequiv: Wc,
  bNot: Zc,
  bnot: Jc,
  Bopf: Qc,
  bopf: Yc,
  bot: Xc,
  bottom: Kc,
  bowtie: ea,
  boxbox: na,
  boxdl: ta,
  boxdL: sa,
  boxDl: oa,
  boxDL: ra,
  boxdr: ca,
  boxdR: aa,
  boxDr: ia,
  boxDR: la,
  boxh: ua,
  boxH: pa,
  boxhd: ha,
  boxHd: da,
  boxhD: ma,
  boxHD: fa,
  boxhu: ga,
  boxHu: _a,
  boxhU: ba,
  boxHU: ka,
  boxminus: ya,
  boxplus: wa,
  boxtimes: va,
  boxul: xa,
  boxuL: Aa,
  boxUl: Sa,
  boxUL: La,
  boxur: Na,
  boxuR: Ca,
  boxUr: Ea,
  boxUR: Ta,
  boxv: Da,
  boxV: ja,
  boxvh: qa,
  boxvH: Ra,
  boxVh: Pa,
  boxVH: Ia,
  boxvl: Oa,
  boxvL: Fa,
  boxVl: Ma,
  boxVL: Ba,
  boxvr: $a,
  boxvR: za,
  boxVr: Ga,
  boxVR: Ua,
  bprime: Ha,
  breve: Va,
  Breve: Wa,
  brvbar: Za,
  bscr: Ja,
  Bscr: Qa,
  bsemi: Ya,
  bsim: Xa,
  bsime: Ka,
  bsolb: ei,
  bsol: ni,
  bsolhsub: ti,
  bull: si,
  bullet: oi,
  bump: ri,
  bumpE: ci,
  bumpe: ai,
  Bumpeq: ii,
  bumpeq: li,
  Cacute: ui,
  cacute: pi,
  capand: hi,
  capbrcup: di,
  capcap: mi,
  cap: fi,
  Cap: gi,
  capcup: _i,
  capdot: bi,
  CapitalDifferentialD: ki,
  caps: yi,
  caret: wi,
  caron: vi,
  Cayleys: xi,
  ccaps: Ai,
  Ccaron: Si,
  ccaron: Li,
  Ccedil: Ni,
  ccedil: Ci,
  Ccirc: Ei,
  ccirc: Ti,
  Cconint: Di,
  ccups: ji,
  ccupssm: qi,
  Cdot: Ri,
  cdot: Pi,
  cedil: Ii,
  Cedilla: Oi,
  cemptyv: Fi,
  cent: Mi,
  centerdot: Bi,
  CenterDot: $i,
  cfr: zi,
  Cfr: Gi,
  CHcy: Ui,
  chcy: Hi,
  check: Vi,
  checkmark: Wi,
  Chi: Zi,
  chi: Ji,
  circ: Qi,
  circeq: Yi,
  circlearrowleft: Xi,
  circlearrowright: Ki,
  circledast: el,
  circledcirc: nl,
  circleddash: tl,
  CircleDot: sl,
  circledR: ol,
  circledS: rl,
  CircleMinus: cl,
  CirclePlus: al,
  CircleTimes: il,
  cir: ll,
  cirE: ul,
  cire: pl,
  cirfnint: hl,
  cirmid: dl,
  cirscir: ml,
  ClockwiseContourIntegral: fl,
  CloseCurlyDoubleQuote: gl,
  CloseCurlyQuote: _l,
  clubs: bl,
  clubsuit: kl,
  colon: yl,
  Colon: wl,
  Colone: vl,
  colone: xl,
  coloneq: Al,
  comma: Sl,
  commat: Ll,
  comp: Nl,
  compfn: Cl,
  complement: El,
  complexes: Tl,
  cong: Dl,
  congdot: jl,
  Congruent: ql,
  conint: Rl,
  Conint: Pl,
  ContourIntegral: Il,
  copf: Ol,
  Copf: Fl,
  coprod: Ml,
  Coproduct: Bl,
  copy: $l,
  COPY: zl,
  copysr: Gl,
  CounterClockwiseContourIntegral: Ul,
  crarr: Hl,
  cross: Vl,
  Cross: Wl,
  Cscr: Zl,
  cscr: Jl,
  csub: Ql,
  csube: Yl,
  csup: Xl,
  csupe: Kl,
  ctdot: eu,
  cudarrl: nu,
  cudarrr: tu,
  cuepr: su,
  cuesc: ou,
  cularr: ru,
  cularrp: cu,
  cupbrcap: au,
  cupcap: iu,
  CupCap: lu,
  cup: uu,
  Cup: pu,
  cupcup: hu,
  cupdot: du,
  cupor: mu,
  cups: fu,
  curarr: gu,
  curarrm: _u,
  curlyeqprec: bu,
  curlyeqsucc: ku,
  curlyvee: yu,
  curlywedge: wu,
  curren: vu,
  curvearrowleft: xu,
  curvearrowright: Au,
  cuvee: Su,
  cuwed: Lu,
  cwconint: Nu,
  cwint: Cu,
  cylcty: Eu,
  dagger: Tu,
  Dagger: Du,
  daleth: ju,
  darr: qu,
  Darr: Ru,
  dArr: Pu,
  dash: Iu,
  Dashv: Ou,
  dashv: Fu,
  dbkarow: Mu,
  dblac: Bu,
  Dcaron: $u,
  dcaron: zu,
  Dcy: Gu,
  dcy: Uu,
  ddagger: Hu,
  ddarr: Vu,
  DD: Wu,
  dd: Zu,
  DDotrahd: Ju,
  ddotseq: Qu,
  deg: Yu,
  Del: Xu,
  Delta: Ku,
  delta: ep,
  demptyv: np,
  dfisht: tp,
  Dfr: sp,
  dfr: op,
  dHar: rp,
  dharl: cp,
  dharr: ap,
  DiacriticalAcute: ip,
  DiacriticalDot: lp,
  DiacriticalDoubleAcute: up,
  DiacriticalGrave: pp,
  DiacriticalTilde: hp,
  diam: dp,
  diamond: mp,
  Diamond: fp,
  diamondsuit: gp,
  diams: _p,
  die: bp,
  DifferentialD: kp,
  digamma: yp,
  disin: wp,
  div: vp,
  divide: xp,
  divideontimes: Ap,
  divonx: Sp,
  DJcy: Lp,
  djcy: Np,
  dlcorn: Cp,
  dlcrop: Ep,
  dollar: Tp,
  Dopf: Dp,
  dopf: jp,
  Dot: qp,
  dot: Rp,
  DotDot: Pp,
  doteq: Ip,
  doteqdot: Op,
  DotEqual: Fp,
  dotminus: Mp,
  dotplus: Bp,
  dotsquare: $p,
  doublebarwedge: zp,
  DoubleContourIntegral: Gp,
  DoubleDot: Up,
  DoubleDownArrow: Hp,
  DoubleLeftArrow: Vp,
  DoubleLeftRightArrow: Wp,
  DoubleLeftTee: Zp,
  DoubleLongLeftArrow: Jp,
  DoubleLongLeftRightArrow: Qp,
  DoubleLongRightArrow: Yp,
  DoubleRightArrow: Xp,
  DoubleRightTee: Kp,
  DoubleUpArrow: eh,
  DoubleUpDownArrow: nh,
  DoubleVerticalBar: th,
  DownArrowBar: sh,
  downarrow: oh,
  DownArrow: rh,
  Downarrow: ch,
  DownArrowUpArrow: ah,
  DownBreve: ih,
  downdownarrows: lh,
  downharpoonleft: uh,
  downharpoonright: ph,
  DownLeftRightVector: hh,
  DownLeftTeeVector: dh,
  DownLeftVectorBar: mh,
  DownLeftVector: fh,
  DownRightTeeVector: gh,
  DownRightVectorBar: _h,
  DownRightVector: bh,
  DownTeeArrow: kh,
  DownTee: yh,
  drbkarow: wh,
  drcorn: vh,
  drcrop: xh,
  Dscr: Ah,
  dscr: Sh,
  DScy: Lh,
  dscy: Nh,
  dsol: Ch,
  Dstrok: Eh,
  dstrok: Th,
  dtdot: Dh,
  dtri: jh,
  dtrif: qh,
  duarr: Rh,
  duhar: Ph,
  dwangle: Ih,
  DZcy: Oh,
  dzcy: Fh,
  dzigrarr: Mh,
  Eacute: Bh,
  eacute: $h,
  easter: zh,
  Ecaron: Gh,
  ecaron: Uh,
  Ecirc: Hh,
  ecirc: Vh,
  ecir: Wh,
  ecolon: Zh,
  Ecy: Jh,
  ecy: Qh,
  eDDot: Yh,
  Edot: Xh,
  edot: Kh,
  eDot: ed,
  ee: nd,
  efDot: td,
  Efr: sd,
  efr: od,
  eg: rd,
  Egrave: cd,
  egrave: ad,
  egs: id,
  egsdot: ld,
  el: ud,
  Element: pd,
  elinters: hd,
  ell: dd,
  els: md,
  elsdot: fd,
  Emacr: gd,
  emacr: _d,
  empty: bd,
  emptyset: kd,
  EmptySmallSquare: yd,
  emptyv: wd,
  EmptyVerySmallSquare: vd,
  emsp13: xd,
  emsp14: Ad,
  emsp: Sd,
  ENG: Ld,
  eng: Nd,
  ensp: Cd,
  Eogon: Ed,
  eogon: Td,
  Eopf: Dd,
  eopf: jd,
  epar: qd,
  eparsl: Rd,
  eplus: Pd,
  epsi: Id,
  Epsilon: Od,
  epsilon: Fd,
  epsiv: Md,
  eqcirc: Bd,
  eqcolon: $d,
  eqsim: zd,
  eqslantgtr: Gd,
  eqslantless: Ud,
  Equal: Hd,
  equals: Vd,
  EqualTilde: Wd,
  equest: Zd,
  Equilibrium: Jd,
  equiv: Qd,
  equivDD: Yd,
  eqvparsl: Xd,
  erarr: Kd,
  erDot: em,
  escr: nm,
  Escr: tm,
  esdot: sm,
  Esim: om,
  esim: rm,
  Eta: cm,
  eta: am,
  ETH: im,
  eth: lm,
  Euml: um,
  euml: pm,
  euro: hm,
  excl: dm,
  exist: mm,
  Exists: fm,
  expectation: gm,
  exponentiale: _m,
  ExponentialE: bm,
  fallingdotseq: km,
  Fcy: ym,
  fcy: wm,
  female: vm,
  ffilig: xm,
  fflig: Am,
  ffllig: Sm,
  Ffr: Lm,
  ffr: Nm,
  filig: Cm,
  FilledSmallSquare: Em,
  FilledVerySmallSquare: Tm,
  fjlig: Dm,
  flat: jm,
  fllig: qm,
  fltns: Rm,
  fnof: Pm,
  Fopf: Im,
  fopf: Om,
  forall: Fm,
  ForAll: Mm,
  fork: Bm,
  forkv: $m,
  Fouriertrf: zm,
  fpartint: Gm,
  frac12: Um,
  frac13: Hm,
  frac14: Vm,
  frac15: Wm,
  frac16: Zm,
  frac18: Jm,
  frac23: Qm,
  frac25: Ym,
  frac34: Xm,
  frac35: Km,
  frac38: ef,
  frac45: nf,
  frac56: tf,
  frac58: sf,
  frac78: of,
  frasl: rf,
  frown: cf,
  fscr: af,
  Fscr: lf,
  gacute: uf,
  Gamma: pf,
  gamma: hf,
  Gammad: df,
  gammad: mf,
  gap: ff,
  Gbreve: gf,
  gbreve: _f,
  Gcedil: bf,
  Gcirc: kf,
  gcirc: yf,
  Gcy: wf,
  gcy: vf,
  Gdot: xf,
  gdot: Af,
  ge: Sf,
  gE: Lf,
  gEl: Nf,
  gel: Cf,
  geq: Ef,
  geqq: Tf,
  geqslant: Df,
  gescc: jf,
  ges: qf,
  gesdot: Rf,
  gesdoto: Pf,
  gesdotol: If,
  gesl: Of,
  gesles: Ff,
  Gfr: Mf,
  gfr: Bf,
  gg: $f,
  Gg: zf,
  ggg: Gf,
  gimel: Uf,
  GJcy: Hf,
  gjcy: Vf,
  gla: Wf,
  gl: Zf,
  glE: Jf,
  glj: Qf,
  gnap: Yf,
  gnapprox: Xf,
  gne: Kf,
  gnE: eg,
  gneq: ng,
  gneqq: tg,
  gnsim: sg,
  Gopf: og,
  gopf: rg,
  grave: cg,
  GreaterEqual: ag,
  GreaterEqualLess: ig,
  GreaterFullEqual: lg,
  GreaterGreater: ug,
  GreaterLess: pg,
  GreaterSlantEqual: hg,
  GreaterTilde: dg,
  Gscr: mg,
  gscr: fg,
  gsim: gg,
  gsime: _g,
  gsiml: bg,
  gtcc: kg,
  gtcir: yg,
  gt: wg,
  GT: vg,
  Gt: xg,
  gtdot: Ag,
  gtlPar: Sg,
  gtquest: Lg,
  gtrapprox: Ng,
  gtrarr: Cg,
  gtrdot: Eg,
  gtreqless: Tg,
  gtreqqless: Dg,
  gtrless: jg,
  gtrsim: qg,
  gvertneqq: Rg,
  gvnE: Pg,
  Hacek: Ig,
  hairsp: Og,
  half: Fg,
  hamilt: Mg,
  HARDcy: Bg,
  hardcy: $g,
  harrcir: zg,
  harr: Gg,
  hArr: Ug,
  harrw: Hg,
  Hat: Vg,
  hbar: Wg,
  Hcirc: Zg,
  hcirc: Jg,
  hearts: Qg,
  heartsuit: Yg,
  hellip: Xg,
  hercon: Kg,
  hfr: e_,
  Hfr: n_,
  HilbertSpace: t_,
  hksearow: s_,
  hkswarow: o_,
  hoarr: r_,
  homtht: c_,
  hookleftarrow: a_,
  hookrightarrow: i_,
  hopf: l_,
  Hopf: u_,
  horbar: p_,
  HorizontalLine: h_,
  hscr: d_,
  Hscr: m_,
  hslash: f_,
  Hstrok: g_,
  hstrok: __,
  HumpDownHump: b_,
  HumpEqual: k_,
  hybull: y_,
  hyphen: w_,
  Iacute: v_,
  iacute: x_,
  ic: A_,
  Icirc: S_,
  icirc: L_,
  Icy: N_,
  icy: C_,
  Idot: E_,
  IEcy: T_,
  iecy: D_,
  iexcl: j_,
  iff: q_,
  ifr: R_,
  Ifr: P_,
  Igrave: I_,
  igrave: O_,
  ii: F_,
  iiiint: M_,
  iiint: B_,
  iinfin: $_,
  iiota: z_,
  IJlig: G_,
  ijlig: U_,
  Imacr: H_,
  imacr: V_,
  image: W_,
  ImaginaryI: Z_,
  imagline: J_,
  imagpart: Q_,
  imath: Y_,
  Im: X_,
  imof: K_,
  imped: eb,
  Implies: nb,
  incare: tb,
  in: "∈",
  infin: sb,
  infintie: ob,
  inodot: rb,
  intcal: cb,
  int: ab,
  Int: ib,
  integers: lb,
  Integral: ub,
  intercal: pb,
  Intersection: hb,
  intlarhk: db,
  intprod: mb,
  InvisibleComma: fb,
  InvisibleTimes: gb,
  IOcy: _b,
  iocy: bb,
  Iogon: kb,
  iogon: yb,
  Iopf: wb,
  iopf: vb,
  Iota: xb,
  iota: Ab,
  iprod: Sb,
  iquest: Lb,
  iscr: Nb,
  Iscr: Cb,
  isin: Eb,
  isindot: Tb,
  isinE: Db,
  isins: jb,
  isinsv: qb,
  isinv: Rb,
  it: Pb,
  Itilde: Ib,
  itilde: Ob,
  Iukcy: Fb,
  iukcy: Mb,
  Iuml: Bb,
  iuml: $b,
  Jcirc: zb,
  jcirc: Gb,
  Jcy: Ub,
  jcy: Hb,
  Jfr: Vb,
  jfr: Wb,
  jmath: Zb,
  Jopf: Jb,
  jopf: Qb,
  Jscr: Yb,
  jscr: Xb,
  Jsercy: Kb,
  jsercy: ek,
  Jukcy: nk,
  jukcy: tk,
  Kappa: sk,
  kappa: ok,
  kappav: rk,
  Kcedil: ck,
  kcedil: ak,
  Kcy: ik,
  kcy: lk,
  Kfr: uk,
  kfr: pk,
  kgreen: hk,
  KHcy: dk,
  khcy: mk,
  KJcy: fk,
  kjcy: gk,
  Kopf: _k,
  kopf: bk,
  Kscr: kk,
  kscr: yk,
  lAarr: wk,
  Lacute: vk,
  lacute: xk,
  laemptyv: Ak,
  lagran: Sk,
  Lambda: Lk,
  lambda: Nk,
  lang: Ck,
  Lang: Ek,
  langd: Tk,
  langle: Dk,
  lap: jk,
  Laplacetrf: qk,
  laquo: Rk,
  larrb: Pk,
  larrbfs: Ik,
  larr: Ok,
  Larr: Fk,
  lArr: Mk,
  larrfs: Bk,
  larrhk: $k,
  larrlp: zk,
  larrpl: Gk,
  larrsim: Uk,
  larrtl: Hk,
  latail: Vk,
  lAtail: Wk,
  lat: Zk,
  late: Jk,
  lates: Qk,
  lbarr: Yk,
  lBarr: Xk,
  lbbrk: Kk,
  lbrace: ey,
  lbrack: ny,
  lbrke: ty,
  lbrksld: sy,
  lbrkslu: oy,
  Lcaron: ry,
  lcaron: cy,
  Lcedil: ay,
  lcedil: iy,
  lceil: ly,
  lcub: uy,
  Lcy: py,
  lcy: hy,
  ldca: dy,
  ldquo: my,
  ldquor: fy,
  ldrdhar: gy,
  ldrushar: _y,
  ldsh: by,
  le: ky,
  lE: yy,
  LeftAngleBracket: wy,
  LeftArrowBar: vy,
  leftarrow: xy,
  LeftArrow: Ay,
  Leftarrow: Sy,
  LeftArrowRightArrow: Ly,
  leftarrowtail: Ny,
  LeftCeiling: Cy,
  LeftDoubleBracket: Ey,
  LeftDownTeeVector: Ty,
  LeftDownVectorBar: Dy,
  LeftDownVector: jy,
  LeftFloor: qy,
  leftharpoondown: Ry,
  leftharpoonup: Py,
  leftleftarrows: Iy,
  leftrightarrow: Oy,
  LeftRightArrow: Fy,
  Leftrightarrow: My,
  leftrightarrows: By,
  leftrightharpoons: $y,
  leftrightsquigarrow: zy,
  LeftRightVector: Gy,
  LeftTeeArrow: Uy,
  LeftTee: Hy,
  LeftTeeVector: Vy,
  leftthreetimes: Wy,
  LeftTriangleBar: Zy,
  LeftTriangle: Jy,
  LeftTriangleEqual: Qy,
  LeftUpDownVector: Yy,
  LeftUpTeeVector: Xy,
  LeftUpVectorBar: Ky,
  LeftUpVector: ew,
  LeftVectorBar: nw,
  LeftVector: tw,
  lEg: sw,
  leg: ow,
  leq: rw,
  leqq: cw,
  leqslant: aw,
  lescc: iw,
  les: lw,
  lesdot: uw,
  lesdoto: pw,
  lesdotor: hw,
  lesg: dw,
  lesges: mw,
  lessapprox: fw,
  lessdot: gw,
  lesseqgtr: _w,
  lesseqqgtr: bw,
  LessEqualGreater: kw,
  LessFullEqual: yw,
  LessGreater: ww,
  lessgtr: vw,
  LessLess: xw,
  lesssim: Aw,
  LessSlantEqual: Sw,
  LessTilde: Lw,
  lfisht: Nw,
  lfloor: Cw,
  Lfr: Ew,
  lfr: Tw,
  lg: Dw,
  lgE: jw,
  lHar: qw,
  lhard: Rw,
  lharu: Pw,
  lharul: Iw,
  lhblk: Ow,
  LJcy: Fw,
  ljcy: Mw,
  llarr: Bw,
  ll: $w,
  Ll: zw,
  llcorner: Gw,
  Lleftarrow: Uw,
  llhard: Hw,
  lltri: Vw,
  Lmidot: Ww,
  lmidot: Zw,
  lmoustache: Jw,
  lmoust: Qw,
  lnap: Yw,
  lnapprox: Xw,
  lne: Kw,
  lnE: e0,
  lneq: n0,
  lneqq: t0,
  lnsim: s0,
  loang: o0,
  loarr: r0,
  lobrk: c0,
  longleftarrow: a0,
  LongLeftArrow: i0,
  Longleftarrow: l0,
  longleftrightarrow: u0,
  LongLeftRightArrow: p0,
  Longleftrightarrow: h0,
  longmapsto: d0,
  longrightarrow: m0,
  LongRightArrow: f0,
  Longrightarrow: g0,
  looparrowleft: _0,
  looparrowright: b0,
  lopar: k0,
  Lopf: y0,
  lopf: w0,
  loplus: v0,
  lotimes: x0,
  lowast: A0,
  lowbar: S0,
  LowerLeftArrow: L0,
  LowerRightArrow: N0,
  loz: C0,
  lozenge: E0,
  lozf: T0,
  lpar: D0,
  lparlt: j0,
  lrarr: q0,
  lrcorner: R0,
  lrhar: P0,
  lrhard: I0,
  lrm: O0,
  lrtri: F0,
  lsaquo: M0,
  lscr: B0,
  Lscr: $0,
  lsh: z0,
  Lsh: G0,
  lsim: U0,
  lsime: H0,
  lsimg: V0,
  lsqb: W0,
  lsquo: Z0,
  lsquor: J0,
  Lstrok: Q0,
  lstrok: Y0,
  ltcc: X0,
  ltcir: K0,
  lt: ev,
  LT: nv,
  Lt: tv,
  ltdot: sv,
  lthree: ov,
  ltimes: rv,
  ltlarr: cv,
  ltquest: av,
  ltri: iv,
  ltrie: lv,
  ltrif: uv,
  ltrPar: pv,
  lurdshar: hv,
  luruhar: dv,
  lvertneqq: mv,
  lvnE: fv,
  macr: gv,
  male: _v,
  malt: bv,
  maltese: kv,
  Map: "⤅",
  map: yv,
  mapsto: wv,
  mapstodown: vv,
  mapstoleft: xv,
  mapstoup: Av,
  marker: Sv,
  mcomma: Lv,
  Mcy: Nv,
  mcy: Cv,
  mdash: Ev,
  mDDot: Tv,
  measuredangle: Dv,
  MediumSpace: jv,
  Mellintrf: qv,
  Mfr: Rv,
  mfr: Pv,
  mho: Iv,
  micro: Ov,
  midast: Fv,
  midcir: Mv,
  mid: Bv,
  middot: $v,
  minusb: zv,
  minus: Gv,
  minusd: Uv,
  minusdu: Hv,
  MinusPlus: Vv,
  mlcp: Wv,
  mldr: Zv,
  mnplus: Jv,
  models: Qv,
  Mopf: Yv,
  mopf: Xv,
  mp: Kv,
  mscr: e1,
  Mscr: n1,
  mstpos: t1,
  Mu: s1,
  mu: o1,
  multimap: r1,
  mumap: c1,
  nabla: a1,
  Nacute: i1,
  nacute: l1,
  nang: u1,
  nap: p1,
  napE: h1,
  napid: d1,
  napos: m1,
  napprox: f1,
  natural: g1,
  naturals: _1,
  natur: b1,
  nbsp: k1,
  nbump: y1,
  nbumpe: w1,
  ncap: v1,
  Ncaron: x1,
  ncaron: A1,
  Ncedil: S1,
  ncedil: L1,
  ncong: N1,
  ncongdot: C1,
  ncup: E1,
  Ncy: T1,
  ncy: D1,
  ndash: j1,
  nearhk: q1,
  nearr: R1,
  neArr: P1,
  nearrow: I1,
  ne: O1,
  nedot: F1,
  NegativeMediumSpace: M1,
  NegativeThickSpace: B1,
  NegativeThinSpace: $1,
  NegativeVeryThinSpace: z1,
  nequiv: G1,
  nesear: U1,
  nesim: H1,
  NestedGreaterGreater: V1,
  NestedLessLess: W1,
  NewLine: Z1,
  nexist: J1,
  nexists: Q1,
  Nfr: Y1,
  nfr: X1,
  ngE: K1,
  nge: ex,
  ngeq: nx,
  ngeqq: tx,
  ngeqslant: sx,
  nges: ox,
  nGg: rx,
  ngsim: cx,
  nGt: ax,
  ngt: ix,
  ngtr: lx,
  nGtv: ux,
  nharr: px,
  nhArr: hx,
  nhpar: dx,
  ni: mx,
  nis: fx,
  nisd: gx,
  niv: _x,
  NJcy: bx,
  njcy: kx,
  nlarr: yx,
  nlArr: wx,
  nldr: vx,
  nlE: xx,
  nle: Ax,
  nleftarrow: Sx,
  nLeftarrow: Lx,
  nleftrightarrow: Nx,
  nLeftrightarrow: Cx,
  nleq: Ex,
  nleqq: Tx,
  nleqslant: Dx,
  nles: jx,
  nless: qx,
  nLl: Rx,
  nlsim: Px,
  nLt: Ix,
  nlt: Ox,
  nltri: Fx,
  nltrie: Mx,
  nLtv: Bx,
  nmid: $x,
  NoBreak: zx,
  NonBreakingSpace: Gx,
  nopf: Ux,
  Nopf: Hx,
  Not: Vx,
  not: Wx,
  NotCongruent: Zx,
  NotCupCap: Jx,
  NotDoubleVerticalBar: Qx,
  NotElement: Yx,
  NotEqual: Xx,
  NotEqualTilde: Kx,
  NotExists: eA,
  NotGreater: nA,
  NotGreaterEqual: tA,
  NotGreaterFullEqual: sA,
  NotGreaterGreater: oA,
  NotGreaterLess: rA,
  NotGreaterSlantEqual: cA,
  NotGreaterTilde: aA,
  NotHumpDownHump: iA,
  NotHumpEqual: lA,
  notin: uA,
  notindot: pA,
  notinE: hA,
  notinva: dA,
  notinvb: mA,
  notinvc: fA,
  NotLeftTriangleBar: gA,
  NotLeftTriangle: _A,
  NotLeftTriangleEqual: bA,
  NotLess: kA,
  NotLessEqual: yA,
  NotLessGreater: wA,
  NotLessLess: vA,
  NotLessSlantEqual: xA,
  NotLessTilde: AA,
  NotNestedGreaterGreater: SA,
  NotNestedLessLess: LA,
  notni: NA,
  notniva: CA,
  notnivb: EA,
  notnivc: TA,
  NotPrecedes: DA,
  NotPrecedesEqual: jA,
  NotPrecedesSlantEqual: qA,
  NotReverseElement: RA,
  NotRightTriangleBar: PA,
  NotRightTriangle: IA,
  NotRightTriangleEqual: OA,
  NotSquareSubset: FA,
  NotSquareSubsetEqual: MA,
  NotSquareSuperset: BA,
  NotSquareSupersetEqual: $A,
  NotSubset: zA,
  NotSubsetEqual: GA,
  NotSucceeds: UA,
  NotSucceedsEqual: HA,
  NotSucceedsSlantEqual: VA,
  NotSucceedsTilde: WA,
  NotSuperset: ZA,
  NotSupersetEqual: JA,
  NotTilde: QA,
  NotTildeEqual: YA,
  NotTildeFullEqual: XA,
  NotTildeTilde: KA,
  NotVerticalBar: eS,
  nparallel: nS,
  npar: tS,
  nparsl: sS,
  npart: oS,
  npolint: rS,
  npr: cS,
  nprcue: aS,
  nprec: iS,
  npreceq: lS,
  npre: uS,
  nrarrc: pS,
  nrarr: hS,
  nrArr: dS,
  nrarrw: mS,
  nrightarrow: fS,
  nRightarrow: gS,
  nrtri: _S,
  nrtrie: bS,
  nsc: kS,
  nsccue: yS,
  nsce: wS,
  Nscr: vS,
  nscr: xS,
  nshortmid: AS,
  nshortparallel: SS,
  nsim: LS,
  nsime: NS,
  nsimeq: CS,
  nsmid: ES,
  nspar: TS,
  nsqsube: DS,
  nsqsupe: jS,
  nsub: qS,
  nsubE: RS,
  nsube: PS,
  nsubset: IS,
  nsubseteq: OS,
  nsubseteqq: FS,
  nsucc: MS,
  nsucceq: BS,
  nsup: $S,
  nsupE: zS,
  nsupe: GS,
  nsupset: US,
  nsupseteq: HS,
  nsupseteqq: VS,
  ntgl: WS,
  Ntilde: ZS,
  ntilde: JS,
  ntlg: QS,
  ntriangleleft: YS,
  ntrianglelefteq: XS,
  ntriangleright: KS,
  ntrianglerighteq: eL,
  Nu: nL,
  nu: tL,
  num: sL,
  numero: oL,
  numsp: rL,
  nvap: cL,
  nvdash: aL,
  nvDash: iL,
  nVdash: lL,
  nVDash: uL,
  nvge: pL,
  nvgt: hL,
  nvHarr: dL,
  nvinfin: mL,
  nvlArr: fL,
  nvle: gL,
  nvlt: _L,
  nvltrie: bL,
  nvrArr: kL,
  nvrtrie: yL,
  nvsim: wL,
  nwarhk: vL,
  nwarr: xL,
  nwArr: AL,
  nwarrow: SL,
  nwnear: LL,
  Oacute: NL,
  oacute: CL,
  oast: EL,
  Ocirc: TL,
  ocirc: DL,
  ocir: jL,
  Ocy: qL,
  ocy: RL,
  odash: PL,
  Odblac: IL,
  odblac: OL,
  odiv: FL,
  odot: ML,
  odsold: BL,
  OElig: $L,
  oelig: zL,
  ofcir: GL,
  Ofr: UL,
  ofr: HL,
  ogon: VL,
  Ograve: WL,
  ograve: ZL,
  ogt: JL,
  ohbar: QL,
  ohm: YL,
  oint: XL,
  olarr: KL,
  olcir: eN,
  olcross: nN,
  oline: tN,
  olt: sN,
  Omacr: oN,
  omacr: rN,
  Omega: cN,
  omega: aN,
  Omicron: iN,
  omicron: lN,
  omid: uN,
  ominus: pN,
  Oopf: hN,
  oopf: dN,
  opar: mN,
  OpenCurlyDoubleQuote: fN,
  OpenCurlyQuote: gN,
  operp: _N,
  oplus: bN,
  orarr: kN,
  Or: yN,
  or: wN,
  ord: vN,
  order: xN,
  orderof: AN,
  ordf: SN,
  ordm: LN,
  origof: NN,
  oror: CN,
  orslope: EN,
  orv: TN,
  oS: DN,
  Oscr: jN,
  oscr: qN,
  Oslash: RN,
  oslash: PN,
  osol: IN,
  Otilde: ON,
  otilde: FN,
  otimesas: MN,
  Otimes: BN,
  otimes: $N,
  Ouml: zN,
  ouml: GN,
  ovbar: UN,
  OverBar: HN,
  OverBrace: VN,
  OverBracket: WN,
  OverParenthesis: ZN,
  para: JN,
  parallel: QN,
  par: YN,
  parsim: XN,
  parsl: KN,
  part: eC,
  PartialD: nC,
  Pcy: tC,
  pcy: sC,
  percnt: oC,
  period: rC,
  permil: cC,
  perp: aC,
  pertenk: iC,
  Pfr: lC,
  pfr: uC,
  Phi: pC,
  phi: hC,
  phiv: dC,
  phmmat: mC,
  phone: fC,
  Pi: gC,
  pi: _C,
  pitchfork: bC,
  piv: kC,
  planck: yC,
  planckh: wC,
  plankv: vC,
  plusacir: xC,
  plusb: AC,
  pluscir: SC,
  plus: LC,
  plusdo: NC,
  plusdu: CC,
  pluse: EC,
  PlusMinus: TC,
  plusmn: DC,
  plussim: jC,
  plustwo: qC,
  pm: RC,
  Poincareplane: PC,
  pointint: IC,
  popf: OC,
  Popf: FC,
  pound: MC,
  prap: BC,
  Pr: $C,
  pr: zC,
  prcue: GC,
  precapprox: UC,
  prec: HC,
  preccurlyeq: VC,
  Precedes: WC,
  PrecedesEqual: ZC,
  PrecedesSlantEqual: JC,
  PrecedesTilde: QC,
  preceq: YC,
  precnapprox: XC,
  precneqq: KC,
  precnsim: eE,
  pre: nE,
  prE: tE,
  precsim: sE,
  prime: oE,
  Prime: rE,
  primes: cE,
  prnap: aE,
  prnE: iE,
  prnsim: lE,
  prod: uE,
  Product: pE,
  profalar: hE,
  profline: dE,
  profsurf: mE,
  prop: fE,
  Proportional: gE,
  Proportion: _E,
  propto: bE,
  prsim: kE,
  prurel: yE,
  Pscr: wE,
  pscr: vE,
  Psi: xE,
  psi: AE,
  puncsp: SE,
  Qfr: LE,
  qfr: NE,
  qint: CE,
  qopf: EE,
  Qopf: TE,
  qprime: DE,
  Qscr: jE,
  qscr: qE,
  quaternions: RE,
  quatint: PE,
  quest: IE,
  questeq: OE,
  quot: FE,
  QUOT: ME,
  rAarr: BE,
  race: $E,
  Racute: zE,
  racute: GE,
  radic: UE,
  raemptyv: HE,
  rang: VE,
  Rang: WE,
  rangd: ZE,
  range: JE,
  rangle: QE,
  raquo: YE,
  rarrap: XE,
  rarrb: KE,
  rarrbfs: eT,
  rarrc: nT,
  rarr: tT,
  Rarr: sT,
  rArr: oT,
  rarrfs: rT,
  rarrhk: cT,
  rarrlp: aT,
  rarrpl: iT,
  rarrsim: lT,
  Rarrtl: uT,
  rarrtl: pT,
  rarrw: hT,
  ratail: dT,
  rAtail: mT,
  ratio: fT,
  rationals: gT,
  rbarr: _T,
  rBarr: bT,
  RBarr: kT,
  rbbrk: yT,
  rbrace: wT,
  rbrack: vT,
  rbrke: xT,
  rbrksld: AT,
  rbrkslu: ST,
  Rcaron: LT,
  rcaron: NT,
  Rcedil: CT,
  rcedil: ET,
  rceil: TT,
  rcub: DT,
  Rcy: jT,
  rcy: qT,
  rdca: RT,
  rdldhar: PT,
  rdquo: IT,
  rdquor: OT,
  rdsh: FT,
  real: MT,
  realine: BT,
  realpart: $T,
  reals: zT,
  Re: GT,
  rect: UT,
  reg: HT,
  REG: VT,
  ReverseElement: WT,
  ReverseEquilibrium: ZT,
  ReverseUpEquilibrium: JT,
  rfisht: QT,
  rfloor: YT,
  rfr: XT,
  Rfr: KT,
  rHar: eD,
  rhard: nD,
  rharu: tD,
  rharul: sD,
  Rho: oD,
  rho: rD,
  rhov: cD,
  RightAngleBracket: aD,
  RightArrowBar: iD,
  rightarrow: lD,
  RightArrow: uD,
  Rightarrow: pD,
  RightArrowLeftArrow: hD,
  rightarrowtail: dD,
  RightCeiling: mD,
  RightDoubleBracket: fD,
  RightDownTeeVector: gD,
  RightDownVectorBar: _D,
  RightDownVector: bD,
  RightFloor: kD,
  rightharpoondown: yD,
  rightharpoonup: wD,
  rightleftarrows: vD,
  rightleftharpoons: xD,
  rightrightarrows: AD,
  rightsquigarrow: SD,
  RightTeeArrow: LD,
  RightTee: ND,
  RightTeeVector: CD,
  rightthreetimes: ED,
  RightTriangleBar: TD,
  RightTriangle: DD,
  RightTriangleEqual: jD,
  RightUpDownVector: qD,
  RightUpTeeVector: RD,
  RightUpVectorBar: PD,
  RightUpVector: ID,
  RightVectorBar: OD,
  RightVector: FD,
  ring: MD,
  risingdotseq: BD,
  rlarr: $D,
  rlhar: zD,
  rlm: GD,
  rmoustache: UD,
  rmoust: HD,
  rnmid: VD,
  roang: WD,
  roarr: ZD,
  robrk: JD,
  ropar: QD,
  ropf: YD,
  Ropf: XD,
  roplus: KD,
  rotimes: ej,
  RoundImplies: nj,
  rpar: tj,
  rpargt: sj,
  rppolint: oj,
  rrarr: rj,
  Rrightarrow: cj,
  rsaquo: aj,
  rscr: ij,
  Rscr: lj,
  rsh: uj,
  Rsh: pj,
  rsqb: hj,
  rsquo: dj,
  rsquor: mj,
  rthree: fj,
  rtimes: gj,
  rtri: _j,
  rtrie: bj,
  rtrif: kj,
  rtriltri: yj,
  RuleDelayed: wj,
  ruluhar: vj,
  rx: xj,
  Sacute: Aj,
  sacute: Sj,
  sbquo: Lj,
  scap: Nj,
  Scaron: Cj,
  scaron: Ej,
  Sc: Tj,
  sc: Dj,
  sccue: jj,
  sce: qj,
  scE: Rj,
  Scedil: Pj,
  scedil: Ij,
  Scirc: Oj,
  scirc: Fj,
  scnap: Mj,
  scnE: Bj,
  scnsim: $j,
  scpolint: zj,
  scsim: Gj,
  Scy: Uj,
  scy: Hj,
  sdotb: Vj,
  sdot: Wj,
  sdote: Zj,
  searhk: Jj,
  searr: Qj,
  seArr: Yj,
  searrow: Xj,
  sect: Kj,
  semi: eq,
  seswar: nq,
  setminus: tq,
  setmn: sq,
  sext: oq,
  Sfr: rq,
  sfr: cq,
  sfrown: aq,
  sharp: iq,
  SHCHcy: lq,
  shchcy: uq,
  SHcy: pq,
  shcy: hq,
  ShortDownArrow: dq,
  ShortLeftArrow: mq,
  shortmid: fq,
  shortparallel: gq,
  ShortRightArrow: _q,
  ShortUpArrow: bq,
  shy: kq,
  Sigma: yq,
  sigma: wq,
  sigmaf: vq,
  sigmav: xq,
  sim: Aq,
  simdot: Sq,
  sime: Lq,
  simeq: Nq,
  simg: Cq,
  simgE: Eq,
  siml: Tq,
  simlE: Dq,
  simne: jq,
  simplus: qq,
  simrarr: Rq,
  slarr: Pq,
  SmallCircle: Iq,
  smallsetminus: Oq,
  smashp: Fq,
  smeparsl: Mq,
  smid: Bq,
  smile: $q,
  smt: zq,
  smte: Gq,
  smtes: Uq,
  SOFTcy: Hq,
  softcy: Vq,
  solbar: Wq,
  solb: Zq,
  sol: Jq,
  Sopf: Qq,
  sopf: Yq,
  spades: Xq,
  spadesuit: Kq,
  spar: eR,
  sqcap: nR,
  sqcaps: tR,
  sqcup: sR,
  sqcups: oR,
  Sqrt: rR,
  sqsub: cR,
  sqsube: aR,
  sqsubset: iR,
  sqsubseteq: lR,
  sqsup: uR,
  sqsupe: pR,
  sqsupset: hR,
  sqsupseteq: dR,
  square: mR,
  Square: fR,
  SquareIntersection: gR,
  SquareSubset: _R,
  SquareSubsetEqual: bR,
  SquareSuperset: kR,
  SquareSupersetEqual: yR,
  SquareUnion: wR,
  squarf: vR,
  squ: xR,
  squf: AR,
  srarr: SR,
  Sscr: LR,
  sscr: NR,
  ssetmn: CR,
  ssmile: ER,
  sstarf: TR,
  Star: DR,
  star: jR,
  starf: qR,
  straightepsilon: RR,
  straightphi: PR,
  strns: IR,
  sub: OR,
  Sub: FR,
  subdot: MR,
  subE: BR,
  sube: $R,
  subedot: zR,
  submult: GR,
  subnE: UR,
  subne: HR,
  subplus: VR,
  subrarr: WR,
  subset: ZR,
  Subset: JR,
  subseteq: QR,
  subseteqq: YR,
  SubsetEqual: XR,
  subsetneq: KR,
  subsetneqq: e2,
  subsim: n2,
  subsub: t2,
  subsup: s2,
  succapprox: o2,
  succ: r2,
  succcurlyeq: c2,
  Succeeds: a2,
  SucceedsEqual: i2,
  SucceedsSlantEqual: l2,
  SucceedsTilde: u2,
  succeq: p2,
  succnapprox: h2,
  succneqq: d2,
  succnsim: m2,
  succsim: f2,
  SuchThat: g2,
  sum: _2,
  Sum: b2,
  sung: k2,
  sup1: y2,
  sup2: w2,
  sup3: v2,
  sup: x2,
  Sup: A2,
  supdot: S2,
  supdsub: L2,
  supE: N2,
  supe: C2,
  supedot: E2,
  Superset: T2,
  SupersetEqual: D2,
  suphsol: j2,
  suphsub: q2,
  suplarr: R2,
  supmult: P2,
  supnE: I2,
  supne: O2,
  supplus: F2,
  supset: M2,
  Supset: B2,
  supseteq: $2,
  supseteqq: z2,
  supsetneq: G2,
  supsetneqq: U2,
  supsim: H2,
  supsub: V2,
  supsup: W2,
  swarhk: Z2,
  swarr: J2,
  swArr: Q2,
  swarrow: Y2,
  swnwar: X2,
  szlig: K2,
  Tab: eP,
  target: nP,
  Tau: tP,
  tau: sP,
  tbrk: oP,
  Tcaron: rP,
  tcaron: cP,
  Tcedil: aP,
  tcedil: iP,
  Tcy: lP,
  tcy: uP,
  tdot: pP,
  telrec: hP,
  Tfr: dP,
  tfr: mP,
  there4: fP,
  therefore: gP,
  Therefore: _P,
  Theta: bP,
  theta: kP,
  thetasym: yP,
  thetav: wP,
  thickapprox: vP,
  thicksim: xP,
  ThickSpace: AP,
  ThinSpace: SP,
  thinsp: LP,
  thkap: NP,
  thksim: CP,
  THORN: EP,
  thorn: TP,
  tilde: DP,
  Tilde: jP,
  TildeEqual: qP,
  TildeFullEqual: RP,
  TildeTilde: PP,
  timesbar: IP,
  timesb: OP,
  times: FP,
  timesd: MP,
  tint: BP,
  toea: $P,
  topbot: zP,
  topcir: GP,
  top: UP,
  Topf: HP,
  topf: VP,
  topfork: WP,
  tosa: ZP,
  tprime: JP,
  trade: QP,
  TRADE: YP,
  triangle: XP,
  triangledown: KP,
  triangleleft: eI,
  trianglelefteq: nI,
  triangleq: tI,
  triangleright: sI,
  trianglerighteq: oI,
  tridot: rI,
  trie: cI,
  triminus: aI,
  TripleDot: iI,
  triplus: lI,
  trisb: uI,
  tritime: pI,
  trpezium: hI,
  Tscr: dI,
  tscr: mI,
  TScy: fI,
  tscy: gI,
  TSHcy: _I,
  tshcy: bI,
  Tstrok: kI,
  tstrok: yI,
  twixt: wI,
  twoheadleftarrow: vI,
  twoheadrightarrow: xI,
  Uacute: AI,
  uacute: SI,
  uarr: LI,
  Uarr: NI,
  uArr: CI,
  Uarrocir: EI,
  Ubrcy: TI,
  ubrcy: DI,
  Ubreve: jI,
  ubreve: qI,
  Ucirc: RI,
  ucirc: PI,
  Ucy: II,
  ucy: OI,
  udarr: FI,
  Udblac: MI,
  udblac: BI,
  udhar: $I,
  ufisht: zI,
  Ufr: GI,
  ufr: UI,
  Ugrave: HI,
  ugrave: VI,
  uHar: WI,
  uharl: ZI,
  uharr: JI,
  uhblk: QI,
  ulcorn: YI,
  ulcorner: XI,
  ulcrop: KI,
  ultri: eO,
  Umacr: nO,
  umacr: tO,
  uml: sO,
  UnderBar: oO,
  UnderBrace: rO,
  UnderBracket: cO,
  UnderParenthesis: aO,
  Union: iO,
  UnionPlus: lO,
  Uogon: uO,
  uogon: pO,
  Uopf: hO,
  uopf: dO,
  UpArrowBar: mO,
  uparrow: fO,
  UpArrow: gO,
  Uparrow: _O,
  UpArrowDownArrow: bO,
  updownarrow: kO,
  UpDownArrow: yO,
  Updownarrow: wO,
  UpEquilibrium: vO,
  upharpoonleft: xO,
  upharpoonright: AO,
  uplus: SO,
  UpperLeftArrow: LO,
  UpperRightArrow: NO,
  upsi: CO,
  Upsi: EO,
  upsih: TO,
  Upsilon: DO,
  upsilon: jO,
  UpTeeArrow: qO,
  UpTee: RO,
  upuparrows: PO,
  urcorn: IO,
  urcorner: OO,
  urcrop: FO,
  Uring: MO,
  uring: BO,
  urtri: $O,
  Uscr: zO,
  uscr: GO,
  utdot: UO,
  Utilde: HO,
  utilde: VO,
  utri: WO,
  utrif: ZO,
  uuarr: JO,
  Uuml: QO,
  uuml: YO,
  uwangle: XO,
  vangrt: KO,
  varepsilon: eF,
  varkappa: nF,
  varnothing: tF,
  varphi: sF,
  varpi: oF,
  varpropto: rF,
  varr: cF,
  vArr: aF,
  varrho: iF,
  varsigma: lF,
  varsubsetneq: uF,
  varsubsetneqq: pF,
  varsupsetneq: hF,
  varsupsetneqq: dF,
  vartheta: mF,
  vartriangleleft: fF,
  vartriangleright: gF,
  vBar: _F,
  Vbar: bF,
  vBarv: kF,
  Vcy: yF,
  vcy: wF,
  vdash: vF,
  vDash: xF,
  Vdash: AF,
  VDash: SF,
  Vdashl: LF,
  veebar: NF,
  vee: CF,
  Vee: EF,
  veeeq: TF,
  vellip: DF,
  verbar: jF,
  Verbar: qF,
  vert: RF,
  Vert: PF,
  VerticalBar: IF,
  VerticalLine: OF,
  VerticalSeparator: FF,
  VerticalTilde: MF,
  VeryThinSpace: BF,
  Vfr: $F,
  vfr: zF,
  vltri: GF,
  vnsub: UF,
  vnsup: HF,
  Vopf: VF,
  vopf: WF,
  vprop: ZF,
  vrtri: JF,
  Vscr: QF,
  vscr: YF,
  vsubnE: XF,
  vsubne: KF,
  vsupnE: e3,
  vsupne: n3,
  Vvdash: t3,
  vzigzag: s3,
  Wcirc: o3,
  wcirc: r3,
  wedbar: c3,
  wedge: a3,
  Wedge: i3,
  wedgeq: l3,
  weierp: u3,
  Wfr: p3,
  wfr: h3,
  Wopf: d3,
  wopf: m3,
  wp: f3,
  wr: g3,
  wreath: _3,
  Wscr: b3,
  wscr: k3,
  xcap: y3,
  xcirc: w3,
  xcup: v3,
  xdtri: x3,
  Xfr: A3,
  xfr: S3,
  xharr: L3,
  xhArr: N3,
  Xi: C3,
  xi: E3,
  xlarr: T3,
  xlArr: D3,
  xmap: j3,
  xnis: q3,
  xodot: R3,
  Xopf: P3,
  xopf: I3,
  xoplus: O3,
  xotime: F3,
  xrarr: M3,
  xrArr: B3,
  Xscr: $3,
  xscr: z3,
  xsqcup: G3,
  xuplus: U3,
  xutri: H3,
  xvee: V3,
  xwedge: W3,
  Yacute: Z3,
  yacute: J3,
  YAcy: Q3,
  yacy: Y3,
  Ycirc: X3,
  ycirc: K3,
  Ycy: eM,
  ycy: nM,
  yen: tM,
  Yfr: sM,
  yfr: oM,
  YIcy: rM,
  yicy: cM,
  Yopf: aM,
  yopf: iM,
  Yscr: lM,
  yscr: uM,
  YUcy: pM,
  yucy: hM,
  yuml: dM,
  Yuml: mM,
  Zacute: fM,
  zacute: gM,
  Zcaron: _M,
  zcaron: bM,
  Zcy: kM,
  zcy: yM,
  Zdot: wM,
  zdot: vM,
  zeetrf: xM,
  ZeroWidthSpace: AM,
  Zeta: SM,
  zeta: LM,
  zfr: NM,
  Zfr: CM,
  ZHcy: EM,
  zhcy: TM,
  zigrarr: DM,
  zopf: jM,
  Zopf: qM,
  Zscr: RM,
  zscr: PM,
  zwj: IM,
  zwnj: OM
};
var gs = FM, et = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/, ze = {}, ft = {};
function MM(n) {
  var e, t, s = ft[n];
  if (s)
    return s;
  for (s = ft[n] = [], e = 0; e < 128; e++)
    t = String.fromCharCode(e), /^[0-9a-z]$/i.test(t) ? s.push(t) : s.push("%" + ("0" + e.toString(16).toUpperCase()).slice(-2));
  for (e = 0; e < n.length; e++)
    s[n.charCodeAt(e)] = n[e];
  return s;
}
function dn(n, e, t) {
  var s, r, o, a, c, l = "";
  for (typeof e != "string" && (t = e, e = dn.defaultChars), typeof t > "u" && (t = !0), c = MM(e), s = 0, r = n.length; s < r; s++) {
    if (o = n.charCodeAt(s), t && o === 37 && s + 2 < r && /^[0-9a-f]{2}$/i.test(n.slice(s + 1, s + 3))) {
      l += n.slice(s, s + 3), s += 2;
      continue;
    }
    if (o < 128) {
      l += c[o];
      continue;
    }
    if (o >= 55296 && o <= 57343) {
      if (o >= 55296 && o <= 56319 && s + 1 < r && (a = n.charCodeAt(s + 1), a >= 56320 && a <= 57343)) {
        l += encodeURIComponent(n[s] + n[s + 1]), s++;
        continue;
      }
      l += "%EF%BF%BD";
      continue;
    }
    l += encodeURIComponent(n[s]);
  }
  return l;
}
dn.defaultChars = ";/?:@&=+$,-_.!~*'()#";
dn.componentChars = "-_.!~*'()";
var BM = dn, gt = {};
function $M(n) {
  var e, t, s = gt[n];
  if (s)
    return s;
  for (s = gt[n] = [], e = 0; e < 128; e++)
    t = String.fromCharCode(e), s.push(t);
  for (e = 0; e < n.length; e++)
    t = n.charCodeAt(e), s[t] = "%" + ("0" + t.toString(16).toUpperCase()).slice(-2);
  return s;
}
function mn(n, e) {
  var t;
  return typeof e != "string" && (e = mn.defaultChars), t = $M(e), n.replace(/(%[a-f0-9]{2})+/gi, function(s) {
    var r, o, a, c, l, i, p, h = "";
    for (r = 0, o = s.length; r < o; r += 3) {
      if (a = parseInt(s.slice(r + 1, r + 3), 16), a < 128) {
        h += t[a];
        continue;
      }
      if ((a & 224) === 192 && r + 3 < o && (c = parseInt(s.slice(r + 4, r + 6), 16), (c & 192) === 128)) {
        p = a << 6 & 1984 | c & 63, p < 128 ? h += "��" : h += String.fromCharCode(p), r += 3;
        continue;
      }
      if ((a & 240) === 224 && r + 6 < o && (c = parseInt(s.slice(r + 4, r + 6), 16), l = parseInt(s.slice(r + 7, r + 9), 16), (c & 192) === 128 && (l & 192) === 128)) {
        p = a << 12 & 61440 | c << 6 & 4032 | l & 63, p < 2048 || p >= 55296 && p <= 57343 ? h += "���" : h += String.fromCharCode(p), r += 6;
        continue;
      }
      if ((a & 248) === 240 && r + 9 < o && (c = parseInt(s.slice(r + 4, r + 6), 16), l = parseInt(s.slice(r + 7, r + 9), 16), i = parseInt(s.slice(r + 10, r + 12), 16), (c & 192) === 128 && (l & 192) === 128 && (i & 192) === 128)) {
        p = a << 18 & 1835008 | c << 12 & 258048 | l << 6 & 4032 | i & 63, p < 65536 || p > 1114111 ? h += "����" : (p -= 65536, h += String.fromCharCode(55296 + (p >> 10), 56320 + (p & 1023))), r += 9;
        continue;
      }
      h += "�";
    }
    return h;
  });
}
mn.defaultChars = ";/?:@&=+$,#";
mn.componentChars = "";
var zM = mn, GM = function(e) {
  var t = "";
  return t += e.protocol || "", t += e.slashes ? "//" : "", t += e.auth ? e.auth + "@" : "", e.hostname && e.hostname.indexOf(":") !== -1 ? t += "[" + e.hostname + "]" : t += e.hostname || "", t += e.port ? ":" + e.port : "", t += e.pathname || "", t += e.search || "", t += e.hash || "", t;
};
function rn() {
  this.protocol = null, this.slashes = null, this.auth = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.pathname = null;
}
var UM = /^([a-z0-9.+-]+:)/i, HM = /:[0-9]*$/, VM = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, WM = ["<", ">", '"', "`", " ", "\r", `
`, "	"], ZM = ["{", "}", "|", "\\", "^", "`"].concat(WM), JM = ["'"].concat(ZM), _t = ["%", "/", "?", ";", "#"].concat(JM), bt = ["/", "?", "#"], QM = 255, kt = /^[+a-z0-9A-Z_-]{0,63}$/, YM = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, yt = {
  javascript: !0,
  "javascript:": !0
}, wt = {
  http: !0,
  https: !0,
  ftp: !0,
  gopher: !0,
  file: !0,
  "http:": !0,
  "https:": !0,
  "ftp:": !0,
  "gopher:": !0,
  "file:": !0
};
function XM(n, e) {
  if (n && n instanceof rn)
    return n;
  var t = new rn();
  return t.parse(n, e), t;
}
rn.prototype.parse = function(n, e) {
  var t, s, r, o, a, c = n;
  if (c = c.trim(), !e && n.split("#").length === 1) {
    var l = VM.exec(c);
    if (l)
      return this.pathname = l[1], l[2] && (this.search = l[2]), this;
  }
  var i = UM.exec(c);
  if (i && (i = i[0], r = i.toLowerCase(), this.protocol = i, c = c.substr(i.length)), (e || i || c.match(/^\/\/[^@\/]+@[^@\/]+/)) && (a = c.substr(0, 2) === "//", a && !(i && yt[i]) && (c = c.substr(2), this.slashes = !0)), !yt[i] && (a || i && !wt[i])) {
    var p = -1;
    for (t = 0; t < bt.length; t++)
      o = c.indexOf(bt[t]), o !== -1 && (p === -1 || o < p) && (p = o);
    var h, d;
    for (p === -1 ? d = c.lastIndexOf("@") : d = c.lastIndexOf("@", p), d !== -1 && (h = c.slice(0, d), c = c.slice(d + 1), this.auth = h), p = -1, t = 0; t < _t.length; t++)
      o = c.indexOf(_t[t]), o !== -1 && (p === -1 || o < p) && (p = o);
    p === -1 && (p = c.length), c[p - 1] === ":" && p--;
    var m = c.slice(0, p);
    c = c.slice(p), this.parseHost(m), this.hostname = this.hostname || "";
    var f = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
    if (!f) {
      var L = this.hostname.split(/\./);
      for (t = 0, s = L.length; t < s; t++) {
        var S = L[t];
        if (S && !S.match(kt)) {
          for (var b = "", k = 0, w = S.length; k < w; k++)
            S.charCodeAt(k) > 127 ? b += "x" : b += S[k];
          if (!b.match(kt)) {
            var N = L.slice(0, t), y = L.slice(t + 1), u = S.match(YM);
            u && (N.push(u[1]), y.unshift(u[2])), y.length && (c = y.join(".") + c), this.hostname = N.join(".");
            break;
          }
        }
      }
    }
    this.hostname.length > QM && (this.hostname = ""), f && (this.hostname = this.hostname.substr(1, this.hostname.length - 2));
  }
  var g = c.indexOf("#");
  g !== -1 && (this.hash = c.substr(g), c = c.slice(0, g));
  var x = c.indexOf("?");
  return x !== -1 && (this.search = c.substr(x), c = c.slice(0, x)), c && (this.pathname = c), wt[r] && this.hostname && !this.pathname && (this.pathname = ""), this;
};
rn.prototype.parseHost = function(n) {
  var e = HM.exec(n);
  e && (e = e[0], e !== ":" && (this.port = e.substr(1)), n = n.substr(0, n.length - e.length)), n && (this.hostname = n);
};
var KM = XM;
ze.encode = BM;
ze.decode = zM;
ze.format = GM;
ze.parse = KM;
var Ne = {}, Ln, vt;
function _s() {
  return vt || (vt = 1, Ln = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/), Ln;
}
var Nn, xt;
function bs() {
  return xt || (xt = 1, Nn = /[\0-\x1F\x7F-\x9F]/), Nn;
}
var Cn, At;
function eB() {
  return At || (At = 1, Cn = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/), Cn;
}
var En, St;
function ks() {
  return St || (St = 1, En = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/), En;
}
var Lt;
function nB() {
  return Lt || (Lt = 1, Ne.Any = _s(), Ne.Cc = bs(), Ne.Cf = eB(), Ne.P = et, Ne.Z = ks()), Ne;
}
(function(n) {
  function e(E) {
    return Object.prototype.toString.call(E);
  }
  function t(E) {
    return e(E) === "[object String]";
  }
  var s = Object.prototype.hasOwnProperty;
  function r(E, D) {
    return s.call(E, D);
  }
  function o(E) {
    var D = Array.prototype.slice.call(arguments, 1);
    return D.forEach(function(q) {
      if (q) {
        if (typeof q != "object")
          throw new TypeError(q + "must be object");
        Object.keys(q).forEach(function(F) {
          E[F] = q[F];
        });
      }
    }), E;
  }
  function a(E, D, q) {
    return [].concat(E.slice(0, D), q, E.slice(D + 1));
  }
  function c(E) {
    return !(E >= 55296 && E <= 57343 || E >= 64976 && E <= 65007 || (E & 65535) === 65535 || (E & 65535) === 65534 || E >= 0 && E <= 8 || E === 11 || E >= 14 && E <= 31 || E >= 127 && E <= 159 || E > 1114111);
  }
  function l(E) {
    if (E > 65535) {
      E -= 65536;
      var D = 55296 + (E >> 10), q = 56320 + (E & 1023);
      return String.fromCharCode(D, q);
    }
    return String.fromCharCode(E);
  }
  var i = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g, p = /&([a-z#][a-z0-9]{1,31});/gi, h = new RegExp(i.source + "|" + p.source, "gi"), d = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i, m = gs;
  function f(E, D) {
    var q = 0;
    return r(m, D) ? m[D] : D.charCodeAt(0) === 35 && d.test(D) && (q = D[1].toLowerCase() === "x" ? parseInt(D.slice(2), 16) : parseInt(D.slice(1), 10), c(q)) ? l(q) : E;
  }
  function L(E) {
    return E.indexOf("\\") < 0 ? E : E.replace(i, "$1");
  }
  function S(E) {
    return E.indexOf("\\") < 0 && E.indexOf("&") < 0 ? E : E.replace(h, function(D, q, F) {
      return q || f(D, F);
    });
  }
  var b = /[&<>"]/, k = /[&<>"]/g, w = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;"
  };
  function N(E) {
    return w[E];
  }
  function y(E) {
    return b.test(E) ? E.replace(k, N) : E;
  }
  var u = /[.?*+^$[\]\\(){}|-]/g;
  function g(E) {
    return E.replace(u, "\\$&");
  }
  function x(E) {
    switch (E) {
      case 9:
      case 32:
        return !0;
    }
    return !1;
  }
  function _(E) {
    if (E >= 8192 && E <= 8202)
      return !0;
    switch (E) {
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
      case 160:
      case 5760:
      case 8239:
      case 8287:
      case 12288:
        return !0;
    }
    return !1;
  }
  var v = et;
  function A(E) {
    return v.test(E);
  }
  function C(E) {
    switch (E) {
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 123:
      case 124:
      case 125:
      case 126:
        return !0;
      default:
        return !1;
    }
  }
  function T(E) {
    return E = E.trim().replace(/\s+/g, " "), "ẞ".toLowerCase() === "Ṿ" && (E = E.replace(/ẞ/g, "ß")), E.toLowerCase().toUpperCase();
  }
  n.lib = {}, n.lib.mdurl = ze, n.lib.ucmicro = nB(), n.assign = o, n.isString = t, n.has = r, n.unescapeMd = L, n.unescapeAll = S, n.isValidEntityCode = c, n.fromCodePoint = l, n.escapeHtml = y, n.arrayReplaceAt = a, n.isSpace = x, n.isWhiteSpace = _, n.isMdAsciiPunct = C, n.isPunctChar = A, n.escapeRE = g, n.normalizeReference = T;
})(B);
var fn = {}, tB = function(e, t, s) {
  var r, o, a, c, l = -1, i = e.posMax, p = e.pos;
  for (e.pos = t + 1, r = 1; e.pos < i; ) {
    if (a = e.src.charCodeAt(e.pos), a === 93 && (r--, r === 0)) {
      o = !0;
      break;
    }
    if (c = e.pos, e.md.inline.skipToken(e), a === 91) {
      if (c === e.pos - 1)
        r++;
      else if (s)
        return e.pos = p, -1;
    }
  }
  return o && (l = e.pos), e.pos = p, l;
}, Nt = B.unescapeAll, sB = function(e, t, s) {
  var r, o, a = 0, c = t, l = {
    ok: !1,
    pos: 0,
    lines: 0,
    str: ""
  };
  if (e.charCodeAt(t) === 60) {
    for (t++; t < s; ) {
      if (r = e.charCodeAt(t), r === 10 || r === 60)
        return l;
      if (r === 62)
        return l.pos = t + 1, l.str = Nt(e.slice(c + 1, t)), l.ok = !0, l;
      if (r === 92 && t + 1 < s) {
        t += 2;
        continue;
      }
      t++;
    }
    return l;
  }
  for (o = 0; t < s && (r = e.charCodeAt(t), !(r === 32 || r < 32 || r === 127)); ) {
    if (r === 92 && t + 1 < s) {
      if (e.charCodeAt(t + 1) === 32)
        break;
      t += 2;
      continue;
    }
    if (r === 40 && (o++, o > 32))
      return l;
    if (r === 41) {
      if (o === 0)
        break;
      o--;
    }
    t++;
  }
  return c === t || o !== 0 || (l.str = Nt(e.slice(c, t)), l.lines = a, l.pos = t, l.ok = !0), l;
}, oB = B.unescapeAll, rB = function(e, t, s) {
  var r, o, a = 0, c = t, l = {
    ok: !1,
    pos: 0,
    lines: 0,
    str: ""
  };
  if (t >= s || (o = e.charCodeAt(t), o !== 34 && o !== 39 && o !== 40))
    return l;
  for (t++, o === 40 && (o = 41); t < s; ) {
    if (r = e.charCodeAt(t), r === o)
      return l.pos = t + 1, l.lines = a, l.str = oB(e.slice(c + 1, t)), l.ok = !0, l;
    if (r === 40 && o === 41)
      return l;
    r === 10 ? a++ : r === 92 && t + 1 < s && (t++, e.charCodeAt(t) === 10 && a++), t++;
  }
  return l;
};
fn.parseLinkLabel = tB;
fn.parseLinkDestination = sB;
fn.parseLinkTitle = rB;
var cB = B.assign, aB = B.unescapeAll, De = B.escapeHtml, he = {};
he.code_inline = function(n, e, t, s, r) {
  var o = n[e];
  return "<code" + r.renderAttrs(o) + ">" + De(n[e].content) + "</code>";
};
he.code_block = function(n, e, t, s, r) {
  var o = n[e];
  return "<pre" + r.renderAttrs(o) + "><code>" + De(n[e].content) + `</code></pre>
`;
};
he.fence = function(n, e, t, s, r) {
  var o = n[e], a = o.info ? aB(o.info).trim() : "", c = "", l = "", i, p, h, d, m;
  return a && (h = a.split(/(\s+)/g), c = h[0], l = h.slice(2).join("")), t.highlight ? i = t.highlight(o.content, c, l) || De(o.content) : i = De(o.content), i.indexOf("<pre") === 0 ? i + `
` : a ? (p = o.attrIndex("class"), d = o.attrs ? o.attrs.slice() : [], p < 0 ? d.push(["class", t.langPrefix + c]) : (d[p] = d[p].slice(), d[p][1] += " " + t.langPrefix + c), m = {
    attrs: d
  }, "<pre><code" + r.renderAttrs(m) + ">" + i + `</code></pre>
`) : "<pre><code" + r.renderAttrs(o) + ">" + i + `</code></pre>
`;
};
he.image = function(n, e, t, s, r) {
  var o = n[e];
  return o.attrs[o.attrIndex("alt")][1] = r.renderInlineAsText(o.children, t, s), r.renderToken(n, e, t);
};
he.hardbreak = function(n, e, t) {
  return t.xhtmlOut ? `<br />
` : `<br>
`;
};
he.softbreak = function(n, e, t) {
  return t.breaks ? t.xhtmlOut ? `<br />
` : `<br>
` : `
`;
};
he.text = function(n, e) {
  return De(n[e].content);
};
he.html_block = function(n, e) {
  return n[e].content;
};
he.html_inline = function(n, e) {
  return n[e].content;
};
function Ge() {
  this.rules = cB({}, he);
}
Ge.prototype.renderAttrs = function(e) {
  var t, s, r;
  if (!e.attrs)
    return "";
  for (r = "", t = 0, s = e.attrs.length; t < s; t++)
    r += " " + De(e.attrs[t][0]) + '="' + De(e.attrs[t][1]) + '"';
  return r;
};
Ge.prototype.renderToken = function(e, t, s) {
  var r, o = "", a = !1, c = e[t];
  return c.hidden ? "" : (c.block && c.nesting !== -1 && t && e[t - 1].hidden && (o += `
`), o += (c.nesting === -1 ? "</" : "<") + c.tag, o += this.renderAttrs(c), c.nesting === 0 && s.xhtmlOut && (o += " /"), c.block && (a = !0, c.nesting === 1 && t + 1 < e.length && (r = e[t + 1], (r.type === "inline" || r.hidden || r.nesting === -1 && r.tag === c.tag) && (a = !1))), o += a ? `>
` : ">", o);
};
Ge.prototype.renderInline = function(n, e, t) {
  for (var s, r = "", o = this.rules, a = 0, c = n.length; a < c; a++)
    s = n[a].type, typeof o[s] < "u" ? r += o[s](n, a, e, t, this) : r += this.renderToken(n, a, e);
  return r;
};
Ge.prototype.renderInlineAsText = function(n, e, t) {
  for (var s = "", r = 0, o = n.length; r < o; r++)
    n[r].type === "text" ? s += n[r].content : n[r].type === "image" ? s += this.renderInlineAsText(n[r].children, e, t) : n[r].type === "softbreak" && (s += `
`);
  return s;
};
Ge.prototype.render = function(n, e, t) {
  var s, r, o, a = "", c = this.rules;
  for (s = 0, r = n.length; s < r; s++)
    o = n[s].type, o === "inline" ? a += this.renderInline(n[s].children, e, t) : typeof c[o] < "u" ? a += c[n[s].type](n, s, e, t, this) : a += this.renderToken(n, s, e, t);
  return a;
};
var iB = Ge;
function ae() {
  this.__rules__ = [], this.__cache__ = null;
}
ae.prototype.__find__ = function(n) {
  for (var e = 0; e < this.__rules__.length; e++)
    if (this.__rules__[e].name === n)
      return e;
  return -1;
};
ae.prototype.__compile__ = function() {
  var n = this, e = [""];
  n.__rules__.forEach(function(t) {
    t.enabled && t.alt.forEach(function(s) {
      e.indexOf(s) < 0 && e.push(s);
    });
  }), n.__cache__ = {}, e.forEach(function(t) {
    n.__cache__[t] = [], n.__rules__.forEach(function(s) {
      s.enabled && (t && s.alt.indexOf(t) < 0 || n.__cache__[t].push(s.fn));
    });
  });
};
ae.prototype.at = function(n, e, t) {
  var s = this.__find__(n), r = t || {};
  if (s === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__[s].fn = e, this.__rules__[s].alt = r.alt || [], this.__cache__ = null;
};
ae.prototype.before = function(n, e, t, s) {
  var r = this.__find__(n), o = s || {};
  if (r === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__.splice(r, 0, {
    name: e,
    enabled: !0,
    fn: t,
    alt: o.alt || []
  }), this.__cache__ = null;
};
ae.prototype.after = function(n, e, t, s) {
  var r = this.__find__(n), o = s || {};
  if (r === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__.splice(r + 1, 0, {
    name: e,
    enabled: !0,
    fn: t,
    alt: o.alt || []
  }), this.__cache__ = null;
};
ae.prototype.push = function(n, e, t) {
  var s = t || {};
  this.__rules__.push({
    name: n,
    enabled: !0,
    fn: e,
    alt: s.alt || []
  }), this.__cache__ = null;
};
ae.prototype.enable = function(n, e) {
  Array.isArray(n) || (n = [n]);
  var t = [];
  return n.forEach(function(s) {
    var r = this.__find__(s);
    if (r < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + s);
    }
    this.__rules__[r].enabled = !0, t.push(s);
  }, this), this.__cache__ = null, t;
};
ae.prototype.enableOnly = function(n, e) {
  Array.isArray(n) || (n = [n]), this.__rules__.forEach(function(t) {
    t.enabled = !1;
  }), this.enable(n, e);
};
ae.prototype.disable = function(n, e) {
  Array.isArray(n) || (n = [n]);
  var t = [];
  return n.forEach(function(s) {
    var r = this.__find__(s);
    if (r < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + s);
    }
    this.__rules__[r].enabled = !1, t.push(s);
  }, this), this.__cache__ = null, t;
};
ae.prototype.getRules = function(n) {
  return this.__cache__ === null && this.__compile__(), this.__cache__[n] || [];
};
var nt = ae, lB = /\r\n?|\n/g, uB = /\0/g, pB = function(e) {
  var t;
  t = e.src.replace(lB, `
`), t = t.replace(uB, "�"), e.src = t;
}, hB = function(e) {
  var t;
  e.inlineMode ? (t = new e.Token("inline", "", 0), t.content = e.src, t.map = [0, 1], t.children = [], e.tokens.push(t)) : e.md.block.parse(e.src, e.md, e.env, e.tokens);
}, dB = function(e) {
  var t = e.tokens, s, r, o;
  for (r = 0, o = t.length; r < o; r++)
    s = t[r], s.type === "inline" && e.md.inline.parse(s.content, e.md, e.env, s.children);
}, mB = B.arrayReplaceAt;
function fB(n) {
  return /^<a[>\s]/i.test(n);
}
function gB(n) {
  return /^<\/a\s*>/i.test(n);
}
var _B = function(e) {
  var t, s, r, o, a, c, l, i, p, h, d, m, f, L, S, b, k = e.tokens, w;
  if (e.md.options.linkify) {
    for (s = 0, r = k.length; s < r; s++)
      if (!(k[s].type !== "inline" || !e.md.linkify.pretest(k[s].content)))
        for (o = k[s].children, f = 0, t = o.length - 1; t >= 0; t--) {
          if (c = o[t], c.type === "link_close") {
            for (t--; o[t].level !== c.level && o[t].type !== "link_open"; )
              t--;
            continue;
          }
          if (c.type === "html_inline" && (fB(c.content) && f > 0 && f--, gB(c.content) && f++), !(f > 0) && c.type === "text" && e.md.linkify.test(c.content)) {
            for (p = c.content, w = e.md.linkify.match(p), l = [], m = c.level, d = 0, w.length > 0 && w[0].index === 0 && t > 0 && o[t - 1].type === "text_special" && (w = w.slice(1)), i = 0; i < w.length; i++)
              L = w[i].url, S = e.md.normalizeLink(L), e.md.validateLink(S) && (b = w[i].text, w[i].schema ? w[i].schema === "mailto:" && !/^mailto:/i.test(b) ? b = e.md.normalizeLinkText("mailto:" + b).replace(/^mailto:/, "") : b = e.md.normalizeLinkText(b) : b = e.md.normalizeLinkText("http://" + b).replace(/^http:\/\//, ""), h = w[i].index, h > d && (a = new e.Token("text", "", 0), a.content = p.slice(d, h), a.level = m, l.push(a)), a = new e.Token("link_open", "a", 1), a.attrs = [["href", S]], a.level = m++, a.markup = "linkify", a.info = "auto", l.push(a), a = new e.Token("text", "", 0), a.content = b, a.level = m, l.push(a), a = new e.Token("link_close", "a", -1), a.level = --m, a.markup = "linkify", a.info = "auto", l.push(a), d = w[i].lastIndex);
            d < p.length && (a = new e.Token("text", "", 0), a.content = p.slice(d), a.level = m, l.push(a)), k[s].children = o = mB(o, t, l);
          }
        }
  }
}, ys = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/, bB = /\((c|tm|r)\)/i, kB = /\((c|tm|r)\)/ig, yB = {
  c: "©",
  r: "®",
  tm: "™"
};
function wB(n, e) {
  return yB[e.toLowerCase()];
}
function vB(n) {
  var e, t, s = 0;
  for (e = n.length - 1; e >= 0; e--)
    t = n[e], t.type === "text" && !s && (t.content = t.content.replace(kB, wB)), t.type === "link_open" && t.info === "auto" && s--, t.type === "link_close" && t.info === "auto" && s++;
}
function xB(n) {
  var e, t, s = 0;
  for (e = n.length - 1; e >= 0; e--)
    t = n[e], t.type === "text" && !s && ys.test(t.content) && (t.content = t.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/mg, "$1—").replace(/(^|\s)--(?=\s|$)/mg, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg, "$1–")), t.type === "link_open" && t.info === "auto" && s--, t.type === "link_close" && t.info === "auto" && s++;
}
var AB = function(e) {
  var t;
  if (e.md.options.typographer)
    for (t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type === "inline" && (bB.test(e.tokens[t].content) && vB(e.tokens[t].children), ys.test(e.tokens[t].content) && xB(e.tokens[t].children));
}, Ct = B.isWhiteSpace, Et = B.isPunctChar, Tt = B.isMdAsciiPunct, SB = /['"]/, Dt = /['"]/g, jt = "’";
function en(n, e, t) {
  return n.slice(0, e) + t + n.slice(e + 1);
}
function LB(n, e) {
  var t, s, r, o, a, c, l, i, p, h, d, m, f, L, S, b, k, w, N, y, u;
  for (N = [], t = 0; t < n.length; t++) {
    for (s = n[t], l = n[t].level, k = N.length - 1; k >= 0 && !(N[k].level <= l); k--)
      ;
    if (N.length = k + 1, s.type === "text") {
      r = s.content, a = 0, c = r.length;
      e:
        for (; a < c && (Dt.lastIndex = a, o = Dt.exec(r), !!o); ) {
          if (S = b = !0, a = o.index + 1, w = o[0] === "'", p = 32, o.index - 1 >= 0)
            p = r.charCodeAt(o.index - 1);
          else
            for (k = t - 1; k >= 0 && !(n[k].type === "softbreak" || n[k].type === "hardbreak"); k--)
              if (n[k].content) {
                p = n[k].content.charCodeAt(n[k].content.length - 1);
                break;
              }
          if (h = 32, a < c)
            h = r.charCodeAt(a);
          else
            for (k = t + 1; k < n.length && !(n[k].type === "softbreak" || n[k].type === "hardbreak"); k++)
              if (n[k].content) {
                h = n[k].content.charCodeAt(0);
                break;
              }
          if (d = Tt(p) || Et(String.fromCharCode(p)), m = Tt(h) || Et(String.fromCharCode(h)), f = Ct(p), L = Ct(h), L ? S = !1 : m && (f || d || (S = !1)), f ? b = !1 : d && (L || m || (b = !1)), h === 34 && o[0] === '"' && p >= 48 && p <= 57 && (b = S = !1), S && b && (S = d, b = m), !S && !b) {
            w && (s.content = en(s.content, o.index, jt));
            continue;
          }
          if (b) {
            for (k = N.length - 1; k >= 0 && (i = N[k], !(N[k].level < l)); k--)
              if (i.single === w && N[k].level === l) {
                i = N[k], w ? (y = e.md.options.quotes[2], u = e.md.options.quotes[3]) : (y = e.md.options.quotes[0], u = e.md.options.quotes[1]), s.content = en(s.content, o.index, u), n[i.token].content = en(
                  n[i.token].content,
                  i.pos,
                  y
                ), a += u.length - 1, i.token === t && (a += y.length - 1), r = s.content, c = r.length, N.length = k;
                continue e;
              }
          }
          S ? N.push({
            token: t,
            pos: o.index,
            single: w,
            level: l
          }) : b && w && (s.content = en(s.content, o.index, jt));
        }
    }
  }
}
var NB = function(e) {
  var t;
  if (e.md.options.typographer)
    for (t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type !== "inline" || !SB.test(e.tokens[t].content) || LB(e.tokens[t].children, e);
}, CB = function(e) {
  var t, s, r, o, a, c, l = e.tokens;
  for (t = 0, s = l.length; t < s; t++)
    if (l[t].type === "inline") {
      for (r = l[t].children, a = r.length, o = 0; o < a; o++)
        r[o].type === "text_special" && (r[o].type = "text");
      for (o = c = 0; o < a; o++)
        r[o].type === "text" && o + 1 < a && r[o + 1].type === "text" ? r[o + 1].content = r[o].content + r[o + 1].content : (o !== c && (r[c] = r[o]), c++);
      o !== c && (r.length = c);
    }
};
function Ue(n, e, t) {
  this.type = n, this.tag = e, this.attrs = null, this.map = null, this.nesting = t, this.level = 0, this.children = null, this.content = "", this.markup = "", this.info = "", this.meta = null, this.block = !1, this.hidden = !1;
}
Ue.prototype.attrIndex = function(e) {
  var t, s, r;
  if (!this.attrs)
    return -1;
  for (t = this.attrs, s = 0, r = t.length; s < r; s++)
    if (t[s][0] === e)
      return s;
  return -1;
};
Ue.prototype.attrPush = function(e) {
  this.attrs ? this.attrs.push(e) : this.attrs = [e];
};
Ue.prototype.attrSet = function(e, t) {
  var s = this.attrIndex(e), r = [e, t];
  s < 0 ? this.attrPush(r) : this.attrs[s] = r;
};
Ue.prototype.attrGet = function(e) {
  var t = this.attrIndex(e), s = null;
  return t >= 0 && (s = this.attrs[t][1]), s;
};
Ue.prototype.attrJoin = function(e, t) {
  var s = this.attrIndex(e);
  s < 0 ? this.attrPush([e, t]) : this.attrs[s][1] = this.attrs[s][1] + " " + t;
};
var tt = Ue, EB = tt;
function ws(n, e, t) {
  this.src = n, this.env = t, this.tokens = [], this.inlineMode = !1, this.md = e;
}
ws.prototype.Token = EB;
var TB = ws, DB = nt, Tn = [
  ["normalize", pB],
  ["block", hB],
  ["inline", dB],
  ["linkify", _B],
  ["replacements", AB],
  ["smartquotes", NB],
  // `text_join` finds `text_special` tokens (for escape sequences)
  // and joins them with the rest of the text
  ["text_join", CB]
];
function st() {
  this.ruler = new DB();
  for (var n = 0; n < Tn.length; n++)
    this.ruler.push(Tn[n][0], Tn[n][1]);
}
st.prototype.process = function(n) {
  var e, t, s;
  for (s = this.ruler.getRules(""), e = 0, t = s.length; e < t; e++)
    s[e](n);
};
st.prototype.State = TB;
var jB = st, Dn = B.isSpace;
function jn(n, e) {
  var t = n.bMarks[e] + n.tShift[e], s = n.eMarks[e];
  return n.src.slice(t, s);
}
function qt(n) {
  var e = [], t = 0, s = n.length, r, o = !1, a = 0, c = "";
  for (r = n.charCodeAt(t); t < s; )
    r === 124 && (o ? (c += n.substring(a, t - 1), a = t) : (e.push(c + n.substring(a, t)), c = "", a = t + 1)), o = r === 92, t++, r = n.charCodeAt(t);
  return e.push(c + n.substring(a)), e;
}
var qB = function(e, t, s, r) {
  var o, a, c, l, i, p, h, d, m, f, L, S, b, k, w, N, y, u;
  if (t + 2 > s || (p = t + 1, e.sCount[p] < e.blkIndent) || e.sCount[p] - e.blkIndent >= 4 || (c = e.bMarks[p] + e.tShift[p], c >= e.eMarks[p]) || (y = e.src.charCodeAt(c++), y !== 124 && y !== 45 && y !== 58) || c >= e.eMarks[p] || (u = e.src.charCodeAt(c++), u !== 124 && u !== 45 && u !== 58 && !Dn(u)) || y === 45 && Dn(u))
    return !1;
  for (; c < e.eMarks[p]; ) {
    if (o = e.src.charCodeAt(c), o !== 124 && o !== 45 && o !== 58 && !Dn(o))
      return !1;
    c++;
  }
  for (a = jn(e, t + 1), h = a.split("|"), f = [], l = 0; l < h.length; l++) {
    if (L = h[l].trim(), !L) {
      if (l === 0 || l === h.length - 1)
        continue;
      return !1;
    }
    if (!/^:?-+:?$/.test(L))
      return !1;
    L.charCodeAt(L.length - 1) === 58 ? f.push(L.charCodeAt(0) === 58 ? "center" : "right") : L.charCodeAt(0) === 58 ? f.push("left") : f.push("");
  }
  if (a = jn(e, t).trim(), a.indexOf("|") === -1 || e.sCount[t] - e.blkIndent >= 4 || (h = qt(a), h.length && h[0] === "" && h.shift(), h.length && h[h.length - 1] === "" && h.pop(), d = h.length, d === 0 || d !== f.length))
    return !1;
  if (r)
    return !0;
  for (k = e.parentType, e.parentType = "table", N = e.md.block.ruler.getRules("blockquote"), m = e.push("table_open", "table", 1), m.map = S = [t, 0], m = e.push("thead_open", "thead", 1), m.map = [t, t + 1], m = e.push("tr_open", "tr", 1), m.map = [t, t + 1], l = 0; l < h.length; l++)
    m = e.push("th_open", "th", 1), f[l] && (m.attrs = [["style", "text-align:" + f[l]]]), m = e.push("inline", "", 0), m.content = h[l].trim(), m.children = [], m = e.push("th_close", "th", -1);
  for (m = e.push("tr_close", "tr", -1), m = e.push("thead_close", "thead", -1), p = t + 2; p < s && !(e.sCount[p] < e.blkIndent); p++) {
    for (w = !1, l = 0, i = N.length; l < i; l++)
      if (N[l](e, p, s, !0)) {
        w = !0;
        break;
      }
    if (w || (a = jn(e, p).trim(), !a) || e.sCount[p] - e.blkIndent >= 4)
      break;
    for (h = qt(a), h.length && h[0] === "" && h.shift(), h.length && h[h.length - 1] === "" && h.pop(), p === t + 2 && (m = e.push("tbody_open", "tbody", 1), m.map = b = [t + 2, 0]), m = e.push("tr_open", "tr", 1), m.map = [p, p + 1], l = 0; l < d; l++)
      m = e.push("td_open", "td", 1), f[l] && (m.attrs = [["style", "text-align:" + f[l]]]), m = e.push("inline", "", 0), m.content = h[l] ? h[l].trim() : "", m.children = [], m = e.push("td_close", "td", -1);
    m = e.push("tr_close", "tr", -1);
  }
  return b && (m = e.push("tbody_close", "tbody", -1), b[1] = p), m = e.push("table_close", "table", -1), S[1] = p, e.parentType = k, e.line = p, !0;
}, RB = function(e, t, s) {
  var r, o, a;
  if (e.sCount[t] - e.blkIndent < 4)
    return !1;
  for (o = r = t + 1; r < s; ) {
    if (e.isEmpty(r)) {
      r++;
      continue;
    }
    if (e.sCount[r] - e.blkIndent >= 4) {
      r++, o = r;
      continue;
    }
    break;
  }
  return e.line = o, a = e.push("code_block", "code", 0), a.content = e.getLines(t, o, 4 + e.blkIndent, !1) + `
`, a.map = [t, e.line], !0;
}, PB = function(e, t, s, r) {
  var o, a, c, l, i, p, h, d = !1, m = e.bMarks[t] + e.tShift[t], f = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || m + 3 > f || (o = e.src.charCodeAt(m), o !== 126 && o !== 96) || (i = m, m = e.skipChars(m, o), a = m - i, a < 3) || (h = e.src.slice(i, m), c = e.src.slice(m, f), o === 96 && c.indexOf(String.fromCharCode(o)) >= 0))
    return !1;
  if (r)
    return !0;
  for (l = t; l++, !(l >= s || (m = i = e.bMarks[l] + e.tShift[l], f = e.eMarks[l], m < f && e.sCount[l] < e.blkIndent)); )
    if (e.src.charCodeAt(m) === o && !(e.sCount[l] - e.blkIndent >= 4) && (m = e.skipChars(m, o), !(m - i < a) && (m = e.skipSpaces(m), !(m < f)))) {
      d = !0;
      break;
    }
  return a = e.sCount[t], e.line = l + (d ? 1 : 0), p = e.push("fence", "code", 0), p.info = c, p.content = e.getLines(t + 1, l, a, !0), p.markup = h, p.map = [t, e.line], !0;
}, Rt = B.isSpace, IB = function(e, t, s, r) {
  var o, a, c, l, i, p, h, d, m, f, L, S, b, k, w, N, y, u, g, x, _ = e.lineMax, v = e.bMarks[t] + e.tShift[t], A = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(v++) !== 62)
    return !1;
  if (r)
    return !0;
  for (l = m = e.sCount[t] + 1, e.src.charCodeAt(v) === 32 ? (v++, l++, m++, o = !1, N = !0) : e.src.charCodeAt(v) === 9 ? (N = !0, (e.bsCount[t] + m) % 4 === 3 ? (v++, l++, m++, o = !1) : o = !0) : N = !1, f = [e.bMarks[t]], e.bMarks[t] = v; v < A && (a = e.src.charCodeAt(v), Rt(a)); ) {
    a === 9 ? m += 4 - (m + e.bsCount[t] + (o ? 1 : 0)) % 4 : m++;
    v++;
  }
  for (L = [e.bsCount[t]], e.bsCount[t] = e.sCount[t] + 1 + (N ? 1 : 0), p = v >= A, k = [e.sCount[t]], e.sCount[t] = m - l, w = [e.tShift[t]], e.tShift[t] = v - e.bMarks[t], u = e.md.block.ruler.getRules("blockquote"), b = e.parentType, e.parentType = "blockquote", d = t + 1; d < s && (x = e.sCount[d] < e.blkIndent, v = e.bMarks[d] + e.tShift[d], A = e.eMarks[d], !(v >= A)); d++) {
    if (e.src.charCodeAt(v++) === 62 && !x) {
      for (l = m = e.sCount[d] + 1, e.src.charCodeAt(v) === 32 ? (v++, l++, m++, o = !1, N = !0) : e.src.charCodeAt(v) === 9 ? (N = !0, (e.bsCount[d] + m) % 4 === 3 ? (v++, l++, m++, o = !1) : o = !0) : N = !1, f.push(e.bMarks[d]), e.bMarks[d] = v; v < A && (a = e.src.charCodeAt(v), Rt(a)); ) {
        a === 9 ? m += 4 - (m + e.bsCount[d] + (o ? 1 : 0)) % 4 : m++;
        v++;
      }
      p = v >= A, L.push(e.bsCount[d]), e.bsCount[d] = e.sCount[d] + 1 + (N ? 1 : 0), k.push(e.sCount[d]), e.sCount[d] = m - l, w.push(e.tShift[d]), e.tShift[d] = v - e.bMarks[d];
      continue;
    }
    if (p)
      break;
    for (y = !1, c = 0, i = u.length; c < i; c++)
      if (u[c](e, d, s, !0)) {
        y = !0;
        break;
      }
    if (y) {
      e.lineMax = d, e.blkIndent !== 0 && (f.push(e.bMarks[d]), L.push(e.bsCount[d]), w.push(e.tShift[d]), k.push(e.sCount[d]), e.sCount[d] -= e.blkIndent);
      break;
    }
    f.push(e.bMarks[d]), L.push(e.bsCount[d]), w.push(e.tShift[d]), k.push(e.sCount[d]), e.sCount[d] = -1;
  }
  for (S = e.blkIndent, e.blkIndent = 0, g = e.push("blockquote_open", "blockquote", 1), g.markup = ">", g.map = h = [t, 0], e.md.block.tokenize(e, t, d), g = e.push("blockquote_close", "blockquote", -1), g.markup = ">", e.lineMax = _, e.parentType = b, h[1] = e.line, c = 0; c < w.length; c++)
    e.bMarks[c + t] = f[c], e.tShift[c + t] = w[c], e.sCount[c + t] = k[c], e.bsCount[c + t] = L[c];
  return e.blkIndent = S, !0;
}, OB = B.isSpace, FB = function(e, t, s, r) {
  var o, a, c, l, i = e.bMarks[t] + e.tShift[t], p = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || (o = e.src.charCodeAt(i++), o !== 42 && o !== 45 && o !== 95))
    return !1;
  for (a = 1; i < p; ) {
    if (c = e.src.charCodeAt(i++), c !== o && !OB(c))
      return !1;
    c === o && a++;
  }
  return a < 3 ? !1 : (r || (e.line = t + 1, l = e.push("hr", "hr", 0), l.map = [t, e.line], l.markup = Array(a + 1).join(String.fromCharCode(o))), !0);
}, vs = B.isSpace;
function Pt(n, e) {
  var t, s, r, o;
  return s = n.bMarks[e] + n.tShift[e], r = n.eMarks[e], t = n.src.charCodeAt(s++), t !== 42 && t !== 45 && t !== 43 || s < r && (o = n.src.charCodeAt(s), !vs(o)) ? -1 : s;
}
function It(n, e) {
  var t, s = n.bMarks[e] + n.tShift[e], r = s, o = n.eMarks[e];
  if (r + 1 >= o || (t = n.src.charCodeAt(r++), t < 48 || t > 57))
    return -1;
  for (; ; ) {
    if (r >= o)
      return -1;
    if (t = n.src.charCodeAt(r++), t >= 48 && t <= 57) {
      if (r - s >= 10)
        return -1;
      continue;
    }
    if (t === 41 || t === 46)
      break;
    return -1;
  }
  return r < o && (t = n.src.charCodeAt(r), !vs(t)) ? -1 : r;
}
function MB(n, e) {
  var t, s, r = n.level + 2;
  for (t = e + 2, s = n.tokens.length - 2; t < s; t++)
    n.tokens[t].level === r && n.tokens[t].type === "paragraph_open" && (n.tokens[t + 2].hidden = !0, n.tokens[t].hidden = !0, t += 2);
}
var BB = function(e, t, s, r) {
  var o, a, c, l, i, p, h, d, m, f, L, S, b, k, w, N, y, u, g, x, _, v, A, C, T, E, D, q, F = !1, M = !0;
  if (e.sCount[t] - e.blkIndent >= 4 || e.listIndent >= 0 && e.sCount[t] - e.listIndent >= 4 && e.sCount[t] < e.blkIndent)
    return !1;
  if (r && e.parentType === "paragraph" && e.sCount[t] >= e.blkIndent && (F = !0), (A = It(e, t)) >= 0) {
    if (h = !0, T = e.bMarks[t] + e.tShift[t], b = Number(e.src.slice(T, A - 1)), F && b !== 1)
      return !1;
  } else if ((A = Pt(e, t)) >= 0)
    h = !1;
  else
    return !1;
  if (F && e.skipSpaces(A) >= e.eMarks[t])
    return !1;
  if (S = e.src.charCodeAt(A - 1), r)
    return !0;
  for (L = e.tokens.length, h ? (q = e.push("ordered_list_open", "ol", 1), b !== 1 && (q.attrs = [["start", b]])) : q = e.push("bullet_list_open", "ul", 1), q.map = f = [t, 0], q.markup = String.fromCharCode(S), w = t, C = !1, D = e.md.block.ruler.getRules("list"), u = e.parentType, e.parentType = "list"; w < s; ) {
    for (v = A, k = e.eMarks[w], p = N = e.sCount[w] + A - (e.bMarks[t] + e.tShift[t]); v < k; ) {
      if (o = e.src.charCodeAt(v), o === 9)
        N += 4 - (N + e.bsCount[w]) % 4;
      else if (o === 32)
        N++;
      else
        break;
      v++;
    }
    if (a = v, a >= k ? i = 1 : i = N - p, i > 4 && (i = 1), l = p + i, q = e.push("list_item_open", "li", 1), q.markup = String.fromCharCode(S), q.map = d = [t, 0], h && (q.info = e.src.slice(T, A - 1)), _ = e.tight, x = e.tShift[t], g = e.sCount[t], y = e.listIndent, e.listIndent = e.blkIndent, e.blkIndent = l, e.tight = !0, e.tShift[t] = a - e.bMarks[t], e.sCount[t] = N, a >= k && e.isEmpty(t + 1) ? e.line = Math.min(e.line + 2, s) : e.md.block.tokenize(e, t, s, !0), (!e.tight || C) && (M = !1), C = e.line - t > 1 && e.isEmpty(e.line - 1), e.blkIndent = e.listIndent, e.listIndent = y, e.tShift[t] = x, e.sCount[t] = g, e.tight = _, q = e.push("list_item_close", "li", -1), q.markup = String.fromCharCode(S), w = t = e.line, d[1] = w, a = e.bMarks[t], w >= s || e.sCount[w] < e.blkIndent || e.sCount[t] - e.blkIndent >= 4)
      break;
    for (E = !1, c = 0, m = D.length; c < m; c++)
      if (D[c](e, w, s, !0)) {
        E = !0;
        break;
      }
    if (E)
      break;
    if (h) {
      if (A = It(e, w), A < 0)
        break;
      T = e.bMarks[w] + e.tShift[w];
    } else if (A = Pt(e, w), A < 0)
      break;
    if (S !== e.src.charCodeAt(A - 1))
      break;
  }
  return h ? q = e.push("ordered_list_close", "ol", -1) : q = e.push("bullet_list_close", "ul", -1), q.markup = String.fromCharCode(S), f[1] = w, e.line = w, e.parentType = u, M && MB(e, L), !0;
}, $B = B.normalizeReference, nn = B.isSpace, zB = function(e, t, s, r) {
  var o, a, c, l, i, p, h, d, m, f, L, S, b, k, w, N, y = 0, u = e.bMarks[t] + e.tShift[t], g = e.eMarks[t], x = t + 1;
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(u) !== 91)
    return !1;
  for (; ++u < g; )
    if (e.src.charCodeAt(u) === 93 && e.src.charCodeAt(u - 1) !== 92) {
      if (u + 1 === g || e.src.charCodeAt(u + 1) !== 58)
        return !1;
      break;
    }
  for (l = e.lineMax, w = e.md.block.ruler.getRules("reference"), f = e.parentType, e.parentType = "reference"; x < l && !e.isEmpty(x); x++)
    if (!(e.sCount[x] - e.blkIndent > 3) && !(e.sCount[x] < 0)) {
      for (k = !1, p = 0, h = w.length; p < h; p++)
        if (w[p](e, x, l, !0)) {
          k = !0;
          break;
        }
      if (k)
        break;
    }
  for (b = e.getLines(t, x, e.blkIndent, !1).trim(), g = b.length, u = 1; u < g; u++) {
    if (o = b.charCodeAt(u), o === 91)
      return !1;
    if (o === 93) {
      m = u;
      break;
    } else
      o === 10 ? y++ : o === 92 && (u++, u < g && b.charCodeAt(u) === 10 && y++);
  }
  if (m < 0 || b.charCodeAt(m + 1) !== 58)
    return !1;
  for (u = m + 2; u < g; u++)
    if (o = b.charCodeAt(u), o === 10)
      y++;
    else if (!nn(o))
      break;
  if (L = e.md.helpers.parseLinkDestination(b, u, g), !L.ok || (i = e.md.normalizeLink(L.str), !e.md.validateLink(i)))
    return !1;
  for (u = L.pos, y += L.lines, a = u, c = y, S = u; u < g; u++)
    if (o = b.charCodeAt(u), o === 10)
      y++;
    else if (!nn(o))
      break;
  for (L = e.md.helpers.parseLinkTitle(b, u, g), u < g && S !== u && L.ok ? (N = L.str, u = L.pos, y += L.lines) : (N = "", u = a, y = c); u < g && (o = b.charCodeAt(u), !!nn(o)); )
    u++;
  if (u < g && b.charCodeAt(u) !== 10 && N)
    for (N = "", u = a, y = c; u < g && (o = b.charCodeAt(u), !!nn(o)); )
      u++;
  return u < g && b.charCodeAt(u) !== 10 || (d = $B(b.slice(1, m)), !d) ? !1 : (r || (typeof e.env.references > "u" && (e.env.references = {}), typeof e.env.references[d] > "u" && (e.env.references[d] = { title: N, href: i }), e.parentType = f, e.line = t + y + 1), !0);
}, GB = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "section",
  "source",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], gn = {}, UB = "[a-zA-Z_:][a-zA-Z0-9:._-]*", HB = "[^\"'=<>`\\x00-\\x20]+", VB = "'[^']*'", WB = '"[^"]*"', ZB = "(?:" + HB + "|" + VB + "|" + WB + ")", JB = "(?:\\s+" + UB + "(?:\\s*=\\s*" + ZB + ")?)", xs = "<[A-Za-z][A-Za-z0-9\\-]*" + JB + "*\\s*\\/?>", As = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>", QB = "<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->", YB = "<[?][\\s\\S]*?[?]>", XB = "<![A-Z]+\\s+[^>]*>", KB = "<!\\[CDATA\\[[\\s\\S]*?\\]\\]>", e$ = new RegExp("^(?:" + xs + "|" + As + "|" + QB + "|" + YB + "|" + XB + "|" + KB + ")"), n$ = new RegExp("^(?:" + xs + "|" + As + ")");
gn.HTML_TAG_RE = e$;
gn.HTML_OPEN_CLOSE_TAG_RE = n$;
var t$ = GB, s$ = gn.HTML_OPEN_CLOSE_TAG_RE, Ie = [
  [/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, !0],
  [/^<!--/, /-->/, !0],
  [/^<\?/, /\?>/, !0],
  [/^<![A-Z]/, />/, !0],
  [/^<!\[CDATA\[/, /\]\]>/, !0],
  [new RegExp("^</?(" + t$.join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, !0],
  [new RegExp(s$.source + "\\s*$"), /^$/, !1]
], o$ = function(e, t, s, r) {
  var o, a, c, l, i = e.bMarks[t] + e.tShift[t], p = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || !e.md.options.html || e.src.charCodeAt(i) !== 60)
    return !1;
  for (l = e.src.slice(i, p), o = 0; o < Ie.length && !Ie[o][0].test(l); o++)
    ;
  if (o === Ie.length)
    return !1;
  if (r)
    return Ie[o][2];
  if (a = t + 1, !Ie[o][1].test(l)) {
    for (; a < s && !(e.sCount[a] < e.blkIndent); a++)
      if (i = e.bMarks[a] + e.tShift[a], p = e.eMarks[a], l = e.src.slice(i, p), Ie[o][1].test(l)) {
        l.length !== 0 && a++;
        break;
      }
  }
  return e.line = a, c = e.push("html_block", "", 0), c.map = [t, a], c.content = e.getLines(t, a, e.blkIndent, !0), !0;
}, Ot = B.isSpace, r$ = function(e, t, s, r) {
  var o, a, c, l, i = e.bMarks[t] + e.tShift[t], p = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || (o = e.src.charCodeAt(i), o !== 35 || i >= p))
    return !1;
  for (a = 1, o = e.src.charCodeAt(++i); o === 35 && i < p && a <= 6; )
    a++, o = e.src.charCodeAt(++i);
  return a > 6 || i < p && !Ot(o) ? !1 : (r || (p = e.skipSpacesBack(p, i), c = e.skipCharsBack(p, 35, i), c > i && Ot(e.src.charCodeAt(c - 1)) && (p = c), e.line = t + 1, l = e.push("heading_open", "h" + String(a), 1), l.markup = "########".slice(0, a), l.map = [t, e.line], l = e.push("inline", "", 0), l.content = e.src.slice(i, p).trim(), l.map = [t, e.line], l.children = [], l = e.push("heading_close", "h" + String(a), -1), l.markup = "########".slice(0, a)), !0);
}, c$ = function(e, t, s) {
  var r, o, a, c, l, i, p, h, d, m = t + 1, f, L = e.md.block.ruler.getRules("paragraph");
  if (e.sCount[t] - e.blkIndent >= 4)
    return !1;
  for (f = e.parentType, e.parentType = "paragraph"; m < s && !e.isEmpty(m); m++)
    if (!(e.sCount[m] - e.blkIndent > 3)) {
      if (e.sCount[m] >= e.blkIndent && (i = e.bMarks[m] + e.tShift[m], p = e.eMarks[m], i < p && (d = e.src.charCodeAt(i), (d === 45 || d === 61) && (i = e.skipChars(i, d), i = e.skipSpaces(i), i >= p)))) {
        h = d === 61 ? 1 : 2;
        break;
      }
      if (!(e.sCount[m] < 0)) {
        for (o = !1, a = 0, c = L.length; a < c; a++)
          if (L[a](e, m, s, !0)) {
            o = !0;
            break;
          }
        if (o)
          break;
      }
    }
  return h ? (r = e.getLines(t, m, e.blkIndent, !1).trim(), e.line = m + 1, l = e.push("heading_open", "h" + String(h), 1), l.markup = String.fromCharCode(d), l.map = [t, e.line], l = e.push("inline", "", 0), l.content = r, l.map = [t, e.line - 1], l.children = [], l = e.push("heading_close", "h" + String(h), -1), l.markup = String.fromCharCode(d), e.parentType = f, !0) : !1;
}, a$ = function(e, t) {
  var s, r, o, a, c, l, i = t + 1, p = e.md.block.ruler.getRules("paragraph"), h = e.lineMax;
  for (l = e.parentType, e.parentType = "paragraph"; i < h && !e.isEmpty(i); i++)
    if (!(e.sCount[i] - e.blkIndent > 3) && !(e.sCount[i] < 0)) {
      for (r = !1, o = 0, a = p.length; o < a; o++)
        if (p[o](e, i, h, !0)) {
          r = !0;
          break;
        }
      if (r)
        break;
    }
  return s = e.getLines(t, i, e.blkIndent, !1).trim(), e.line = i, c = e.push("paragraph_open", "p", 1), c.map = [t, e.line], c = e.push("inline", "", 0), c.content = s, c.map = [t, e.line], c.children = [], c = e.push("paragraph_close", "p", -1), e.parentType = l, !0;
}, Ss = tt, _n = B.isSpace;
function de(n, e, t, s) {
  var r, o, a, c, l, i, p, h;
  for (this.src = n, this.md = e, this.env = t, this.tokens = s, this.bMarks = [], this.eMarks = [], this.tShift = [], this.sCount = [], this.bsCount = [], this.blkIndent = 0, this.line = 0, this.lineMax = 0, this.tight = !1, this.ddIndent = -1, this.listIndent = -1, this.parentType = "root", this.level = 0, this.result = "", o = this.src, h = !1, a = c = i = p = 0, l = o.length; c < l; c++) {
    if (r = o.charCodeAt(c), !h)
      if (_n(r)) {
        i++, r === 9 ? p += 4 - p % 4 : p++;
        continue;
      } else
        h = !0;
    (r === 10 || c === l - 1) && (r !== 10 && c++, this.bMarks.push(a), this.eMarks.push(c), this.tShift.push(i), this.sCount.push(p), this.bsCount.push(0), h = !1, i = 0, p = 0, a = c + 1);
  }
  this.bMarks.push(o.length), this.eMarks.push(o.length), this.tShift.push(0), this.sCount.push(0), this.bsCount.push(0), this.lineMax = this.bMarks.length - 1;
}
de.prototype.push = function(n, e, t) {
  var s = new Ss(n, e, t);
  return s.block = !0, t < 0 && this.level--, s.level = this.level, t > 0 && this.level++, this.tokens.push(s), s;
};
de.prototype.isEmpty = function(e) {
  return this.bMarks[e] + this.tShift[e] >= this.eMarks[e];
};
de.prototype.skipEmptyLines = function(e) {
  for (var t = this.lineMax; e < t && !(this.bMarks[e] + this.tShift[e] < this.eMarks[e]); e++)
    ;
  return e;
};
de.prototype.skipSpaces = function(e) {
  for (var t, s = this.src.length; e < s && (t = this.src.charCodeAt(e), !!_n(t)); e++)
    ;
  return e;
};
de.prototype.skipSpacesBack = function(e, t) {
  if (e <= t)
    return e;
  for (; e > t; )
    if (!_n(this.src.charCodeAt(--e)))
      return e + 1;
  return e;
};
de.prototype.skipChars = function(e, t) {
  for (var s = this.src.length; e < s && this.src.charCodeAt(e) === t; e++)
    ;
  return e;
};
de.prototype.skipCharsBack = function(e, t, s) {
  if (e <= s)
    return e;
  for (; e > s; )
    if (t !== this.src.charCodeAt(--e))
      return e + 1;
  return e;
};
de.prototype.getLines = function(e, t, s, r) {
  var o, a, c, l, i, p, h, d = e;
  if (e >= t)
    return "";
  for (p = new Array(t - e), o = 0; d < t; d++, o++) {
    for (a = 0, h = l = this.bMarks[d], d + 1 < t || r ? i = this.eMarks[d] + 1 : i = this.eMarks[d]; l < i && a < s; ) {
      if (c = this.src.charCodeAt(l), _n(c))
        c === 9 ? a += 4 - (a + this.bsCount[d]) % 4 : a++;
      else if (l - h < this.tShift[d])
        a++;
      else
        break;
      l++;
    }
    a > s ? p[o] = new Array(a - s + 1).join(" ") + this.src.slice(l, i) : p[o] = this.src.slice(l, i);
  }
  return p.join("");
};
de.prototype.Token = Ss;
var i$ = de, l$ = nt, tn = [
  // First 2 params - rule name & source. Secondary array - list of rules,
  // which can be terminated by this one.
  ["table", qB, ["paragraph", "reference"]],
  ["code", RB],
  ["fence", PB, ["paragraph", "reference", "blockquote", "list"]],
  ["blockquote", IB, ["paragraph", "reference", "blockquote", "list"]],
  ["hr", FB, ["paragraph", "reference", "blockquote", "list"]],
  ["list", BB, ["paragraph", "reference", "blockquote"]],
  ["reference", zB],
  ["html_block", o$, ["paragraph", "reference", "blockquote"]],
  ["heading", r$, ["paragraph", "reference", "blockquote"]],
  ["lheading", c$],
  ["paragraph", a$]
];
function bn() {
  this.ruler = new l$();
  for (var n = 0; n < tn.length; n++)
    this.ruler.push(tn[n][0], tn[n][1], { alt: (tn[n][2] || []).slice() });
}
bn.prototype.tokenize = function(n, e, t) {
  for (var s, r, o = this.ruler.getRules(""), a = o.length, c = e, l = !1, i = n.md.options.maxNesting; c < t && (n.line = c = n.skipEmptyLines(c), !(c >= t || n.sCount[c] < n.blkIndent)); ) {
    if (n.level >= i) {
      n.line = t;
      break;
    }
    for (r = 0; r < a && (s = o[r](n, c, t, !1), !s); r++)
      ;
    n.tight = !l, n.isEmpty(n.line - 1) && (l = !0), c = n.line, c < t && n.isEmpty(c) && (l = !0, c++, n.line = c);
  }
};
bn.prototype.parse = function(n, e, t, s) {
  var r;
  n && (r = new this.State(n, e, t, s), this.tokenize(r, r.line, r.lineMax));
};
bn.prototype.State = i$;
var u$ = bn;
function p$(n) {
  switch (n) {
    case 10:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 42:
    case 43:
    case 45:
    case 58:
    case 60:
    case 61:
    case 62:
    case 64:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 123:
    case 125:
    case 126:
      return !0;
    default:
      return !1;
  }
}
var h$ = function(e, t) {
  for (var s = e.pos; s < e.posMax && !p$(e.src.charCodeAt(s)); )
    s++;
  return s === e.pos ? !1 : (t || (e.pending += e.src.slice(e.pos, s)), e.pos = s, !0);
}, d$ = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i, m$ = function(e, t) {
  var s, r, o, a, c, l, i, p;
  return !e.md.options.linkify || e.linkLevel > 0 || (s = e.pos, r = e.posMax, s + 3 > r) || e.src.charCodeAt(s) !== 58 || e.src.charCodeAt(s + 1) !== 47 || e.src.charCodeAt(s + 2) !== 47 || (o = e.pending.match(d$), !o) || (a = o[1], c = e.md.linkify.matchAtStart(e.src.slice(s - a.length)), !c) || (l = c.url, l = l.replace(/\*+$/, ""), i = e.md.normalizeLink(l), !e.md.validateLink(i)) ? !1 : (t || (e.pending = e.pending.slice(0, -a.length), p = e.push("link_open", "a", 1), p.attrs = [["href", i]], p.markup = "linkify", p.info = "auto", p = e.push("text", "", 0), p.content = e.md.normalizeLinkText(l), p = e.push("link_close", "a", -1), p.markup = "linkify", p.info = "auto"), e.pos += l.length - a.length, !0);
}, f$ = B.isSpace, g$ = function(e, t) {
  var s, r, o, a = e.pos;
  if (e.src.charCodeAt(a) !== 10)
    return !1;
  if (s = e.pending.length - 1, r = e.posMax, !t)
    if (s >= 0 && e.pending.charCodeAt(s) === 32)
      if (s >= 1 && e.pending.charCodeAt(s - 1) === 32) {
        for (o = s - 1; o >= 1 && e.pending.charCodeAt(o - 1) === 32; )
          o--;
        e.pending = e.pending.slice(0, o), e.push("hardbreak", "br", 0);
      } else
        e.pending = e.pending.slice(0, -1), e.push("softbreak", "br", 0);
    else
      e.push("softbreak", "br", 0);
  for (a++; a < r && f$(e.src.charCodeAt(a)); )
    a++;
  return e.pos = a, !0;
}, _$ = B.isSpace, ot = [];
for (var Ft = 0; Ft < 256; Ft++)
  ot.push(0);
"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(n) {
  ot[n.charCodeAt(0)] = 1;
});
var b$ = function(e, t) {
  var s, r, o, a, c, l = e.pos, i = e.posMax;
  if (e.src.charCodeAt(l) !== 92 || (l++, l >= i))
    return !1;
  if (s = e.src.charCodeAt(l), s === 10) {
    for (t || e.push("hardbreak", "br", 0), l++; l < i && (s = e.src.charCodeAt(l), !!_$(s)); )
      l++;
    return e.pos = l, !0;
  }
  return a = e.src[l], s >= 55296 && s <= 56319 && l + 1 < i && (r = e.src.charCodeAt(l + 1), r >= 56320 && r <= 57343 && (a += e.src[l + 1], l++)), o = "\\" + a, t || (c = e.push("text_special", "", 0), s < 256 && ot[s] !== 0 ? c.content = a : c.content = o, c.markup = o, c.info = "escape"), e.pos = l + 1, !0;
}, k$ = function(e, t) {
  var s, r, o, a, c, l, i, p, h = e.pos, d = e.src.charCodeAt(h);
  if (d !== 96)
    return !1;
  for (s = h, h++, r = e.posMax; h < r && e.src.charCodeAt(h) === 96; )
    h++;
  if (o = e.src.slice(s, h), i = o.length, e.backticksScanned && (e.backticks[i] || 0) <= s)
    return t || (e.pending += o), e.pos += i, !0;
  for (c = l = h; (c = e.src.indexOf("`", l)) !== -1; ) {
    for (l = c + 1; l < r && e.src.charCodeAt(l) === 96; )
      l++;
    if (p = l - c, p === i)
      return t || (a = e.push("code_inline", "code", 0), a.markup = o, a.content = e.src.slice(h, c).replace(/\n/g, " ").replace(/^ (.+) $/, "$1")), e.pos = l, !0;
    e.backticks[p] = c;
  }
  return e.backticksScanned = !0, t || (e.pending += o), e.pos += i, !0;
}, kn = {};
kn.tokenize = function(e, t) {
  var s, r, o, a, c, l = e.pos, i = e.src.charCodeAt(l);
  if (t || i !== 126 || (r = e.scanDelims(e.pos, !0), a = r.length, c = String.fromCharCode(i), a < 2))
    return !1;
  for (a % 2 && (o = e.push("text", "", 0), o.content = c, a--), s = 0; s < a; s += 2)
    o = e.push("text", "", 0), o.content = c + c, e.delimiters.push({
      marker: i,
      length: 0,
      // disable "rule of 3" length checks meant for emphasis
      token: e.tokens.length - 1,
      end: -1,
      open: r.can_open,
      close: r.can_close
    });
  return e.pos += r.length, !0;
};
function Mt(n, e) {
  var t, s, r, o, a, c = [], l = e.length;
  for (t = 0; t < l; t++)
    r = e[t], r.marker === 126 && r.end !== -1 && (o = e[r.end], a = n.tokens[r.token], a.type = "s_open", a.tag = "s", a.nesting = 1, a.markup = "~~", a.content = "", a = n.tokens[o.token], a.type = "s_close", a.tag = "s", a.nesting = -1, a.markup = "~~", a.content = "", n.tokens[o.token - 1].type === "text" && n.tokens[o.token - 1].content === "~" && c.push(o.token - 1));
  for (; c.length; ) {
    for (t = c.pop(), s = t + 1; s < n.tokens.length && n.tokens[s].type === "s_close"; )
      s++;
    s--, t !== s && (a = n.tokens[s], n.tokens[s] = n.tokens[t], n.tokens[t] = a);
  }
}
kn.postProcess = function(e) {
  var t, s = e.tokens_meta, r = e.tokens_meta.length;
  for (Mt(e, e.delimiters), t = 0; t < r; t++)
    s[t] && s[t].delimiters && Mt(e, s[t].delimiters);
};
var yn = {};
yn.tokenize = function(e, t) {
  var s, r, o, a = e.pos, c = e.src.charCodeAt(a);
  if (t || c !== 95 && c !== 42)
    return !1;
  for (r = e.scanDelims(e.pos, c === 42), s = 0; s < r.length; s++)
    o = e.push("text", "", 0), o.content = String.fromCharCode(c), e.delimiters.push({
      // Char code of the starting marker (number).
      //
      marker: c,
      // Total length of these series of delimiters.
      //
      length: r.length,
      // A position of the token this delimiter corresponds to.
      //
      token: e.tokens.length - 1,
      // If this delimiter is matched as a valid opener, `end` will be
      // equal to its position, otherwise it's `-1`.
      //
      end: -1,
      // Boolean flags that determine if this delimiter could open or close
      // an emphasis.
      //
      open: r.can_open,
      close: r.can_close
    });
  return e.pos += r.length, !0;
};
function Bt(n, e) {
  var t, s, r, o, a, c, l = e.length;
  for (t = l - 1; t >= 0; t--)
    s = e[t], !(s.marker !== 95 && s.marker !== 42) && s.end !== -1 && (r = e[s.end], c = t > 0 && e[t - 1].end === s.end + 1 && // check that first two markers match and adjacent
    e[t - 1].marker === s.marker && e[t - 1].token === s.token - 1 && // check that last two markers are adjacent (we can safely assume they match)
    e[s.end + 1].token === r.token + 1, a = String.fromCharCode(s.marker), o = n.tokens[s.token], o.type = c ? "strong_open" : "em_open", o.tag = c ? "strong" : "em", o.nesting = 1, o.markup = c ? a + a : a, o.content = "", o = n.tokens[r.token], o.type = c ? "strong_close" : "em_close", o.tag = c ? "strong" : "em", o.nesting = -1, o.markup = c ? a + a : a, o.content = "", c && (n.tokens[e[t - 1].token].content = "", n.tokens[e[s.end + 1].token].content = "", t--));
}
yn.postProcess = function(e) {
  var t, s = e.tokens_meta, r = e.tokens_meta.length;
  for (Bt(e, e.delimiters), t = 0; t < r; t++)
    s[t] && s[t].delimiters && Bt(e, s[t].delimiters);
};
var y$ = B.normalizeReference, qn = B.isSpace, w$ = function(e, t) {
  var s, r, o, a, c, l, i, p, h, d = "", m = "", f = e.pos, L = e.posMax, S = e.pos, b = !0;
  if (e.src.charCodeAt(e.pos) !== 91 || (c = e.pos + 1, a = e.md.helpers.parseLinkLabel(e, e.pos, !0), a < 0))
    return !1;
  if (l = a + 1, l < L && e.src.charCodeAt(l) === 40) {
    for (b = !1, l++; l < L && (r = e.src.charCodeAt(l), !(!qn(r) && r !== 10)); l++)
      ;
    if (l >= L)
      return !1;
    if (S = l, i = e.md.helpers.parseLinkDestination(e.src, l, e.posMax), i.ok) {
      for (d = e.md.normalizeLink(i.str), e.md.validateLink(d) ? l = i.pos : d = "", S = l; l < L && (r = e.src.charCodeAt(l), !(!qn(r) && r !== 10)); l++)
        ;
      if (i = e.md.helpers.parseLinkTitle(e.src, l, e.posMax), l < L && S !== l && i.ok)
        for (m = i.str, l = i.pos; l < L && (r = e.src.charCodeAt(l), !(!qn(r) && r !== 10)); l++)
          ;
    }
    (l >= L || e.src.charCodeAt(l) !== 41) && (b = !0), l++;
  }
  if (b) {
    if (typeof e.env.references > "u")
      return !1;
    if (l < L && e.src.charCodeAt(l) === 91 ? (S = l + 1, l = e.md.helpers.parseLinkLabel(e, l), l >= 0 ? o = e.src.slice(S, l++) : l = a + 1) : l = a + 1, o || (o = e.src.slice(c, a)), p = e.env.references[y$(o)], !p)
      return e.pos = f, !1;
    d = p.href, m = p.title;
  }
  return t || (e.pos = c, e.posMax = a, h = e.push("link_open", "a", 1), h.attrs = s = [["href", d]], m && s.push(["title", m]), e.linkLevel++, e.md.inline.tokenize(e), e.linkLevel--, h = e.push("link_close", "a", -1)), e.pos = l, e.posMax = L, !0;
}, v$ = B.normalizeReference, Rn = B.isSpace, x$ = function(e, t) {
  var s, r, o, a, c, l, i, p, h, d, m, f, L, S = "", b = e.pos, k = e.posMax;
  if (e.src.charCodeAt(e.pos) !== 33 || e.src.charCodeAt(e.pos + 1) !== 91 || (l = e.pos + 2, c = e.md.helpers.parseLinkLabel(e, e.pos + 1, !1), c < 0))
    return !1;
  if (i = c + 1, i < k && e.src.charCodeAt(i) === 40) {
    for (i++; i < k && (r = e.src.charCodeAt(i), !(!Rn(r) && r !== 10)); i++)
      ;
    if (i >= k)
      return !1;
    for (L = i, h = e.md.helpers.parseLinkDestination(e.src, i, e.posMax), h.ok && (S = e.md.normalizeLink(h.str), e.md.validateLink(S) ? i = h.pos : S = ""), L = i; i < k && (r = e.src.charCodeAt(i), !(!Rn(r) && r !== 10)); i++)
      ;
    if (h = e.md.helpers.parseLinkTitle(e.src, i, e.posMax), i < k && L !== i && h.ok)
      for (d = h.str, i = h.pos; i < k && (r = e.src.charCodeAt(i), !(!Rn(r) && r !== 10)); i++)
        ;
    else
      d = "";
    if (i >= k || e.src.charCodeAt(i) !== 41)
      return e.pos = b, !1;
    i++;
  } else {
    if (typeof e.env.references > "u")
      return !1;
    if (i < k && e.src.charCodeAt(i) === 91 ? (L = i + 1, i = e.md.helpers.parseLinkLabel(e, i), i >= 0 ? a = e.src.slice(L, i++) : i = c + 1) : i = c + 1, a || (a = e.src.slice(l, c)), p = e.env.references[v$(a)], !p)
      return e.pos = b, !1;
    S = p.href, d = p.title;
  }
  return t || (o = e.src.slice(l, c), e.md.inline.parse(
    o,
    e.md,
    e.env,
    f = []
  ), m = e.push("image", "img", 0), m.attrs = s = [["src", S], ["alt", ""]], m.children = f, m.content = o, d && s.push(["title", d])), e.pos = i, e.posMax = k, !0;
}, A$ = /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/, S$ = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/, L$ = function(e, t) {
  var s, r, o, a, c, l, i = e.pos;
  if (e.src.charCodeAt(i) !== 60)
    return !1;
  for (c = e.pos, l = e.posMax; ; ) {
    if (++i >= l || (a = e.src.charCodeAt(i), a === 60))
      return !1;
    if (a === 62)
      break;
  }
  return s = e.src.slice(c + 1, i), S$.test(s) ? (r = e.md.normalizeLink(s), e.md.validateLink(r) ? (t || (o = e.push("link_open", "a", 1), o.attrs = [["href", r]], o.markup = "autolink", o.info = "auto", o = e.push("text", "", 0), o.content = e.md.normalizeLinkText(s), o = e.push("link_close", "a", -1), o.markup = "autolink", o.info = "auto"), e.pos += s.length + 2, !0) : !1) : A$.test(s) ? (r = e.md.normalizeLink("mailto:" + s), e.md.validateLink(r) ? (t || (o = e.push("link_open", "a", 1), o.attrs = [["href", r]], o.markup = "autolink", o.info = "auto", o = e.push("text", "", 0), o.content = e.md.normalizeLinkText(s), o = e.push("link_close", "a", -1), o.markup = "autolink", o.info = "auto"), e.pos += s.length + 2, !0) : !1) : !1;
}, N$ = gn.HTML_TAG_RE;
function C$(n) {
  return /^<a[>\s]/i.test(n);
}
function E$(n) {
  return /^<\/a\s*>/i.test(n);
}
function T$(n) {
  var e = n | 32;
  return e >= 97 && e <= 122;
}
var D$ = function(e, t) {
  var s, r, o, a, c = e.pos;
  return !e.md.options.html || (o = e.posMax, e.src.charCodeAt(c) !== 60 || c + 2 >= o) || (s = e.src.charCodeAt(c + 1), s !== 33 && s !== 63 && s !== 47 && !T$(s)) || (r = e.src.slice(c).match(N$), !r) ? !1 : (t || (a = e.push("html_inline", "", 0), a.content = e.src.slice(c, c + r[0].length), C$(a.content) && e.linkLevel++, E$(a.content) && e.linkLevel--), e.pos += r[0].length, !0);
}, $t = gs, j$ = B.has, q$ = B.isValidEntityCode, zt = B.fromCodePoint, R$ = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i, P$ = /^&([a-z][a-z0-9]{1,31});/i, I$ = function(e, t) {
  var s, r, o, a, c = e.pos, l = e.posMax;
  if (e.src.charCodeAt(c) !== 38 || c + 1 >= l)
    return !1;
  if (s = e.src.charCodeAt(c + 1), s === 35) {
    if (o = e.src.slice(c).match(R$), o)
      return t || (r = o[1][0].toLowerCase() === "x" ? parseInt(o[1].slice(1), 16) : parseInt(o[1], 10), a = e.push("text_special", "", 0), a.content = q$(r) ? zt(r) : zt(65533), a.markup = o[0], a.info = "entity"), e.pos += o[0].length, !0;
  } else if (o = e.src.slice(c).match(P$), o && j$($t, o[1]))
    return t || (a = e.push("text_special", "", 0), a.content = $t[o[1]], a.markup = o[0], a.info = "entity"), e.pos += o[0].length, !0;
  return !1;
};
function Gt(n, e) {
  var t, s, r, o, a, c, l, i, p = {}, h = e.length;
  if (h) {
    var d = 0, m = -2, f = [];
    for (t = 0; t < h; t++)
      if (r = e[t], f.push(0), (e[d].marker !== r.marker || m !== r.token - 1) && (d = t), m = r.token, r.length = r.length || 0, !!r.close) {
        for (p.hasOwnProperty(r.marker) || (p[r.marker] = [-1, -1, -1, -1, -1, -1]), a = p[r.marker][(r.open ? 3 : 0) + r.length % 3], s = d - f[d] - 1, c = s; s > a; s -= f[s] + 1)
          if (o = e[s], o.marker === r.marker && o.open && o.end < 0 && (l = !1, (o.close || r.open) && (o.length + r.length) % 3 === 0 && (o.length % 3 !== 0 || r.length % 3 !== 0) && (l = !0), !l)) {
            i = s > 0 && !e[s - 1].open ? f[s - 1] + 1 : 0, f[t] = t - s + i, f[s] = i, r.open = !1, o.end = t, o.close = !1, c = -1, m = -2;
            break;
          }
        c !== -1 && (p[r.marker][(r.open ? 3 : 0) + (r.length || 0) % 3] = c);
      }
  }
}
var O$ = function(e) {
  var t, s = e.tokens_meta, r = e.tokens_meta.length;
  for (Gt(e, e.delimiters), t = 0; t < r; t++)
    s[t] && s[t].delimiters && Gt(e, s[t].delimiters);
}, F$ = function(e) {
  var t, s, r = 0, o = e.tokens, a = e.tokens.length;
  for (t = s = 0; t < a; t++)
    o[t].nesting < 0 && r--, o[t].level = r, o[t].nesting > 0 && r++, o[t].type === "text" && t + 1 < a && o[t + 1].type === "text" ? o[t + 1].content = o[t].content + o[t + 1].content : (t !== s && (o[s] = o[t]), s++);
  t !== s && (o.length = s);
}, rt = tt, Ut = B.isWhiteSpace, Ht = B.isPunctChar, Vt = B.isMdAsciiPunct;
function Ye(n, e, t, s) {
  this.src = n, this.env = t, this.md = e, this.tokens = s, this.tokens_meta = Array(s.length), this.pos = 0, this.posMax = this.src.length, this.level = 0, this.pending = "", this.pendingLevel = 0, this.cache = {}, this.delimiters = [], this._prev_delimiters = [], this.backticks = {}, this.backticksScanned = !1, this.linkLevel = 0;
}
Ye.prototype.pushPending = function() {
  var n = new rt("text", "", 0);
  return n.content = this.pending, n.level = this.pendingLevel, this.tokens.push(n), this.pending = "", n;
};
Ye.prototype.push = function(n, e, t) {
  this.pending && this.pushPending();
  var s = new rt(n, e, t), r = null;
  return t < 0 && (this.level--, this.delimiters = this._prev_delimiters.pop()), s.level = this.level, t > 0 && (this.level++, this._prev_delimiters.push(this.delimiters), this.delimiters = [], r = { delimiters: this.delimiters }), this.pendingLevel = this.level, this.tokens.push(s), this.tokens_meta.push(r), s;
};
Ye.prototype.scanDelims = function(n, e) {
  var t = n, s, r, o, a, c, l, i, p, h, d = !0, m = !0, f = this.posMax, L = this.src.charCodeAt(n);
  for (s = n > 0 ? this.src.charCodeAt(n - 1) : 32; t < f && this.src.charCodeAt(t) === L; )
    t++;
  return o = t - n, r = t < f ? this.src.charCodeAt(t) : 32, i = Vt(s) || Ht(String.fromCharCode(s)), h = Vt(r) || Ht(String.fromCharCode(r)), l = Ut(s), p = Ut(r), p ? d = !1 : h && (l || i || (d = !1)), l ? m = !1 : i && (p || h || (m = !1)), e ? (a = d, c = m) : (a = d && (!m || i), c = m && (!d || h)), {
    can_open: a,
    can_close: c,
    length: o
  };
};
Ye.prototype.Token = rt;
var M$ = Ye, Wt = nt, Pn = [
  ["text", h$],
  ["linkify", m$],
  ["newline", g$],
  ["escape", b$],
  ["backticks", k$],
  ["strikethrough", kn.tokenize],
  ["emphasis", yn.tokenize],
  ["link", w$],
  ["image", x$],
  ["autolink", L$],
  ["html_inline", D$],
  ["entity", I$]
], In = [
  ["balance_pairs", O$],
  ["strikethrough", kn.postProcess],
  ["emphasis", yn.postProcess],
  // rules for pairs separate '**' into its own text tokens, which may be left unused,
  // rule below merges unused segments back with the rest of the text
  ["fragments_join", F$]
];
function Xe() {
  var n;
  for (this.ruler = new Wt(), n = 0; n < Pn.length; n++)
    this.ruler.push(Pn[n][0], Pn[n][1]);
  for (this.ruler2 = new Wt(), n = 0; n < In.length; n++)
    this.ruler2.push(In[n][0], In[n][1]);
}
Xe.prototype.skipToken = function(n) {
  var e, t, s = n.pos, r = this.ruler.getRules(""), o = r.length, a = n.md.options.maxNesting, c = n.cache;
  if (typeof c[s] < "u") {
    n.pos = c[s];
    return;
  }
  if (n.level < a)
    for (t = 0; t < o && (n.level++, e = r[t](n, !0), n.level--, !e); t++)
      ;
  else
    n.pos = n.posMax;
  e || n.pos++, c[s] = n.pos;
};
Xe.prototype.tokenize = function(n) {
  for (var e, t, s = this.ruler.getRules(""), r = s.length, o = n.posMax, a = n.md.options.maxNesting; n.pos < o; ) {
    if (n.level < a)
      for (t = 0; t < r && (e = s[t](n, !1), !e); t++)
        ;
    if (e) {
      if (n.pos >= o)
        break;
      continue;
    }
    n.pending += n.src[n.pos++];
  }
  n.pending && n.pushPending();
};
Xe.prototype.parse = function(n, e, t, s) {
  var r, o, a, c = new this.State(n, e, t, s);
  for (this.tokenize(c), o = this.ruler2.getRules(""), a = o.length, r = 0; r < a; r++)
    o[r](c);
};
Xe.prototype.State = M$;
var B$ = Xe, On, Zt;
function $$() {
  return Zt || (Zt = 1, On = function(n) {
    var e = {};
    n = n || {}, e.src_Any = _s().source, e.src_Cc = bs().source, e.src_Z = ks().source, e.src_P = et.source, e.src_ZPCc = [e.src_Z, e.src_P, e.src_Cc].join("|"), e.src_ZCc = [e.src_Z, e.src_Cc].join("|");
    var t = "[><｜]";
    return e.src_pseudo_letter = "(?:(?!" + t + "|" + e.src_ZPCc + ")" + e.src_Any + ")", e.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", e.src_auth = "(?:(?:(?!" + e.src_ZCc + "|[@/\\[\\]()]).)+@)?", e.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?", e.src_host_terminator = "(?=$|" + t + "|" + e.src_ZPCc + ")(?!" + (n["---"] ? "-(?!--)|" : "-|") + "_|:\\d|\\.-|\\.(?!$|" + e.src_ZPCc + "))", e.src_path = "(?:[/?#](?:(?!" + e.src_ZCc + "|" + t + `|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!` + e.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + e.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + e.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + e.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + e.src_ZCc + "|[']).)+\\'|\\'(?=" + e.src_pseudo_letter + "|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + e.src_ZCc + "|[.]|$)|" + (n["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + ",(?!" + e.src_ZCc + "|$)|;(?!" + e.src_ZCc + "|$)|\\!+(?!" + e.src_ZCc + "|[!]|$)|\\?(?!" + e.src_ZCc + "|[?]|$))+|\\/)?", e.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*', e.src_xn = "xn--[a-z0-9\\-]{1,59}", e.src_domain_root = // Allow letters & digits (http://test1)
    "(?:" + e.src_xn + "|" + e.src_pseudo_letter + "{1,63})", e.src_domain = "(?:" + e.src_xn + "|(?:" + e.src_pseudo_letter + ")|(?:" + e.src_pseudo_letter + "(?:-|" + e.src_pseudo_letter + "){0,61}" + e.src_pseudo_letter + "))", e.src_host = "(?:(?:(?:(?:" + e.src_domain + ")\\.)*" + e.src_domain + "))", e.tpl_host_fuzzy = "(?:" + e.src_ip4 + "|(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%)))", e.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%))", e.src_host_strict = e.src_host + e.src_host_terminator, e.tpl_host_fuzzy_strict = e.tpl_host_fuzzy + e.src_host_terminator, e.src_host_port_strict = e.src_host + e.src_port + e.src_host_terminator, e.tpl_host_port_fuzzy_strict = e.tpl_host_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_port_no_ip_fuzzy_strict = e.tpl_host_no_ip_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + e.src_ZPCc + "|>|$))", e.tpl_email_fuzzy = "(^|" + t + '|"|\\(|' + e.src_ZCc + ")(" + e.src_email_name + "@" + e.tpl_host_fuzzy_strict + ")", e.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
    // but can start with > (markdown blockquote)
    "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_fuzzy_strict + e.src_path + ")", e.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
    // but can start with > (markdown blockquote)
    "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_no_ip_fuzzy_strict + e.src_path + ")", e;
  }), On;
}
function Wn(n) {
  var e = Array.prototype.slice.call(arguments, 1);
  return e.forEach(function(t) {
    t && Object.keys(t).forEach(function(s) {
      n[s] = t[s];
    });
  }), n;
}
function wn(n) {
  return Object.prototype.toString.call(n);
}
function z$(n) {
  return wn(n) === "[object String]";
}
function G$(n) {
  return wn(n) === "[object Object]";
}
function U$(n) {
  return wn(n) === "[object RegExp]";
}
function Jt(n) {
  return wn(n) === "[object Function]";
}
function H$(n) {
  return n.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
}
var Ls = {
  fuzzyLink: !0,
  fuzzyEmail: !0,
  fuzzyIP: !1
};
function V$(n) {
  return Object.keys(n || {}).reduce(function(e, t) {
    return e || Ls.hasOwnProperty(t);
  }, !1);
}
var W$ = {
  "http:": {
    validate: function(n, e, t) {
      var s = n.slice(e);
      return t.re.http || (t.re.http = new RegExp(
        "^\\/\\/" + t.re.src_auth + t.re.src_host_port_strict + t.re.src_path,
        "i"
      )), t.re.http.test(s) ? s.match(t.re.http)[0].length : 0;
    }
  },
  "https:": "http:",
  "ftp:": "http:",
  "//": {
    validate: function(n, e, t) {
      var s = n.slice(e);
      return t.re.no_http || (t.re.no_http = new RegExp(
        "^" + t.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'
        // with code comments
        "(?:localhost|(?:(?:" + t.re.src_domain + ")\\.)+" + t.re.src_domain_root + ")" + t.re.src_port + t.re.src_host_terminator + t.re.src_path,
        "i"
      )), t.re.no_http.test(s) ? e >= 3 && n[e - 3] === ":" || e >= 3 && n[e - 3] === "/" ? 0 : s.match(t.re.no_http)[0].length : 0;
    }
  },
  "mailto:": {
    validate: function(n, e, t) {
      var s = n.slice(e);
      return t.re.mailto || (t.re.mailto = new RegExp(
        "^" + t.re.src_email_name + "@" + t.re.src_host_strict,
        "i"
      )), t.re.mailto.test(s) ? s.match(t.re.mailto)[0].length : 0;
    }
  }
}, Z$ = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]", J$ = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
function Q$(n) {
  n.__index__ = -1, n.__text_cache__ = "";
}
function Y$(n) {
  return function(e, t) {
    var s = e.slice(t);
    return n.test(s) ? s.match(n)[0].length : 0;
  };
}
function Qt() {
  return function(n, e) {
    e.normalize(n);
  };
}
function cn(n) {
  var e = n.re = $$()(n.__opts__), t = n.__tlds__.slice();
  n.onCompile(), n.__tlds_replaced__ || t.push(Z$), t.push(e.src_xn), e.src_tlds = t.join("|");
  function s(c) {
    return c.replace("%TLDS%", e.src_tlds);
  }
  e.email_fuzzy = RegExp(s(e.tpl_email_fuzzy), "i"), e.link_fuzzy = RegExp(s(e.tpl_link_fuzzy), "i"), e.link_no_ip_fuzzy = RegExp(s(e.tpl_link_no_ip_fuzzy), "i"), e.host_fuzzy_test = RegExp(s(e.tpl_host_fuzzy_test), "i");
  var r = [];
  n.__compiled__ = {};
  function o(c, l) {
    throw new Error('(LinkifyIt) Invalid schema "' + c + '": ' + l);
  }
  Object.keys(n.__schemas__).forEach(function(c) {
    var l = n.__schemas__[c];
    if (l !== null) {
      var i = { validate: null, link: null };
      if (n.__compiled__[c] = i, G$(l)) {
        U$(l.validate) ? i.validate = Y$(l.validate) : Jt(l.validate) ? i.validate = l.validate : o(c, l), Jt(l.normalize) ? i.normalize = l.normalize : l.normalize ? o(c, l) : i.normalize = Qt();
        return;
      }
      if (z$(l)) {
        r.push(c);
        return;
      }
      o(c, l);
    }
  }), r.forEach(function(c) {
    n.__compiled__[n.__schemas__[c]] && (n.__compiled__[c].validate = n.__compiled__[n.__schemas__[c]].validate, n.__compiled__[c].normalize = n.__compiled__[n.__schemas__[c]].normalize);
  }), n.__compiled__[""] = { validate: null, normalize: Qt() };
  var a = Object.keys(n.__compiled__).filter(function(c) {
    return c.length > 0 && n.__compiled__[c];
  }).map(H$).join("|");
  n.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + a + ")", "i"), n.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + a + ")", "ig"), n.re.schema_at_start = RegExp("^" + n.re.schema_search.source, "i"), n.re.pretest = RegExp(
    "(" + n.re.schema_test.source + ")|(" + n.re.host_fuzzy_test.source + ")|@",
    "i"
  ), Q$(n);
}
function X$(n, e) {
  var t = n.__index__, s = n.__last_index__, r = n.__text_cache__.slice(t, s);
  this.schema = n.__schema__.toLowerCase(), this.index = t + e, this.lastIndex = s + e, this.raw = r, this.text = r, this.url = r;
}
function Zn(n, e) {
  var t = new X$(n, e);
  return n.__compiled__[t.schema].normalize(t, n), t;
}
function te(n, e) {
  if (!(this instanceof te))
    return new te(n, e);
  e || V$(n) && (e = n, n = {}), this.__opts__ = Wn({}, Ls, e), this.__index__ = -1, this.__last_index__ = -1, this.__schema__ = "", this.__text_cache__ = "", this.__schemas__ = Wn({}, W$, n), this.__compiled__ = {}, this.__tlds__ = J$, this.__tlds_replaced__ = !1, this.re = {}, cn(this);
}
te.prototype.add = function(e, t) {
  return this.__schemas__[e] = t, cn(this), this;
};
te.prototype.set = function(e) {
  return this.__opts__ = Wn(this.__opts__, e), this;
};
te.prototype.test = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length)
    return !1;
  var t, s, r, o, a, c, l, i, p;
  if (this.re.schema_test.test(e)) {
    for (l = this.re.schema_search, l.lastIndex = 0; (t = l.exec(e)) !== null; )
      if (o = this.testSchemaAt(e, t[2], l.lastIndex), o) {
        this.__schema__ = t[2], this.__index__ = t.index + t[1].length, this.__last_index__ = t.index + t[0].length + o;
        break;
      }
  }
  return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (i = e.search(this.re.host_fuzzy_test), i >= 0 && (this.__index__ < 0 || i < this.__index__) && (s = e.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null && (a = s.index + s[1].length, (this.__index__ < 0 || a < this.__index__) && (this.__schema__ = "", this.__index__ = a, this.__last_index__ = s.index + s[0].length))), this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && (p = e.indexOf("@"), p >= 0 && (r = e.match(this.re.email_fuzzy)) !== null && (a = r.index + r[1].length, c = r.index + r[0].length, (this.__index__ < 0 || a < this.__index__ || a === this.__index__ && c > this.__last_index__) && (this.__schema__ = "mailto:", this.__index__ = a, this.__last_index__ = c))), this.__index__ >= 0;
};
te.prototype.pretest = function(e) {
  return this.re.pretest.test(e);
};
te.prototype.testSchemaAt = function(e, t, s) {
  return this.__compiled__[t.toLowerCase()] ? this.__compiled__[t.toLowerCase()].validate(e, s, this) : 0;
};
te.prototype.match = function(e) {
  var t = 0, s = [];
  this.__index__ >= 0 && this.__text_cache__ === e && (s.push(Zn(this, t)), t = this.__last_index__);
  for (var r = t ? e.slice(t) : e; this.test(r); )
    s.push(Zn(this, t)), r = r.slice(this.__last_index__), t += this.__last_index__;
  return s.length ? s : null;
};
te.prototype.matchAtStart = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length)
    return null;
  var t = this.re.schema_at_start.exec(e);
  if (!t)
    return null;
  var s = this.testSchemaAt(e, t[2], t[0].length);
  return s ? (this.__schema__ = t[2], this.__index__ = t.index + t[1].length, this.__last_index__ = t.index + t[0].length + s, Zn(this, 0)) : null;
};
te.prototype.tlds = function(e, t) {
  return e = Array.isArray(e) ? e : [e], t ? (this.__tlds__ = this.__tlds__.concat(e).sort().filter(function(s, r, o) {
    return s !== o[r - 1];
  }).reverse(), cn(this), this) : (this.__tlds__ = e.slice(), this.__tlds_replaced__ = !0, cn(this), this);
};
te.prototype.normalize = function(e) {
  e.schema || (e.url = "http://" + e.url), e.schema === "mailto:" && !/^mailto:/i.test(e.url) && (e.url = "mailto:" + e.url);
};
te.prototype.onCompile = function() {
};
var K$ = te;
const Be = 2147483647, ue = 36, ct = 1, Je = 26, ez = 38, nz = 700, Ns = 72, Cs = 128, Es = "-", tz = /^xn--/, sz = /[^\0-\x7F]/, oz = /[\x2E\u3002\uFF0E\uFF61]/g, rz = {
  overflow: "Overflow: input needs wider integers to process",
  "not-basic": "Illegal input >= 0x80 (not a basic code point)",
  "invalid-input": "Invalid input"
}, Fn = ue - ct, pe = Math.floor, Mn = String.fromCharCode;
function ke(n) {
  throw new RangeError(rz[n]);
}
function cz(n, e) {
  const t = [];
  let s = n.length;
  for (; s--; )
    t[s] = e(n[s]);
  return t;
}
function Ts(n, e) {
  const t = n.split("@");
  let s = "";
  t.length > 1 && (s = t[0] + "@", n = t[1]), n = n.replace(oz, ".");
  const r = n.split("."), o = cz(r, e).join(".");
  return s + o;
}
function at(n) {
  const e = [];
  let t = 0;
  const s = n.length;
  for (; t < s; ) {
    const r = n.charCodeAt(t++);
    if (r >= 55296 && r <= 56319 && t < s) {
      const o = n.charCodeAt(t++);
      (o & 64512) == 56320 ? e.push(((r & 1023) << 10) + (o & 1023) + 65536) : (e.push(r), t--);
    } else
      e.push(r);
  }
  return e;
}
const Ds = (n) => String.fromCodePoint(...n), az = function(n) {
  return n >= 48 && n < 58 ? 26 + (n - 48) : n >= 65 && n < 91 ? n - 65 : n >= 97 && n < 123 ? n - 97 : ue;
}, Yt = function(n, e) {
  return n + 22 + 75 * (n < 26) - ((e != 0) << 5);
}, js = function(n, e, t) {
  let s = 0;
  for (n = t ? pe(n / nz) : n >> 1, n += pe(n / e); n > Fn * Je >> 1; s += ue)
    n = pe(n / Fn);
  return pe(s + (Fn + 1) * n / (n + ez));
}, it = function(n) {
  const e = [], t = n.length;
  let s = 0, r = Cs, o = Ns, a = n.lastIndexOf(Es);
  a < 0 && (a = 0);
  for (let c = 0; c < a; ++c)
    n.charCodeAt(c) >= 128 && ke("not-basic"), e.push(n.charCodeAt(c));
  for (let c = a > 0 ? a + 1 : 0; c < t; ) {
    const l = s;
    for (let p = 1, h = ue; ; h += ue) {
      c >= t && ke("invalid-input");
      const d = az(n.charCodeAt(c++));
      d >= ue && ke("invalid-input"), d > pe((Be - s) / p) && ke("overflow"), s += d * p;
      const m = h <= o ? ct : h >= o + Je ? Je : h - o;
      if (d < m)
        break;
      const f = ue - m;
      p > pe(Be / f) && ke("overflow"), p *= f;
    }
    const i = e.length + 1;
    o = js(s - l, i, l == 0), pe(s / i) > Be - r && ke("overflow"), r += pe(s / i), s %= i, e.splice(s++, 0, r);
  }
  return String.fromCodePoint(...e);
}, lt = function(n) {
  const e = [];
  n = at(n);
  const t = n.length;
  let s = Cs, r = 0, o = Ns;
  for (const l of n)
    l < 128 && e.push(Mn(l));
  const a = e.length;
  let c = a;
  for (a && e.push(Es); c < t; ) {
    let l = Be;
    for (const p of n)
      p >= s && p < l && (l = p);
    const i = c + 1;
    l - s > pe((Be - r) / i) && ke("overflow"), r += (l - s) * i, s = l;
    for (const p of n)
      if (p < s && ++r > Be && ke("overflow"), p === s) {
        let h = r;
        for (let d = ue; ; d += ue) {
          const m = d <= o ? ct : d >= o + Je ? Je : d - o;
          if (h < m)
            break;
          const f = h - m, L = ue - m;
          e.push(
            Mn(Yt(m + f % L, 0))
          ), h = pe(f / L);
        }
        e.push(Mn(Yt(h, 0))), o = js(r, i, c === a), r = 0, ++c;
      }
    ++r, ++s;
  }
  return e.join("");
}, qs = function(n) {
  return Ts(n, function(e) {
    return tz.test(e) ? it(e.slice(4).toLowerCase()) : e;
  });
}, Rs = function(n) {
  return Ts(n, function(e) {
    return sz.test(e) ? "xn--" + lt(e) : e;
  });
}, iz = {
  /**
   * A string representing the current Punycode.js version number.
   * @memberOf punycode
   * @type String
   */
  version: "2.1.0",
  /**
   * An object of methods to convert from JavaScript's internal character
   * representation (UCS-2) to Unicode code points, and back.
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode
   * @type Object
   */
  ucs2: {
    decode: at,
    encode: Ds
  },
  decode: it,
  encode: lt,
  toASCII: Rs,
  toUnicode: qs
}, lz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decode: it,
  default: iz,
  encode: lt,
  toASCII: Rs,
  toUnicode: qs,
  ucs2decode: at,
  ucs2encode: Ds
}, Symbol.toStringTag, { value: "Module" })), uz = /* @__PURE__ */ ko(lz);
var pz = {
  options: {
    html: !1,
    // Enable HTML tags in source
    xhtmlOut: !1,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 100
    // Internal protection, recursion limit
  },
  components: {
    core: {},
    block: {},
    inline: {}
  }
}, hz = {
  options: {
    html: !1,
    // Enable HTML tags in source
    xhtmlOut: !1,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20
    // Internal protection, recursion limit
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "text"
      ],
      rules2: [
        "balance_pairs",
        "fragments_join"
      ]
    }
  }
}, dz = {
  options: {
    html: !0,
    // Enable HTML tags in source
    xhtmlOut: !0,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20
    // Internal protection, recursion limit
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "blockquote",
        "code",
        "fence",
        "heading",
        "hr",
        "html_block",
        "lheading",
        "list",
        "reference",
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "autolink",
        "backticks",
        "emphasis",
        "entity",
        "escape",
        "html_inline",
        "image",
        "link",
        "newline",
        "text"
      ],
      rules2: [
        "balance_pairs",
        "emphasis",
        "fragments_join"
      ]
    }
  }
}, Ze = B, mz = fn, fz = iB, gz = jB, _z = u$, bz = B$, kz = K$, Ee = ze, Ps = uz, yz = {
  default: pz,
  zero: hz,
  commonmark: dz
}, wz = /^(vbscript|javascript|file|data):/, vz = /^data:image\/(gif|png|jpeg|webp);/;
function xz(n) {
  var e = n.trim().toLowerCase();
  return wz.test(e) ? !!vz.test(e) : !0;
}
var Is = ["http:", "https:", "mailto:"];
function Az(n) {
  var e = Ee.parse(n, !0);
  if (e.hostname && (!e.protocol || Is.indexOf(e.protocol) >= 0))
    try {
      e.hostname = Ps.toASCII(e.hostname);
    } catch {
    }
  return Ee.encode(Ee.format(e));
}
function Sz(n) {
  var e = Ee.parse(n, !0);
  if (e.hostname && (!e.protocol || Is.indexOf(e.protocol) >= 0))
    try {
      e.hostname = Ps.toUnicode(e.hostname);
    } catch {
    }
  return Ee.decode(Ee.format(e), Ee.decode.defaultChars + "%");
}
function ce(n, e) {
  if (!(this instanceof ce))
    return new ce(n, e);
  e || Ze.isString(n) || (e = n || {}, n = "default"), this.inline = new bz(), this.block = new _z(), this.core = new gz(), this.renderer = new fz(), this.linkify = new kz(), this.validateLink = xz, this.normalizeLink = Az, this.normalizeLinkText = Sz, this.utils = Ze, this.helpers = Ze.assign({}, mz), this.options = {}, this.configure(n), e && this.set(e);
}
ce.prototype.set = function(n) {
  return Ze.assign(this.options, n), this;
};
ce.prototype.configure = function(n) {
  var e = this, t;
  if (Ze.isString(n) && (t = n, n = yz[t], !n))
    throw new Error('Wrong `markdown-it` preset "' + t + '", check name');
  if (!n)
    throw new Error("Wrong `markdown-it` preset, can't be empty");
  return n.options && e.set(n.options), n.components && Object.keys(n.components).forEach(function(s) {
    n.components[s].rules && e[s].ruler.enableOnly(n.components[s].rules), n.components[s].rules2 && e[s].ruler2.enableOnly(n.components[s].rules2);
  }), this;
};
ce.prototype.enable = function(n, e) {
  var t = [];
  Array.isArray(n) || (n = [n]), ["core", "block", "inline"].forEach(function(r) {
    t = t.concat(this[r].ruler.enable(n, !0));
  }, this), t = t.concat(this.inline.ruler2.enable(n, !0));
  var s = n.filter(function(r) {
    return t.indexOf(r) < 0;
  });
  if (s.length && !e)
    throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + s);
  return this;
};
ce.prototype.disable = function(n, e) {
  var t = [];
  Array.isArray(n) || (n = [n]), ["core", "block", "inline"].forEach(function(r) {
    t = t.concat(this[r].ruler.disable(n, !0));
  }, this), t = t.concat(this.inline.ruler2.disable(n, !0));
  var s = n.filter(function(r) {
    return t.indexOf(r) < 0;
  });
  if (s.length && !e)
    throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + s);
  return this;
};
ce.prototype.use = function(n) {
  var e = [this].concat(Array.prototype.slice.call(arguments, 1));
  return n.apply(n, e), this;
};
ce.prototype.parse = function(n, e) {
  if (typeof n != "string")
    throw new Error("Input data should be a String");
  var t = new this.core.State(n, this, e);
  return this.core.process(t), t.tokens;
};
ce.prototype.render = function(n, e) {
  return e = e || {}, this.renderer.render(this.parse(n, e), this.options, e);
};
ce.prototype.parseInline = function(n, e) {
  var t = new this.core.State(n, this, e);
  return t.inlineMode = !0, this.core.process(t), t.tokens;
};
ce.prototype.renderInline = function(n, e) {
  return e = e || {}, this.renderer.render(this.parseInline(n, e), this.options, e);
};
var Lz = ce, Nz = Lz;
const Cz = /* @__PURE__ */ hn(Nz);
var Xt = !1, $e = { false: "push", true: "unshift", after: "push", before: "unshift" }, an = { isPermalinkSymbol: !0 };
function Jn(n, e, t, s) {
  var r;
  if (!Xt) {
    var o = "Using deprecated markdown-it-anchor permalink option, see https://github.com/valeriangalliat/markdown-it-anchor#permalinks";
    typeof process == "object" && process && process.emitWarning ? process.emitWarning(o) : console.warn(o), Xt = !0;
  }
  var a = [Object.assign(new t.Token("link_open", "a", 1), { attrs: [].concat(e.permalinkClass ? [["class", e.permalinkClass]] : [], [["href", e.permalinkHref(n, t)]], Object.entries(e.permalinkAttrs(n, t))) }), Object.assign(new t.Token("html_block", "", 0), { content: e.permalinkSymbol, meta: an }), new t.Token("link_close", "a", -1)];
  e.permalinkSpace && t.tokens[s + 1].children[$e[e.permalinkBefore]](Object.assign(new t.Token("text", "", 0), { content: " " })), (r = t.tokens[s + 1].children)[$e[e.permalinkBefore]].apply(r, a);
}
function Os(n) {
  return "#" + n;
}
function Fs(n) {
  return {};
}
var Ez = { class: "header-anchor", symbol: "#", renderHref: Os, renderAttrs: Fs };
function Ke(n) {
  function e(t) {
    return t = Object.assign({}, e.defaults, t), function(s, r, o, a) {
      return n(s, t, r, o, a);
    };
  }
  return e.defaults = Object.assign({}, Ez), e.renderPermalinkImpl = n, e;
}
var vn = Ke(function(n, e, t, s, r) {
  var o, a = [Object.assign(new s.Token("link_open", "a", 1), { attrs: [].concat(e.class ? [["class", e.class]] : [], [["href", e.renderHref(n, s)]], e.ariaHidden ? [["aria-hidden", "true"]] : [], Object.entries(e.renderAttrs(n, s))) }), Object.assign(new s.Token("html_inline", "", 0), { content: e.symbol, meta: an }), new s.Token("link_close", "a", -1)];
  if (e.space) {
    var c = typeof e.space == "string" ? e.space : " ";
    s.tokens[r + 1].children[$e[e.placement]](Object.assign(new s.Token(typeof e.space == "string" ? "html_inline" : "text", "", 0), { content: c }));
  }
  (o = s.tokens[r + 1].children)[$e[e.placement]].apply(o, a);
});
Object.assign(vn.defaults, { space: !0, placement: "after", ariaHidden: !1 });
var Ce = Ke(vn.renderPermalinkImpl);
Ce.defaults = Object.assign({}, vn.defaults, { ariaHidden: !0 });
var Ms = Ke(function(n, e, t, s, r) {
  var o = [Object.assign(new s.Token("link_open", "a", 1), { attrs: [].concat(e.class ? [["class", e.class]] : [], [["href", e.renderHref(n, s)]], Object.entries(e.renderAttrs(n, s))) })].concat(e.safariReaderFix ? [new s.Token("span_open", "span", 1)] : [], s.tokens[r + 1].children, e.safariReaderFix ? [new s.Token("span_close", "span", -1)] : [], [new s.Token("link_close", "a", -1)]);
  s.tokens[r + 1] = Object.assign(new s.Token("inline", "", 0), { children: o });
});
Object.assign(Ms.defaults, { safariReaderFix: !1 });
var Kt = Ke(function(n, e, t, s, r) {
  var o;
  if (!["visually-hidden", "aria-label", "aria-describedby", "aria-labelledby"].includes(e.style))
    throw new Error("`permalink.linkAfterHeader` called with unknown style option `" + e.style + "`");
  if (!["aria-describedby", "aria-labelledby"].includes(e.style) && !e.assistiveText)
    throw new Error("`permalink.linkAfterHeader` called without the `assistiveText` option in `" + e.style + "` style");
  if (e.style === "visually-hidden" && !e.visuallyHiddenClass)
    throw new Error("`permalink.linkAfterHeader` called without the `visuallyHiddenClass` option in `visually-hidden` style");
  var a = s.tokens[r + 1].children.filter(function(h) {
    return h.type === "text" || h.type === "code_inline";
  }).reduce(function(h, d) {
    return h + d.content;
  }, ""), c = [], l = [];
  if (e.class && l.push(["class", e.class]), l.push(["href", e.renderHref(n, s)]), l.push.apply(l, Object.entries(e.renderAttrs(n, s))), e.style === "visually-hidden") {
    if (c.push(Object.assign(new s.Token("span_open", "span", 1), { attrs: [["class", e.visuallyHiddenClass]] }), Object.assign(new s.Token("text", "", 0), { content: e.assistiveText(a) }), new s.Token("span_close", "span", -1)), e.space) {
      var i = typeof e.space == "string" ? e.space : " ";
      c[$e[e.placement]](Object.assign(new s.Token(typeof e.space == "string" ? "html_inline" : "text", "", 0), { content: i }));
    }
    c[$e[e.placement]](Object.assign(new s.Token("span_open", "span", 1), { attrs: [["aria-hidden", "true"]] }), Object.assign(new s.Token("html_inline", "", 0), { content: e.symbol, meta: an }), new s.Token("span_close", "span", -1));
  } else
    c.push(Object.assign(new s.Token("html_inline", "", 0), { content: e.symbol, meta: an }));
  e.style === "aria-label" ? l.push(["aria-label", e.assistiveText(a)]) : ["aria-describedby", "aria-labelledby"].includes(e.style) && l.push([e.style, n]);
  var p = [Object.assign(new s.Token("link_open", "a", 1), { attrs: l })].concat(c, [new s.Token("link_close", "a", -1)]);
  (o = s.tokens).splice.apply(o, [r + 3, 0].concat(p)), e.wrapper && (s.tokens.splice(r, 0, Object.assign(new s.Token("html_block", "", 0), { content: e.wrapper[0] + `
` })), s.tokens.splice(r + 3 + p.length + 1, 0, Object.assign(new s.Token("html_block", "", 0), { content: e.wrapper[1] + `
` })));
});
function es(n, e, t, s) {
  var r = n, o = s;
  if (t && Object.prototype.hasOwnProperty.call(e, r))
    throw new Error("User defined `id` attribute `" + n + "` is not unique. Please fix it in your Markdown to continue.");
  for (; Object.prototype.hasOwnProperty.call(e, r); )
    r = n + "-" + o, o += 1;
  return e[r] = !0, r;
}
function Te(n, e) {
  e = Object.assign({}, Te.defaults, e), n.core.ruler.push("anchor", function(t) {
    for (var s, r = {}, o = t.tokens, a = Array.isArray(e.level) ? (s = e.level, function(h) {
      return s.includes(h);
    }) : function(h) {
      return function(d) {
        return d >= h;
      };
    }(e.level), c = 0; c < o.length; c++) {
      var l = o[c];
      if (l.type === "heading_open" && a(Number(l.tag.substr(1)))) {
        var i = e.getTokensText(o[c + 1].children), p = l.attrGet("id");
        p = p == null ? es(e.slugify(i), r, !1, e.uniqueSlugStartIndex) : es(p, r, !0, e.uniqueSlugStartIndex), l.attrSet("id", p), e.tabIndex !== !1 && l.attrSet("tabindex", "" + e.tabIndex), typeof e.permalink == "function" ? e.permalink(p, e, t, c) : (e.permalink || e.renderPermalink && e.renderPermalink !== Jn) && e.renderPermalink(p, e, t, c), c = o.indexOf(l), e.callback && e.callback(l, { slug: p, title: i });
      }
    }
  });
}
Object.assign(Kt.defaults, { style: "visually-hidden", space: !0, placement: "after", wrapper: null }), Te.permalink = { __proto__: null, legacy: Jn, renderHref: Os, renderAttrs: Fs, makePermalink: Ke, linkInsideHeader: vn, ariaHidden: Ce, headerLink: Ms, linkAfterHeader: Kt }, Te.defaults = { level: 1, slugify: function(n) {
  return encodeURIComponent(String(n).trim().toLowerCase().replace(/\s+/g, "-"));
}, uniqueSlugStartIndex: 1, tabIndex: "-1", getTokensText: function(n) {
  return n.filter(function(e) {
    return ["text", "code_inline"].includes(e.type);
  }).map(function(e) {
    return e.content;
  }).join("");
}, permalink: !1, renderPermalink: Jn, permalinkClass: Ce.defaults.class, permalinkSpace: Ce.defaults.space, permalinkSymbol: "¶", permalinkBefore: Ce.defaults.placement === "before", permalinkHref: Ce.defaults.renderHref, permalinkAttrs: Ce.defaults.renderAttrs }, Te.default = Te;
var we = {};
we.getAttrs = function(n, e, t) {
  const s = /[^\t\n\f />"'=]/, r = " ", o = "=", a = ".", c = "#", l = [];
  let i = "", p = "", h = !0, d = !1;
  for (let m = e + t.leftDelimiter.length; m < n.length; m++) {
    if (n.slice(m, m + t.rightDelimiter.length) === t.rightDelimiter) {
      i !== "" && l.push([i, p]);
      break;
    }
    const f = n.charAt(m);
    if (f === o && h) {
      h = !1;
      continue;
    }
    if (f === a && i === "") {
      n.charAt(m + 1) === a ? (i = "css-module", m += 1) : i = "class", h = !1;
      continue;
    }
    if (f === c && i === "") {
      i = "id", h = !1;
      continue;
    }
    if (f === '"' && p === "" && !d) {
      d = !0;
      continue;
    }
    if (f === '"' && d) {
      d = !1;
      continue;
    }
    if (f === r && !d) {
      if (i === "")
        continue;
      l.push([i, p]), i = "", p = "", h = !0;
      continue;
    }
    if (!(h && f.search(s) === -1)) {
      if (h) {
        i += f;
        continue;
      }
      p += f;
    }
  }
  if (t.allowedAttributes && t.allowedAttributes.length) {
    const m = t.allowedAttributes;
    return l.filter(function(f) {
      const L = f[0];
      function S(b) {
        return L === b || b instanceof RegExp && b.test(L);
      }
      return m.some(S);
    });
  }
  return l;
};
we.addAttrs = function(n, e) {
  for (let t = 0, s = n.length; t < s; ++t) {
    const r = n[t][0];
    r === "class" ? e.attrJoin("class", n[t][1]) : r === "css-module" ? e.attrJoin("css-module", n[t][1]) : e.attrPush(n[t]);
  }
  return e;
};
we.hasDelimiters = function(n, e) {
  if (!n)
    throw new Error('Parameter `where` not passed. Should be "start", "end" or "only".');
  return function(t) {
    const s = e.leftDelimiter.length + 1 + e.rightDelimiter.length;
    if (!t || typeof t != "string" || t.length < s)
      return !1;
    function r(p) {
      const h = p.charAt(e.leftDelimiter.length) === ".", d = p.charAt(e.leftDelimiter.length) === "#";
      return h || d ? p.length >= s + 1 : p.length >= s;
    }
    let o, a, c, l;
    const i = s - e.rightDelimiter.length;
    switch (n) {
      case "start":
        c = t.slice(0, e.leftDelimiter.length), o = c === e.leftDelimiter ? 0 : -1, a = o === -1 ? -1 : t.indexOf(e.rightDelimiter, i), l = t.charAt(a + e.rightDelimiter.length), l && e.rightDelimiter.indexOf(l) !== -1 && (a = -1);
        break;
      case "end":
        o = t.lastIndexOf(e.leftDelimiter), a = o === -1 ? -1 : t.indexOf(e.rightDelimiter, o + i), a = a === t.length - e.rightDelimiter.length ? a : -1;
        break;
      case "only":
        c = t.slice(0, e.leftDelimiter.length), o = c === e.leftDelimiter ? 0 : -1, c = t.slice(t.length - e.rightDelimiter.length), a = c === e.rightDelimiter ? t.length - e.rightDelimiter.length : -1;
        break;
      default:
        throw new Error(`Unexpected case ${n}, expected 'start', 'end' or 'only'`);
    }
    return o !== -1 && a !== -1 && r(t.substring(o, a + e.rightDelimiter.length));
  };
};
we.removeDelimiter = function(n, e) {
  const t = Qn(e.leftDelimiter), s = Qn(e.rightDelimiter), r = new RegExp(
    "[ \\n]?" + t + "[^" + t + s + "]+" + s + "$"
  ), o = n.search(r);
  return o !== -1 ? n.slice(0, o) : n;
};
function Qn(n) {
  return n.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
}
we.escapeRegExp = Qn;
we.getMatchingOpeningToken = function(n, e) {
  if (n[e].type === "softbreak")
    return !1;
  if (n[e].nesting === 0)
    return n[e];
  const t = n[e].level, s = n[e].type.replace("_close", "_open");
  for (; e >= 0; --e)
    if (n[e].type === s && n[e].level === t)
      return n[e];
  return !1;
};
const Tz = /[&<>"]/, Dz = /[&<>"]/g, jz = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;"
};
function qz(n) {
  return jz[n];
}
we.escapeHtml = function(n) {
  return Tz.test(n) ? n.replace(Dz, qz) : n;
};
const I = we;
var Rz = (n) => {
  const e = new RegExp("^ {0,3}[-*_]{3,} ?" + I.escapeRegExp(n.leftDelimiter) + "[^" + I.escapeRegExp(n.rightDelimiter) + "]");
  return [
    {
      /**
       * ```python {.cls}
       * for i in range(10):
       *     print(i)
       * ```
       */
      name: "fenced code blocks",
      tests: [
        {
          shift: 0,
          block: !0,
          info: I.hasDelimiters("end", n)
        }
      ],
      transform: (t, s) => {
        const r = t[s], o = r.info.lastIndexOf(n.leftDelimiter), a = I.getAttrs(r.info, o, n);
        I.addAttrs(a, r), r.info = I.removeDelimiter(r.info, n);
      }
    },
    {
      /**
       * bla `click()`{.c} ![](img.png){.d}
       *
       * differs from 'inline attributes' as it does
       * not have a closing tag (nesting: -1)
       */
      name: "inline nesting 0",
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              shift: -1,
              type: (t) => t === "image" || t === "code_inline"
            },
            {
              shift: 0,
              type: "text",
              content: I.hasDelimiters("start", n)
            }
          ]
        }
      ],
      transform: (t, s, r) => {
        const o = t[s].children[r], a = o.content.indexOf(n.rightDelimiter), c = t[s].children[r - 1], l = I.getAttrs(o.content, 0, n);
        I.addAttrs(l, c), o.content.length === a + n.rightDelimiter.length ? t[s].children.splice(r, 1) : o.content = o.content.slice(a + n.rightDelimiter.length);
      }
    },
    {
      /**
       * | h1 |
       * | -- |
       * | c1 |
       *
       * {.c}
       */
      name: "tables",
      tests: [
        {
          // let this token be i, such that for-loop continues at
          // next token after tokens.splice
          shift: 0,
          type: "table_close"
        },
        {
          shift: 1,
          type: "paragraph_open"
        },
        {
          shift: 2,
          type: "inline",
          content: I.hasDelimiters("only", n)
        }
      ],
      transform: (t, s) => {
        const r = t[s + 2], o = I.getMatchingOpeningToken(t, s), a = I.getAttrs(r.content, 0, n);
        I.addAttrs(a, o), t.splice(s + 1, 3);
      }
    },
    {
      /**
       * *emphasis*{.with attrs=1}
       */
      name: "inline attributes",
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              shift: -1,
              nesting: -1
              // closing inline tag, </em>{.a}
            },
            {
              shift: 0,
              type: "text",
              content: I.hasDelimiters("start", n)
            }
          ]
        }
      ],
      transform: (t, s, r) => {
        const o = t[s].children[r], a = o.content, c = I.getAttrs(a, 0, n), l = I.getMatchingOpeningToken(t[s].children, r - 1);
        I.addAttrs(c, l), o.content = a.slice(a.indexOf(n.rightDelimiter) + n.rightDelimiter.length);
      }
    },
    {
      /**
       * - item
       * {.a}
       */
      name: "list softbreak",
      tests: [
        {
          shift: -2,
          type: "list_item_open"
        },
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -2,
              type: "softbreak"
            },
            {
              position: -1,
              type: "text",
              content: I.hasDelimiters("only", n)
            }
          ]
        }
      ],
      transform: (t, s, r) => {
        const a = t[s].children[r].content, c = I.getAttrs(a, 0, n);
        let l = s - 2;
        for (; t[l - 1] && t[l - 1].type !== "ordered_list_open" && t[l - 1].type !== "bullet_list_open"; )
          l--;
        I.addAttrs(c, t[l - 1]), t[s].children = t[s].children.slice(0, -2);
      }
    },
    {
      /**
       * - nested list
       *   - with double \n
       *   {.a} <-- apply to nested ul
       *
       * {.b} <-- apply to root <ul>
       */
      name: "list double softbreak",
      tests: [
        {
          // let this token be i = 0 so that we can erase
          // the <p>{.a}</p> tokens below
          shift: 0,
          type: (t) => t === "bullet_list_close" || t === "ordered_list_close"
        },
        {
          shift: 1,
          type: "paragraph_open"
        },
        {
          shift: 2,
          type: "inline",
          content: I.hasDelimiters("only", n),
          children: (t) => t.length === 1
        },
        {
          shift: 3,
          type: "paragraph_close"
        }
      ],
      transform: (t, s) => {
        const o = t[s + 2].content, a = I.getAttrs(o, 0, n), c = I.getMatchingOpeningToken(t, s);
        I.addAttrs(a, c), t.splice(s + 1, 3);
      }
    },
    {
      /**
       * - end of {.list-item}
       */
      name: "list item end",
      tests: [
        {
          shift: -2,
          type: "list_item_open"
        },
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -1,
              type: "text",
              content: I.hasDelimiters("end", n)
            }
          ]
        }
      ],
      transform: (t, s, r) => {
        const o = t[s].children[r], a = o.content, c = I.getAttrs(a, a.lastIndexOf(n.leftDelimiter), n);
        I.addAttrs(c, t[s - 2]);
        const l = a.slice(0, a.lastIndexOf(n.leftDelimiter));
        o.content = ns(l) !== " " ? l : l.slice(0, -1);
      }
    },
    {
      /**
       * something with softbreak
       * {.cls}
       */
      name: `
{.a} softbreak then curly in start`,
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -2,
              type: "softbreak"
            },
            {
              position: -1,
              type: "text",
              content: I.hasDelimiters("only", n)
            }
          ]
        }
      ],
      transform: (t, s, r) => {
        const o = t[s].children[r], a = I.getAttrs(o.content, 0, n);
        let c = s + 1;
        for (; t[c + 1] && t[c + 1].nesting === -1; )
          c++;
        const l = I.getMatchingOpeningToken(t, c);
        I.addAttrs(a, l), t[s].children = t[s].children.slice(0, -2);
      }
    },
    {
      /**
       * horizontal rule --- {#id}
       */
      name: "horizontal rule",
      tests: [
        {
          shift: 0,
          type: "paragraph_open"
        },
        {
          shift: 1,
          type: "inline",
          children: (t) => t.length === 1,
          content: (t) => t.match(e) !== null
        },
        {
          shift: 2,
          type: "paragraph_close"
        }
      ],
      transform: (t, s) => {
        const r = t[s];
        r.type = "hr", r.tag = "hr", r.nesting = 0;
        const o = t[s + 1].content, a = o.lastIndexOf(n.leftDelimiter), c = I.getAttrs(o, a, n);
        I.addAttrs(c, r), r.markup = o, t.splice(s + 1, 2);
      }
    },
    {
      /**
       * end of {.block}
       */
      name: "end of block",
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -1,
              content: I.hasDelimiters("end", n),
              type: (t) => t !== "code_inline" && t !== "math_inline"
            }
          ]
        }
      ],
      transform: (t, s, r) => {
        const o = t[s].children[r], a = o.content, c = I.getAttrs(a, a.lastIndexOf(n.leftDelimiter), n);
        let l = s + 1;
        for (; t[l + 1] && t[l + 1].nesting === -1; )
          l++;
        const i = I.getMatchingOpeningToken(t, l);
        I.addAttrs(c, i);
        const p = a.slice(0, a.lastIndexOf(n.leftDelimiter));
        o.content = ns(p) !== " " ? p : p.slice(0, -1);
      }
    }
  ];
};
function ns(n) {
  return n.slice(-1)[0];
}
const Pz = Rz, Iz = {
  leftDelimiter: "{",
  rightDelimiter: "}",
  allowedAttributes: []
};
var Oz = function(e, t) {
  let s = Object.assign({}, Iz);
  s = Object.assign(s, t);
  const r = Pz(s);
  function o(a) {
    const c = a.tokens;
    for (let l = 0; l < c.length; l++)
      for (let i = 0; i < r.length; i++) {
        const p = r[i];
        let h = null;
        p.tests.every((m) => {
          const f = Yn(c, l, m);
          return f.j !== null && (h = f.j), f.match;
        }) && (p.transform(c, l, h), (p.name === "inline attributes" || p.name === "inline nesting 0") && i--);
      }
  }
  e.core.ruler.before("linkify", "curly_attributes", o);
};
function Yn(n, e, t) {
  const s = {
    match: !1,
    j: null
    // position of child
  }, r = t.shift !== void 0 ? e + t.shift : t.position;
  if (t.shift !== void 0 && r < 0)
    return s;
  const o = Bz(n, r);
  if (o === void 0)
    return s;
  for (const a of Object.keys(t))
    if (!(a === "shift" || a === "position")) {
      if (o[a] === void 0)
        return s;
      if (a === "children" && Fz(t.children)) {
        if (o.children.length === 0)
          return s;
        let c;
        const l = t.children, i = o.children;
        if (l.every((p) => p.position !== void 0)) {
          if (c = l.every((p) => Yn(i, p.position, p).match), c) {
            const p = $z(l).position;
            s.j = p >= 0 ? p : i.length + p;
          }
        } else
          for (let p = 0; p < i.length; p++)
            if (c = l.every((h) => Yn(i, p, h).match), c) {
              s.j = p;
              break;
            }
        if (c === !1)
          return s;
        continue;
      }
      switch (typeof t[a]) {
        case "boolean":
        case "number":
        case "string":
          if (o[a] !== t[a])
            return s;
          break;
        case "function":
          if (!t[a](o[a]))
            return s;
          break;
        case "object":
          if (Mz(t[a])) {
            if (t[a].every((l) => l(o[a])) === !1)
              return s;
            break;
          }
        default:
          throw new Error(`Unknown type of pattern test (key: ${a}). Test should be of type boolean, number, string, function or array of functions.`);
      }
    }
  return s.match = !0, s;
}
function Fz(n) {
  return Array.isArray(n) && n.length && n.every((e) => typeof e == "object");
}
function Mz(n) {
  return Array.isArray(n) && n.length && n.every((e) => typeof e == "function");
}
function Bz(n, e) {
  return e >= 0 ? n[e] : n[n.length + e];
}
function $z(n) {
  return n.slice(-1)[0] || {};
}
const zz = /* @__PURE__ */ hn(Oz), Gz = "😀", Uz = "😃", Hz = "😄", Vz = "😁", Wz = "😆", Zz = "😆", Jz = "😅", Qz = "🤣", Yz = "😂", Xz = "🙂", Kz = "🙃", e5 = "😉", n5 = "😊", t5 = "😇", s5 = "🥰", o5 = "😍", r5 = "🤩", c5 = "😘", a5 = "😗", i5 = "☺️", l5 = "😚", u5 = "😙", p5 = "🥲", h5 = "😋", d5 = "😛", m5 = "😜", f5 = "🤪", g5 = "😝", _5 = "🤑", b5 = "🤗", k5 = "🤭", y5 = "🤫", w5 = "🤔", v5 = "🤐", x5 = "🤨", A5 = "😐", S5 = "😑", L5 = "😶", N5 = "😏", C5 = "😒", E5 = "🙄", T5 = "😬", D5 = "🤥", j5 = "😌", q5 = "😔", R5 = "😪", P5 = "🤤", I5 = "😴", O5 = "😷", F5 = "🤒", M5 = "🤕", B5 = "🤢", $5 = "🤮", z5 = "🤧", G5 = "🥵", U5 = "🥶", H5 = "🥴", V5 = "😵", W5 = "🤯", Z5 = "🤠", J5 = "🥳", Q5 = "🥸", Y5 = "😎", X5 = "🤓", K5 = "🧐", e6 = "😕", n6 = "😟", t6 = "🙁", s6 = "☹️", o6 = "😮", r6 = "😯", c6 = "😲", a6 = "😳", i6 = "🥺", l6 = "😦", u6 = "😧", p6 = "😨", h6 = "😰", d6 = "😥", m6 = "😢", f6 = "😭", g6 = "😱", _6 = "😖", b6 = "😣", k6 = "😞", y6 = "😓", w6 = "😩", v6 = "😫", x6 = "🥱", A6 = "😤", S6 = "😡", L6 = "😡", N6 = "😠", C6 = "🤬", E6 = "😈", T6 = "👿", D6 = "💀", j6 = "☠️", q6 = "💩", R6 = "💩", P6 = "💩", I6 = "🤡", O6 = "👹", F6 = "👺", M6 = "👻", B6 = "👽", $6 = "👾", z6 = "🤖", G6 = "😺", U6 = "😸", H6 = "😹", V6 = "😻", W6 = "😼", Z6 = "😽", J6 = "🙀", Q6 = "😿", Y6 = "😾", X6 = "🙈", K6 = "🙉", e4 = "🙊", n4 = "💋", t4 = "💌", s4 = "💘", o4 = "💝", r4 = "💖", c4 = "💗", a4 = "💓", i4 = "💞", l4 = "💕", u4 = "💟", p4 = "❣️", h4 = "💔", d4 = "❤️", m4 = "🧡", f4 = "💛", g4 = "💚", _4 = "💙", b4 = "💜", k4 = "🤎", y4 = "🖤", w4 = "🤍", v4 = "💢", x4 = "💥", A4 = "💥", S4 = "💫", L4 = "💦", N4 = "💨", C4 = "🕳️", E4 = "💣", T4 = "💬", D4 = "👁️‍🗨️", j4 = "🗨️", q4 = "🗯️", R4 = "💭", P4 = "💤", I4 = "👋", O4 = "🤚", F4 = "🖐️", M4 = "✋", B4 = "✋", $4 = "🖖", z4 = "👌", G4 = "🤌", U4 = "🤏", H4 = "✌️", V4 = "🤞", W4 = "🤟", Z4 = "🤘", J4 = "🤙", Q4 = "👈", Y4 = "👉", X4 = "👆", K4 = "🖕", e8 = "🖕", n8 = "👇", t8 = "☝️", s8 = "👍", o8 = "👎", r8 = "✊", c8 = "✊", a8 = "👊", i8 = "👊", l8 = "👊", u8 = "🤛", p8 = "🤜", h8 = "👏", d8 = "🙌", m8 = "👐", f8 = "🤲", g8 = "🤝", _8 = "🙏", b8 = "✍️", k8 = "💅", y8 = "🤳", w8 = "💪", v8 = "🦾", x8 = "🦿", A8 = "🦵", S8 = "🦶", L8 = "👂", N8 = "🦻", C8 = "👃", E8 = "🧠", T8 = "🫀", D8 = "🫁", j8 = "🦷", q8 = "🦴", R8 = "👀", P8 = "👁️", I8 = "👅", O8 = "👄", F8 = "👶", M8 = "🧒", B8 = "👦", $8 = "👧", z8 = "🧑", G8 = "👱", U8 = "👨", H8 = "🧔", V8 = "👨‍🦰", W8 = "👨‍🦱", Z8 = "👨‍🦳", J8 = "👨‍🦲", Q8 = "👩", Y8 = "👩‍🦰", X8 = "🧑‍🦰", K8 = "👩‍🦱", eG = "🧑‍🦱", nG = "👩‍🦳", tG = "🧑‍🦳", sG = "👩‍🦲", oG = "🧑‍🦲", rG = "👱‍♀️", cG = "👱‍♀️", aG = "👱‍♂️", iG = "🧓", lG = "👴", uG = "👵", pG = "🙍", hG = "🙍‍♂️", dG = "🙍‍♀️", mG = "🙎", fG = "🙎‍♂️", gG = "🙎‍♀️", _G = "🙅", bG = "🙅‍♂️", kG = "🙅‍♂️", yG = "🙅‍♀️", wG = "🙅‍♀️", vG = "🙆", xG = "🙆‍♂️", AG = "🙆‍♀️", SG = "💁", LG = "💁", NG = "💁‍♂️", CG = "💁‍♂️", EG = "💁‍♀️", TG = "💁‍♀️", DG = "🙋", jG = "🙋‍♂️", qG = "🙋‍♀️", RG = "🧏", PG = "🧏‍♂️", IG = "🧏‍♀️", OG = "🙇", FG = "🙇‍♂️", MG = "🙇‍♀️", BG = "🤦", $G = "🤦‍♂️", zG = "🤦‍♀️", GG = "🤷", UG = "🤷‍♂️", HG = "🤷‍♀️", VG = "🧑‍⚕️", WG = "👨‍⚕️", ZG = "👩‍⚕️", JG = "🧑‍🎓", QG = "👨‍🎓", YG = "👩‍🎓", XG = "🧑‍🏫", KG = "👨‍🏫", eU = "👩‍🏫", nU = "🧑‍⚖️", tU = "👨‍⚖️", sU = "👩‍⚖️", oU = "🧑‍🌾", rU = "👨‍🌾", cU = "👩‍🌾", aU = "🧑‍🍳", iU = "👨‍🍳", lU = "👩‍🍳", uU = "🧑‍🔧", pU = "👨‍🔧", hU = "👩‍🔧", dU = "🧑‍🏭", mU = "👨‍🏭", fU = "👩‍🏭", gU = "🧑‍💼", _U = "👨‍💼", bU = "👩‍💼", kU = "🧑‍🔬", yU = "👨‍🔬", wU = "👩‍🔬", vU = "🧑‍💻", xU = "👨‍💻", AU = "👩‍💻", SU = "🧑‍🎤", LU = "👨‍🎤", NU = "👩‍🎤", CU = "🧑‍🎨", EU = "👨‍🎨", TU = "👩‍🎨", DU = "🧑‍✈️", jU = "👨‍✈️", qU = "👩‍✈️", RU = "🧑‍🚀", PU = "👨‍🚀", IU = "👩‍🚀", OU = "🧑‍🚒", FU = "👨‍🚒", MU = "👩‍🚒", BU = "👮", $U = "👮", zU = "👮‍♂️", GU = "👮‍♀️", UU = "🕵️", HU = "🕵️‍♂️", VU = "🕵️‍♀️", WU = "💂", ZU = "💂‍♂️", JU = "💂‍♀️", QU = "🥷", YU = "👷", XU = "👷‍♂️", KU = "👷‍♀️", e9 = "🤴", n9 = "👸", t9 = "👳", s9 = "👳‍♂️", o9 = "👳‍♀️", r9 = "👲", c9 = "🧕", a9 = "🤵", i9 = "🤵‍♂️", l9 = "🤵‍♀️", u9 = "👰", p9 = "👰‍♂️", h9 = "👰‍♀️", d9 = "👰‍♀️", m9 = "🤰", f9 = "🤱", g9 = "👩‍🍼", _9 = "👨‍🍼", b9 = "🧑‍🍼", k9 = "👼", y9 = "🎅", w9 = "🤶", v9 = "🧑‍🎄", x9 = "🦸", A9 = "🦸‍♂️", S9 = "🦸‍♀️", L9 = "🦹", N9 = "🦹‍♂️", C9 = "🦹‍♀️", E9 = "🧙", T9 = "🧙‍♂️", D9 = "🧙‍♀️", j9 = "🧚", q9 = "🧚‍♂️", R9 = "🧚‍♀️", P9 = "🧛", I9 = "🧛‍♂️", O9 = "🧛‍♀️", F9 = "🧜", M9 = "🧜‍♂️", B9 = "🧜‍♀️", $9 = "🧝", z9 = "🧝‍♂️", G9 = "🧝‍♀️", U9 = "🧞", H9 = "🧞‍♂️", V9 = "🧞‍♀️", W9 = "🧟", Z9 = "🧟‍♂️", J9 = "🧟‍♀️", Q9 = "💆", Y9 = "💆‍♂️", X9 = "💆‍♀️", K9 = "💇", e7 = "💇‍♂️", n7 = "💇‍♀️", t7 = "🚶", s7 = "🚶‍♂️", o7 = "🚶‍♀️", r7 = "🧍", c7 = "🧍‍♂️", a7 = "🧍‍♀️", i7 = "🧎", l7 = "🧎‍♂️", u7 = "🧎‍♀️", p7 = "🧑‍🦯", h7 = "👨‍🦯", d7 = "👩‍🦯", m7 = "🧑‍🦼", f7 = "👨‍🦼", g7 = "👩‍🦼", _7 = "🧑‍🦽", b7 = "👨‍🦽", k7 = "👩‍🦽", y7 = "🏃", w7 = "🏃", v7 = "🏃‍♂️", x7 = "🏃‍♀️", A7 = "💃", S7 = "💃", L7 = "🕺", N7 = "🕴️", C7 = "👯", E7 = "👯‍♂️", T7 = "👯‍♀️", D7 = "🧖", j7 = "🧖‍♂️", q7 = "🧖‍♀️", R7 = "🧗", P7 = "🧗‍♂️", I7 = "🧗‍♀️", O7 = "🤺", F7 = "🏇", M7 = "⛷️", B7 = "🏂", $7 = "🏌️", z7 = "🏌️‍♂️", G7 = "🏌️‍♀️", U7 = "🏄", H7 = "🏄‍♂️", V7 = "🏄‍♀️", W7 = "🚣", Z7 = "🚣‍♂️", J7 = "🚣‍♀️", Q7 = "🏊", Y7 = "🏊‍♂️", X7 = "🏊‍♀️", K7 = "⛹️", eH = "⛹️‍♂️", nH = "⛹️‍♂️", tH = "⛹️‍♀️", sH = "⛹️‍♀️", oH = "🏋️", rH = "🏋️‍♂️", cH = "🏋️‍♀️", aH = "🚴", iH = "🚴‍♂️", lH = "🚴‍♀️", uH = "🚵", pH = "🚵‍♂️", hH = "🚵‍♀️", dH = "🤸", mH = "🤸‍♂️", fH = "🤸‍♀️", gH = "🤼", _H = "🤼‍♂️", bH = "🤼‍♀️", kH = "🤽", yH = "🤽‍♂️", wH = "🤽‍♀️", vH = "🤾", xH = "🤾‍♂️", AH = "🤾‍♀️", SH = "🤹", LH = "🤹‍♂️", NH = "🤹‍♀️", CH = "🧘", EH = "🧘‍♂️", TH = "🧘‍♀️", DH = "🛀", jH = "🛌", qH = "🧑‍🤝‍🧑", RH = "👭", PH = "👫", IH = "👬", OH = "💏", FH = "👩‍❤️‍💋‍👨", MH = "👨‍❤️‍💋‍👨", BH = "👩‍❤️‍💋‍👩", $H = "💑", zH = "👩‍❤️‍👨", GH = "👨‍❤️‍👨", UH = "👩‍❤️‍👩", HH = "👪", VH = "👨‍👩‍👦", WH = "👨‍👩‍👧", ZH = "👨‍👩‍👧‍👦", JH = "👨‍👩‍👦‍👦", QH = "👨‍👩‍👧‍👧", YH = "👨‍👨‍👦", XH = "👨‍👨‍👧", KH = "👨‍👨‍👧‍👦", eV = "👨‍👨‍👦‍👦", nV = "👨‍👨‍👧‍👧", tV = "👩‍👩‍👦", sV = "👩‍👩‍👧", oV = "👩‍👩‍👧‍👦", rV = "👩‍👩‍👦‍👦", cV = "👩‍👩‍👧‍👧", aV = "👨‍👦", iV = "👨‍👦‍👦", lV = "👨‍👧", uV = "👨‍👧‍👦", pV = "👨‍👧‍👧", hV = "👩‍👦", dV = "👩‍👦‍👦", mV = "👩‍👧", fV = "👩‍👧‍👦", gV = "👩‍👧‍👧", _V = "🗣️", bV = "👤", kV = "👥", yV = "🫂", wV = "👣", vV = "🐵", xV = "🐒", AV = "🦍", SV = "🦧", LV = "🐶", NV = "🐕", CV = "🦮", EV = "🐕‍🦺", TV = "🐩", DV = "🐺", jV = "🦊", qV = "🦝", RV = "🐱", PV = "🐈", IV = "🐈‍⬛", OV = "🦁", FV = "🐯", MV = "🐅", BV = "🐆", $V = "🐴", zV = "🐎", GV = "🦄", UV = "🦓", HV = "🦌", VV = "🦬", WV = "🐮", ZV = "🐂", JV = "🐃", QV = "🐄", YV = "🐷", XV = "🐖", KV = "🐗", eW = "🐽", nW = "🐏", tW = "🐑", sW = "🐐", oW = "🐪", rW = "🐫", cW = "🦙", aW = "🦒", iW = "🐘", lW = "🦣", uW = "🦏", pW = "🦛", hW = "🐭", dW = "🐁", mW = "🐀", fW = "🐹", gW = "🐰", _W = "🐇", bW = "🐿️", kW = "🦫", yW = "🦔", wW = "🦇", vW = "🐻", xW = "🐻‍❄️", AW = "🐨", SW = "🐼", LW = "🦥", NW = "🦦", CW = "🦨", EW = "🦘", TW = "🦡", DW = "🐾", jW = "🐾", qW = "🦃", RW = "🐔", PW = "🐓", IW = "🐣", OW = "🐤", FW = "🐥", MW = "🐦", BW = "🐧", $W = "🕊️", zW = "🦅", GW = "🦆", UW = "🦢", HW = "🦉", VW = "🦤", WW = "🪶", ZW = "🦩", JW = "🦚", QW = "🦜", YW = "🐸", XW = "🐊", KW = "🐢", eZ = "🦎", nZ = "🐍", tZ = "🐲", sZ = "🐉", oZ = "🦕", rZ = "🐳", cZ = "🐋", aZ = "🐬", iZ = "🐬", lZ = "🦭", uZ = "🐟", pZ = "🐠", hZ = "🐡", dZ = "🦈", mZ = "🐙", fZ = "🐚", gZ = "🐌", _Z = "🦋", bZ = "🐛", kZ = "🐜", yZ = "🐝", wZ = "🐝", vZ = "🪲", xZ = "🐞", AZ = "🦗", SZ = "🪳", LZ = "🕷️", NZ = "🕸️", CZ = "🦂", EZ = "🦟", TZ = "🪰", DZ = "🪱", jZ = "🦠", qZ = "💐", RZ = "🌸", PZ = "💮", IZ = "🏵️", OZ = "🌹", FZ = "🥀", MZ = "🌺", BZ = "🌻", $Z = "🌼", zZ = "🌷", GZ = "🌱", UZ = "🪴", HZ = "🌲", VZ = "🌳", WZ = "🌴", ZZ = "🌵", JZ = "🌾", QZ = "🌿", YZ = "☘️", XZ = "🍀", KZ = "🍁", eJ = "🍂", nJ = "🍃", tJ = "🍇", sJ = "🍈", oJ = "🍉", rJ = "🍊", cJ = "🍊", aJ = "🍊", iJ = "🍋", lJ = "🍌", uJ = "🍍", pJ = "🥭", hJ = "🍎", dJ = "🍏", mJ = "🍐", fJ = "🍑", gJ = "🍒", _J = "🍓", bJ = "🫐", kJ = "🥝", yJ = "🍅", wJ = "🫒", vJ = "🥥", xJ = "🥑", AJ = "🍆", SJ = "🥔", LJ = "🥕", NJ = "🌽", CJ = "🌶️", EJ = "🫑", TJ = "🥒", DJ = "🥬", jJ = "🥦", qJ = "🧄", RJ = "🧅", PJ = "🍄", IJ = "🥜", OJ = "🌰", FJ = "🍞", MJ = "🥐", BJ = "🥖", $J = "🫓", zJ = "🥨", GJ = "🥯", UJ = "🥞", HJ = "🧇", VJ = "🧀", WJ = "🍖", ZJ = "🍗", JJ = "🥩", QJ = "🥓", YJ = "🍔", XJ = "🍟", KJ = "🍕", eQ = "🌭", nQ = "🥪", tQ = "🌮", sQ = "🌯", oQ = "🫔", rQ = "🥙", cQ = "🧆", aQ = "🥚", iQ = "🍳", lQ = "🥘", uQ = "🍲", pQ = "🫕", hQ = "🥣", dQ = "🥗", mQ = "🍿", fQ = "🧈", gQ = "🧂", _Q = "🥫", bQ = "🍱", kQ = "🍘", yQ = "🍙", wQ = "🍚", vQ = "🍛", xQ = "🍜", AQ = "🍝", SQ = "🍠", LQ = "🍢", NQ = "🍣", CQ = "🍤", EQ = "🍥", TQ = "🥮", DQ = "🍡", jQ = "🥟", qQ = "🥠", RQ = "🥡", PQ = "🦀", IQ = "🦞", OQ = "🦐", FQ = "🦑", MQ = "🦪", BQ = "🍦", $Q = "🍧", zQ = "🍨", GQ = "🍩", UQ = "🍪", HQ = "🎂", VQ = "🍰", WQ = "🧁", ZQ = "🥧", JQ = "🍫", QQ = "🍬", YQ = "🍭", XQ = "🍮", KQ = "🍯", eY = "🍼", nY = "🥛", tY = "☕", sY = "🫖", oY = "🍵", rY = "🍶", cY = "🍾", aY = "🍷", iY = "🍸", lY = "🍹", uY = "🍺", pY = "🍻", hY = "🥂", dY = "🥃", mY = "🥤", fY = "🧋", gY = "🧃", _Y = "🧉", bY = "🧊", kY = "🥢", yY = "🍽️", wY = "🍴", vY = "🥄", xY = "🔪", AY = "🔪", SY = "🏺", LY = "🌍", NY = "🌎", CY = "🌏", EY = "🌐", TY = "🗺️", DY = "🗾", jY = "🧭", qY = "🏔️", RY = "⛰️", PY = "🌋", IY = "🗻", OY = "🏕️", FY = "🏖️", MY = "🏜️", BY = "🏝️", $Y = "🏞️", zY = "🏟️", GY = "🏛️", UY = "🏗️", HY = "🧱", VY = "🪨", WY = "🪵", ZY = "🛖", JY = "🏘️", QY = "🏚️", YY = "🏠", XY = "🏡", KY = "🏢", eX = "🏣", nX = "🏤", tX = "🏥", sX = "🏦", oX = "🏨", rX = "🏩", cX = "🏪", aX = "🏫", iX = "🏬", lX = "🏭", uX = "🏯", pX = "🏰", hX = "💒", dX = "🗼", mX = "🗽", fX = "⛪", gX = "🕌", _X = "🛕", bX = "🕍", kX = "⛩️", yX = "🕋", wX = "⛲", vX = "⛺", xX = "🌁", AX = "🌃", SX = "🏙️", LX = "🌄", NX = "🌅", CX = "🌆", EX = "🌇", TX = "🌉", DX = "♨️", jX = "🎠", qX = "🎡", RX = "🎢", PX = "💈", IX = "🎪", OX = "🚂", FX = "🚃", MX = "🚄", BX = "🚅", $X = "🚆", zX = "🚇", GX = "🚈", UX = "🚉", HX = "🚊", VX = "🚝", WX = "🚞", ZX = "🚋", JX = "🚌", QX = "🚍", YX = "🚎", XX = "🚐", KX = "🚑", eK = "🚒", nK = "🚓", tK = "🚔", sK = "🚕", oK = "🚖", rK = "🚗", cK = "🚗", aK = "🚘", iK = "🚙", lK = "🛻", uK = "🚚", pK = "🚛", hK = "🚜", dK = "🏎️", mK = "🏍️", fK = "🛵", gK = "🦽", _K = "🦼", bK = "🛺", kK = "🚲", yK = "🛴", wK = "🛹", vK = "🛼", xK = "🚏", AK = "🛣️", SK = "🛤️", LK = "🛢️", NK = "⛽", CK = "🚨", EK = "🚥", TK = "🚦", DK = "🛑", jK = "🚧", qK = "⚓", RK = "⛵", PK = "⛵", IK = "🛶", OK = "🚤", FK = "🛳️", MK = "⛴️", BK = "🛥️", $K = "🚢", zK = "✈️", GK = "🛩️", UK = "🛫", HK = "🛬", VK = "🪂", WK = "💺", ZK = "🚁", JK = "🚟", QK = "🚠", YK = "🚡", XK = "🛰️", KK = "🚀", eee = "🛸", nee = "🛎️", tee = "🧳", see = "⌛", oee = "⏳", ree = "⌚", cee = "⏰", aee = "⏱️", iee = "⏲️", lee = "🕰️", uee = "🕛", pee = "🕧", hee = "🕐", dee = "🕜", mee = "🕑", fee = "🕝", gee = "🕒", _ee = "🕞", bee = "🕓", kee = "🕟", yee = "🕔", wee = "🕠", vee = "🕕", xee = "🕡", Aee = "🕖", See = "🕢", Lee = "🕗", Nee = "🕣", Cee = "🕘", Eee = "🕤", Tee = "🕙", Dee = "🕥", jee = "🕚", qee = "🕦", Ree = "🌑", Pee = "🌒", Iee = "🌓", Oee = "🌔", Fee = "🌔", Mee = "🌕", Bee = "🌖", $ee = "🌗", zee = "🌘", Gee = "🌙", Uee = "🌚", Hee = "🌛", Vee = "🌜", Wee = "🌡️", Zee = "☀️", Jee = "🌝", Qee = "🌞", Yee = "🪐", Xee = "⭐", Kee = "🌟", ene = "🌠", nne = "🌌", tne = "☁️", sne = "⛅", one = "⛈️", rne = "🌤️", cne = "🌥️", ane = "🌦️", ine = "🌧️", lne = "🌨️", une = "🌩️", pne = "🌪️", hne = "🌫️", dne = "🌬️", mne = "🌀", fne = "🌈", gne = "🌂", _ne = "☂️", bne = "☔", kne = "⛱️", yne = "⚡", wne = "❄️", vne = "☃️", xne = "⛄", Ane = "☄️", Sne = "🔥", Lne = "💧", Nne = "🌊", Cne = "🎃", Ene = "🎄", Tne = "🎆", Dne = "🎇", jne = "🧨", qne = "✨", Rne = "🎈", Pne = "🎉", Ine = "🎊", One = "🎋", Fne = "🎍", Mne = "🎎", Bne = "🎏", $ne = "🎐", zne = "🎑", Gne = "🧧", Une = "🎀", Hne = "🎁", Vne = "🎗️", Wne = "🎟️", Zne = "🎫", Jne = "🎖️", Qne = "🏆", Yne = "🏅", Xne = "⚽", Kne = "⚾", ete = "🥎", nte = "🏀", tte = "🏐", ste = "🏈", ote = "🏉", rte = "🎾", cte = "🥏", ate = "🎳", ite = "🏏", lte = "🏑", ute = "🏒", pte = "🥍", hte = "🏓", dte = "🏸", mte = "🥊", fte = "🥋", gte = "🥅", _te = "⛳", bte = "⛸️", kte = "🎣", yte = "🤿", wte = "🎽", vte = "🎿", xte = "🛷", Ate = "🥌", Ste = "🎯", Lte = "🪀", Nte = "🪁", Cte = "🔮", Ete = "🪄", Tte = "🧿", Dte = "🎮", jte = "🕹️", qte = "🎰", Rte = "🎲", Pte = "🧩", Ite = "🧸", Ote = "🪅", Fte = "🪆", Mte = "♠️", Bte = "♥️", $te = "♦️", zte = "♣️", Gte = "♟️", Ute = "🃏", Hte = "🀄", Vte = "🎴", Wte = "🎭", Zte = "🖼️", Jte = "🎨", Qte = "🧵", Yte = "🪡", Xte = "🧶", Kte = "🪢", ese = "👓", nse = "🕶️", tse = "🥽", sse = "🥼", ose = "🦺", rse = "👔", cse = "👕", ase = "👕", ise = "👖", lse = "🧣", use = "🧤", pse = "🧥", hse = "🧦", dse = "👗", mse = "👘", fse = "🥻", gse = "🩱", _se = "🩲", bse = "🩳", kse = "👙", yse = "👚", wse = "👛", vse = "👜", xse = "👝", Ase = "🛍️", Sse = "🎒", Lse = "🩴", Nse = "👞", Cse = "👞", Ese = "👟", Tse = "🥾", Dse = "🥿", jse = "👠", qse = "👡", Rse = "🩰", Pse = "👢", Ise = "👑", Ose = "👒", Fse = "🎩", Mse = "🎓", Bse = "🧢", $se = "🪖", zse = "⛑️", Gse = "📿", Use = "💄", Hse = "💍", Vse = "💎", Wse = "🔇", Zse = "🔈", Jse = "🔉", Qse = "🔊", Yse = "📢", Xse = "📣", Kse = "📯", eoe = "🔔", noe = "🔕", toe = "🎼", soe = "🎵", ooe = "🎶", roe = "🎙️", coe = "🎚️", aoe = "🎛️", ioe = "🎤", loe = "🎧", uoe = "📻", poe = "🎷", hoe = "🪗", doe = "🎸", moe = "🎹", foe = "🎺", goe = "🎻", _oe = "🪕", boe = "🥁", koe = "🪘", yoe = "📱", woe = "📲", voe = "☎️", xoe = "☎️", Aoe = "📞", Soe = "📟", Loe = "📠", Noe = "🔋", Coe = "🔌", Eoe = "💻", Toe = "🖥️", Doe = "🖨️", joe = "⌨️", qoe = "🖱️", Roe = "🖲️", Poe = "💽", Ioe = "💾", Ooe = "💿", Foe = "📀", Moe = "🧮", Boe = "🎥", $oe = "🎞️", zoe = "📽️", Goe = "🎬", Uoe = "📺", Hoe = "📷", Voe = "📸", Woe = "📹", Zoe = "📼", Joe = "🔍", Qoe = "🔎", Yoe = "🕯️", Xoe = "💡", Koe = "🔦", ere = "🏮", nre = "🏮", tre = "🪔", sre = "📔", ore = "📕", rre = "📖", cre = "📖", are = "📗", ire = "📘", lre = "📙", ure = "📚", pre = "📓", hre = "📒", dre = "📃", mre = "📜", fre = "📄", gre = "📰", _re = "🗞️", bre = "📑", kre = "🔖", yre = "🏷️", wre = "💰", vre = "🪙", xre = "💴", Are = "💵", Sre = "💶", Lre = "💷", Nre = "💸", Cre = "💳", Ere = "🧾", Tre = "💹", Dre = "✉️", jre = "📧", qre = "📨", Rre = "📩", Pre = "📤", Ire = "📥", Ore = "📫", Fre = "📪", Mre = "📬", Bre = "📭", $re = "📮", zre = "🗳️", Gre = "✏️", Ure = "✒️", Hre = "🖋️", Vre = "🖊️", Wre = "🖌️", Zre = "🖍️", Jre = "📝", Qre = "📝", Yre = "💼", Xre = "📁", Kre = "📂", ece = "🗂️", nce = "📅", tce = "📆", sce = "🗒️", oce = "🗓️", rce = "📇", cce = "📈", ace = "📉", ice = "📊", lce = "📋", uce = "📌", pce = "📍", hce = "📎", dce = "🖇️", mce = "📏", fce = "📐", gce = "✂️", _ce = "🗃️", bce = "🗄️", kce = "🗑️", yce = "🔒", wce = "🔓", vce = "🔏", xce = "🔐", Ace = "🔑", Sce = "🗝️", Lce = "🔨", Nce = "🪓", Cce = "⛏️", Ece = "⚒️", Tce = "🛠️", Dce = "🗡️", jce = "⚔️", qce = "🔫", Rce = "🪃", Pce = "🏹", Ice = "🛡️", Oce = "🪚", Fce = "🔧", Mce = "🪛", Bce = "🔩", $ce = "⚙️", zce = "🗜️", Gce = "⚖️", Uce = "🦯", Hce = "🔗", Vce = "⛓️", Wce = "🪝", Zce = "🧰", Jce = "🧲", Qce = "🪜", Yce = "⚗️", Xce = "🧪", Kce = "🧫", eae = "🧬", nae = "🔬", tae = "🔭", sae = "📡", oae = "💉", rae = "🩸", cae = "💊", aae = "🩹", iae = "🩺", lae = "🚪", uae = "🛗", pae = "🪞", hae = "🪟", dae = "🛏️", mae = "🛋️", fae = "🪑", gae = "🚽", _ae = "🪠", bae = "🚿", kae = "🛁", yae = "🪤", wae = "🪒", vae = "🧴", xae = "🧷", Aae = "🧹", Sae = "🧺", Lae = "🧻", Nae = "🪣", Cae = "🧼", Eae = "🪥", Tae = "🧽", Dae = "🧯", jae = "🛒", qae = "🚬", Rae = "⚰️", Pae = "🪦", Iae = "⚱️", Oae = "🗿", Fae = "🪧", Mae = "🏧", Bae = "🚮", $ae = "🚰", zae = "♿", Gae = "🚹", Uae = "🚺", Hae = "🚻", Vae = "🚼", Wae = "🚾", Zae = "🛂", Jae = "🛃", Qae = "🛄", Yae = "🛅", Xae = "⚠️", Kae = "🚸", eie = "⛔", nie = "🚫", tie = "🚳", sie = "🚭", oie = "🚯", rie = "🚷", cie = "📵", aie = "🔞", iie = "☢️", lie = "☣️", uie = "⬆️", pie = "↗️", hie = "➡️", die = "↘️", mie = "⬇️", fie = "↙️", gie = "⬅️", _ie = "↖️", bie = "↕️", kie = "↔️", yie = "↩️", wie = "↪️", vie = "⤴️", xie = "⤵️", Aie = "🔃", Sie = "🔄", Lie = "🔙", Nie = "🔚", Cie = "🔛", Eie = "🔜", Tie = "🔝", Die = "🛐", jie = "⚛️", qie = "🕉️", Rie = "✡️", Pie = "☸️", Iie = "☯️", Oie = "✝️", Fie = "☦️", Mie = "☪️", Bie = "☮️", $ie = "🕎", zie = "🔯", Gie = "♈", Uie = "♉", Hie = "♊", Vie = "♋", Wie = "♌", Zie = "♍", Jie = "♎", Qie = "♏", Yie = "♐", Xie = "♑", Kie = "♒", ele = "♓", nle = "⛎", tle = "🔀", sle = "🔁", ole = "🔂", rle = "▶️", cle = "⏩", ale = "⏭️", ile = "⏯️", lle = "◀️", ule = "⏪", ple = "⏮️", hle = "🔼", dle = "⏫", mle = "🔽", fle = "⏬", gle = "⏸️", _le = "⏹️", ble = "⏺️", kle = "⏏️", yle = "🎦", wle = "🔅", vle = "🔆", xle = "📶", Ale = "📳", Sle = "📴", Lle = "♀️", Nle = "♂️", Cle = "⚧️", Ele = "✖️", Tle = "➕", Dle = "➖", jle = "➗", qle = "♾️", Rle = "‼️", Ple = "⁉️", Ile = "❓", Ole = "❔", Fle = "❕", Mle = "❗", Ble = "❗", $le = "〰️", zle = "💱", Gle = "💲", Ule = "⚕️", Hle = "♻️", Vle = "⚜️", Wle = "🔱", Zle = "📛", Jle = "🔰", Qle = "⭕", Yle = "✅", Xle = "☑️", Kle = "✔️", eue = "❌", nue = "❎", tue = "➰", sue = "➿", oue = "〽️", rue = "✳️", cue = "✴️", aue = "❇️", iue = "©️", lue = "®️", uue = "™️", pue = "#️⃣", hue = "*️⃣", due = "0️⃣", mue = "1️⃣", fue = "2️⃣", gue = "3️⃣", _ue = "4️⃣", bue = "5️⃣", kue = "6️⃣", yue = "7️⃣", wue = "8️⃣", vue = "9️⃣", xue = "🔟", Aue = "🔠", Sue = "🔡", Lue = "🔣", Nue = "🔤", Cue = "🅰️", Eue = "🆎", Tue = "🅱️", Due = "🆑", jue = "🆒", que = "🆓", Rue = "ℹ️", Pue = "🆔", Iue = "Ⓜ️", Oue = "🆖", Fue = "🅾️", Mue = "🆗", Bue = "🅿️", $ue = "🆘", zue = "🆙", Gue = "🆚", Uue = "🈁", Hue = "🈂️", Vue = "🉐", Wue = "🉑", Zue = "㊗️", Jue = "㊙️", Que = "🈵", Yue = "🔴", Xue = "🟠", Kue = "🟡", epe = "🟢", npe = "🔵", tpe = "🟣", spe = "🟤", ope = "⚫", rpe = "⚪", cpe = "🟥", ape = "🟧", ipe = "🟨", lpe = "🟩", upe = "🟦", ppe = "🟪", hpe = "🟫", dpe = "⬛", mpe = "⬜", fpe = "◼️", gpe = "◻️", _pe = "◾", bpe = "◽", kpe = "▪️", ype = "▫️", wpe = "🔶", vpe = "🔷", xpe = "🔸", Ape = "🔹", Spe = "🔺", Lpe = "🔻", Npe = "💠", Cpe = "🔘", Epe = "🔳", Tpe = "🔲", Dpe = "🏁", jpe = "🚩", qpe = "🎌", Rpe = "🏴", Ppe = "🏳️", Ipe = "🏳️‍🌈", Ope = "🏳️‍⚧️", Fpe = "🏴‍☠️", Mpe = "🇦🇨", Bpe = "🇦🇩", $pe = "🇦🇪", zpe = "🇦🇫", Gpe = "🇦🇬", Upe = "🇦🇮", Hpe = "🇦🇱", Vpe = "🇦🇲", Wpe = "🇦🇴", Zpe = "🇦🇶", Jpe = "🇦🇷", Qpe = "🇦🇸", Ype = "🇦🇹", Xpe = "🇦🇺", Kpe = "🇦🇼", ehe = "🇦🇽", nhe = "🇦🇿", the = "🇧🇦", she = "🇧🇧", ohe = "🇧🇩", rhe = "🇧🇪", che = "🇧🇫", ahe = "🇧🇬", ihe = "🇧🇭", lhe = "🇧🇮", uhe = "🇧🇯", phe = "🇧🇱", hhe = "🇧🇲", dhe = "🇧🇳", mhe = "🇧🇴", fhe = "🇧🇶", ghe = "🇧🇷", _he = "🇧🇸", bhe = "🇧🇹", khe = "🇧🇻", yhe = "🇧🇼", whe = "🇧🇾", vhe = "🇧🇿", xhe = "🇨🇦", Ahe = "🇨🇨", She = "🇨🇩", Lhe = "🇨🇫", Nhe = "🇨🇬", Che = "🇨🇭", Ehe = "🇨🇮", The = "🇨🇰", Dhe = "🇨🇱", jhe = "🇨🇲", qhe = "🇨🇳", Rhe = "🇨🇴", Phe = "🇨🇵", Ihe = "🇨🇷", Ohe = "🇨🇺", Fhe = "🇨🇻", Mhe = "🇨🇼", Bhe = "🇨🇽", $he = "🇨🇾", zhe = "🇨🇿", Ghe = "🇩🇪", Uhe = "🇩🇬", Hhe = "🇩🇯", Vhe = "🇩🇰", Whe = "🇩🇲", Zhe = "🇩🇴", Jhe = "🇩🇿", Qhe = "🇪🇦", Yhe = "🇪🇨", Xhe = "🇪🇪", Khe = "🇪🇬", ede = "🇪🇭", nde = "🇪🇷", tde = "🇪🇸", sde = "🇪🇹", ode = "🇪🇺", rde = "🇪🇺", cde = "🇫🇮", ade = "🇫🇯", ide = "🇫🇰", lde = "🇫🇲", ude = "🇫🇴", pde = "🇫🇷", hde = "🇬🇦", dde = "🇬🇧", mde = "🇬🇧", fde = "🇬🇩", gde = "🇬🇪", _de = "🇬🇫", bde = "🇬🇬", kde = "🇬🇭", yde = "🇬🇮", wde = "🇬🇱", vde = "🇬🇲", xde = "🇬🇳", Ade = "🇬🇵", Sde = "🇬🇶", Lde = "🇬🇷", Nde = "🇬🇸", Cde = "🇬🇹", Ede = "🇬🇺", Tde = "🇬🇼", Dde = "🇬🇾", jde = "🇭🇰", qde = "🇭🇲", Rde = "🇭🇳", Pde = "🇭🇷", Ide = "🇭🇹", Ode = "🇭🇺", Fde = "🇮🇨", Mde = "🇮🇩", Bde = "🇮🇪", $de = "🇮🇱", zde = "🇮🇲", Gde = "🇮🇳", Ude = "🇮🇴", Hde = "🇮🇶", Vde = "🇮🇷", Wde = "🇮🇸", Zde = "🇮🇹", Jde = "🇯🇪", Qde = "🇯🇲", Yde = "🇯🇴", Xde = "🇯🇵", Kde = "🇰🇪", eme = "🇰🇬", nme = "🇰🇭", tme = "🇰🇮", sme = "🇰🇲", ome = "🇰🇳", rme = "🇰🇵", cme = "🇰🇷", ame = "🇰🇼", ime = "🇰🇾", lme = "🇰🇿", ume = "🇱🇦", pme = "🇱🇧", hme = "🇱🇨", dme = "🇱🇮", mme = "🇱🇰", fme = "🇱🇷", gme = "🇱🇸", _me = "🇱🇹", bme = "🇱🇺", kme = "🇱🇻", yme = "🇱🇾", wme = "🇲🇦", vme = "🇲🇨", xme = "🇲🇩", Ame = "🇲🇪", Sme = "🇲🇫", Lme = "🇲🇬", Nme = "🇲🇭", Cme = "🇲🇰", Eme = "🇲🇱", Tme = "🇲🇲", Dme = "🇲🇳", jme = "🇲🇴", qme = "🇲🇵", Rme = "🇲🇶", Pme = "🇲🇷", Ime = "🇲🇸", Ome = "🇲🇹", Fme = "🇲🇺", Mme = "🇲🇻", Bme = "🇲🇼", $me = "🇲🇽", zme = "🇲🇾", Gme = "🇲🇿", Ume = "🇳🇦", Hme = "🇳🇨", Vme = "🇳🇪", Wme = "🇳🇫", Zme = "🇳🇬", Jme = "🇳🇮", Qme = "🇳🇱", Yme = "🇳🇴", Xme = "🇳🇵", Kme = "🇳🇷", efe = "🇳🇺", nfe = "🇳🇿", tfe = "🇴🇲", sfe = "🇵🇦", ofe = "🇵🇪", rfe = "🇵🇫", cfe = "🇵🇬", afe = "🇵🇭", ife = "🇵🇰", lfe = "🇵🇱", ufe = "🇵🇲", pfe = "🇵🇳", hfe = "🇵🇷", dfe = "🇵🇸", mfe = "🇵🇹", ffe = "🇵🇼", gfe = "🇵🇾", _fe = "🇶🇦", bfe = "🇷🇪", kfe = "🇷🇴", yfe = "🇷🇸", wfe = "🇷🇺", vfe = "🇷🇼", xfe = "🇸🇦", Afe = "🇸🇧", Sfe = "🇸🇨", Lfe = "🇸🇩", Nfe = "🇸🇪", Cfe = "🇸🇬", Efe = "🇸🇭", Tfe = "🇸🇮", Dfe = "🇸🇯", jfe = "🇸🇰", qfe = "🇸🇱", Rfe = "🇸🇲", Pfe = "🇸🇳", Ife = "🇸🇴", Ofe = "🇸🇷", Ffe = "🇸🇸", Mfe = "🇸🇹", Bfe = "🇸🇻", $fe = "🇸🇽", zfe = "🇸🇾", Gfe = "🇸🇿", Ufe = "🇹🇦", Hfe = "🇹🇨", Vfe = "🇹🇩", Wfe = "🇹🇫", Zfe = "🇹🇬", Jfe = "🇹🇭", Qfe = "🇹🇯", Yfe = "🇹🇰", Xfe = "🇹🇱", Kfe = "🇹🇲", ege = "🇹🇳", nge = "🇹🇴", tge = "🇹🇷", sge = "🇹🇹", oge = "🇹🇻", rge = "🇹🇼", cge = "🇹🇿", age = "🇺🇦", ige = "🇺🇬", lge = "🇺🇲", uge = "🇺🇳", pge = "🇺🇸", hge = "🇺🇾", dge = "🇺🇿", mge = "🇻🇦", fge = "🇻🇨", gge = "🇻🇪", _ge = "🇻🇬", bge = "🇻🇮", kge = "🇻🇳", yge = "🇻🇺", wge = "🇼🇫", vge = "🇼🇸", xge = "🇽🇰", Age = "🇾🇪", Sge = "🇾🇹", Lge = "🇿🇦", Nge = "🇿🇲", Cge = "🇿🇼", Ege = "🏴󠁧󠁢󠁥󠁮󠁧󠁿", Tge = "🏴󠁧󠁢󠁳󠁣󠁴󠁿", Dge = "🏴󠁧󠁢󠁷󠁬󠁳󠁿", jge = {
  100: "💯",
  1234: "🔢",
  grinning: Gz,
  smiley: Uz,
  smile: Hz,
  grin: Vz,
  laughing: Wz,
  satisfied: Zz,
  sweat_smile: Jz,
  rofl: Qz,
  joy: Yz,
  slightly_smiling_face: Xz,
  upside_down_face: Kz,
  wink: e5,
  blush: n5,
  innocent: t5,
  smiling_face_with_three_hearts: s5,
  heart_eyes: o5,
  star_struck: r5,
  kissing_heart: c5,
  kissing: a5,
  relaxed: i5,
  kissing_closed_eyes: l5,
  kissing_smiling_eyes: u5,
  smiling_face_with_tear: p5,
  yum: h5,
  stuck_out_tongue: d5,
  stuck_out_tongue_winking_eye: m5,
  zany_face: f5,
  stuck_out_tongue_closed_eyes: g5,
  money_mouth_face: _5,
  hugs: b5,
  hand_over_mouth: k5,
  shushing_face: y5,
  thinking: w5,
  zipper_mouth_face: v5,
  raised_eyebrow: x5,
  neutral_face: A5,
  expressionless: S5,
  no_mouth: L5,
  smirk: N5,
  unamused: C5,
  roll_eyes: E5,
  grimacing: T5,
  lying_face: D5,
  relieved: j5,
  pensive: q5,
  sleepy: R5,
  drooling_face: P5,
  sleeping: I5,
  mask: O5,
  face_with_thermometer: F5,
  face_with_head_bandage: M5,
  nauseated_face: B5,
  vomiting_face: $5,
  sneezing_face: z5,
  hot_face: G5,
  cold_face: U5,
  woozy_face: H5,
  dizzy_face: V5,
  exploding_head: W5,
  cowboy_hat_face: Z5,
  partying_face: J5,
  disguised_face: Q5,
  sunglasses: Y5,
  nerd_face: X5,
  monocle_face: K5,
  confused: e6,
  worried: n6,
  slightly_frowning_face: t6,
  frowning_face: s6,
  open_mouth: o6,
  hushed: r6,
  astonished: c6,
  flushed: a6,
  pleading_face: i6,
  frowning: l6,
  anguished: u6,
  fearful: p6,
  cold_sweat: h6,
  disappointed_relieved: d6,
  cry: m6,
  sob: f6,
  scream: g6,
  confounded: _6,
  persevere: b6,
  disappointed: k6,
  sweat: y6,
  weary: w6,
  tired_face: v6,
  yawning_face: x6,
  triumph: A6,
  rage: S6,
  pout: L6,
  angry: N6,
  cursing_face: C6,
  smiling_imp: E6,
  imp: T6,
  skull: D6,
  skull_and_crossbones: j6,
  hankey: q6,
  poop: R6,
  shit: P6,
  clown_face: I6,
  japanese_ogre: O6,
  japanese_goblin: F6,
  ghost: M6,
  alien: B6,
  space_invader: $6,
  robot: z6,
  smiley_cat: G6,
  smile_cat: U6,
  joy_cat: H6,
  heart_eyes_cat: V6,
  smirk_cat: W6,
  kissing_cat: Z6,
  scream_cat: J6,
  crying_cat_face: Q6,
  pouting_cat: Y6,
  see_no_evil: X6,
  hear_no_evil: K6,
  speak_no_evil: e4,
  kiss: n4,
  love_letter: t4,
  cupid: s4,
  gift_heart: o4,
  sparkling_heart: r4,
  heartpulse: c4,
  heartbeat: a4,
  revolving_hearts: i4,
  two_hearts: l4,
  heart_decoration: u4,
  heavy_heart_exclamation: p4,
  broken_heart: h4,
  heart: d4,
  orange_heart: m4,
  yellow_heart: f4,
  green_heart: g4,
  blue_heart: _4,
  purple_heart: b4,
  brown_heart: k4,
  black_heart: y4,
  white_heart: w4,
  anger: v4,
  boom: x4,
  collision: A4,
  dizzy: S4,
  sweat_drops: L4,
  dash: N4,
  hole: C4,
  bomb: E4,
  speech_balloon: T4,
  eye_speech_bubble: D4,
  left_speech_bubble: j4,
  right_anger_bubble: q4,
  thought_balloon: R4,
  zzz: P4,
  wave: I4,
  raised_back_of_hand: O4,
  raised_hand_with_fingers_splayed: F4,
  hand: M4,
  raised_hand: B4,
  vulcan_salute: $4,
  ok_hand: z4,
  pinched_fingers: G4,
  pinching_hand: U4,
  v: H4,
  crossed_fingers: V4,
  love_you_gesture: W4,
  metal: Z4,
  call_me_hand: J4,
  point_left: Q4,
  point_right: Y4,
  point_up_2: X4,
  middle_finger: K4,
  fu: e8,
  point_down: n8,
  point_up: t8,
  "+1": "👍",
  thumbsup: s8,
  "-1": "👎",
  thumbsdown: o8,
  fist_raised: r8,
  fist: c8,
  fist_oncoming: a8,
  facepunch: i8,
  punch: l8,
  fist_left: u8,
  fist_right: p8,
  clap: h8,
  raised_hands: d8,
  open_hands: m8,
  palms_up_together: f8,
  handshake: g8,
  pray: _8,
  writing_hand: b8,
  nail_care: k8,
  selfie: y8,
  muscle: w8,
  mechanical_arm: v8,
  mechanical_leg: x8,
  leg: A8,
  foot: S8,
  ear: L8,
  ear_with_hearing_aid: N8,
  nose: C8,
  brain: E8,
  anatomical_heart: T8,
  lungs: D8,
  tooth: j8,
  bone: q8,
  eyes: R8,
  eye: P8,
  tongue: I8,
  lips: O8,
  baby: F8,
  child: M8,
  boy: B8,
  girl: $8,
  adult: z8,
  blond_haired_person: G8,
  man: U8,
  bearded_person: H8,
  red_haired_man: V8,
  curly_haired_man: W8,
  white_haired_man: Z8,
  bald_man: J8,
  woman: Q8,
  red_haired_woman: Y8,
  person_red_hair: X8,
  curly_haired_woman: K8,
  person_curly_hair: eG,
  white_haired_woman: nG,
  person_white_hair: tG,
  bald_woman: sG,
  person_bald: oG,
  blond_haired_woman: rG,
  blonde_woman: cG,
  blond_haired_man: aG,
  older_adult: iG,
  older_man: lG,
  older_woman: uG,
  frowning_person: pG,
  frowning_man: hG,
  frowning_woman: dG,
  pouting_face: mG,
  pouting_man: fG,
  pouting_woman: gG,
  no_good: _G,
  no_good_man: bG,
  ng_man: kG,
  no_good_woman: yG,
  ng_woman: wG,
  ok_person: vG,
  ok_man: xG,
  ok_woman: AG,
  tipping_hand_person: SG,
  information_desk_person: LG,
  tipping_hand_man: NG,
  sassy_man: CG,
  tipping_hand_woman: EG,
  sassy_woman: TG,
  raising_hand: DG,
  raising_hand_man: jG,
  raising_hand_woman: qG,
  deaf_person: RG,
  deaf_man: PG,
  deaf_woman: IG,
  bow: OG,
  bowing_man: FG,
  bowing_woman: MG,
  facepalm: BG,
  man_facepalming: $G,
  woman_facepalming: zG,
  shrug: GG,
  man_shrugging: UG,
  woman_shrugging: HG,
  health_worker: VG,
  man_health_worker: WG,
  woman_health_worker: ZG,
  student: JG,
  man_student: QG,
  woman_student: YG,
  teacher: XG,
  man_teacher: KG,
  woman_teacher: eU,
  judge: nU,
  man_judge: tU,
  woman_judge: sU,
  farmer: oU,
  man_farmer: rU,
  woman_farmer: cU,
  cook: aU,
  man_cook: iU,
  woman_cook: lU,
  mechanic: uU,
  man_mechanic: pU,
  woman_mechanic: hU,
  factory_worker: dU,
  man_factory_worker: mU,
  woman_factory_worker: fU,
  office_worker: gU,
  man_office_worker: _U,
  woman_office_worker: bU,
  scientist: kU,
  man_scientist: yU,
  woman_scientist: wU,
  technologist: vU,
  man_technologist: xU,
  woman_technologist: AU,
  singer: SU,
  man_singer: LU,
  woman_singer: NU,
  artist: CU,
  man_artist: EU,
  woman_artist: TU,
  pilot: DU,
  man_pilot: jU,
  woman_pilot: qU,
  astronaut: RU,
  man_astronaut: PU,
  woman_astronaut: IU,
  firefighter: OU,
  man_firefighter: FU,
  woman_firefighter: MU,
  police_officer: BU,
  cop: $U,
  policeman: zU,
  policewoman: GU,
  detective: UU,
  male_detective: HU,
  female_detective: VU,
  guard: WU,
  guardsman: ZU,
  guardswoman: JU,
  ninja: QU,
  construction_worker: YU,
  construction_worker_man: XU,
  construction_worker_woman: KU,
  prince: e9,
  princess: n9,
  person_with_turban: t9,
  man_with_turban: s9,
  woman_with_turban: o9,
  man_with_gua_pi_mao: r9,
  woman_with_headscarf: c9,
  person_in_tuxedo: a9,
  man_in_tuxedo: i9,
  woman_in_tuxedo: l9,
  person_with_veil: u9,
  man_with_veil: p9,
  woman_with_veil: h9,
  bride_with_veil: d9,
  pregnant_woman: m9,
  breast_feeding: f9,
  woman_feeding_baby: g9,
  man_feeding_baby: _9,
  person_feeding_baby: b9,
  angel: k9,
  santa: y9,
  mrs_claus: w9,
  mx_claus: v9,
  superhero: x9,
  superhero_man: A9,
  superhero_woman: S9,
  supervillain: L9,
  supervillain_man: N9,
  supervillain_woman: C9,
  mage: E9,
  mage_man: T9,
  mage_woman: D9,
  fairy: j9,
  fairy_man: q9,
  fairy_woman: R9,
  vampire: P9,
  vampire_man: I9,
  vampire_woman: O9,
  merperson: F9,
  merman: M9,
  mermaid: B9,
  elf: $9,
  elf_man: z9,
  elf_woman: G9,
  genie: U9,
  genie_man: H9,
  genie_woman: V9,
  zombie: W9,
  zombie_man: Z9,
  zombie_woman: J9,
  massage: Q9,
  massage_man: Y9,
  massage_woman: X9,
  haircut: K9,
  haircut_man: e7,
  haircut_woman: n7,
  walking: t7,
  walking_man: s7,
  walking_woman: o7,
  standing_person: r7,
  standing_man: c7,
  standing_woman: a7,
  kneeling_person: i7,
  kneeling_man: l7,
  kneeling_woman: u7,
  person_with_probing_cane: p7,
  man_with_probing_cane: h7,
  woman_with_probing_cane: d7,
  person_in_motorized_wheelchair: m7,
  man_in_motorized_wheelchair: f7,
  woman_in_motorized_wheelchair: g7,
  person_in_manual_wheelchair: _7,
  man_in_manual_wheelchair: b7,
  woman_in_manual_wheelchair: k7,
  runner: y7,
  running: w7,
  running_man: v7,
  running_woman: x7,
  woman_dancing: A7,
  dancer: S7,
  man_dancing: L7,
  business_suit_levitating: N7,
  dancers: C7,
  dancing_men: E7,
  dancing_women: T7,
  sauna_person: D7,
  sauna_man: j7,
  sauna_woman: q7,
  climbing: R7,
  climbing_man: P7,
  climbing_woman: I7,
  person_fencing: O7,
  horse_racing: F7,
  skier: M7,
  snowboarder: B7,
  golfing: $7,
  golfing_man: z7,
  golfing_woman: G7,
  surfer: U7,
  surfing_man: H7,
  surfing_woman: V7,
  rowboat: W7,
  rowing_man: Z7,
  rowing_woman: J7,
  swimmer: Q7,
  swimming_man: Y7,
  swimming_woman: X7,
  bouncing_ball_person: K7,
  bouncing_ball_man: eH,
  basketball_man: nH,
  bouncing_ball_woman: tH,
  basketball_woman: sH,
  weight_lifting: oH,
  weight_lifting_man: rH,
  weight_lifting_woman: cH,
  bicyclist: aH,
  biking_man: iH,
  biking_woman: lH,
  mountain_bicyclist: uH,
  mountain_biking_man: pH,
  mountain_biking_woman: hH,
  cartwheeling: dH,
  man_cartwheeling: mH,
  woman_cartwheeling: fH,
  wrestling: gH,
  men_wrestling: _H,
  women_wrestling: bH,
  water_polo: kH,
  man_playing_water_polo: yH,
  woman_playing_water_polo: wH,
  handball_person: vH,
  man_playing_handball: xH,
  woman_playing_handball: AH,
  juggling_person: SH,
  man_juggling: LH,
  woman_juggling: NH,
  lotus_position: CH,
  lotus_position_man: EH,
  lotus_position_woman: TH,
  bath: DH,
  sleeping_bed: jH,
  people_holding_hands: qH,
  two_women_holding_hands: RH,
  couple: PH,
  two_men_holding_hands: IH,
  couplekiss: OH,
  couplekiss_man_woman: FH,
  couplekiss_man_man: MH,
  couplekiss_woman_woman: BH,
  couple_with_heart: $H,
  couple_with_heart_woman_man: zH,
  couple_with_heart_man_man: GH,
  couple_with_heart_woman_woman: UH,
  family: HH,
  family_man_woman_boy: VH,
  family_man_woman_girl: WH,
  family_man_woman_girl_boy: ZH,
  family_man_woman_boy_boy: JH,
  family_man_woman_girl_girl: QH,
  family_man_man_boy: YH,
  family_man_man_girl: XH,
  family_man_man_girl_boy: KH,
  family_man_man_boy_boy: eV,
  family_man_man_girl_girl: nV,
  family_woman_woman_boy: tV,
  family_woman_woman_girl: sV,
  family_woman_woman_girl_boy: oV,
  family_woman_woman_boy_boy: rV,
  family_woman_woman_girl_girl: cV,
  family_man_boy: aV,
  family_man_boy_boy: iV,
  family_man_girl: lV,
  family_man_girl_boy: uV,
  family_man_girl_girl: pV,
  family_woman_boy: hV,
  family_woman_boy_boy: dV,
  family_woman_girl: mV,
  family_woman_girl_boy: fV,
  family_woman_girl_girl: gV,
  speaking_head: _V,
  bust_in_silhouette: bV,
  busts_in_silhouette: kV,
  people_hugging: yV,
  footprints: wV,
  monkey_face: vV,
  monkey: xV,
  gorilla: AV,
  orangutan: SV,
  dog: LV,
  dog2: NV,
  guide_dog: CV,
  service_dog: EV,
  poodle: TV,
  wolf: DV,
  fox_face: jV,
  raccoon: qV,
  cat: RV,
  cat2: PV,
  black_cat: IV,
  lion: OV,
  tiger: FV,
  tiger2: MV,
  leopard: BV,
  horse: $V,
  racehorse: zV,
  unicorn: GV,
  zebra: UV,
  deer: HV,
  bison: VV,
  cow: WV,
  ox: ZV,
  water_buffalo: JV,
  cow2: QV,
  pig: YV,
  pig2: XV,
  boar: KV,
  pig_nose: eW,
  ram: nW,
  sheep: tW,
  goat: sW,
  dromedary_camel: oW,
  camel: rW,
  llama: cW,
  giraffe: aW,
  elephant: iW,
  mammoth: lW,
  rhinoceros: uW,
  hippopotamus: pW,
  mouse: hW,
  mouse2: dW,
  rat: mW,
  hamster: fW,
  rabbit: gW,
  rabbit2: _W,
  chipmunk: bW,
  beaver: kW,
  hedgehog: yW,
  bat: wW,
  bear: vW,
  polar_bear: xW,
  koala: AW,
  panda_face: SW,
  sloth: LW,
  otter: NW,
  skunk: CW,
  kangaroo: EW,
  badger: TW,
  feet: DW,
  paw_prints: jW,
  turkey: qW,
  chicken: RW,
  rooster: PW,
  hatching_chick: IW,
  baby_chick: OW,
  hatched_chick: FW,
  bird: MW,
  penguin: BW,
  dove: $W,
  eagle: zW,
  duck: GW,
  swan: UW,
  owl: HW,
  dodo: VW,
  feather: WW,
  flamingo: ZW,
  peacock: JW,
  parrot: QW,
  frog: YW,
  crocodile: XW,
  turtle: KW,
  lizard: eZ,
  snake: nZ,
  dragon_face: tZ,
  dragon: sZ,
  sauropod: oZ,
  "t-rex": "🦖",
  whale: rZ,
  whale2: cZ,
  dolphin: aZ,
  flipper: iZ,
  seal: lZ,
  fish: uZ,
  tropical_fish: pZ,
  blowfish: hZ,
  shark: dZ,
  octopus: mZ,
  shell: fZ,
  snail: gZ,
  butterfly: _Z,
  bug: bZ,
  ant: kZ,
  bee: yZ,
  honeybee: wZ,
  beetle: vZ,
  lady_beetle: xZ,
  cricket: AZ,
  cockroach: SZ,
  spider: LZ,
  spider_web: NZ,
  scorpion: CZ,
  mosquito: EZ,
  fly: TZ,
  worm: DZ,
  microbe: jZ,
  bouquet: qZ,
  cherry_blossom: RZ,
  white_flower: PZ,
  rosette: IZ,
  rose: OZ,
  wilted_flower: FZ,
  hibiscus: MZ,
  sunflower: BZ,
  blossom: $Z,
  tulip: zZ,
  seedling: GZ,
  potted_plant: UZ,
  evergreen_tree: HZ,
  deciduous_tree: VZ,
  palm_tree: WZ,
  cactus: ZZ,
  ear_of_rice: JZ,
  herb: QZ,
  shamrock: YZ,
  four_leaf_clover: XZ,
  maple_leaf: KZ,
  fallen_leaf: eJ,
  leaves: nJ,
  grapes: tJ,
  melon: sJ,
  watermelon: oJ,
  tangerine: rJ,
  orange: cJ,
  mandarin: aJ,
  lemon: iJ,
  banana: lJ,
  pineapple: uJ,
  mango: pJ,
  apple: hJ,
  green_apple: dJ,
  pear: mJ,
  peach: fJ,
  cherries: gJ,
  strawberry: _J,
  blueberries: bJ,
  kiwi_fruit: kJ,
  tomato: yJ,
  olive: wJ,
  coconut: vJ,
  avocado: xJ,
  eggplant: AJ,
  potato: SJ,
  carrot: LJ,
  corn: NJ,
  hot_pepper: CJ,
  bell_pepper: EJ,
  cucumber: TJ,
  leafy_green: DJ,
  broccoli: jJ,
  garlic: qJ,
  onion: RJ,
  mushroom: PJ,
  peanuts: IJ,
  chestnut: OJ,
  bread: FJ,
  croissant: MJ,
  baguette_bread: BJ,
  flatbread: $J,
  pretzel: zJ,
  bagel: GJ,
  pancakes: UJ,
  waffle: HJ,
  cheese: VJ,
  meat_on_bone: WJ,
  poultry_leg: ZJ,
  cut_of_meat: JJ,
  bacon: QJ,
  hamburger: YJ,
  fries: XJ,
  pizza: KJ,
  hotdog: eQ,
  sandwich: nQ,
  taco: tQ,
  burrito: sQ,
  tamale: oQ,
  stuffed_flatbread: rQ,
  falafel: cQ,
  egg: aQ,
  fried_egg: iQ,
  shallow_pan_of_food: lQ,
  stew: uQ,
  fondue: pQ,
  bowl_with_spoon: hQ,
  green_salad: dQ,
  popcorn: mQ,
  butter: fQ,
  salt: gQ,
  canned_food: _Q,
  bento: bQ,
  rice_cracker: kQ,
  rice_ball: yQ,
  rice: wQ,
  curry: vQ,
  ramen: xQ,
  spaghetti: AQ,
  sweet_potato: SQ,
  oden: LQ,
  sushi: NQ,
  fried_shrimp: CQ,
  fish_cake: EQ,
  moon_cake: TQ,
  dango: DQ,
  dumpling: jQ,
  fortune_cookie: qQ,
  takeout_box: RQ,
  crab: PQ,
  lobster: IQ,
  shrimp: OQ,
  squid: FQ,
  oyster: MQ,
  icecream: BQ,
  shaved_ice: $Q,
  ice_cream: zQ,
  doughnut: GQ,
  cookie: UQ,
  birthday: HQ,
  cake: VQ,
  cupcake: WQ,
  pie: ZQ,
  chocolate_bar: JQ,
  candy: QQ,
  lollipop: YQ,
  custard: XQ,
  honey_pot: KQ,
  baby_bottle: eY,
  milk_glass: nY,
  coffee: tY,
  teapot: sY,
  tea: oY,
  sake: rY,
  champagne: cY,
  wine_glass: aY,
  cocktail: iY,
  tropical_drink: lY,
  beer: uY,
  beers: pY,
  clinking_glasses: hY,
  tumbler_glass: dY,
  cup_with_straw: mY,
  bubble_tea: fY,
  beverage_box: gY,
  mate: _Y,
  ice_cube: bY,
  chopsticks: kY,
  plate_with_cutlery: yY,
  fork_and_knife: wY,
  spoon: vY,
  hocho: xY,
  knife: AY,
  amphora: SY,
  earth_africa: LY,
  earth_americas: NY,
  earth_asia: CY,
  globe_with_meridians: EY,
  world_map: TY,
  japan: DY,
  compass: jY,
  mountain_snow: qY,
  mountain: RY,
  volcano: PY,
  mount_fuji: IY,
  camping: OY,
  beach_umbrella: FY,
  desert: MY,
  desert_island: BY,
  national_park: $Y,
  stadium: zY,
  classical_building: GY,
  building_construction: UY,
  bricks: HY,
  rock: VY,
  wood: WY,
  hut: ZY,
  houses: JY,
  derelict_house: QY,
  house: YY,
  house_with_garden: XY,
  office: KY,
  post_office: eX,
  european_post_office: nX,
  hospital: tX,
  bank: sX,
  hotel: oX,
  love_hotel: rX,
  convenience_store: cX,
  school: aX,
  department_store: iX,
  factory: lX,
  japanese_castle: uX,
  european_castle: pX,
  wedding: hX,
  tokyo_tower: dX,
  statue_of_liberty: mX,
  church: fX,
  mosque: gX,
  hindu_temple: _X,
  synagogue: bX,
  shinto_shrine: kX,
  kaaba: yX,
  fountain: wX,
  tent: vX,
  foggy: xX,
  night_with_stars: AX,
  cityscape: SX,
  sunrise_over_mountains: LX,
  sunrise: NX,
  city_sunset: CX,
  city_sunrise: EX,
  bridge_at_night: TX,
  hotsprings: DX,
  carousel_horse: jX,
  ferris_wheel: qX,
  roller_coaster: RX,
  barber: PX,
  circus_tent: IX,
  steam_locomotive: OX,
  railway_car: FX,
  bullettrain_side: MX,
  bullettrain_front: BX,
  train2: $X,
  metro: zX,
  light_rail: GX,
  station: UX,
  tram: HX,
  monorail: VX,
  mountain_railway: WX,
  train: ZX,
  bus: JX,
  oncoming_bus: QX,
  trolleybus: YX,
  minibus: XX,
  ambulance: KX,
  fire_engine: eK,
  police_car: nK,
  oncoming_police_car: tK,
  taxi: sK,
  oncoming_taxi: oK,
  car: rK,
  red_car: cK,
  oncoming_automobile: aK,
  blue_car: iK,
  pickup_truck: lK,
  truck: uK,
  articulated_lorry: pK,
  tractor: hK,
  racing_car: dK,
  motorcycle: mK,
  motor_scooter: fK,
  manual_wheelchair: gK,
  motorized_wheelchair: _K,
  auto_rickshaw: bK,
  bike: kK,
  kick_scooter: yK,
  skateboard: wK,
  roller_skate: vK,
  busstop: xK,
  motorway: AK,
  railway_track: SK,
  oil_drum: LK,
  fuelpump: NK,
  rotating_light: CK,
  traffic_light: EK,
  vertical_traffic_light: TK,
  stop_sign: DK,
  construction: jK,
  anchor: qK,
  boat: RK,
  sailboat: PK,
  canoe: IK,
  speedboat: OK,
  passenger_ship: FK,
  ferry: MK,
  motor_boat: BK,
  ship: $K,
  airplane: zK,
  small_airplane: GK,
  flight_departure: UK,
  flight_arrival: HK,
  parachute: VK,
  seat: WK,
  helicopter: ZK,
  suspension_railway: JK,
  mountain_cableway: QK,
  aerial_tramway: YK,
  artificial_satellite: XK,
  rocket: KK,
  flying_saucer: eee,
  bellhop_bell: nee,
  luggage: tee,
  hourglass: see,
  hourglass_flowing_sand: oee,
  watch: ree,
  alarm_clock: cee,
  stopwatch: aee,
  timer_clock: iee,
  mantelpiece_clock: lee,
  clock12: uee,
  clock1230: pee,
  clock1: hee,
  clock130: dee,
  clock2: mee,
  clock230: fee,
  clock3: gee,
  clock330: _ee,
  clock4: bee,
  clock430: kee,
  clock5: yee,
  clock530: wee,
  clock6: vee,
  clock630: xee,
  clock7: Aee,
  clock730: See,
  clock8: Lee,
  clock830: Nee,
  clock9: Cee,
  clock930: Eee,
  clock10: Tee,
  clock1030: Dee,
  clock11: jee,
  clock1130: qee,
  new_moon: Ree,
  waxing_crescent_moon: Pee,
  first_quarter_moon: Iee,
  moon: Oee,
  waxing_gibbous_moon: Fee,
  full_moon: Mee,
  waning_gibbous_moon: Bee,
  last_quarter_moon: $ee,
  waning_crescent_moon: zee,
  crescent_moon: Gee,
  new_moon_with_face: Uee,
  first_quarter_moon_with_face: Hee,
  last_quarter_moon_with_face: Vee,
  thermometer: Wee,
  sunny: Zee,
  full_moon_with_face: Jee,
  sun_with_face: Qee,
  ringed_planet: Yee,
  star: Xee,
  star2: Kee,
  stars: ene,
  milky_way: nne,
  cloud: tne,
  partly_sunny: sne,
  cloud_with_lightning_and_rain: one,
  sun_behind_small_cloud: rne,
  sun_behind_large_cloud: cne,
  sun_behind_rain_cloud: ane,
  cloud_with_rain: ine,
  cloud_with_snow: lne,
  cloud_with_lightning: une,
  tornado: pne,
  fog: hne,
  wind_face: dne,
  cyclone: mne,
  rainbow: fne,
  closed_umbrella: gne,
  open_umbrella: _ne,
  umbrella: bne,
  parasol_on_ground: kne,
  zap: yne,
  snowflake: wne,
  snowman_with_snow: vne,
  snowman: xne,
  comet: Ane,
  fire: Sne,
  droplet: Lne,
  ocean: Nne,
  jack_o_lantern: Cne,
  christmas_tree: Ene,
  fireworks: Tne,
  sparkler: Dne,
  firecracker: jne,
  sparkles: qne,
  balloon: Rne,
  tada: Pne,
  confetti_ball: Ine,
  tanabata_tree: One,
  bamboo: Fne,
  dolls: Mne,
  flags: Bne,
  wind_chime: $ne,
  rice_scene: zne,
  red_envelope: Gne,
  ribbon: Une,
  gift: Hne,
  reminder_ribbon: Vne,
  tickets: Wne,
  ticket: Zne,
  medal_military: Jne,
  trophy: Qne,
  medal_sports: Yne,
  "1st_place_medal": "🥇",
  "2nd_place_medal": "🥈",
  "3rd_place_medal": "🥉",
  soccer: Xne,
  baseball: Kne,
  softball: ete,
  basketball: nte,
  volleyball: tte,
  football: ste,
  rugby_football: ote,
  tennis: rte,
  flying_disc: cte,
  bowling: ate,
  cricket_game: ite,
  field_hockey: lte,
  ice_hockey: ute,
  lacrosse: pte,
  ping_pong: hte,
  badminton: dte,
  boxing_glove: mte,
  martial_arts_uniform: fte,
  goal_net: gte,
  golf: _te,
  ice_skate: bte,
  fishing_pole_and_fish: kte,
  diving_mask: yte,
  running_shirt_with_sash: wte,
  ski: vte,
  sled: xte,
  curling_stone: Ate,
  dart: Ste,
  yo_yo: Lte,
  kite: Nte,
  "8ball": "🎱",
  crystal_ball: Cte,
  magic_wand: Ete,
  nazar_amulet: Tte,
  video_game: Dte,
  joystick: jte,
  slot_machine: qte,
  game_die: Rte,
  jigsaw: Pte,
  teddy_bear: Ite,
  pinata: Ote,
  nesting_dolls: Fte,
  spades: Mte,
  hearts: Bte,
  diamonds: $te,
  clubs: zte,
  chess_pawn: Gte,
  black_joker: Ute,
  mahjong: Hte,
  flower_playing_cards: Vte,
  performing_arts: Wte,
  framed_picture: Zte,
  art: Jte,
  thread: Qte,
  sewing_needle: Yte,
  yarn: Xte,
  knot: Kte,
  eyeglasses: ese,
  dark_sunglasses: nse,
  goggles: tse,
  lab_coat: sse,
  safety_vest: ose,
  necktie: rse,
  shirt: cse,
  tshirt: ase,
  jeans: ise,
  scarf: lse,
  gloves: use,
  coat: pse,
  socks: hse,
  dress: dse,
  kimono: mse,
  sari: fse,
  one_piece_swimsuit: gse,
  swim_brief: _se,
  shorts: bse,
  bikini: kse,
  womans_clothes: yse,
  purse: wse,
  handbag: vse,
  pouch: xse,
  shopping: Ase,
  school_satchel: Sse,
  thong_sandal: Lse,
  mans_shoe: Nse,
  shoe: Cse,
  athletic_shoe: Ese,
  hiking_boot: Tse,
  flat_shoe: Dse,
  high_heel: jse,
  sandal: qse,
  ballet_shoes: Rse,
  boot: Pse,
  crown: Ise,
  womans_hat: Ose,
  tophat: Fse,
  mortar_board: Mse,
  billed_cap: Bse,
  military_helmet: $se,
  rescue_worker_helmet: zse,
  prayer_beads: Gse,
  lipstick: Use,
  ring: Hse,
  gem: Vse,
  mute: Wse,
  speaker: Zse,
  sound: Jse,
  loud_sound: Qse,
  loudspeaker: Yse,
  mega: Xse,
  postal_horn: Kse,
  bell: eoe,
  no_bell: noe,
  musical_score: toe,
  musical_note: soe,
  notes: ooe,
  studio_microphone: roe,
  level_slider: coe,
  control_knobs: aoe,
  microphone: ioe,
  headphones: loe,
  radio: uoe,
  saxophone: poe,
  accordion: hoe,
  guitar: doe,
  musical_keyboard: moe,
  trumpet: foe,
  violin: goe,
  banjo: _oe,
  drum: boe,
  long_drum: koe,
  iphone: yoe,
  calling: woe,
  phone: voe,
  telephone: xoe,
  telephone_receiver: Aoe,
  pager: Soe,
  fax: Loe,
  battery: Noe,
  electric_plug: Coe,
  computer: Eoe,
  desktop_computer: Toe,
  printer: Doe,
  keyboard: joe,
  computer_mouse: qoe,
  trackball: Roe,
  minidisc: Poe,
  floppy_disk: Ioe,
  cd: Ooe,
  dvd: Foe,
  abacus: Moe,
  movie_camera: Boe,
  film_strip: $oe,
  film_projector: zoe,
  clapper: Goe,
  tv: Uoe,
  camera: Hoe,
  camera_flash: Voe,
  video_camera: Woe,
  vhs: Zoe,
  mag: Joe,
  mag_right: Qoe,
  candle: Yoe,
  bulb: Xoe,
  flashlight: Koe,
  izakaya_lantern: ere,
  lantern: nre,
  diya_lamp: tre,
  notebook_with_decorative_cover: sre,
  closed_book: ore,
  book: rre,
  open_book: cre,
  green_book: are,
  blue_book: ire,
  orange_book: lre,
  books: ure,
  notebook: pre,
  ledger: hre,
  page_with_curl: dre,
  scroll: mre,
  page_facing_up: fre,
  newspaper: gre,
  newspaper_roll: _re,
  bookmark_tabs: bre,
  bookmark: kre,
  label: yre,
  moneybag: wre,
  coin: vre,
  yen: xre,
  dollar: Are,
  euro: Sre,
  pound: Lre,
  money_with_wings: Nre,
  credit_card: Cre,
  receipt: Ere,
  chart: Tre,
  envelope: Dre,
  email: jre,
  "e-mail": "📧",
  incoming_envelope: qre,
  envelope_with_arrow: Rre,
  outbox_tray: Pre,
  inbox_tray: Ire,
  package: "📦",
  mailbox: Ore,
  mailbox_closed: Fre,
  mailbox_with_mail: Mre,
  mailbox_with_no_mail: Bre,
  postbox: $re,
  ballot_box: zre,
  pencil2: Gre,
  black_nib: Ure,
  fountain_pen: Hre,
  pen: Vre,
  paintbrush: Wre,
  crayon: Zre,
  memo: Jre,
  pencil: Qre,
  briefcase: Yre,
  file_folder: Xre,
  open_file_folder: Kre,
  card_index_dividers: ece,
  date: nce,
  calendar: tce,
  spiral_notepad: sce,
  spiral_calendar: oce,
  card_index: rce,
  chart_with_upwards_trend: cce,
  chart_with_downwards_trend: ace,
  bar_chart: ice,
  clipboard: lce,
  pushpin: uce,
  round_pushpin: pce,
  paperclip: hce,
  paperclips: dce,
  straight_ruler: mce,
  triangular_ruler: fce,
  scissors: gce,
  card_file_box: _ce,
  file_cabinet: bce,
  wastebasket: kce,
  lock: yce,
  unlock: wce,
  lock_with_ink_pen: vce,
  closed_lock_with_key: xce,
  key: Ace,
  old_key: Sce,
  hammer: Lce,
  axe: Nce,
  pick: Cce,
  hammer_and_pick: Ece,
  hammer_and_wrench: Tce,
  dagger: Dce,
  crossed_swords: jce,
  gun: qce,
  boomerang: Rce,
  bow_and_arrow: Pce,
  shield: Ice,
  carpentry_saw: Oce,
  wrench: Fce,
  screwdriver: Mce,
  nut_and_bolt: Bce,
  gear: $ce,
  clamp: zce,
  balance_scale: Gce,
  probing_cane: Uce,
  link: Hce,
  chains: Vce,
  hook: Wce,
  toolbox: Zce,
  magnet: Jce,
  ladder: Qce,
  alembic: Yce,
  test_tube: Xce,
  petri_dish: Kce,
  dna: eae,
  microscope: nae,
  telescope: tae,
  satellite: sae,
  syringe: oae,
  drop_of_blood: rae,
  pill: cae,
  adhesive_bandage: aae,
  stethoscope: iae,
  door: lae,
  elevator: uae,
  mirror: pae,
  window: hae,
  bed: dae,
  couch_and_lamp: mae,
  chair: fae,
  toilet: gae,
  plunger: _ae,
  shower: bae,
  bathtub: kae,
  mouse_trap: yae,
  razor: wae,
  lotion_bottle: vae,
  safety_pin: xae,
  broom: Aae,
  basket: Sae,
  roll_of_paper: Lae,
  bucket: Nae,
  soap: Cae,
  toothbrush: Eae,
  sponge: Tae,
  fire_extinguisher: Dae,
  shopping_cart: jae,
  smoking: qae,
  coffin: Rae,
  headstone: Pae,
  funeral_urn: Iae,
  moyai: Oae,
  placard: Fae,
  atm: Mae,
  put_litter_in_its_place: Bae,
  potable_water: $ae,
  wheelchair: zae,
  mens: Gae,
  womens: Uae,
  restroom: Hae,
  baby_symbol: Vae,
  wc: Wae,
  passport_control: Zae,
  customs: Jae,
  baggage_claim: Qae,
  left_luggage: Yae,
  warning: Xae,
  children_crossing: Kae,
  no_entry: eie,
  no_entry_sign: nie,
  no_bicycles: tie,
  no_smoking: sie,
  do_not_litter: oie,
  "non-potable_water": "🚱",
  no_pedestrians: rie,
  no_mobile_phones: cie,
  underage: aie,
  radioactive: iie,
  biohazard: lie,
  arrow_up: uie,
  arrow_upper_right: pie,
  arrow_right: hie,
  arrow_lower_right: die,
  arrow_down: mie,
  arrow_lower_left: fie,
  arrow_left: gie,
  arrow_upper_left: _ie,
  arrow_up_down: bie,
  left_right_arrow: kie,
  leftwards_arrow_with_hook: yie,
  arrow_right_hook: wie,
  arrow_heading_up: vie,
  arrow_heading_down: xie,
  arrows_clockwise: Aie,
  arrows_counterclockwise: Sie,
  back: Lie,
  end: Nie,
  on: Cie,
  soon: Eie,
  top: Tie,
  place_of_worship: Die,
  atom_symbol: jie,
  om: qie,
  star_of_david: Rie,
  wheel_of_dharma: Pie,
  yin_yang: Iie,
  latin_cross: Oie,
  orthodox_cross: Fie,
  star_and_crescent: Mie,
  peace_symbol: Bie,
  menorah: $ie,
  six_pointed_star: zie,
  aries: Gie,
  taurus: Uie,
  gemini: Hie,
  cancer: Vie,
  leo: Wie,
  virgo: Zie,
  libra: Jie,
  scorpius: Qie,
  sagittarius: Yie,
  capricorn: Xie,
  aquarius: Kie,
  pisces: ele,
  ophiuchus: nle,
  twisted_rightwards_arrows: tle,
  repeat: sle,
  repeat_one: ole,
  arrow_forward: rle,
  fast_forward: cle,
  next_track_button: ale,
  play_or_pause_button: ile,
  arrow_backward: lle,
  rewind: ule,
  previous_track_button: ple,
  arrow_up_small: hle,
  arrow_double_up: dle,
  arrow_down_small: mle,
  arrow_double_down: fle,
  pause_button: gle,
  stop_button: _le,
  record_button: ble,
  eject_button: kle,
  cinema: yle,
  low_brightness: wle,
  high_brightness: vle,
  signal_strength: xle,
  vibration_mode: Ale,
  mobile_phone_off: Sle,
  female_sign: Lle,
  male_sign: Nle,
  transgender_symbol: Cle,
  heavy_multiplication_x: Ele,
  heavy_plus_sign: Tle,
  heavy_minus_sign: Dle,
  heavy_division_sign: jle,
  infinity: qle,
  bangbang: Rle,
  interrobang: Ple,
  question: Ile,
  grey_question: Ole,
  grey_exclamation: Fle,
  exclamation: Mle,
  heavy_exclamation_mark: Ble,
  wavy_dash: $le,
  currency_exchange: zle,
  heavy_dollar_sign: Gle,
  medical_symbol: Ule,
  recycle: Hle,
  fleur_de_lis: Vle,
  trident: Wle,
  name_badge: Zle,
  beginner: Jle,
  o: Qle,
  white_check_mark: Yle,
  ballot_box_with_check: Xle,
  heavy_check_mark: Kle,
  x: eue,
  negative_squared_cross_mark: nue,
  curly_loop: tue,
  loop: sue,
  part_alternation_mark: oue,
  eight_spoked_asterisk: rue,
  eight_pointed_black_star: cue,
  sparkle: aue,
  copyright: iue,
  registered: lue,
  tm: uue,
  hash: pue,
  asterisk: hue,
  zero: due,
  one: mue,
  two: fue,
  three: gue,
  four: _ue,
  five: bue,
  six: kue,
  seven: yue,
  eight: wue,
  nine: vue,
  keycap_ten: xue,
  capital_abcd: Aue,
  abcd: Sue,
  symbols: Lue,
  abc: Nue,
  a: Cue,
  ab: Eue,
  b: Tue,
  cl: Due,
  cool: jue,
  free: que,
  information_source: Rue,
  id: Pue,
  m: Iue,
  new: "🆕",
  ng: Oue,
  o2: Fue,
  ok: Mue,
  parking: Bue,
  sos: $ue,
  up: zue,
  vs: Gue,
  koko: Uue,
  sa: Hue,
  ideograph_advantage: Vue,
  accept: Wue,
  congratulations: Zue,
  secret: Jue,
  u6e80: Que,
  red_circle: Yue,
  orange_circle: Xue,
  yellow_circle: Kue,
  green_circle: epe,
  large_blue_circle: npe,
  purple_circle: tpe,
  brown_circle: spe,
  black_circle: ope,
  white_circle: rpe,
  red_square: cpe,
  orange_square: ape,
  yellow_square: ipe,
  green_square: lpe,
  blue_square: upe,
  purple_square: ppe,
  brown_square: hpe,
  black_large_square: dpe,
  white_large_square: mpe,
  black_medium_square: fpe,
  white_medium_square: gpe,
  black_medium_small_square: _pe,
  white_medium_small_square: bpe,
  black_small_square: kpe,
  white_small_square: ype,
  large_orange_diamond: wpe,
  large_blue_diamond: vpe,
  small_orange_diamond: xpe,
  small_blue_diamond: Ape,
  small_red_triangle: Spe,
  small_red_triangle_down: Lpe,
  diamond_shape_with_a_dot_inside: Npe,
  radio_button: Cpe,
  white_square_button: Epe,
  black_square_button: Tpe,
  checkered_flag: Dpe,
  triangular_flag_on_post: jpe,
  crossed_flags: qpe,
  black_flag: Rpe,
  white_flag: Ppe,
  rainbow_flag: Ipe,
  transgender_flag: Ope,
  pirate_flag: Fpe,
  ascension_island: Mpe,
  andorra: Bpe,
  united_arab_emirates: $pe,
  afghanistan: zpe,
  antigua_barbuda: Gpe,
  anguilla: Upe,
  albania: Hpe,
  armenia: Vpe,
  angola: Wpe,
  antarctica: Zpe,
  argentina: Jpe,
  american_samoa: Qpe,
  austria: Ype,
  australia: Xpe,
  aruba: Kpe,
  aland_islands: ehe,
  azerbaijan: nhe,
  bosnia_herzegovina: the,
  barbados: she,
  bangladesh: ohe,
  belgium: rhe,
  burkina_faso: che,
  bulgaria: ahe,
  bahrain: ihe,
  burundi: lhe,
  benin: uhe,
  st_barthelemy: phe,
  bermuda: hhe,
  brunei: dhe,
  bolivia: mhe,
  caribbean_netherlands: fhe,
  brazil: ghe,
  bahamas: _he,
  bhutan: bhe,
  bouvet_island: khe,
  botswana: yhe,
  belarus: whe,
  belize: vhe,
  canada: xhe,
  cocos_islands: Ahe,
  congo_kinshasa: She,
  central_african_republic: Lhe,
  congo_brazzaville: Nhe,
  switzerland: Che,
  cote_divoire: Ehe,
  cook_islands: The,
  chile: Dhe,
  cameroon: jhe,
  cn: qhe,
  colombia: Rhe,
  clipperton_island: Phe,
  costa_rica: Ihe,
  cuba: Ohe,
  cape_verde: Fhe,
  curacao: Mhe,
  christmas_island: Bhe,
  cyprus: $he,
  czech_republic: zhe,
  de: Ghe,
  diego_garcia: Uhe,
  djibouti: Hhe,
  denmark: Vhe,
  dominica: Whe,
  dominican_republic: Zhe,
  algeria: Jhe,
  ceuta_melilla: Qhe,
  ecuador: Yhe,
  estonia: Xhe,
  egypt: Khe,
  western_sahara: ede,
  eritrea: nde,
  es: tde,
  ethiopia: sde,
  eu: ode,
  european_union: rde,
  finland: cde,
  fiji: ade,
  falkland_islands: ide,
  micronesia: lde,
  faroe_islands: ude,
  fr: pde,
  gabon: hde,
  gb: dde,
  uk: mde,
  grenada: fde,
  georgia: gde,
  french_guiana: _de,
  guernsey: bde,
  ghana: kde,
  gibraltar: yde,
  greenland: wde,
  gambia: vde,
  guinea: xde,
  guadeloupe: Ade,
  equatorial_guinea: Sde,
  greece: Lde,
  south_georgia_south_sandwich_islands: Nde,
  guatemala: Cde,
  guam: Ede,
  guinea_bissau: Tde,
  guyana: Dde,
  hong_kong: jde,
  heard_mcdonald_islands: qde,
  honduras: Rde,
  croatia: Pde,
  haiti: Ide,
  hungary: Ode,
  canary_islands: Fde,
  indonesia: Mde,
  ireland: Bde,
  israel: $de,
  isle_of_man: zde,
  india: Gde,
  british_indian_ocean_territory: Ude,
  iraq: Hde,
  iran: Vde,
  iceland: Wde,
  it: Zde,
  jersey: Jde,
  jamaica: Qde,
  jordan: Yde,
  jp: Xde,
  kenya: Kde,
  kyrgyzstan: eme,
  cambodia: nme,
  kiribati: tme,
  comoros: sme,
  st_kitts_nevis: ome,
  north_korea: rme,
  kr: cme,
  kuwait: ame,
  cayman_islands: ime,
  kazakhstan: lme,
  laos: ume,
  lebanon: pme,
  st_lucia: hme,
  liechtenstein: dme,
  sri_lanka: mme,
  liberia: fme,
  lesotho: gme,
  lithuania: _me,
  luxembourg: bme,
  latvia: kme,
  libya: yme,
  morocco: wme,
  monaco: vme,
  moldova: xme,
  montenegro: Ame,
  st_martin: Sme,
  madagascar: Lme,
  marshall_islands: Nme,
  macedonia: Cme,
  mali: Eme,
  myanmar: Tme,
  mongolia: Dme,
  macau: jme,
  northern_mariana_islands: qme,
  martinique: Rme,
  mauritania: Pme,
  montserrat: Ime,
  malta: Ome,
  mauritius: Fme,
  maldives: Mme,
  malawi: Bme,
  mexico: $me,
  malaysia: zme,
  mozambique: Gme,
  namibia: Ume,
  new_caledonia: Hme,
  niger: Vme,
  norfolk_island: Wme,
  nigeria: Zme,
  nicaragua: Jme,
  netherlands: Qme,
  norway: Yme,
  nepal: Xme,
  nauru: Kme,
  niue: efe,
  new_zealand: nfe,
  oman: tfe,
  panama: sfe,
  peru: ofe,
  french_polynesia: rfe,
  papua_new_guinea: cfe,
  philippines: afe,
  pakistan: ife,
  poland: lfe,
  st_pierre_miquelon: ufe,
  pitcairn_islands: pfe,
  puerto_rico: hfe,
  palestinian_territories: dfe,
  portugal: mfe,
  palau: ffe,
  paraguay: gfe,
  qatar: _fe,
  reunion: bfe,
  romania: kfe,
  serbia: yfe,
  ru: wfe,
  rwanda: vfe,
  saudi_arabia: xfe,
  solomon_islands: Afe,
  seychelles: Sfe,
  sudan: Lfe,
  sweden: Nfe,
  singapore: Cfe,
  st_helena: Efe,
  slovenia: Tfe,
  svalbard_jan_mayen: Dfe,
  slovakia: jfe,
  sierra_leone: qfe,
  san_marino: Rfe,
  senegal: Pfe,
  somalia: Ife,
  suriname: Ofe,
  south_sudan: Ffe,
  sao_tome_principe: Mfe,
  el_salvador: Bfe,
  sint_maarten: $fe,
  syria: zfe,
  swaziland: Gfe,
  tristan_da_cunha: Ufe,
  turks_caicos_islands: Hfe,
  chad: Vfe,
  french_southern_territories: Wfe,
  togo: Zfe,
  thailand: Jfe,
  tajikistan: Qfe,
  tokelau: Yfe,
  timor_leste: Xfe,
  turkmenistan: Kfe,
  tunisia: ege,
  tonga: nge,
  tr: tge,
  trinidad_tobago: sge,
  tuvalu: oge,
  taiwan: rge,
  tanzania: cge,
  ukraine: age,
  uganda: ige,
  us_outlying_islands: lge,
  united_nations: uge,
  us: pge,
  uruguay: hge,
  uzbekistan: dge,
  vatican_city: mge,
  st_vincent_grenadines: fge,
  venezuela: gge,
  british_virgin_islands: _ge,
  us_virgin_islands: bge,
  vietnam: kge,
  vanuatu: yge,
  wallis_futuna: wge,
  samoa: vge,
  kosovo: xge,
  yemen: Age,
  mayotte: Sge,
  south_africa: Lge,
  zambia: Nge,
  zimbabwe: Cge,
  england: Ege,
  scotland: Tge,
  wales: Dge
};
var qge = {
  angry: [">:(", ">:-("],
  blush: [':")', ':-")'],
  broken_heart: ["</3", "<\\3"],
  // :\ and :-\ not used because of conflict with markdown escaping
  confused: [":/", ":-/"],
  // twemoji shows question
  cry: [":'(", ":'-(", ":,(", ":,-("],
  frowning: [":(", ":-("],
  heart: ["<3"],
  imp: ["]:(", "]:-("],
  innocent: ["o:)", "O:)", "o:-)", "O:-)", "0:)", "0:-)"],
  joy: [":')", ":'-)", ":,)", ":,-)", ":'D", ":'-D", ":,D", ":,-D"],
  kissing: [":*", ":-*"],
  laughing: ["x-)", "X-)"],
  neutral_face: [":|", ":-|"],
  open_mouth: [":o", ":-o", ":O", ":-O"],
  rage: [":@", ":-@"],
  smile: [":D", ":-D"],
  smiley: [":)", ":-)"],
  smiling_imp: ["]:)", "]:-)"],
  sob: [":,'(", ":,'-(", ";(", ";-("],
  stuck_out_tongue: [":P", ":-P"],
  sunglasses: ["8-)", "B-)"],
  sweat: [",:(", ",:-("],
  sweat_smile: [",:)", ",:-)"],
  unamused: [":s", ":-S", ":z", ":-Z", ":$", ":-$"],
  wink: [";)", ";-)"]
}, Rge = function(e, t) {
  return e[t].content;
}, Pge = function(e, t, s, r, o) {
  var a = e.utils.arrayReplaceAt, c = e.utils.lib.ucmicro, l = new RegExp([c.Z.source, c.P.source, c.Cc.source].join("|"));
  function i(p, h, d) {
    var m, f = 0, L = [];
    return p.replace(o, function(S, b, k) {
      var w;
      if (s.hasOwnProperty(S)) {
        if (w = s[S], b > 0 && !l.test(k[b - 1]) || b + S.length < k.length && !l.test(k[b + S.length]))
          return;
      } else
        w = S.slice(1, -1);
      b > f && (m = new d("text", "", 0), m.content = p.slice(f, b), L.push(m)), m = new d("emoji", "", 0), m.markup = w, m.content = t[w], L.push(m), f = b + S.length;
    }), f < p.length && (m = new d("text", "", 0), m.content = p.slice(f), L.push(m)), L;
  }
  return function(h) {
    var d, m, f, L, S, b = h.tokens, k = 0;
    for (m = 0, f = b.length; m < f; m++)
      if (b[m].type === "inline")
        for (L = b[m].children, d = L.length - 1; d >= 0; d--)
          S = L[d], (S.type === "link_open" || S.type === "link_close") && S.info === "auto" && (k -= S.nesting), S.type === "text" && k === 0 && r.test(S.content) && (b[m].children = L = a(
            L,
            d,
            i(S.content, S.level, h.Token)
          ));
  };
};
function Ige(n) {
  return n.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
}
var Oge = function(e) {
  var t = e.defs, s;
  e.enabled.length && (t = Object.keys(t).reduce(function(l, i) {
    return e.enabled.indexOf(i) >= 0 && (l[i] = t[i]), l;
  }, {})), s = Object.keys(e.shortcuts).reduce(function(l, i) {
    return t[i] ? Array.isArray(e.shortcuts[i]) ? (e.shortcuts[i].forEach(function(p) {
      l[p] = i;
    }), l) : (l[e.shortcuts[i]] = i, l) : l;
  }, {});
  var r = Object.keys(t), o;
  r.length === 0 ? o = "^$" : o = r.map(function(l) {
    return ":" + l + ":";
  }).concat(Object.keys(s)).sort().reverse().map(function(l) {
    return Ige(l);
  }).join("|");
  var a = RegExp(o), c = RegExp(o, "g");
  return {
    defs: t,
    shortcuts: s,
    scanRE: a,
    replaceRE: c
  };
}, Fge = Rge, Mge = Pge, Bge = Oge, $ge = function(e, t) {
  var s = {
    defs: {},
    shortcuts: {},
    enabled: []
  }, r = Bge(e.utils.assign({}, s, t || {}));
  e.renderer.rules.emoji = Fge, e.core.ruler.after(
    "linkify",
    "emoji",
    Mge(e, r.defs, r.shortcuts, r.scanRE, r.replaceRE)
  );
}, zge = jge, Gge = qge, Uge = $ge, Hge = function(e, t) {
  var s = {
    defs: zge,
    shortcuts: Gge,
    enabled: []
  }, r = e.utils.assign({}, s, t || {});
  Uge(e, r);
};
const Vge = /* @__PURE__ */ hn(Hge);
var Wge = function(e, t, s) {
  function r(m) {
    return m.trim().split(" ", 2)[0] === t;
  }
  function o(m, f, L, S, b) {
    return m[f].nesting === 1 && m[f].attrJoin("class", t), b.renderToken(m, f, L, S, b);
  }
  s = s || {};
  var a = 3, c = s.marker || ":", l = c.charCodeAt(0), i = c.length, p = s.validate || r, h = s.render || o;
  function d(m, f, L, S) {
    var b, k, w, N, y, u, g, x, _ = !1, v = m.bMarks[f] + m.tShift[f], A = m.eMarks[f];
    if (l !== m.src.charCodeAt(v))
      return !1;
    for (b = v + 1; b <= A && c[(b - v) % i] === m.src[b]; b++)
      ;
    if (w = Math.floor((b - v) / i), w < a || (b -= (b - v) % i, N = m.src.slice(v, b), y = m.src.slice(b, A), !p(y, N)))
      return !1;
    if (S)
      return !0;
    for (k = f; k++, !(k >= L || (v = m.bMarks[k] + m.tShift[k], A = m.eMarks[k], v < A && m.sCount[k] < m.blkIndent)); )
      if (l === m.src.charCodeAt(v) && !(m.sCount[k] - m.blkIndent >= 4)) {
        for (b = v + 1; b <= A && c[(b - v) % i] === m.src[b]; b++)
          ;
        if (!(Math.floor((b - v) / i) < w) && (b -= (b - v) % i, b = m.skipSpaces(b), !(b < A))) {
          _ = !0;
          break;
        }
      }
    return g = m.parentType, x = m.lineMax, m.parentType = "container", m.lineMax = k, u = m.push("container_" + t + "_open", "div", 1), u.markup = N, u.block = !0, u.info = y, u.map = [f, k], m.md.block.tokenize(m, f + 1, k), u = m.push("container_" + t + "_close", "div", -1), u.markup = m.src.slice(v, b), u.block = !0, m.parentType = g, m.lineMax = x, m.line = k + (_ ? 1 : 0), !0;
  }
  e.block.ruler.before("fence", "container_" + t, d, {
    alt: ["paragraph", "reference", "blockquote", "list"]
  }), e.renderer.rules["container_" + t + "_open"] = h, e.renderer.rules["container_" + t + "_close"] = h;
};
const ln = /* @__PURE__ */ hn(Wge);
let Zge = (n) => crypto.getRandomValues(new Uint8Array(n)), Jge = (n, e, t) => {
  let s = (2 << Math.log(n.length - 1) / Math.LN2) - 1, r = -~(1.6 * s * e / n.length);
  return (o = e) => {
    let a = "";
    for (; ; ) {
      let c = t(r), l = r;
      for (; l--; )
        if (a += n[c[l] & s] || "", a.length === o)
          return a;
    }
  };
}, Qge = (n, e = 21) => Jge(n, e, Zge), ts = (n = 21) => crypto.getRandomValues(new Uint8Array(n)).reduce((e, t) => (t &= 63, t < 36 ? e += t.toString(36) : t < 62 ? e += (t - 26).toString(36).toUpperCase() : t > 62 ? e += "-" : e += "_", e), "");
const Xn = /^[a-z]+:/i, Yge = /^pathname:\/\//, ut = Symbol("vue-md-shiki-component"), Xge = () => [
  "abap",
  "actionscript-3",
  "ada",
  "apache",
  "apex",
  "apl",
  "applescript",
  "ara",
  "asm",
  "astro",
  "awk",
  "ballerina",
  "bat",
  "batch",
  "berry",
  "be",
  "bibtex",
  "bicep",
  "blade",
  "c",
  "cadence",
  "cdc",
  "clarity",
  "clojure",
  "clj",
  "cmake",
  "cobol",
  "codeql",
  "ql",
  "coffee",
  "cpp",
  "c++",
  "crystal",
  "csharp",
  "c#",
  "cs",
  "css",
  "cue",
  "d",
  "dart",
  "dax",
  "diff",
  "docker",
  "dockerfile",
  "dream-maker",
  "elixir",
  "elm",
  "erb",
  "erlang",
  "erl",
  "fish",
  "fsharp",
  "f#",
  "fs",
  "gdresource",
  "gdscript",
  "gdshader",
  "gherkin",
  "git-commit",
  "git-rebase",
  "glsl",
  "gnuplot",
  "go",
  "golang",
  "graphql",
  "groovy",
  "hack",
  "haml",
  "handlebars",
  "hbs",
  "haskell",
  "hs",
  "hcl",
  "hlsl",
  "html",
  "http",
  "imba",
  "ini",
  "properties",
  "java",
  "javascript",
  "js",
  "jinja-html",
  "jison",
  "json",
  "json5",
  "jsonc",
  "jsonnet",
  "jssm",
  "fsl",
  "jsx",
  "julia",
  "kotlin",
  "kusto",
  "kql",
  "latex",
  "less",
  "liquid",
  "lisp",
  "logo",
  "lua",
  "make",
  "makefile",
  "markdown",
  "md",
  "marko",
  "matlab",
  "mdx",
  "mermaid",
  "nginx",
  "nim",
  "nix",
  "objective-c",
  "objc",
  "objective-cpp",
  "ocaml",
  "pascal",
  "perl",
  "php",
  "plsql",
  "postcss",
  "powerquery",
  "powershell",
  "ps",
  "ps1",
  "prisma",
  "prolog",
  "proto",
  "pug",
  "jade",
  "puppet",
  "purescript",
  "python",
  "py",
  "r",
  "raku",
  "perl6",
  "razor",
  "reg",
  "rel",
  "riscv",
  "rst",
  "ruby",
  "rb",
  "rust",
  "rs",
  "sas",
  "sass",
  "scala",
  "scheme",
  "scss",
  "shaderlab",
  "shader",
  "shellscript",
  "bash",
  "console",
  "sh",
  "shell",
  "zsh",
  "smalltalk",
  "solidity",
  "sparql",
  "sql",
  "ssh-config",
  "stata",
  "stylus",
  "styl",
  "svelte",
  "swift",
  "system-verilog",
  "tasl",
  "tcl",
  "tex",
  "toml",
  "tsx",
  "turtle",
  "twig",
  "typescript",
  "ts",
  "v",
  "vb",
  "cmd",
  "verilog",
  "vhdl",
  "viml",
  "vim",
  "vimscript",
  "vue-html",
  "vue",
  "wasm",
  "wenyan",
  "文言",
  "wgsl",
  "xml",
  "xsl",
  "yaml",
  "yml",
  "zenscript",
  ...Object.keys(Bs)
], Bs = {
  "c++": "cpp",
  "c#": "csharp",
  cs: "csharp",
  golang: "go"
};
function Kge(n) {
  const e = n.renderer.rules.fence;
  n.renderer.rules.fence = (...t) => {
    const [s, r] = t, o = s[r];
    o.info = o.info.replace(/\[.*\]/, "");
    let a = $s(o.info);
    Xge().includes(a) || (a = "plainText");
    const l = e(...t);
    return `<div class="language-${a}">${l}</div>`;
  };
}
function e_e(n) {
  var e;
  return ((e = n.match(/\[(.*)\]/)) == null ? void 0 : e[1]) || $s(n) || "txt";
}
const $s = (n) => n.trim().replace(/:(no-)?line-numbers({| |$).*/, "").replace(/(-vue|{| ).*$/, "").replace(/^vue-html$/, "template"), n_e = (n) => {
  n.use(...Ve("tip", "TIP", n)).use(...Ve("info", "INFO", n)).use(...Ve("warning", "WARNING", n)).use(...Ve("danger", "DANGER", n)).use(...Ve("details", "Details", n)).use(ln, "v-pre", {
    render: (e, t) => e[t].nesting === 1 ? `<div v-pre>
` : `</div>
`
  }).use(ln, "raw", {
    render: (e, t) => e[t].nesting === 1 ? `<div class="vp-raw">
` : `</div>
`
  }).use(...t_e());
};
function Ve(n, e, t) {
  return [
    ln,
    n,
    {
      render(s, r) {
        const o = s[r], a = o.info.trim().slice(n.length).trim();
        if (o.nesting === 1) {
          const c = t.renderInline(a || e);
          return n === "details" ? `<details class="${n} custom-block"><summary>${c}</summary>
` : `<div class="${n} custom-block"><p class="custom-block-title">${c}</p>
`;
        } else
          return n === "details" ? `</details>
` : `</div>
`;
      }
    }
  ];
}
function t_e() {
  return [
    ln,
    "code-group",
    {
      render(n, e) {
        if (n[e].nesting === 1) {
          const t = ts(5);
          let s = "", r = 'checked="checked"';
          for (let o = e + 1; !(n[o].nesting === -1 && n[o].type === "container_code-group_close"); ++o)
            if (n[o].type === "fence" && n[o].tag === "code") {
              const a = e_e(n[o].info), c = ts(7);
              s += `<input type="radio" name="group-${t}" id="tab-${c}" ${r}><label for="tab-${c}">${a}</label>`, r && (n[o].info += " active", r = "");
            }
          return `<div class="vp-code-group"><div class="tabs">${s}</div><div class="blocks">
`;
        }
        return `</div></div>
`;
      }
    }
  ];
}
function xn(n, e = {}) {
  return ({ code: t }) => {
    const s = e.tagRegExp ?? /(?:\/\/|\/\*{1,2}) *\[!code\s+([\w+-]+)(?::(\d+))?] *(?:\*{1,2}\/)?/, r = [];
    return t = t.split(`
`).map((o, a) => {
      const [c, l, i] = o.match(s) ?? [];
      return !c || !Object.keys(n).includes(l) ? o : (Array.from({ length: Number(i ?? 1) }).forEach((p, h) => {
        r.push({
          line: a + h + 1,
          classes: n[l]
        });
      }), o.replace(s, ""));
    }).join(`
`), {
      code: t,
      lineOptions: r
    };
  };
}
function Qe(n, e, t) {
  const s = new RegExp(`<${t ?? "w+"}[^>]*class="([\\w+-:;\\/* ]*)"`);
  return e = Array.isArray(e) ? e : [e], n.replace(s, (r, o) => r.replace(o, `${o} ${e}`));
}
function s_e(n = {}) {
  const e = n.commonDiffClass ?? "diff", t = n.removedLinesClasses ?? ["remove"], s = n.removedLinesClasses ?? ["add"], r = n.removeLineTag ?? "--", o = n.addLineTag ?? "++", a = n.hasDiffClass ?? "has-diff";
  return {
    name: "diff",
    handler: xn({
      [r]: [e, ...t],
      [o]: [e, ...s]
    }, n),
    postProcess: ({ code: c }) => c.includes(e) ? Qe(c, a, "pre") : c
  };
}
function o_e(n = {}) {
  const e = n.hasFocusClass ?? "has-focus", t = n.hasFocusedLinesClass ?? "has-focused-lines", s = n.focusTag ?? "focus";
  return {
    name: "focus",
    handler: xn(
      {
        [s]: [e]
      },
      n
    ),
    postProcess: ({ code: r }) => r.includes(e) ? Qe(r, t, "pre") : r
  };
}
function r_e(n = {}) {
  const e = n.hasHighlightClass ?? "has-highlight", t = n.hasHighlightedLinesClass ?? "has-highlighted-lines", s = n.highlightTag ?? "hl";
  return {
    name: "highlight",
    handler: xn({
      [s]: [e]
    }, n),
    postProcess: ({ code: r }) => r.includes(e) ? Qe(r, t, "pre") : r
  };
}
function c_e(n, e, t) {
  return n.reduce((s, r) => {
    var c;
    const { code: o, lineOptions: a } = ((c = r.handler) == null ? void 0 : c.call(r, {
      code: s.code,
      lang: t
    })) ?? s;
    return {
      code: o,
      lineOptions: [
        ...s.lineOptions,
        ...a
      ]
    };
  }, {
    code: e,
    lineOptions: []
  });
}
function a_e(n, e, t) {
  return n.reduce((s, r) => {
    var o;
    return ((o = r.postProcess) == null ? void 0 : o.call(r, {
      code: s,
      lang: t
    })) ?? s;
  }, e);
}
var zs = { exports: {} };
(function(n, e) {
  (function(t, s) {
    n.exports = s();
  })(fs, () => {
    return t = { 770: function(r, o, a) {
      var c = this && this.__importDefault || function(S) {
        return S && S.__esModule ? S : { default: S };
      };
      Object.defineProperty(o, "__esModule", { value: !0 }), o.setDefaultDebugCall = o.createOnigScanner = o.createOnigString = o.loadWASM = o.OnigScanner = o.OnigString = void 0;
      const l = c(a(418));
      let i = null, p = !1;
      class h {
        static _utf8ByteLength(b) {
          let k = 0;
          for (let w = 0, N = b.length; w < N; w++) {
            const y = b.charCodeAt(w);
            let u = y, g = !1;
            if (y >= 55296 && y <= 56319 && w + 1 < N) {
              const x = b.charCodeAt(w + 1);
              x >= 56320 && x <= 57343 && (u = 65536 + (y - 55296 << 10) | x - 56320, g = !0);
            }
            k += u <= 127 ? 1 : u <= 2047 ? 2 : u <= 65535 ? 3 : 4, g && w++;
          }
          return k;
        }
        constructor(b) {
          const k = b.length, w = h._utf8ByteLength(b), N = w !== k, y = N ? new Uint32Array(k + 1) : null;
          N && (y[k] = w);
          const u = N ? new Uint32Array(w + 1) : null;
          N && (u[w] = k);
          const g = new Uint8Array(w);
          let x = 0;
          for (let _ = 0; _ < k; _++) {
            const v = b.charCodeAt(_);
            let A = v, C = !1;
            if (v >= 55296 && v <= 56319 && _ + 1 < k) {
              const T = b.charCodeAt(_ + 1);
              T >= 56320 && T <= 57343 && (A = 65536 + (v - 55296 << 10) | T - 56320, C = !0);
            }
            N && (y[_] = x, C && (y[_ + 1] = x), A <= 127 ? u[x + 0] = _ : A <= 2047 ? (u[x + 0] = _, u[x + 1] = _) : A <= 65535 ? (u[x + 0] = _, u[x + 1] = _, u[x + 2] = _) : (u[x + 0] = _, u[x + 1] = _, u[x + 2] = _, u[x + 3] = _)), A <= 127 ? g[x++] = A : A <= 2047 ? (g[x++] = 192 | (1984 & A) >>> 6, g[x++] = 128 | (63 & A) >>> 0) : A <= 65535 ? (g[x++] = 224 | (61440 & A) >>> 12, g[x++] = 128 | (4032 & A) >>> 6, g[x++] = 128 | (63 & A) >>> 0) : (g[x++] = 240 | (1835008 & A) >>> 18, g[x++] = 128 | (258048 & A) >>> 12, g[x++] = 128 | (4032 & A) >>> 6, g[x++] = 128 | (63 & A) >>> 0), C && _++;
          }
          this.utf16Length = k, this.utf8Length = w, this.utf16Value = b, this.utf8Value = g, this.utf16OffsetToUtf8 = y, this.utf8OffsetToUtf16 = u;
        }
        createString(b) {
          const k = b._omalloc(this.utf8Length);
          return b.HEAPU8.set(this.utf8Value, k), k;
        }
      }
      class d {
        constructor(b) {
          if (this.id = ++d.LAST_ID, !i)
            throw new Error("Must invoke loadWASM first.");
          this._onigBinding = i, this.content = b;
          const k = new h(b);
          this.utf16Length = k.utf16Length, this.utf8Length = k.utf8Length, this.utf16OffsetToUtf8 = k.utf16OffsetToUtf8, this.utf8OffsetToUtf16 = k.utf8OffsetToUtf16, this.utf8Length < 1e4 && !d._sharedPtrInUse ? (d._sharedPtr || (d._sharedPtr = i._omalloc(1e4)), d._sharedPtrInUse = !0, i.HEAPU8.set(k.utf8Value, d._sharedPtr), this.ptr = d._sharedPtr) : this.ptr = k.createString(i);
        }
        convertUtf8OffsetToUtf16(b) {
          return this.utf8OffsetToUtf16 ? b < 0 ? 0 : b > this.utf8Length ? this.utf16Length : this.utf8OffsetToUtf16[b] : b;
        }
        convertUtf16OffsetToUtf8(b) {
          return this.utf16OffsetToUtf8 ? b < 0 ? 0 : b > this.utf16Length ? this.utf8Length : this.utf16OffsetToUtf8[b] : b;
        }
        dispose() {
          this.ptr === d._sharedPtr ? d._sharedPtrInUse = !1 : this._onigBinding._ofree(this.ptr);
        }
      }
      o.OnigString = d, d.LAST_ID = 0, d._sharedPtr = 0, d._sharedPtrInUse = !1;
      class m {
        constructor(b) {
          if (!i)
            throw new Error("Must invoke loadWASM first.");
          const k = [], w = [];
          for (let g = 0, x = b.length; g < x; g++) {
            const _ = new h(b[g]);
            k[g] = _.createString(i), w[g] = _.utf8Length;
          }
          const N = i._omalloc(4 * b.length);
          i.HEAPU32.set(k, N / 4);
          const y = i._omalloc(4 * b.length);
          i.HEAPU32.set(w, y / 4);
          const u = i._createOnigScanner(N, y, b.length);
          for (let g = 0, x = b.length; g < x; g++)
            i._ofree(k[g]);
          i._ofree(y), i._ofree(N), u === 0 && function(g) {
            throw new Error(g.UTF8ToString(g._getLastOnigError()));
          }(i), this._onigBinding = i, this._ptr = u;
        }
        dispose() {
          this._onigBinding._freeOnigScanner(this._ptr);
        }
        findNextMatchSync(b, k, w) {
          let N = p, y = 0;
          if (typeof w == "number" ? (8 & w && (N = !0), y = w) : typeof w == "boolean" && (N = w), typeof b == "string") {
            b = new d(b);
            const u = this._findNextMatchSync(b, k, N, y);
            return b.dispose(), u;
          }
          return this._findNextMatchSync(b, k, N, y);
        }
        _findNextMatchSync(b, k, w, N) {
          const y = this._onigBinding;
          let u;
          if (u = w ? y._findNextOnigScannerMatchDbg(this._ptr, b.id, b.ptr, b.utf8Length, b.convertUtf16OffsetToUtf8(k), N) : y._findNextOnigScannerMatch(this._ptr, b.id, b.ptr, b.utf8Length, b.convertUtf16OffsetToUtf8(k), N), u === 0)
            return null;
          const g = y.HEAPU32;
          let x = u / 4;
          const _ = g[x++], v = g[x++];
          let A = [];
          for (let C = 0; C < v; C++) {
            const T = b.convertUtf8OffsetToUtf16(g[x++]), E = b.convertUtf8OffsetToUtf16(g[x++]);
            A[C] = { start: T, end: E, length: E - T };
          }
          return { index: _, captureIndices: A };
        }
      }
      o.OnigScanner = m;
      let f = !1, L = null;
      o.loadWASM = function(S) {
        if (f)
          return L;
        let b, k, w, N;
        if (f = !0, function(y) {
          return typeof y.instantiator == "function";
        }(S))
          b = S.instantiator, k = S.print;
        else {
          let y;
          (function(u) {
            return u.data !== void 0;
          })(S) ? (y = S.data, k = S.print) : y = S, b = function(u) {
            return typeof Response < "u" && u instanceof Response;
          }(y) ? typeof WebAssembly.instantiateStreaming == "function" ? function(u) {
            return (g) => WebAssembly.instantiateStreaming(u, g);
          }(y) : function(u) {
            return async (g) => {
              const x = await u.arrayBuffer();
              return WebAssembly.instantiate(x, g);
            };
          }(y) : function(u) {
            return (g) => WebAssembly.instantiate(u, g);
          }(y);
        }
        return L = new Promise((y, u) => {
          w = y, N = u;
        }), function(y, u, g, x) {
          (0, l.default)({ print: u, instantiateWasm: (_, v) => {
            if (typeof performance > "u") {
              const A = () => Date.now();
              _.env.emscripten_get_now = A, _.wasi_snapshot_preview1.emscripten_get_now = A;
            }
            return y(_).then((A) => v(A.instance), x), {};
          } }).then((_) => {
            i = _, g();
          });
        }(b, k, w, N), L;
      }, o.createOnigString = function(S) {
        return new d(S);
      }, o.createOnigScanner = function(S) {
        return new m(S);
      }, o.setDefaultDebugCall = function(S) {
        p = S;
      };
    }, 418: (r) => {
      var o = (typeof document < "u" && document.currentScript && document.currentScript.src, function(a) {
        var c, l, i = (a = a || {}) !== void 0 ? a : {};
        i.ready = new Promise(function(R, P) {
          c = R, l = P;
        });
        var p, h = Object.assign({}, i), d = !1, m = "";
        function f(R) {
          return i.locateFile ? i.locateFile(R, m) : m + R;
        }
        p = function(R) {
          let P;
          return typeof readbuffer == "function" ? new Uint8Array(readbuffer(R)) : (P = read(R, "binary"), N(typeof P == "object"), P);
        }, typeof scriptArgs < "u" && scriptArgs, typeof onig_print < "u" && (typeof console > "u" && (console = {}), console.log = onig_print, console.warn = console.error = typeof printErr < "u" ? printErr : onig_print);
        var L, S, b = i.print || console.log.bind(console), k = i.printErr || console.warn.bind(console);
        Object.assign(i, h), h = null, i.arguments && i.arguments, i.thisProgram && i.thisProgram, i.quit && i.quit, i.wasmBinary && (L = i.wasmBinary), i.noExitRuntime, typeof WebAssembly != "object" && z("no native wasm support detected");
        var w = !1;
        function N(R, P) {
          R || z(P);
        }
        var y, u, g, x = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0;
        function _(R, P, X) {
          for (var oe = P + X, W = P; R[W] && !(W >= oe); )
            ++W;
          if (W - P > 16 && R.buffer && x)
            return x.decode(R.subarray(P, W));
          for (var H = ""; P < W; ) {
            var K = R[P++];
            if (128 & K) {
              var Re = 63 & R[P++];
              if ((224 & K) != 192) {
                var Pe = 63 & R[P++];
                if ((K = (240 & K) == 224 ? (15 & K) << 12 | Re << 6 | Pe : (7 & K) << 18 | Re << 12 | Pe << 6 | 63 & R[P++]) < 65536)
                  H += String.fromCharCode(K);
                else {
                  var ht = K - 65536;
                  H += String.fromCharCode(55296 | ht >> 10, 56320 | 1023 & ht);
                }
              } else
                H += String.fromCharCode((31 & K) << 6 | Re);
            } else
              H += String.fromCharCode(K);
          }
          return H;
        }
        function v(R, P) {
          return R ? _(u, R, P) : "";
        }
        function A(R) {
          y = R, i.HEAP8 = new Int8Array(R), i.HEAP16 = new Int16Array(R), i.HEAP32 = new Int32Array(R), i.HEAPU8 = u = new Uint8Array(R), i.HEAPU16 = new Uint16Array(R), i.HEAPU32 = g = new Uint32Array(R), i.HEAPF32 = new Float32Array(R), i.HEAPF64 = new Float64Array(R);
        }
        i.INITIAL_MEMORY;
        var C = [], T = [], E = [];
        function D() {
          if (i.preRun)
            for (typeof i.preRun == "function" && (i.preRun = [i.preRun]); i.preRun.length; )
              M(i.preRun.shift());
          me(C);
        }
        function q() {
          me(T);
        }
        function F() {
          if (i.postRun)
            for (typeof i.postRun == "function" && (i.postRun = [i.postRun]); i.postRun.length; )
              Z(i.postRun.shift());
          me(E);
        }
        function M(R) {
          C.unshift(R);
        }
        function O(R) {
          T.unshift(R);
        }
        function Z(R) {
          E.unshift(R);
        }
        var J = 0, V = null;
        function G(R) {
          J++, i.monitorRunDependencies && i.monitorRunDependencies(J);
        }
        function $(R) {
          if (J--, i.monitorRunDependencies && i.monitorRunDependencies(J), J == 0 && V) {
            var P = V;
            V = null, P();
          }
        }
        function z(R) {
          i.onAbort && i.onAbort(R), k(R = "Aborted(" + R + ")"), w = !0, R += ". Build with -sASSERTIONS for more info.";
          var P = new WebAssembly.RuntimeError(R);
          throw l(P), P;
        }
        var Y, j, Q = "data:application/octet-stream;base64,";
        function U(R) {
          return R.startsWith(Q);
        }
        function se(R) {
          try {
            if (R == Y && L)
              return new Uint8Array(L);
            if (p)
              return p(R);
            throw "both async and sync fetching of the wasm failed";
          } catch (P) {
            z(P);
          }
        }
        function ve() {
          return L || !d || typeof fetch != "function" ? Promise.resolve().then(function() {
            return se(Y);
          }) : fetch(Y, { credentials: "same-origin" }).then(function(R) {
            if (!R.ok)
              throw "failed to load wasm binary file at '" + Y + "'";
            return R.arrayBuffer();
          }).catch(function() {
            return se(Y);
          });
        }
        function He() {
          var R = { env: Le, wasi_snapshot_preview1: Le };
          function P(W, H) {
            var K = W.exports;
            i.asm = K, A((S = i.asm.memory).buffer), i.asm.__indirect_function_table, O(i.asm.__wasm_call_ctors), $();
          }
          function X(W) {
            P(W.instance);
          }
          function oe(W) {
            return ve().then(function(H) {
              return WebAssembly.instantiate(H, R);
            }).then(function(H) {
              return H;
            }).then(W, function(H) {
              k("failed to asynchronously prepare wasm: " + H), z(H);
            });
          }
          if (G(), i.instantiateWasm)
            try {
              return i.instantiateWasm(R, P);
            } catch (W) {
              k("Module.instantiateWasm callback failed with error: " + W), l(W);
            }
          return (L || typeof WebAssembly.instantiateStreaming != "function" || U(Y) || typeof fetch != "function" ? oe(X) : fetch(Y, { credentials: "same-origin" }).then(function(W) {
            return WebAssembly.instantiateStreaming(W, R).then(X, function(H) {
              return k("wasm streaming compile failed: " + H), k("falling back to ArrayBuffer instantiation"), oe(X);
            });
          })).catch(l), {};
        }
        function me(R) {
          for (; R.length > 0; )
            R.shift()(i);
        }
        function ge(R, P, X) {
          u.copyWithin(R, P, P + X);
        }
        function je(R) {
          try {
            return S.grow(R - y.byteLength + 65535 >>> 16), A(S.buffer), 1;
          } catch {
          }
        }
        function xe(R) {
          var P, X = u.length, oe = 2147483648;
          if ((R >>>= 0) > oe)
            return !1;
          for (var W = 1; W <= 4; W *= 2) {
            var H = X * (1 + 0.2 / W);
            if (H = Math.min(H, R + 100663296), je(Math.min(oe, (P = Math.max(R, H)) + (65536 - P % 65536) % 65536)))
              return !0;
          }
          return !1;
        }
        U(Y = "onig.wasm") || (Y = f(Y)), j = typeof dateNow < "u" ? dateNow : () => performance.now();
        var Ae = [null, [], []];
        function Se(R, P) {
          var X = Ae[R];
          P === 0 || P === 10 ? ((R === 1 ? b : k)(_(X, 0)), X.length = 0) : X.push(P);
        }
        function _e(R, P, X, oe) {
          for (var W = 0, H = 0; H < X; H++) {
            var K = g[P >> 2], Re = g[P + 4 >> 2];
            P += 8;
            for (var Pe = 0; Pe < Re; Pe++)
              Se(R, u[K + Pe]);
            W += Re;
          }
          return g[oe >> 2] = W, 0;
        }
        var ee, Le = { emscripten_get_now: j, emscripten_memcpy_big: ge, emscripten_resize_heap: xe, fd_write: _e };
        function qe(R) {
          function P() {
            ee || (ee = !0, i.calledRun = !0, w || (q(), c(i), i.onRuntimeInitialized && i.onRuntimeInitialized(), F()));
          }
          J > 0 || (D(), J > 0 || (i.setStatus ? (i.setStatus("Running..."), setTimeout(function() {
            setTimeout(function() {
              i.setStatus("");
            }, 1), P();
          }, 1)) : P()));
        }
        if (He(), i.___wasm_call_ctors = function() {
          return (i.___wasm_call_ctors = i.asm.__wasm_call_ctors).apply(null, arguments);
        }, i.___errno_location = function() {
          return (i.___errno_location = i.asm.__errno_location).apply(null, arguments);
        }, i._omalloc = function() {
          return (i._omalloc = i.asm.omalloc).apply(null, arguments);
        }, i._ofree = function() {
          return (i._ofree = i.asm.ofree).apply(null, arguments);
        }, i._getLastOnigError = function() {
          return (i._getLastOnigError = i.asm.getLastOnigError).apply(null, arguments);
        }, i._createOnigScanner = function() {
          return (i._createOnigScanner = i.asm.createOnigScanner).apply(null, arguments);
        }, i._freeOnigScanner = function() {
          return (i._freeOnigScanner = i.asm.freeOnigScanner).apply(null, arguments);
        }, i._findNextOnigScannerMatch = function() {
          return (i._findNextOnigScannerMatch = i.asm.findNextOnigScannerMatch).apply(null, arguments);
        }, i._findNextOnigScannerMatchDbg = function() {
          return (i._findNextOnigScannerMatchDbg = i.asm.findNextOnigScannerMatchDbg).apply(null, arguments);
        }, i.stackSave = function() {
          return (i.stackSave = i.asm.stackSave).apply(null, arguments);
        }, i.stackRestore = function() {
          return (i.stackRestore = i.asm.stackRestore).apply(null, arguments);
        }, i.stackAlloc = function() {
          return (i.stackAlloc = i.asm.stackAlloc).apply(null, arguments);
        }, i.dynCall_jiji = function() {
          return (i.dynCall_jiji = i.asm.dynCall_jiji).apply(null, arguments);
        }, i.UTF8ToString = v, V = function R() {
          ee || qe(), ee || (V = R);
        }, i.preInit)
          for (typeof i.preInit == "function" && (i.preInit = [i.preInit]); i.preInit.length > 0; )
            i.preInit.pop()();
        return qe(), a.ready;
      });
      r.exports = o;
    } }, s = {}, function r(o) {
      var a = s[o];
      if (a !== void 0)
        return a.exports;
      var c = s[o] = { exports: {} };
      return t[o].call(c.exports, c, c.exports, r), c.exports;
    }(770);
    var t, s;
  });
})(zs);
var sn = zs.exports, Gs = { exports: {} };
(function(n, e) {
  (function(t, s) {
    n.exports = s();
  })(fs, function() {
    return (() => {
      var t = { 350: (r, o) => {
        Object.defineProperty(o, "__esModule", { value: !0 }), o.UseOnigurumaFindOptions = o.DebugFlags = void 0, o.DebugFlags = { InDebugMode: typeof process < "u" && !!process.env.VSCODE_TEXTMATE_DEBUG }, o.UseOnigurumaFindOptions = !1;
      }, 36: (r, o) => {
        var a;
        Object.defineProperty(o, "__esModule", { value: !0 }), o.toOptionalTokenType = o.EncodedTokenAttributes = void 0, (a = o.EncodedTokenAttributes || (o.EncodedTokenAttributes = {})).toBinaryStr = function(c) {
          let l = c.toString(2);
          for (; l.length < 32; )
            l = "0" + l;
          return l;
        }, a.print = function(c) {
          const l = a.getLanguageId(c), i = a.getTokenType(c), p = a.getFontStyle(c), h = a.getForeground(c), d = a.getBackground(c);
          console.log({ languageId: l, tokenType: i, fontStyle: p, foreground: h, background: d });
        }, a.getLanguageId = function(c) {
          return (255 & c) >>> 0;
        }, a.getTokenType = function(c) {
          return (768 & c) >>> 8;
        }, a.containsBalancedBrackets = function(c) {
          return (1024 & c) != 0;
        }, a.getFontStyle = function(c) {
          return (30720 & c) >>> 11;
        }, a.getForeground = function(c) {
          return (16744448 & c) >>> 15;
        }, a.getBackground = function(c) {
          return (4278190080 & c) >>> 24;
        }, a.set = function(c, l, i, p, h, d, m) {
          let f = a.getLanguageId(c), L = a.getTokenType(c), S = a.containsBalancedBrackets(c) ? 1 : 0, b = a.getFontStyle(c), k = a.getForeground(c), w = a.getBackground(c);
          return l !== 0 && (f = l), i !== 8 && (L = i), p !== null && (S = p ? 1 : 0), h !== -1 && (b = h), d !== 0 && (k = d), m !== 0 && (w = m), (f << 0 | L << 8 | S << 10 | b << 11 | k << 15 | w << 24) >>> 0;
        }, o.toOptionalTokenType = function(c) {
          return c;
        };
      }, 996: (r, o, a) => {
        Object.defineProperty(o, "__esModule", { value: !0 }), o.BasicScopeAttributesProvider = o.BasicScopeAttributes = void 0;
        const c = a(878);
        class l {
          constructor(d, m) {
            this.languageId = d, this.tokenType = m;
          }
        }
        o.BasicScopeAttributes = l;
        class i {
          constructor(d, m) {
            this._getBasicScopeAttributes = new c.CachedFn((f) => {
              const L = this._scopeToLanguage(f), S = this._toStandardTokenType(f);
              return new l(L, S);
            }), this._defaultAttributes = new l(d, 8), this._embeddedLanguagesMatcher = new p(Object.entries(m || {}));
          }
          getDefaultAttributes() {
            return this._defaultAttributes;
          }
          getBasicScopeAttributes(d) {
            return d === null ? i._NULL_SCOPE_METADATA : this._getBasicScopeAttributes.get(d);
          }
          _scopeToLanguage(d) {
            return this._embeddedLanguagesMatcher.match(d) || 0;
          }
          _toStandardTokenType(d) {
            const m = d.match(i.STANDARD_TOKEN_TYPE_REGEXP);
            if (!m)
              return 8;
            switch (m[1]) {
              case "comment":
                return 1;
              case "string":
                return 2;
              case "regex":
                return 3;
              case "meta.embedded":
                return 0;
            }
            throw new Error("Unexpected match for standard token type!");
          }
        }
        o.BasicScopeAttributesProvider = i, i._NULL_SCOPE_METADATA = new l(0, 0), i.STANDARD_TOKEN_TYPE_REGEXP = /\b(comment|string|regex|meta\.embedded)\b/;
        class p {
          constructor(d) {
            if (d.length === 0)
              this.values = null, this.scopesRegExp = null;
            else {
              this.values = new Map(d);
              const m = d.map(([f, L]) => c.escapeRegExpCharacters(f));
              m.sort(), m.reverse(), this.scopesRegExp = new RegExp(`^((${m.join(")|(")}))($|\\.)`, "");
            }
          }
          match(d) {
            if (!this.scopesRegExp)
              return;
            const m = d.match(this.scopesRegExp);
            return m ? this.values.get(m[1]) : void 0;
          }
        }
      }, 947: (r, o, a) => {
        Object.defineProperty(o, "__esModule", { value: !0 }), o.LineTokens = o.BalancedBracketSelectors = o.StateStack = o.AttributedScopeStack = o.Grammar = o.createGrammar = void 0;
        const c = a(350), l = a(36), i = a(736), p = a(44), h = a(792), d = a(583), m = a(878), f = a(996), L = a(47);
        function S(x, _, v, A, C) {
          const T = i.createMatchers(_, b), E = h.RuleFactory.getCompiledRuleId(v, A, C.repository);
          for (const D of T)
            x.push({ debugSelector: _, matcher: D.matcher, ruleId: E, grammar: C, priority: D.priority });
        }
        function b(x, _) {
          if (_.length < x.length)
            return !1;
          let v = 0;
          return x.every((A) => {
            for (let C = v; C < _.length; C++)
              if (k(_[C], A))
                return v = C + 1, !0;
            return !1;
          });
        }
        function k(x, _) {
          if (!x)
            return !1;
          if (x === _)
            return !0;
          const v = _.length;
          return x.length > v && x.substr(0, v) === _ && x[v] === ".";
        }
        o.createGrammar = function(x, _, v, A, C, T, E, D) {
          return new w(x, _, v, A, C, T, E, D);
        };
        class w {
          constructor(_, v, A, C, T, E, D, q) {
            if (this._rootScopeName = _, this.balancedBracketSelectors = E, this._onigLib = q, this._basicScopeAttributesProvider = new f.BasicScopeAttributesProvider(A, C), this._rootId = -1, this._lastRuleId = 0, this._ruleId2desc = [null], this._includedGrammars = {}, this._grammarRepository = D, this._grammar = N(v, null), this._injections = null, this._tokenTypeMatchers = [], T)
              for (const F of Object.keys(T)) {
                const M = i.createMatchers(F, b);
                for (const O of M)
                  this._tokenTypeMatchers.push({ matcher: O.matcher, type: T[F] });
              }
          }
          get themeProvider() {
            return this._grammarRepository;
          }
          dispose() {
            for (const _ of this._ruleId2desc)
              _ && _.dispose();
          }
          createOnigScanner(_) {
            return this._onigLib.createOnigScanner(_);
          }
          createOnigString(_) {
            return this._onigLib.createOnigString(_);
          }
          getMetadataForScope(_) {
            return this._basicScopeAttributesProvider.getBasicScopeAttributes(_);
          }
          _collectInjections() {
            const _ = [], v = this._rootScopeName, A = ((C) => C === this._rootScopeName ? this._grammar : this.getExternalGrammar(C))(v);
            if (A) {
              const C = A.injections;
              if (C)
                for (let E in C)
                  S(_, E, C[E], this, A);
              const T = this._grammarRepository.injections(v);
              T && T.forEach((E) => {
                const D = this.getExternalGrammar(E);
                if (D) {
                  const q = D.injectionSelector;
                  q && S(_, q, D, this, D);
                }
              });
            }
            return _.sort((C, T) => C.priority - T.priority), _;
          }
          getInjections() {
            if (this._injections === null && (this._injections = this._collectInjections(), c.DebugFlags.InDebugMode && this._injections.length > 0)) {
              console.log(`Grammar ${this._rootScopeName} contains the following injections:`);
              for (const _ of this._injections)
                console.log(`  - ${_.debugSelector}`);
            }
            return this._injections;
          }
          registerRule(_) {
            const v = ++this._lastRuleId, A = _(h.ruleIdFromNumber(v));
            return this._ruleId2desc[v] = A, A;
          }
          getRule(_) {
            return this._ruleId2desc[h.ruleIdToNumber(_)];
          }
          getExternalGrammar(_, v) {
            if (this._includedGrammars[_])
              return this._includedGrammars[_];
            if (this._grammarRepository) {
              const A = this._grammarRepository.lookup(_);
              if (A)
                return this._includedGrammars[_] = N(A, v && v.$base), this._includedGrammars[_];
            }
          }
          tokenizeLine(_, v, A = 0) {
            const C = this._tokenize(_, v, !1, A);
            return { tokens: C.lineTokens.getResult(C.ruleStack, C.lineLength), ruleStack: C.ruleStack, stoppedEarly: C.stoppedEarly };
          }
          tokenizeLine2(_, v, A = 0) {
            const C = this._tokenize(_, v, !0, A);
            return { tokens: C.lineTokens.getBinaryResult(C.ruleStack, C.lineLength), ruleStack: C.ruleStack, stoppedEarly: C.stoppedEarly };
          }
          _tokenize(_, v, A, C) {
            let T;
            if (this._rootId === -1 && (this._rootId = h.RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository)), v && v !== u.NULL)
              T = !1, v.reset();
            else {
              T = !0;
              const M = this._basicScopeAttributesProvider.getDefaultAttributes(), O = this.themeProvider.getDefaults(), Z = l.EncodedTokenAttributes.set(0, M.languageId, M.tokenType, null, O.fontStyle, O.foregroundId, O.backgroundId), J = this.getRule(this._rootId).getName(null, null);
              let V;
              V = J ? y.createRootAndLookUpScopeName(J, Z, this) : y.createRoot("unknown", Z), v = new u(null, this._rootId, -1, -1, !1, null, V, V);
            }
            _ += `
`;
            const E = this.createOnigString(_), D = E.content.length, q = new g(A, _, this._tokenTypeMatchers, this.balancedBracketSelectors), F = L._tokenizeString(this, E, T, 0, v, q, !0, C);
            return p.disposeOnigString(E), { lineLength: D, lineTokens: q, ruleStack: F.stack, stoppedEarly: F.stoppedEarly };
          }
        }
        function N(x, _) {
          return (x = m.clone(x)).repository = x.repository || {}, x.repository.$self = { $vscodeTextmateLocation: x.$vscodeTextmateLocation, patterns: x.patterns, name: x.scopeName }, x.repository.$base = _ || x.repository.$self, x;
        }
        o.Grammar = w;
        class y {
          constructor(_, v, A) {
            this.parent = _, this.scopePath = v, this.tokenAttributes = A;
          }
          static createRoot(_, v) {
            return new y(null, new d.ScopeStack(null, _), v);
          }
          static createRootAndLookUpScopeName(_, v, A) {
            const C = A.getMetadataForScope(_), T = new d.ScopeStack(null, _), E = A.themeProvider.themeMatch(T), D = y.mergeAttributes(v, C, E);
            return new y(null, T, D);
          }
          get scopeName() {
            return this.scopePath.scopeName;
          }
          equals(_) {
            return y._equals(this, _);
          }
          static _equals(_, v) {
            for (; ; ) {
              if (_ === v || !_ && !v)
                return !0;
              if (!_ || !v || _.scopeName !== v.scopeName || _.tokenAttributes !== v.tokenAttributes)
                return !1;
              _ = _.parent, v = v.parent;
            }
          }
          static mergeAttributes(_, v, A) {
            let C = -1, T = 0, E = 0;
            return A !== null && (C = A.fontStyle, T = A.foregroundId, E = A.backgroundId), l.EncodedTokenAttributes.set(_, v.languageId, v.tokenType, null, C, T, E);
          }
          pushAttributed(_, v) {
            if (_ === null)
              return this;
            if (_.indexOf(" ") === -1)
              return y._pushAttributed(this, _, v);
            const A = _.split(/ /g);
            let C = this;
            for (const T of A)
              C = y._pushAttributed(C, T, v);
            return C;
          }
          static _pushAttributed(_, v, A) {
            const C = A.getMetadataForScope(v), T = _.scopePath.push(v), E = A.themeProvider.themeMatch(T), D = y.mergeAttributes(_.tokenAttributes, C, E);
            return new y(_, T, D);
          }
          getScopeNames() {
            return this.scopePath.getSegments();
          }
        }
        o.AttributedScopeStack = y;
        class u {
          constructor(_, v, A, C, T, E, D, q) {
            this.parent = _, this.ruleId = v, this.beginRuleCapturedEOL = T, this.endRule = E, this.nameScopesList = D, this.contentNameScopesList = q, this._stackElementBrand = void 0, this.depth = this.parent ? this.parent.depth + 1 : 1, this._enterPos = A, this._anchorPos = C;
          }
          equals(_) {
            return _ !== null && u._equals(this, _);
          }
          static _equals(_, v) {
            return _ === v || !!this._structuralEquals(_, v) && _.contentNameScopesList.equals(v.contentNameScopesList);
          }
          static _structuralEquals(_, v) {
            for (; ; ) {
              if (_ === v || !_ && !v)
                return !0;
              if (!_ || !v || _.depth !== v.depth || _.ruleId !== v.ruleId || _.endRule !== v.endRule)
                return !1;
              _ = _.parent, v = v.parent;
            }
          }
          clone() {
            return this;
          }
          static _reset(_) {
            for (; _; )
              _._enterPos = -1, _._anchorPos = -1, _ = _.parent;
          }
          reset() {
            u._reset(this);
          }
          pop() {
            return this.parent;
          }
          safePop() {
            return this.parent ? this.parent : this;
          }
          push(_, v, A, C, T, E, D) {
            return new u(this, _, v, A, C, T, E, D);
          }
          getEnterPos() {
            return this._enterPos;
          }
          getAnchorPos() {
            return this._anchorPos;
          }
          getRule(_) {
            return _.getRule(this.ruleId);
          }
          toString() {
            const _ = [];
            return this._writeString(_, 0), "[" + _.join(",") + "]";
          }
          _writeString(_, v) {
            return this.parent && (v = this.parent._writeString(_, v)), _[v++] = `(${this.ruleId}, TODO-${this.nameScopesList}, TODO-${this.contentNameScopesList})`, v;
          }
          withContentNameScopesList(_) {
            return this.contentNameScopesList === _ ? this : this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, _);
          }
          withEndRule(_) {
            return this.endRule === _ ? this : new u(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, _, this.nameScopesList, this.contentNameScopesList);
          }
          hasSameRuleAs(_) {
            let v = this;
            for (; v && v._enterPos === _._enterPos; ) {
              if (v.ruleId === _.ruleId)
                return !0;
              v = v.parent;
            }
            return !1;
          }
        }
        o.StateStack = u, u.NULL = new u(null, 0, 0, 0, !1, null, null, null), o.BalancedBracketSelectors = class {
          constructor(x, _) {
            this.allowAny = !1, this.balancedBracketScopes = x.flatMap((v) => v === "*" ? (this.allowAny = !0, []) : i.createMatchers(v, b).map((A) => A.matcher)), this.unbalancedBracketScopes = _.flatMap((v) => i.createMatchers(v, b).map((A) => A.matcher));
          }
          get matchesAlways() {
            return this.allowAny && this.unbalancedBracketScopes.length === 0;
          }
          get matchesNever() {
            return this.balancedBracketScopes.length === 0 && !this.allowAny;
          }
          match(x) {
            for (const _ of this.unbalancedBracketScopes)
              if (_(x))
                return !1;
            for (const _ of this.balancedBracketScopes)
              if (_(x))
                return !0;
            return this.allowAny;
          }
        };
        class g {
          constructor(_, v, A, C) {
            this.balancedBracketSelectors = C, this._emitBinaryTokens = _, this._tokenTypeOverrides = A, c.DebugFlags.InDebugMode ? this._lineText = v : this._lineText = null, this._tokens = [], this._binaryTokens = [], this._lastTokenEndIndex = 0;
          }
          produce(_, v) {
            this.produceFromScopes(_.contentNameScopesList, v);
          }
          produceFromScopes(_, v) {
            var C;
            if (this._lastTokenEndIndex >= v)
              return;
            if (this._emitBinaryTokens) {
              let T = _.tokenAttributes, E = !1;
              if ((C = this.balancedBracketSelectors) != null && C.matchesAlways && (E = !0), this._tokenTypeOverrides.length > 0 || this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever) {
                const D = _.getScopeNames();
                for (const q of this._tokenTypeOverrides)
                  q.matcher(D) && (T = l.EncodedTokenAttributes.set(T, 0, l.toOptionalTokenType(q.type), null, -1, 0, 0));
                this.balancedBracketSelectors && (E = this.balancedBracketSelectors.match(D));
              }
              if (E && (T = l.EncodedTokenAttributes.set(T, 0, 8, E, -1, 0, 0)), this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === T)
                return void (this._lastTokenEndIndex = v);
              if (c.DebugFlags.InDebugMode) {
                const D = _.getScopeNames();
                console.log("  token: |" + this._lineText.substring(this._lastTokenEndIndex, v).replace(/\n$/, "\\n") + "|");
                for (let q = 0; q < D.length; q++)
                  console.log("      * " + D[q]);
              }
              return this._binaryTokens.push(this._lastTokenEndIndex), this._binaryTokens.push(T), void (this._lastTokenEndIndex = v);
            }
            const A = _.getScopeNames();
            if (c.DebugFlags.InDebugMode) {
              console.log("  token: |" + this._lineText.substring(this._lastTokenEndIndex, v).replace(/\n$/, "\\n") + "|");
              for (let T = 0; T < A.length; T++)
                console.log("      * " + A[T]);
            }
            this._tokens.push({ startIndex: this._lastTokenEndIndex, endIndex: v, scopes: A }), this._lastTokenEndIndex = v;
          }
          getResult(_, v) {
            return this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === v - 1 && this._tokens.pop(), this._tokens.length === 0 && (this._lastTokenEndIndex = -1, this.produce(_, v), this._tokens[this._tokens.length - 1].startIndex = 0), this._tokens;
          }
          getBinaryResult(_, v) {
            this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === v - 1 && (this._binaryTokens.pop(), this._binaryTokens.pop()), this._binaryTokens.length === 0 && (this._lastTokenEndIndex = -1, this.produce(_, v), this._binaryTokens[this._binaryTokens.length - 2] = 0);
            const A = new Uint32Array(this._binaryTokens.length);
            for (let C = 0, T = this._binaryTokens.length; C < T; C++)
              A[C] = this._binaryTokens[C];
            return A;
          }
        }
        o.LineTokens = g;
      }, 965: (r, o, a) => {
        Object.defineProperty(o, "__esModule", { value: !0 }), o.parseInclude = o.TopLevelRepositoryReference = o.TopLevelReference = o.RelativeReference = o.SelfReference = o.BaseReference = o.ScopeDependencyProcessor = o.ExternalReferenceCollector = o.TopLevelRepositoryRuleReference = o.TopLevelRuleReference = void 0;
        const c = a(878);
        class l {
          constructor(u) {
            this.scopeName = u;
          }
          toKey() {
            return this.scopeName;
          }
        }
        o.TopLevelRuleReference = l;
        class i {
          constructor(u, g) {
            this.scopeName = u, this.ruleName = g;
          }
          toKey() {
            return `${this.scopeName}#${this.ruleName}`;
          }
        }
        o.TopLevelRepositoryRuleReference = i;
        class p {
          constructor() {
            this._references = [], this._seenReferenceKeys = /* @__PURE__ */ new Set(), this.visitedRule = /* @__PURE__ */ new Set();
          }
          get references() {
            return this._references;
          }
          add(u) {
            const g = u.toKey();
            this._seenReferenceKeys.has(g) || (this._seenReferenceKeys.add(g), this._references.push(u));
          }
        }
        function h(y, u, g, x) {
          const _ = g.lookup(y.scopeName);
          if (!_) {
            if (y.scopeName === u)
              throw new Error(`No grammar provided for <${u}>`);
            return;
          }
          const v = g.lookup(u);
          y instanceof l ? m({ baseGrammar: v, selfGrammar: _ }, x) : d(y.ruleName, { baseGrammar: v, selfGrammar: _, repository: _.repository }, x);
          const A = g.injections(y.scopeName);
          if (A)
            for (const C of A)
              x.add(new l(C));
        }
        function d(y, u, g) {
          u.repository && u.repository[y] && f([u.repository[y]], u, g);
        }
        function m(y, u) {
          y.selfGrammar.patterns && Array.isArray(y.selfGrammar.patterns) && f(y.selfGrammar.patterns, { ...y, repository: y.selfGrammar.repository }, u), y.selfGrammar.injections && f(Object.values(y.selfGrammar.injections), { ...y, repository: y.selfGrammar.repository }, u);
        }
        function f(y, u, g) {
          for (const x of y) {
            if (g.visitedRule.has(x))
              continue;
            g.visitedRule.add(x);
            const _ = x.repository ? c.mergeObjects({}, u.repository, x.repository) : u.repository;
            Array.isArray(x.patterns) && f(x.patterns, { ...u, repository: _ }, g);
            const v = x.include;
            if (!v)
              continue;
            const A = N(v);
            switch (A.kind) {
              case 0:
                m({ ...u, selfGrammar: u.baseGrammar }, g);
                break;
              case 1:
                m(u, g);
                break;
              case 2:
                d(A.ruleName, { ...u, repository: _ }, g);
                break;
              case 3:
              case 4:
                const C = A.scopeName === u.selfGrammar.scopeName ? u.selfGrammar : A.scopeName === u.baseGrammar.scopeName ? u.baseGrammar : void 0;
                if (C) {
                  const T = { baseGrammar: u.baseGrammar, selfGrammar: C, repository: _ };
                  A.kind === 4 ? d(A.ruleName, T, g) : m(T, g);
                } else
                  A.kind === 4 ? g.add(new i(A.scopeName, A.ruleName)) : g.add(new l(A.scopeName));
            }
          }
        }
        o.ExternalReferenceCollector = p, o.ScopeDependencyProcessor = class {
          constructor(y, u) {
            this.repo = y, this.initialScopeName = u, this.seenFullScopeRequests = /* @__PURE__ */ new Set(), this.seenPartialScopeRequests = /* @__PURE__ */ new Set(), this.seenFullScopeRequests.add(this.initialScopeName), this.Q = [new l(this.initialScopeName)];
          }
          processQueue() {
            const y = this.Q;
            this.Q = [];
            const u = new p();
            for (const g of y)
              h(g, this.initialScopeName, this.repo, u);
            for (const g of u.references)
              if (g instanceof l) {
                if (this.seenFullScopeRequests.has(g.scopeName))
                  continue;
                this.seenFullScopeRequests.add(g.scopeName), this.Q.push(g);
              } else {
                if (this.seenFullScopeRequests.has(g.scopeName) || this.seenPartialScopeRequests.has(g.toKey()))
                  continue;
                this.seenPartialScopeRequests.add(g.toKey()), this.Q.push(g);
              }
          }
        };
        class L {
          constructor() {
            this.kind = 0;
          }
        }
        o.BaseReference = L;
        class S {
          constructor() {
            this.kind = 1;
          }
        }
        o.SelfReference = S;
        class b {
          constructor(u) {
            this.ruleName = u, this.kind = 2;
          }
        }
        o.RelativeReference = b;
        class k {
          constructor(u) {
            this.scopeName = u, this.kind = 3;
          }
        }
        o.TopLevelReference = k;
        class w {
          constructor(u, g) {
            this.scopeName = u, this.ruleName = g, this.kind = 4;
          }
        }
        function N(y) {
          if (y === "$base")
            return new L();
          if (y === "$self")
            return new S();
          const u = y.indexOf("#");
          if (u === -1)
            return new k(y);
          if (u === 0)
            return new b(y.substring(1));
          {
            const g = y.substring(0, u), x = y.substring(u + 1);
            return new w(g, x);
          }
        }
        o.TopLevelRepositoryReference = w, o.parseInclude = N;
      }, 391: function(r, o, a) {
        var c = this && this.__createBinding || (Object.create ? function(i, p, h, d) {
          d === void 0 && (d = h), Object.defineProperty(i, d, { enumerable: !0, get: function() {
            return p[h];
          } });
        } : function(i, p, h, d) {
          d === void 0 && (d = h), i[d] = p[h];
        }), l = this && this.__exportStar || function(i, p) {
          for (var h in i)
            h === "default" || Object.prototype.hasOwnProperty.call(p, h) || c(p, i, h);
        };
        Object.defineProperty(o, "__esModule", { value: !0 }), l(a(947), o);
      }, 47: (r, o, a) => {
        Object.defineProperty(o, "__esModule", { value: !0 }), o.LocalStackElement = o._tokenizeString = void 0;
        const c = a(350), l = a(44), i = a(792), p = a(878);
        class h {
          constructor(w, N) {
            this.stack = w, this.stoppedEarly = N;
          }
        }
        function d(k, w, N, y, u, g, x, _) {
          const v = w.content.length;
          let A = !1, C = -1;
          if (x) {
            const D = function(q, F, M, O, Z, J) {
              let V = Z.beginRuleCapturedEOL ? 0 : -1;
              const G = [];
              for (let $ = Z; $; $ = $.pop()) {
                const z = $.getRule(q);
                z instanceof i.BeginWhileRule && G.push({ rule: z, stack: $ });
              }
              for (let $ = G.pop(); $; $ = G.pop()) {
                const { ruleScanner: z, findOptions: Y } = f($.rule, q, $.stack.endRule, M, O === V), j = z.findNextMatchSync(F, O, Y);
                if (c.DebugFlags.InDebugMode && (console.log("  scanning for while rule"), console.log(z.toString())), !j) {
                  c.DebugFlags.InDebugMode && console.log("  popping " + $.rule.debugName + " - " + $.rule.debugWhileRegExp), Z = $.stack.pop();
                  break;
                }
                if (j.ruleId !== i.whileRuleId) {
                  Z = $.stack.pop();
                  break;
                }
                j.captureIndices && j.captureIndices.length && (J.produce($.stack, j.captureIndices[0].start), S(q, F, M, $.stack, J, $.rule.whileCaptures, j.captureIndices), J.produce($.stack, j.captureIndices[0].end), V = j.captureIndices[0].end, j.captureIndices[0].end > O && (O = j.captureIndices[0].end, M = !1));
              }
              return { stack: Z, linePos: O, anchorPosition: V, isFirstLine: M };
            }(k, w, N, y, u, g);
            u = D.stack, y = D.linePos, N = D.isFirstLine, C = D.anchorPosition;
          }
          const T = Date.now();
          for (; !A; ) {
            if (_ !== 0 && Date.now() - T > _)
              return new h(u, !0);
            E();
          }
          return new h(u, !1);
          function E() {
            c.DebugFlags.InDebugMode && (console.log(""), console.log(`@@scanNext ${y}: |${w.content.substr(y).replace(/\n$/, "\\n")}|`));
            const D = function(O, Z, J, V, G, $) {
              const z = function(se, ve, He, me, ge, je) {
                const xe = ge.getRule(se), { ruleScanner: Ae, findOptions: Se } = m(xe, se, ge.endRule, He, me === je);
                let _e = 0;
                c.DebugFlags.InDebugMode && (_e = p.performanceNow());
                const ee = Ae.findNextMatchSync(ve, me, Se);
                if (c.DebugFlags.InDebugMode) {
                  const Le = p.performanceNow() - _e;
                  Le > 5 && console.warn(`Rule ${xe.debugName} (${xe.id}) matching took ${Le} against '${ve}'`), console.log(`  scanning for (linePos: ${me}, anchorPosition: ${je})`), console.log(Ae.toString()), ee && console.log(`matched rule id: ${ee.ruleId} from ${ee.captureIndices[0].start} to ${ee.captureIndices[0].end}`);
                }
                return ee ? { captureIndices: ee.captureIndices, matchedRuleId: ee.ruleId } : null;
              }(O, Z, J, V, G, $), Y = O.getInjections();
              if (Y.length === 0)
                return z;
              const j = function(se, ve, He, me, ge, je, xe) {
                let Ae, Se = Number.MAX_VALUE, _e = null, ee = 0;
                const Le = je.contentNameScopesList.getScopeNames();
                for (let qe = 0, R = se.length; qe < R; qe++) {
                  const P = se[qe];
                  if (!P.matcher(Le))
                    continue;
                  const X = ve.getRule(P.ruleId), { ruleScanner: oe, findOptions: W } = m(X, ve, null, me, ge === xe), H = oe.findNextMatchSync(He, ge, W);
                  if (!H)
                    continue;
                  c.DebugFlags.InDebugMode && (console.log(`  matched injection: ${P.debugSelector}`), console.log(oe.toString()));
                  const K = H.captureIndices[0].start;
                  if (!(K >= Se) && (Se = K, _e = H.captureIndices, Ae = H.ruleId, ee = P.priority, Se === ge))
                    break;
                }
                return _e ? { priorityMatch: ee === -1, captureIndices: _e, matchedRuleId: Ae } : null;
              }(Y, O, Z, J, V, G, $);
              if (!j)
                return z;
              if (!z)
                return j;
              const Q = z.captureIndices[0].start, U = j.captureIndices[0].start;
              return U < Q || j.priorityMatch && U === Q ? j : z;
            }(k, w, N, y, u, C);
            if (!D)
              return c.DebugFlags.InDebugMode && console.log("  no more matches."), g.produce(u, v), void (A = !0);
            const q = D.captureIndices, F = D.matchedRuleId, M = !!(q && q.length > 0) && q[0].end > y;
            if (F === i.endRuleId) {
              const O = u.getRule(k);
              c.DebugFlags.InDebugMode && console.log("  popping " + O.debugName + " - " + O.debugEndRegExp), g.produce(u, q[0].start), u = u.withContentNameScopesList(u.nameScopesList), S(k, w, N, u, g, O.endCaptures, q), g.produce(u, q[0].end);
              const Z = u;
              if (u = u.parent, C = Z.getAnchorPos(), !M && Z.getEnterPos() === y)
                return c.DebugFlags.InDebugMode && console.error("[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing"), u = Z, g.produce(u, v), void (A = !0);
            } else {
              const O = k.getRule(F);
              g.produce(u, q[0].start);
              const Z = u, J = O.getName(w.content, q), V = u.contentNameScopesList.pushAttributed(J, k);
              if (u = u.push(F, y, C, q[0].end === v, null, V, V), O instanceof i.BeginEndRule) {
                const G = O;
                c.DebugFlags.InDebugMode && console.log("  pushing " + G.debugName + " - " + G.debugBeginRegExp), S(k, w, N, u, g, G.beginCaptures, q), g.produce(u, q[0].end), C = q[0].end;
                const $ = G.getContentName(w.content, q), z = V.pushAttributed($, k);
                if (u = u.withContentNameScopesList(z), G.endHasBackReferences && (u = u.withEndRule(G.getEndWithResolvedBackReferences(w.content, q))), !M && Z.hasSameRuleAs(u))
                  return c.DebugFlags.InDebugMode && console.error("[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing"), u = u.pop(), g.produce(u, v), void (A = !0);
              } else if (O instanceof i.BeginWhileRule) {
                const G = O;
                c.DebugFlags.InDebugMode && console.log("  pushing " + G.debugName), S(k, w, N, u, g, G.beginCaptures, q), g.produce(u, q[0].end), C = q[0].end;
                const $ = G.getContentName(w.content, q), z = V.pushAttributed($, k);
                if (u = u.withContentNameScopesList(z), G.whileHasBackReferences && (u = u.withEndRule(G.getWhileWithResolvedBackReferences(w.content, q))), !M && Z.hasSameRuleAs(u))
                  return c.DebugFlags.InDebugMode && console.error("[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing"), u = u.pop(), g.produce(u, v), void (A = !0);
              } else {
                const G = O;
                if (c.DebugFlags.InDebugMode && console.log("  matched " + G.debugName + " - " + G.debugMatchRegExp), S(k, w, N, u, g, G.captures, q), g.produce(u, q[0].end), u = u.pop(), !M)
                  return c.DebugFlags.InDebugMode && console.error("[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping"), u = u.safePop(), g.produce(u, v), void (A = !0);
              }
            }
            q[0].end > y && (y = q[0].end, N = !1);
          }
        }
        function m(k, w, N, y, u) {
          return c.UseOnigurumaFindOptions ? { ruleScanner: k.compile(w, N), findOptions: L(y, u) } : { ruleScanner: k.compileAG(w, N, y, u), findOptions: 0 };
        }
        function f(k, w, N, y, u) {
          return c.UseOnigurumaFindOptions ? { ruleScanner: k.compileWhile(w, N), findOptions: L(y, u) } : { ruleScanner: k.compileWhileAG(w, N, y, u), findOptions: 0 };
        }
        function L(k, w) {
          let N = 0;
          return k || (N |= 1), w || (N |= 4), N;
        }
        function S(k, w, N, y, u, g, x) {
          if (g.length === 0)
            return;
          const _ = w.content, v = Math.min(g.length, x.length), A = [], C = x[0].end;
          for (let T = 0; T < v; T++) {
            const E = g[T];
            if (E === null)
              continue;
            const D = x[T];
            if (D.length === 0)
              continue;
            if (D.start > C)
              break;
            for (; A.length > 0 && A[A.length - 1].endPos <= D.start; )
              u.produceFromScopes(A[A.length - 1].scopes, A[A.length - 1].endPos), A.pop();
            if (A.length > 0 ? u.produceFromScopes(A[A.length - 1].scopes, D.start) : u.produce(y, D.start), E.retokenizeCapturedWithRuleId) {
              const F = E.getName(_, x), M = y.contentNameScopesList.pushAttributed(F, k), O = E.getContentName(_, x), Z = M.pushAttributed(O, k), J = y.push(E.retokenizeCapturedWithRuleId, D.start, -1, !1, null, M, Z), V = k.createOnigString(_.substring(0, D.end));
              d(k, V, N && D.start === 0, D.start, J, u, !1, 0), l.disposeOnigString(V);
              continue;
            }
            const q = E.getName(_, x);
            if (q !== null) {
              const F = (A.length > 0 ? A[A.length - 1].scopes : y.contentNameScopesList).pushAttributed(q, k);
              A.push(new b(F, D.end));
            }
          }
          for (; A.length > 0; )
            u.produceFromScopes(A[A.length - 1].scopes, A[A.length - 1].endPos), A.pop();
        }
        o._tokenizeString = d;
        class b {
          constructor(w, N) {
            this.scopes = w, this.endPos = N;
          }
        }
        o.LocalStackElement = b;
      }, 974: (r, o) => {
        function a(p, h) {
          throw new Error("Near offset " + p.pos + ": " + h + " ~~~" + p.source.substr(p.pos, 50) + "~~~");
        }
        Object.defineProperty(o, "__esModule", { value: !0 }), o.parseJSON = void 0, o.parseJSON = function(p, h, d) {
          let m = new c(p), f = new l(), L = 0, S = null, b = [], k = [];
          function w() {
            b.push(L), k.push(S);
          }
          function N() {
            L = b.pop(), S = k.pop();
          }
          function y(u) {
            a(m, u);
          }
          for (; i(m, f); ) {
            if (L === 0) {
              if (S !== null && y("too many constructs in root"), f.type === 3) {
                S = {}, d && (S.$vscodeTextmateLocation = f.toLocation(h)), w(), L = 1;
                continue;
              }
              if (f.type === 2) {
                S = [], w(), L = 4;
                continue;
              }
              y("unexpected token in root");
            }
            if (L === 2) {
              if (f.type === 5) {
                N();
                continue;
              }
              if (f.type === 7) {
                L = 3;
                continue;
              }
              y("expected , or }");
            }
            if (L === 1 || L === 3) {
              if (L === 1 && f.type === 5) {
                N();
                continue;
              }
              if (f.type === 1) {
                let u = f.value;
                if (i(m, f) && f.type === 6 || y("expected colon"), i(m, f) || y("expected value"), L = 2, f.type === 1) {
                  S[u] = f.value;
                  continue;
                }
                if (f.type === 8) {
                  S[u] = null;
                  continue;
                }
                if (f.type === 9) {
                  S[u] = !0;
                  continue;
                }
                if (f.type === 10) {
                  S[u] = !1;
                  continue;
                }
                if (f.type === 11) {
                  S[u] = parseFloat(f.value);
                  continue;
                }
                if (f.type === 2) {
                  let g = [];
                  S[u] = g, w(), L = 4, S = g;
                  continue;
                }
                if (f.type === 3) {
                  let g = {};
                  d && (g.$vscodeTextmateLocation = f.toLocation(h)), S[u] = g, w(), L = 1, S = g;
                  continue;
                }
              }
              y("unexpected token in dict");
            }
            if (L === 5) {
              if (f.type === 4) {
                N();
                continue;
              }
              if (f.type === 7) {
                L = 6;
                continue;
              }
              y("expected , or ]");
            }
            if (L === 4 || L === 6) {
              if (L === 4 && f.type === 4) {
                N();
                continue;
              }
              if (L = 5, f.type === 1) {
                S.push(f.value);
                continue;
              }
              if (f.type === 8) {
                S.push(null);
                continue;
              }
              if (f.type === 9) {
                S.push(!0);
                continue;
              }
              if (f.type === 10) {
                S.push(!1);
                continue;
              }
              if (f.type === 11) {
                S.push(parseFloat(f.value));
                continue;
              }
              if (f.type === 2) {
                let u = [];
                S.push(u), w(), L = 4, S = u;
                continue;
              }
              if (f.type === 3) {
                let u = {};
                d && (u.$vscodeTextmateLocation = f.toLocation(h)), S.push(u), w(), L = 1, S = u;
                continue;
              }
              y("unexpected token in array");
            }
            y("unknown state");
          }
          return k.length !== 0 && y("unclosed constructs"), S;
        };
        class c {
          constructor(h) {
            this.source = h, this.pos = 0, this.len = h.length, this.line = 1, this.char = 0;
          }
        }
        class l {
          constructor() {
            this.value = null, this.type = 0, this.offset = -1, this.len = -1, this.line = -1, this.char = -1;
          }
          toLocation(h) {
            return { filename: h, line: this.line, char: this.char };
          }
        }
        function i(p, h) {
          h.value = null, h.type = 0, h.offset = -1, h.len = -1, h.line = -1, h.char = -1;
          let d, m = p.source, f = p.pos, L = p.len, S = p.line, b = p.char;
          for (; ; ) {
            if (f >= L)
              return !1;
            if (d = m.charCodeAt(f), d !== 32 && d !== 9 && d !== 13) {
              if (d !== 10)
                break;
              f++, S++, b = 0;
            } else
              f++, b++;
          }
          if (h.offset = f, h.line = S, h.char = b, d === 34) {
            for (h.type = 1, f++, b++; ; ) {
              if (f >= L)
                return !1;
              if (d = m.charCodeAt(f), f++, b++, d !== 92) {
                if (d === 34)
                  break;
              } else
                f++, b++;
            }
            h.value = m.substring(h.offset + 1, f - 1).replace(/\\u([0-9A-Fa-f]{4})/g, (k, w) => String.fromCodePoint(parseInt(w, 16))).replace(/\\(.)/g, (k, w) => {
              switch (w) {
                case '"':
                  return '"';
                case "\\":
                  return "\\";
                case "/":
                  return "/";
                case "b":
                  return "\b";
                case "f":
                  return "\f";
                case "n":
                  return `
`;
                case "r":
                  return "\r";
                case "t":
                  return "	";
                default:
                  a(p, "invalid escape sequence");
              }
              throw new Error("unreachable");
            });
          } else if (d === 91)
            h.type = 2, f++, b++;
          else if (d === 123)
            h.type = 3, f++, b++;
          else if (d === 93)
            h.type = 4, f++, b++;
          else if (d === 125)
            h.type = 5, f++, b++;
          else if (d === 58)
            h.type = 6, f++, b++;
          else if (d === 44)
            h.type = 7, f++, b++;
          else if (d === 110) {
            if (h.type = 8, f++, b++, d = m.charCodeAt(f), d !== 117 || (f++, b++, d = m.charCodeAt(f), d !== 108) || (f++, b++, d = m.charCodeAt(f), d !== 108))
              return !1;
            f++, b++;
          } else if (d === 116) {
            if (h.type = 9, f++, b++, d = m.charCodeAt(f), d !== 114 || (f++, b++, d = m.charCodeAt(f), d !== 117) || (f++, b++, d = m.charCodeAt(f), d !== 101))
              return !1;
            f++, b++;
          } else if (d === 102) {
            if (h.type = 10, f++, b++, d = m.charCodeAt(f), d !== 97 || (f++, b++, d = m.charCodeAt(f), d !== 108) || (f++, b++, d = m.charCodeAt(f), d !== 115) || (f++, b++, d = m.charCodeAt(f), d !== 101))
              return !1;
            f++, b++;
          } else
            for (h.type = 11; ; ) {
              if (f >= L)
                return !1;
              if (d = m.charCodeAt(f), !(d === 46 || d >= 48 && d <= 57 || d === 101 || d === 69 || d === 45 || d === 43))
                break;
              f++, b++;
            }
          return h.len = f - h.offset, h.value === null && (h.value = m.substr(h.offset, h.len)), p.pos = f, p.line = S, p.char = b, !0;
        }
      }, 787: function(r, o, a) {
        var c = this && this.__createBinding || (Object.create ? function(f, L, S, b) {
          b === void 0 && (b = S), Object.defineProperty(f, b, { enumerable: !0, get: function() {
            return L[S];
          } });
        } : function(f, L, S, b) {
          b === void 0 && (b = S), f[b] = L[S];
        }), l = this && this.__exportStar || function(f, L) {
          for (var S in f)
            S === "default" || Object.prototype.hasOwnProperty.call(L, S) || c(L, f, S);
        };
        Object.defineProperty(o, "__esModule", { value: !0 }), o.parseRawGrammar = o.INITIAL = o.Registry = void 0;
        const i = a(391), p = a(50), h = a(652), d = a(583), m = a(965);
        l(a(44), o), o.Registry = class {
          constructor(f) {
            this._options = f, this._syncRegistry = new h.SyncRegistry(d.Theme.createFromRawTheme(f.theme, f.colorMap), f.onigLib), this._ensureGrammarCache = /* @__PURE__ */ new Map();
          }
          dispose() {
            this._syncRegistry.dispose();
          }
          setTheme(f, L) {
            this._syncRegistry.setTheme(d.Theme.createFromRawTheme(f, L));
          }
          getColorMap() {
            return this._syncRegistry.getColorMap();
          }
          loadGrammarWithEmbeddedLanguages(f, L, S) {
            return this.loadGrammarWithConfiguration(f, L, { embeddedLanguages: S });
          }
          loadGrammarWithConfiguration(f, L, S) {
            return this._loadGrammar(f, L, S.embeddedLanguages, S.tokenTypes, new i.BalancedBracketSelectors(S.balancedBracketSelectors || [], S.unbalancedBracketSelectors || []));
          }
          loadGrammar(f) {
            return this._loadGrammar(f, 0, null, null, null);
          }
          async _loadGrammar(f, L, S, b, k) {
            const w = new m.ScopeDependencyProcessor(this._syncRegistry, f);
            for (; w.Q.length > 0; )
              await Promise.all(w.Q.map((N) => this._loadSingleGrammar(N.scopeName))), w.processQueue();
            return this._grammarForScopeName(f, L, S, b, k);
          }
          async _loadSingleGrammar(f) {
            return this._ensureGrammarCache.has(f) || this._ensureGrammarCache.set(f, this._doLoadSingleGrammar(f)), this._ensureGrammarCache.get(f);
          }
          async _doLoadSingleGrammar(f) {
            const L = await this._options.loadGrammar(f);
            if (L) {
              const S = typeof this._options.getInjections == "function" ? this._options.getInjections(f) : void 0;
              this._syncRegistry.addGrammar(L, S);
            }
          }
          async addGrammar(f, L = [], S = 0, b = null) {
            return this._syncRegistry.addGrammar(f, L), await this._grammarForScopeName(f.scopeName, S, b);
          }
          _grammarForScopeName(f, L = 0, S = null, b = null, k = null) {
            return this._syncRegistry.grammarForScopeName(f, L, S, b, k);
          }
        }, o.INITIAL = i.StateStack.NULL, o.parseRawGrammar = p.parseRawGrammar;
      }, 736: (r, o) => {
        function a(c) {
          return !!c && !!c.match(/[\w\.:]+/);
        }
        Object.defineProperty(o, "__esModule", { value: !0 }), o.createMatchers = void 0, o.createMatchers = function(c, l) {
          const i = [], p = function(f) {
            let L = /([LR]:|[\w\.:][\w\.:\-]*|[\,\|\-\(\)])/g, S = L.exec(f);
            return { next: () => {
              if (!S)
                return null;
              const b = S[0];
              return S = L.exec(f), b;
            } };
          }(c);
          let h = p.next();
          for (; h !== null; ) {
            let f = 0;
            if (h.length === 2 && h.charAt(1) === ":") {
              switch (h.charAt(0)) {
                case "R":
                  f = 1;
                  break;
                case "L":
                  f = -1;
                  break;
                default:
                  console.log(`Unknown priority ${h} in scope selector`);
              }
              h = p.next();
            }
            let L = m();
            if (i.push({ matcher: L, priority: f }), h !== ",")
              break;
            h = p.next();
          }
          return i;
          function d() {
            if (h === "-") {
              h = p.next();
              const f = d();
              return (L) => !!f && !f(L);
            }
            if (h === "(") {
              h = p.next();
              const f = function() {
                const L = [];
                let S = m();
                for (; S && (L.push(S), h === "|" || h === ","); ) {
                  do
                    h = p.next();
                  while (h === "|" || h === ",");
                  S = m();
                }
                return (b) => L.some((k) => k(b));
              }();
              return h === ")" && (h = p.next()), f;
            }
            if (a(h)) {
              const f = [];
              do
                f.push(h), h = p.next();
              while (a(h));
              return (L) => l(f, L);
            }
            return null;
          }
          function m() {
            const f = [];
            let L = d();
            for (; L; )
              f.push(L), L = d();
            return (S) => f.every((b) => b(S));
          }
        };
      }, 44: (r, o) => {
        Object.defineProperty(o, "__esModule", { value: !0 }), o.disposeOnigString = void 0, o.disposeOnigString = function(a) {
          typeof a.dispose == "function" && a.dispose();
        };
      }, 50: (r, o, a) => {
        Object.defineProperty(o, "__esModule", { value: !0 }), o.parseRawGrammar = void 0;
        const c = a(69), l = a(350), i = a(974);
        o.parseRawGrammar = function(p, h = null) {
          return h !== null && /\.json$/.test(h) ? (d = p, m = h, l.DebugFlags.InDebugMode ? i.parseJSON(d, m, !0) : JSON.parse(d)) : function(f, L) {
            return l.DebugFlags.InDebugMode ? c.parseWithLocation(f, L, "$vscodeTextmateLocation") : c.parsePLIST(f);
          }(p, h);
          var d, m;
        };
      }, 69: (r, o) => {
        function a(c, l, i) {
          const p = c.length;
          let h = 0, d = 1, m = 0;
          function f(j) {
            if (i === null)
              h += j;
            else
              for (; j > 0; )
                c.charCodeAt(h) === 10 ? (h++, d++, m = 0) : (h++, m++), j--;
          }
          function L(j) {
            i === null ? h = j : f(j - h);
          }
          function S() {
            for (; h < p; ) {
              let j = c.charCodeAt(h);
              if (j !== 32 && j !== 9 && j !== 13 && j !== 10)
                break;
              f(1);
            }
          }
          function b(j) {
            return c.substr(h, j.length) === j && (f(j.length), !0);
          }
          function k(j) {
            let Q = c.indexOf(j, h);
            L(Q !== -1 ? Q + j.length : p);
          }
          function w(j) {
            let Q = c.indexOf(j, h);
            if (Q !== -1) {
              let U = c.substring(h, Q);
              return L(Q + j.length), U;
            }
            {
              let U = c.substr(h);
              return L(p), U;
            }
          }
          p > 0 && c.charCodeAt(0) === 65279 && (h = 1);
          let N = 0, y = null, u = [], g = [], x = null;
          function _(j, Q) {
            u.push(N), g.push(y), N = j, y = Q;
          }
          function v() {
            if (u.length === 0)
              return A("illegal state stack");
            N = u.pop(), y = g.pop();
          }
          function A(j) {
            throw new Error("Near offset " + h + ": " + j + " ~~~" + c.substr(h, 50) + "~~~");
          }
          const C = function() {
            if (x === null)
              return A("missing <key>");
            let j = {};
            i !== null && (j[i] = { filename: l, line: d, char: m }), y[x] = j, x = null, _(1, j);
          }, T = function() {
            if (x === null)
              return A("missing <key>");
            let j = [];
            y[x] = j, x = null, _(2, j);
          }, E = function() {
            let j = {};
            i !== null && (j[i] = { filename: l, line: d, char: m }), y.push(j), _(1, j);
          }, D = function() {
            let j = [];
            y.push(j), _(2, j);
          };
          function q() {
            if (N !== 1)
              return A("unexpected </dict>");
            v();
          }
          function F() {
            return N === 1 || N !== 2 ? A("unexpected </array>") : void v();
          }
          function M(j) {
            if (N === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              N === 2 ? y.push(j) : y = j;
          }
          function O(j) {
            if (isNaN(j))
              return A("cannot parse float");
            if (N === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              N === 2 ? y.push(j) : y = j;
          }
          function Z(j) {
            if (isNaN(j))
              return A("cannot parse integer");
            if (N === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              N === 2 ? y.push(j) : y = j;
          }
          function J(j) {
            if (N === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              N === 2 ? y.push(j) : y = j;
          }
          function V(j) {
            if (N === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              N === 2 ? y.push(j) : y = j;
          }
          function G(j) {
            if (N === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              N === 2 ? y.push(j) : y = j;
          }
          function $() {
            let j = w(">"), Q = !1;
            return j.charCodeAt(j.length - 1) === 47 && (Q = !0, j = j.substring(0, j.length - 1)), { name: j.trim(), isClosed: Q };
          }
          function z(j) {
            if (j.isClosed)
              return "";
            let Q = w("</");
            return k(">"), Q.replace(/&#([0-9]+);/g, function(U, se) {
              return String.fromCodePoint(parseInt(se, 10));
            }).replace(/&#x([0-9a-f]+);/g, function(U, se) {
              return String.fromCodePoint(parseInt(se, 16));
            }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function(U) {
              switch (U) {
                case "&amp;":
                  return "&";
                case "&lt;":
                  return "<";
                case "&gt;":
                  return ">";
                case "&quot;":
                  return '"';
                case "&apos;":
                  return "'";
              }
              return U;
            });
          }
          for (; h < p && (S(), !(h >= p)); ) {
            const j = c.charCodeAt(h);
            if (f(1), j !== 60)
              return A("expected <");
            if (h >= p)
              return A("unexpected end of input");
            const Q = c.charCodeAt(h);
            if (Q === 63) {
              f(1), k("?>");
              continue;
            }
            if (Q === 33) {
              if (f(1), b("--")) {
                k("-->");
                continue;
              }
              k(">");
              continue;
            }
            if (Q === 47) {
              if (f(1), S(), b("plist")) {
                k(">");
                continue;
              }
              if (b("dict")) {
                k(">"), q();
                continue;
              }
              if (b("array")) {
                k(">"), F();
                continue;
              }
              return A("unexpected closed tag");
            }
            let U = $();
            switch (U.name) {
              case "dict":
                N === 1 ? C() : N === 2 ? E() : (y = {}, i !== null && (y[i] = { filename: l, line: d, char: m }), _(1, y)), U.isClosed && q();
                continue;
              case "array":
                N === 1 ? T() : N === 2 ? D() : (y = [], _(2, y)), U.isClosed && F();
                continue;
              case "key":
                Y = z(U), N !== 1 ? A("unexpected <key>") : x !== null ? A("too many <key>") : x = Y;
                continue;
              case "string":
                M(z(U));
                continue;
              case "real":
                O(parseFloat(z(U)));
                continue;
              case "integer":
                Z(parseInt(z(U), 10));
                continue;
              case "date":
                J(new Date(z(U)));
                continue;
              case "data":
                V(z(U));
                continue;
              case "true":
                z(U), G(!0);
                continue;
              case "false":
                z(U), G(!1);
                continue;
            }
            if (!/^plist/.test(U.name))
              return A("unexpected opened tag " + U.name);
          }
          var Y;
          return y;
        }
        Object.defineProperty(o, "__esModule", { value: !0 }), o.parsePLIST = o.parseWithLocation = void 0, o.parseWithLocation = function(c, l, i) {
          return a(c, l, i);
        }, o.parsePLIST = function(c) {
          return a(c, null, null);
        };
      }, 652: (r, o, a) => {
        Object.defineProperty(o, "__esModule", { value: !0 }), o.SyncRegistry = void 0;
        const c = a(391);
        o.SyncRegistry = class {
          constructor(l, i) {
            this._onigLibPromise = i, this._grammars = /* @__PURE__ */ new Map(), this._rawGrammars = /* @__PURE__ */ new Map(), this._injectionGrammars = /* @__PURE__ */ new Map(), this._theme = l;
          }
          dispose() {
            for (const l of this._grammars.values())
              l.dispose();
          }
          setTheme(l) {
            this._theme = l;
          }
          getColorMap() {
            return this._theme.getColorMap();
          }
          addGrammar(l, i) {
            this._rawGrammars.set(l.scopeName, l), i && this._injectionGrammars.set(l.scopeName, i);
          }
          lookup(l) {
            return this._rawGrammars.get(l);
          }
          injections(l) {
            return this._injectionGrammars.get(l);
          }
          getDefaults() {
            return this._theme.getDefaults();
          }
          themeMatch(l) {
            return this._theme.match(l);
          }
          async grammarForScopeName(l, i, p, h, d) {
            if (!this._grammars.has(l)) {
              let m = this._rawGrammars.get(l);
              if (!m)
                return null;
              this._grammars.set(l, c.createGrammar(l, m, i, p, h, d, this, await this._onigLibPromise));
            }
            return this._grammars.get(l);
          }
        };
      }, 792: (r, o, a) => {
        Object.defineProperty(o, "__esModule", { value: !0 }), o.CompiledRule = o.RegExpSourceList = o.RegExpSource = o.RuleFactory = o.BeginWhileRule = o.BeginEndRule = o.IncludeOnlyRule = o.MatchRule = o.CaptureRule = o.Rule = o.ruleIdToNumber = o.ruleIdFromNumber = o.whileRuleId = o.endRuleId = void 0;
        const c = a(878), l = a(965), i = /\\(\d+)/, p = /\\(\d+)/g;
        o.endRuleId = -1, o.whileRuleId = -2, o.ruleIdFromNumber = function(y) {
          return y;
        }, o.ruleIdToNumber = function(y) {
          return y;
        };
        class h {
          constructor(u, g, x, _) {
            this.$location = u, this.id = g, this._name = x || null, this._nameIsCapturing = c.RegexSource.hasCaptures(this._name), this._contentName = _ || null, this._contentNameIsCapturing = c.RegexSource.hasCaptures(this._contentName);
          }
          get debugName() {
            const u = this.$location ? `${c.basename(this.$location.filename)}:${this.$location.line}` : "unknown";
            return `${this.constructor.name}#${this.id} @ ${u}`;
          }
          getName(u, g) {
            return this._nameIsCapturing && this._name !== null && u !== null && g !== null ? c.RegexSource.replaceCaptures(this._name, u, g) : this._name;
          }
          getContentName(u, g) {
            return this._contentNameIsCapturing && this._contentName !== null ? c.RegexSource.replaceCaptures(this._contentName, u, g) : this._contentName;
          }
        }
        o.Rule = h;
        class d extends h {
          constructor(u, g, x, _, v) {
            super(u, g, x, _), this.retokenizeCapturedWithRuleId = v;
          }
          dispose() {
          }
          collectPatterns(u, g) {
            throw new Error("Not supported!");
          }
          compile(u, g) {
            throw new Error("Not supported!");
          }
          compileAG(u, g, x, _) {
            throw new Error("Not supported!");
          }
        }
        o.CaptureRule = d;
        class m extends h {
          constructor(u, g, x, _, v) {
            super(u, g, x, null), this._match = new k(_, this.id), this.captures = v, this._cachedCompiledPatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }
          get debugMatchRegExp() {
            return `${this._match.source}`;
          }
          collectPatterns(u, g) {
            g.push(this._match);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u) {
            return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new w(), this.collectPatterns(u, this._cachedCompiledPatterns)), this._cachedCompiledPatterns;
          }
        }
        o.MatchRule = m;
        class f extends h {
          constructor(u, g, x, _, v) {
            super(u, g, x, _), this.patterns = v.patterns, this.hasMissingPatterns = v.hasMissingPatterns, this._cachedCompiledPatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }
          collectPatterns(u, g) {
            for (const x of this.patterns)
              u.getRule(x).collectPatterns(u, g);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u) {
            return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new w(), this.collectPatterns(u, this._cachedCompiledPatterns)), this._cachedCompiledPatterns;
          }
        }
        o.IncludeOnlyRule = f;
        class L extends h {
          constructor(u, g, x, _, v, A, C, T, E, D) {
            super(u, g, x, _), this._begin = new k(v, this.id), this.beginCaptures = A, this._end = new k(C || "￿", -1), this.endHasBackReferences = this._end.hasBackReferences, this.endCaptures = T, this.applyEndPatternLast = E || !1, this.patterns = D.patterns, this.hasMissingPatterns = D.hasMissingPatterns, this._cachedCompiledPatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }
          get debugBeginRegExp() {
            return `${this._begin.source}`;
          }
          get debugEndRegExp() {
            return `${this._end.source}`;
          }
          getEndWithResolvedBackReferences(u, g) {
            return this._end.resolveBackReferences(u, g);
          }
          collectPatterns(u, g) {
            g.push(this._begin);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u, g).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u, g).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u, g) {
            if (!this._cachedCompiledPatterns) {
              this._cachedCompiledPatterns = new w();
              for (const x of this.patterns)
                u.getRule(x).collectPatterns(u, this._cachedCompiledPatterns);
              this.applyEndPatternLast ? this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end) : this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);
            }
            return this._end.hasBackReferences && (this.applyEndPatternLast ? this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, g) : this._cachedCompiledPatterns.setSource(0, g)), this._cachedCompiledPatterns;
          }
        }
        o.BeginEndRule = L;
        class S extends h {
          constructor(u, g, x, _, v, A, C, T, E) {
            super(u, g, x, _), this._begin = new k(v, this.id), this.beginCaptures = A, this.whileCaptures = T, this._while = new k(C, o.whileRuleId), this.whileHasBackReferences = this._while.hasBackReferences, this.patterns = E.patterns, this.hasMissingPatterns = E.hasMissingPatterns, this._cachedCompiledPatterns = null, this._cachedCompiledWhilePatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null), this._cachedCompiledWhilePatterns && (this._cachedCompiledWhilePatterns.dispose(), this._cachedCompiledWhilePatterns = null);
          }
          get debugBeginRegExp() {
            return `${this._begin.source}`;
          }
          get debugWhileRegExp() {
            return `${this._while.source}`;
          }
          getWhileWithResolvedBackReferences(u, g) {
            return this._while.resolveBackReferences(u, g);
          }
          collectPatterns(u, g) {
            g.push(this._begin);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u) {
            if (!this._cachedCompiledPatterns) {
              this._cachedCompiledPatterns = new w();
              for (const g of this.patterns)
                u.getRule(g).collectPatterns(u, this._cachedCompiledPatterns);
            }
            return this._cachedCompiledPatterns;
          }
          compileWhile(u, g) {
            return this._getCachedCompiledWhilePatterns(u, g).compile(u);
          }
          compileWhileAG(u, g, x, _) {
            return this._getCachedCompiledWhilePatterns(u, g).compileAG(u, x, _);
          }
          _getCachedCompiledWhilePatterns(u, g) {
            return this._cachedCompiledWhilePatterns || (this._cachedCompiledWhilePatterns = new w(), this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while)), this._while.hasBackReferences && this._cachedCompiledWhilePatterns.setSource(0, g || "￿"), this._cachedCompiledWhilePatterns;
          }
        }
        o.BeginWhileRule = S;
        class b {
          static createCaptureRule(u, g, x, _, v) {
            return u.registerRule((A) => new d(g, A, x, _, v));
          }
          static getCompiledRuleId(u, g, x) {
            return u.id || g.registerRule((_) => {
              if (u.id = _, u.match)
                return new m(u.$vscodeTextmateLocation, u.id, u.name, u.match, b._compileCaptures(u.captures, g, x));
              if (u.begin === void 0) {
                u.repository && (x = c.mergeObjects({}, x, u.repository));
                let v = u.patterns;
                return v === void 0 && u.include && (v = [{ include: u.include }]), new f(u.$vscodeTextmateLocation, u.id, u.name, u.contentName, b._compilePatterns(v, g, x));
              }
              return u.while ? new S(u.$vscodeTextmateLocation, u.id, u.name, u.contentName, u.begin, b._compileCaptures(u.beginCaptures || u.captures, g, x), u.while, b._compileCaptures(u.whileCaptures || u.captures, g, x), b._compilePatterns(u.patterns, g, x)) : new L(u.$vscodeTextmateLocation, u.id, u.name, u.contentName, u.begin, b._compileCaptures(u.beginCaptures || u.captures, g, x), u.end, b._compileCaptures(u.endCaptures || u.captures, g, x), u.applyEndPatternLast, b._compilePatterns(u.patterns, g, x));
            }), u.id;
          }
          static _compileCaptures(u, g, x) {
            let _ = [];
            if (u) {
              let v = 0;
              for (const A in u) {
                if (A === "$vscodeTextmateLocation")
                  continue;
                const C = parseInt(A, 10);
                C > v && (v = C);
              }
              for (let A = 0; A <= v; A++)
                _[A] = null;
              for (const A in u) {
                if (A === "$vscodeTextmateLocation")
                  continue;
                const C = parseInt(A, 10);
                let T = 0;
                u[A].patterns && (T = b.getCompiledRuleId(u[A], g, x)), _[C] = b.createCaptureRule(g, u[A].$vscodeTextmateLocation, u[A].name, u[A].contentName, T);
              }
            }
            return _;
          }
          static _compilePatterns(u, g, x) {
            let _ = [];
            if (u)
              for (let v = 0, A = u.length; v < A; v++) {
                const C = u[v];
                let T = -1;
                if (C.include) {
                  const E = l.parseInclude(C.include);
                  switch (E.kind) {
                    case 0:
                    case 1:
                      T = b.getCompiledRuleId(x[C.include], g, x);
                      break;
                    case 2:
                      let D = x[E.ruleName];
                      D && (T = b.getCompiledRuleId(D, g, x));
                      break;
                    case 3:
                    case 4:
                      const q = E.scopeName, F = E.kind === 4 ? E.ruleName : null, M = g.getExternalGrammar(q, x);
                      if (M)
                        if (F) {
                          let O = M.repository[F];
                          O && (T = b.getCompiledRuleId(O, g, M.repository));
                        } else
                          T = b.getCompiledRuleId(M.repository.$self, g, M.repository);
                  }
                } else
                  T = b.getCompiledRuleId(C, g, x);
                if (T !== -1) {
                  const E = g.getRule(T);
                  let D = !1;
                  if ((E instanceof f || E instanceof L || E instanceof S) && E.hasMissingPatterns && E.patterns.length === 0 && (D = !0), D)
                    continue;
                  _.push(T);
                }
              }
            return { patterns: _, hasMissingPatterns: (u ? u.length : 0) !== _.length };
          }
        }
        o.RuleFactory = b;
        class k {
          constructor(u, g) {
            if (u) {
              const x = u.length;
              let _ = 0, v = [], A = !1;
              for (let C = 0; C < x; C++)
                if (u.charAt(C) === "\\" && C + 1 < x) {
                  const T = u.charAt(C + 1);
                  T === "z" ? (v.push(u.substring(_, C)), v.push("$(?!\\n)(?<!\\n)"), _ = C + 2) : T !== "A" && T !== "G" || (A = !0), C++;
                }
              this.hasAnchor = A, _ === 0 ? this.source = u : (v.push(u.substring(_, x)), this.source = v.join(""));
            } else
              this.hasAnchor = !1, this.source = u;
            this.hasAnchor ? this._anchorCache = this._buildAnchorCache() : this._anchorCache = null, this.ruleId = g, this.hasBackReferences = i.test(this.source);
          }
          clone() {
            return new k(this.source, this.ruleId);
          }
          setSource(u) {
            this.source !== u && (this.source = u, this.hasAnchor && (this._anchorCache = this._buildAnchorCache()));
          }
          resolveBackReferences(u, g) {
            let x = g.map((_) => u.substring(_.start, _.end));
            return p.lastIndex = 0, this.source.replace(p, (_, v) => c.escapeRegExpCharacters(x[parseInt(v, 10)] || ""));
          }
          _buildAnchorCache() {
            let u, g, x, _, v = [], A = [], C = [], T = [];
            for (u = 0, g = this.source.length; u < g; u++)
              x = this.source.charAt(u), v[u] = x, A[u] = x, C[u] = x, T[u] = x, x === "\\" && u + 1 < g && (_ = this.source.charAt(u + 1), _ === "A" ? (v[u + 1] = "￿", A[u + 1] = "￿", C[u + 1] = "A", T[u + 1] = "A") : _ === "G" ? (v[u + 1] = "￿", A[u + 1] = "G", C[u + 1] = "￿", T[u + 1] = "G") : (v[u + 1] = _, A[u + 1] = _, C[u + 1] = _, T[u + 1] = _), u++);
            return { A0_G0: v.join(""), A0_G1: A.join(""), A1_G0: C.join(""), A1_G1: T.join("") };
          }
          resolveAnchors(u, g) {
            return this.hasAnchor && this._anchorCache ? u ? g ? this._anchorCache.A1_G1 : this._anchorCache.A1_G0 : g ? this._anchorCache.A0_G1 : this._anchorCache.A0_G0 : this.source;
          }
        }
        o.RegExpSource = k;
        class w {
          constructor() {
            this._items = [], this._hasAnchors = !1, this._cached = null, this._anchorCache = { A0_G0: null, A0_G1: null, A1_G0: null, A1_G1: null };
          }
          dispose() {
            this._disposeCaches();
          }
          _disposeCaches() {
            this._cached && (this._cached.dispose(), this._cached = null), this._anchorCache.A0_G0 && (this._anchorCache.A0_G0.dispose(), this._anchorCache.A0_G0 = null), this._anchorCache.A0_G1 && (this._anchorCache.A0_G1.dispose(), this._anchorCache.A0_G1 = null), this._anchorCache.A1_G0 && (this._anchorCache.A1_G0.dispose(), this._anchorCache.A1_G0 = null), this._anchorCache.A1_G1 && (this._anchorCache.A1_G1.dispose(), this._anchorCache.A1_G1 = null);
          }
          push(u) {
            this._items.push(u), this._hasAnchors = this._hasAnchors || u.hasAnchor;
          }
          unshift(u) {
            this._items.unshift(u), this._hasAnchors = this._hasAnchors || u.hasAnchor;
          }
          length() {
            return this._items.length;
          }
          setSource(u, g) {
            this._items[u].source !== g && (this._disposeCaches(), this._items[u].setSource(g));
          }
          compile(u) {
            if (!this._cached) {
              let g = this._items.map((x) => x.source);
              this._cached = new N(u, g, this._items.map((x) => x.ruleId));
            }
            return this._cached;
          }
          compileAG(u, g, x) {
            return this._hasAnchors ? g ? x ? (this._anchorCache.A1_G1 || (this._anchorCache.A1_G1 = this._resolveAnchors(u, g, x)), this._anchorCache.A1_G1) : (this._anchorCache.A1_G0 || (this._anchorCache.A1_G0 = this._resolveAnchors(u, g, x)), this._anchorCache.A1_G0) : x ? (this._anchorCache.A0_G1 || (this._anchorCache.A0_G1 = this._resolveAnchors(u, g, x)), this._anchorCache.A0_G1) : (this._anchorCache.A0_G0 || (this._anchorCache.A0_G0 = this._resolveAnchors(u, g, x)), this._anchorCache.A0_G0) : this.compile(u);
          }
          _resolveAnchors(u, g, x) {
            let _ = this._items.map((v) => v.resolveAnchors(g, x));
            return new N(u, _, this._items.map((v) => v.ruleId));
          }
        }
        o.RegExpSourceList = w;
        class N {
          constructor(u, g, x) {
            this.regExps = g, this.rules = x, this.scanner = u.createOnigScanner(g);
          }
          dispose() {
            typeof this.scanner.dispose == "function" && this.scanner.dispose();
          }
          toString() {
            const u = [];
            for (let g = 0, x = this.rules.length; g < x; g++)
              u.push("   - " + this.rules[g] + ": " + this.regExps[g]);
            return u.join(`
`);
          }
          findNextMatchSync(u, g, x) {
            const _ = this.scanner.findNextMatchSync(u, g, x);
            return _ ? { ruleId: this.rules[_.index], captureIndices: _.captureIndices } : null;
          }
        }
        o.CompiledRule = N;
      }, 583: (r, o, a) => {
        Object.defineProperty(o, "__esModule", { value: !0 }), o.ThemeTrieElement = o.ThemeTrieElementRule = o.ColorMap = o.fontStyleToString = o.ParsedThemeRule = o.parseTheme = o.StyleAttributes = o.ScopeStack = o.Theme = void 0;
        const c = a(878);
        class l {
          constructor(k, w, N) {
            this._colorMap = k, this._defaults = w, this._root = N, this._cachedMatchRoot = new c.CachedFn((y) => this._root.match(y));
          }
          static createFromRawTheme(k, w) {
            return this.createFromParsedTheme(d(k), w);
          }
          static createFromParsedTheme(k, w) {
            return function(N, y) {
              N.sort((C, T) => {
                let E = c.strcmp(C.scope, T.scope);
                return E !== 0 ? E : (E = c.strArrCmp(C.parentScopes, T.parentScopes), E !== 0 ? E : C.index - T.index);
              });
              let u = 0, g = "#000000", x = "#ffffff";
              for (; N.length >= 1 && N[0].scope === ""; ) {
                let C = N.shift();
                C.fontStyle !== -1 && (u = C.fontStyle), C.foreground !== null && (g = C.foreground), C.background !== null && (x = C.background);
              }
              let _ = new f(y), v = new h(u, _.getId(g), _.getId(x)), A = new S(new L(0, null, -1, 0, 0), []);
              for (let C = 0, T = N.length; C < T; C++) {
                let E = N[C];
                A.insert(0, E.scope, E.parentScopes, E.fontStyle, _.getId(E.foreground), _.getId(E.background));
              }
              return new l(_, v, A);
            }(k, w);
          }
          getColorMap() {
            return this._colorMap.getColorMap();
          }
          getDefaults() {
            return this._defaults;
          }
          match(k) {
            if (k === null)
              return this._defaults;
            const w = k.scopeName, N = this._cachedMatchRoot.get(w).find((y) => function(u, g) {
              if (g === null)
                return !0;
              let x = 0, _ = g[x];
              for (; u; ) {
                if (p(u.scopeName, _)) {
                  if (x++, x === g.length)
                    return !0;
                  _ = g[x];
                }
                u = u.parent;
              }
              return !1;
            }(k.parent, y.parentScopes));
            return N ? new h(N.fontStyle, N.foreground, N.background) : null;
          }
        }
        o.Theme = l;
        class i {
          constructor(k, w) {
            this.parent = k, this.scopeName = w;
          }
          static from(...k) {
            let w = null;
            for (let N = 0; N < k.length; N++)
              w = new i(w, k[N]);
            return w;
          }
          push(k) {
            return new i(this, k);
          }
          getSegments() {
            let k = this;
            const w = [];
            for (; k; )
              w.push(k.scopeName), k = k.parent;
            return w.reverse(), w;
          }
          toString() {
            return this.getSegments().join(" ");
          }
        }
        function p(b, k) {
          return k === b || b.startsWith(k) && b[k.length] === ".";
        }
        o.ScopeStack = i;
        class h {
          constructor(k, w, N) {
            this.fontStyle = k, this.foregroundId = w, this.backgroundId = N;
          }
        }
        function d(b) {
          if (!b)
            return [];
          if (!b.settings || !Array.isArray(b.settings))
            return [];
          let k = b.settings, w = [], N = 0;
          for (let y = 0, u = k.length; y < u; y++) {
            let g, x = k[y];
            if (!x.settings)
              continue;
            if (typeof x.scope == "string") {
              let C = x.scope;
              C = C.replace(/^[,]+/, ""), C = C.replace(/[,]+$/, ""), g = C.split(",");
            } else
              g = Array.isArray(x.scope) ? x.scope : [""];
            let _ = -1;
            if (typeof x.settings.fontStyle == "string") {
              _ = 0;
              let C = x.settings.fontStyle.split(" ");
              for (let T = 0, E = C.length; T < E; T++)
                switch (C[T]) {
                  case "italic":
                    _ |= 1;
                    break;
                  case "bold":
                    _ |= 2;
                    break;
                  case "underline":
                    _ |= 4;
                    break;
                  case "strikethrough":
                    _ |= 8;
                }
            }
            let v = null;
            typeof x.settings.foreground == "string" && c.isValidHexColor(x.settings.foreground) && (v = x.settings.foreground);
            let A = null;
            typeof x.settings.background == "string" && c.isValidHexColor(x.settings.background) && (A = x.settings.background);
            for (let C = 0, T = g.length; C < T; C++) {
              let E = g[C].trim().split(" "), D = E[E.length - 1], q = null;
              E.length > 1 && (q = E.slice(0, E.length - 1), q.reverse()), w[N++] = new m(D, q, y, _, v, A);
            }
          }
          return w;
        }
        o.StyleAttributes = h, o.parseTheme = d;
        class m {
          constructor(k, w, N, y, u, g) {
            this.scope = k, this.parentScopes = w, this.index = N, this.fontStyle = y, this.foreground = u, this.background = g;
          }
        }
        o.ParsedThemeRule = m, o.fontStyleToString = function(b) {
          if (b === -1)
            return "not set";
          let k = "";
          return 1 & b && (k += "italic "), 2 & b && (k += "bold "), 4 & b && (k += "underline "), 8 & b && (k += "strikethrough "), k === "" && (k = "none"), k.trim();
        };
        class f {
          constructor(k) {
            if (this._lastColorId = 0, this._id2color = [], this._color2id = /* @__PURE__ */ Object.create(null), Array.isArray(k)) {
              this._isFrozen = !0;
              for (let w = 0, N = k.length; w < N; w++)
                this._color2id[k[w]] = w, this._id2color[w] = k[w];
            } else
              this._isFrozen = !1;
          }
          getId(k) {
            if (k === null)
              return 0;
            k = k.toUpperCase();
            let w = this._color2id[k];
            if (w)
              return w;
            if (this._isFrozen)
              throw new Error(`Missing color in color map - ${k}`);
            return w = ++this._lastColorId, this._color2id[k] = w, this._id2color[w] = k, w;
          }
          getColorMap() {
            return this._id2color.slice(0);
          }
        }
        o.ColorMap = f;
        class L {
          constructor(k, w, N, y, u) {
            this.scopeDepth = k, this.parentScopes = w, this.fontStyle = N, this.foreground = y, this.background = u;
          }
          clone() {
            return new L(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);
          }
          static cloneArr(k) {
            let w = [];
            for (let N = 0, y = k.length; N < y; N++)
              w[N] = k[N].clone();
            return w;
          }
          acceptOverwrite(k, w, N, y) {
            this.scopeDepth > k ? console.log("how did this happen?") : this.scopeDepth = k, w !== -1 && (this.fontStyle = w), N !== 0 && (this.foreground = N), y !== 0 && (this.background = y);
          }
        }
        o.ThemeTrieElementRule = L;
        class S {
          constructor(k, w = [], N = {}) {
            this._mainRule = k, this._children = N, this._rulesWithParentScopes = w;
          }
          static _sortBySpecificity(k) {
            return k.length === 1 || k.sort(this._cmpBySpecificity), k;
          }
          static _cmpBySpecificity(k, w) {
            if (k.scopeDepth === w.scopeDepth) {
              const N = k.parentScopes, y = w.parentScopes;
              let u = N === null ? 0 : N.length, g = y === null ? 0 : y.length;
              if (u === g)
                for (let x = 0; x < u; x++) {
                  const _ = N[x].length, v = y[x].length;
                  if (_ !== v)
                    return v - _;
                }
              return g - u;
            }
            return w.scopeDepth - k.scopeDepth;
          }
          match(k) {
            if (k === "")
              return S._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));
            let w, N, y = k.indexOf(".");
            return y === -1 ? (w = k, N = "") : (w = k.substring(0, y), N = k.substring(y + 1)), this._children.hasOwnProperty(w) ? this._children[w].match(N) : S._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));
          }
          insert(k, w, N, y, u, g) {
            if (w === "")
              return void this._doInsertHere(k, N, y, u, g);
            let x, _, v, A = w.indexOf(".");
            A === -1 ? (x = w, _ = "") : (x = w.substring(0, A), _ = w.substring(A + 1)), this._children.hasOwnProperty(x) ? v = this._children[x] : (v = new S(this._mainRule.clone(), L.cloneArr(this._rulesWithParentScopes)), this._children[x] = v), v.insert(k + 1, _, N, y, u, g);
          }
          _doInsertHere(k, w, N, y, u) {
            if (w !== null) {
              for (let g = 0, x = this._rulesWithParentScopes.length; g < x; g++) {
                let _ = this._rulesWithParentScopes[g];
                if (c.strArrCmp(_.parentScopes, w) === 0)
                  return void _.acceptOverwrite(k, N, y, u);
              }
              N === -1 && (N = this._mainRule.fontStyle), y === 0 && (y = this._mainRule.foreground), u === 0 && (u = this._mainRule.background), this._rulesWithParentScopes.push(new L(k, w, N, y, u));
            } else
              this._mainRule.acceptOverwrite(k, N, y, u);
          }
        }
        o.ThemeTrieElement = S;
      }, 878: (r, o) => {
        function a(i) {
          return Array.isArray(i) ? function(p) {
            let h = [];
            for (let d = 0, m = p.length; d < m; d++)
              h[d] = a(p[d]);
            return h;
          }(i) : typeof i == "object" ? function(p) {
            let h = {};
            for (let d in p)
              h[d] = a(p[d]);
            return h;
          }(i) : i;
        }
        Object.defineProperty(o, "__esModule", { value: !0 }), o.performanceNow = o.CachedFn = o.escapeRegExpCharacters = o.isValidHexColor = o.strArrCmp = o.strcmp = o.RegexSource = o.basename = o.mergeObjects = o.clone = void 0, o.clone = function(i) {
          return a(i);
        }, o.mergeObjects = function(i, ...p) {
          return p.forEach((h) => {
            for (let d in h)
              i[d] = h[d];
          }), i;
        }, o.basename = function i(p) {
          const h = ~p.lastIndexOf("/") || ~p.lastIndexOf("\\");
          return h === 0 ? p : ~h == p.length - 1 ? i(p.substring(0, p.length - 1)) : p.substr(1 + ~h);
        };
        let c = /\$(\d+)|\${(\d+):\/(downcase|upcase)}/g;
        function l(i, p) {
          return i < p ? -1 : i > p ? 1 : 0;
        }
        o.RegexSource = class {
          static hasCaptures(i) {
            return i !== null && (c.lastIndex = 0, c.test(i));
          }
          static replaceCaptures(i, p, h) {
            return i.replace(c, (d, m, f, L) => {
              let S = h[parseInt(m || f, 10)];
              if (!S)
                return d;
              {
                let b = p.substring(S.start, S.end);
                for (; b[0] === "."; )
                  b = b.substring(1);
                switch (L) {
                  case "downcase":
                    return b.toLowerCase();
                  case "upcase":
                    return b.toUpperCase();
                  default:
                    return b;
                }
              }
            });
          }
        }, o.strcmp = l, o.strArrCmp = function(i, p) {
          if (i === null && p === null)
            return 0;
          if (!i)
            return -1;
          if (!p)
            return 1;
          let h = i.length, d = p.length;
          if (h === d) {
            for (let m = 0; m < h; m++) {
              let f = l(i[m], p[m]);
              if (f !== 0)
                return f;
            }
            return 0;
          }
          return h - d;
        }, o.isValidHexColor = function(i) {
          return !!(/^#[0-9a-f]{6}$/i.test(i) || /^#[0-9a-f]{8}$/i.test(i) || /^#[0-9a-f]{3}$/i.test(i) || /^#[0-9a-f]{4}$/i.test(i));
        }, o.escapeRegExpCharacters = function(i) {
          return i.replace(/[\-\\\{\}\*\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&");
        }, o.CachedFn = class {
          constructor(i) {
            this.fn = i, this.cache = /* @__PURE__ */ new Map();
          }
          get(i) {
            if (this.cache.has(i))
              return this.cache.get(i);
            const p = this.fn(i);
            return this.cache.set(i, p), p;
          }
        }, o.performanceNow = typeof performance > "u" ? function() {
          return Date.now();
        } : function() {
          return performance.now();
        };
      } }, s = {};
      return function r(o) {
        var a = s[o];
        if (a !== void 0)
          return a.exports;
        var c = s[o] = { exports: {} };
        return t[o].call(c.exports, c, c.exports, r), c.exports;
      }(787);
    })();
  });
})(Gs);
var Us = Gs.exports;
const An = [
  {
    id: "abap",
    scopeName: "source.abap",
    path: "abap.tmLanguage.json",
    displayName: "ABAP",
    samplePath: "abap.sample"
  },
  {
    id: "actionscript-3",
    scopeName: "source.actionscript.3",
    path: "actionscript-3.tmLanguage.json",
    displayName: "ActionScript",
    samplePath: "actionscript-3.sample"
  },
  {
    id: "ada",
    scopeName: "source.ada",
    path: "ada.tmLanguage.json",
    displayName: "Ada",
    samplePath: "ada.sample"
  },
  {
    id: "apache",
    scopeName: "source.apacheconf",
    path: "apache.tmLanguage.json",
    displayName: "Apache Conf"
  },
  {
    id: "apex",
    scopeName: "source.apex",
    path: "apex.tmLanguage.json",
    displayName: "Apex",
    samplePath: "apex.sample"
  },
  {
    id: "apl",
    scopeName: "source.apl",
    path: "apl.tmLanguage.json",
    displayName: "APL",
    embeddedLangs: ["html", "xml", "css", "javascript", "json"]
  },
  {
    id: "applescript",
    scopeName: "source.applescript",
    path: "applescript.tmLanguage.json",
    displayName: "AppleScript",
    samplePath: "applescript.sample"
  },
  {
    id: "ara",
    scopeName: "source.ara",
    path: "ara.tmLanguage.json",
    displayName: "Ara",
    samplePath: "ara.sample"
  },
  {
    id: "asm",
    scopeName: "source.asm.x86_64",
    path: "asm.tmLanguage.json",
    displayName: "Assembly",
    samplePath: "asm.sample"
  },
  {
    id: "astro",
    scopeName: "source.astro",
    path: "astro.tmLanguage.json",
    displayName: "Astro",
    samplePath: "astro.sample",
    embeddedLangs: ["json", "javascript", "typescript", "stylus", "sass", "css", "scss", "less", "postcss", "tsx"]
  },
  {
    id: "awk",
    scopeName: "source.awk",
    path: "awk.tmLanguage.json",
    displayName: "AWK",
    samplePath: "awk.sample"
  },
  {
    id: "ballerina",
    scopeName: "source.ballerina",
    path: "ballerina.tmLanguage.json",
    displayName: "Ballerina",
    samplePath: "ballerina.sample"
  },
  {
    id: "bat",
    scopeName: "source.batchfile",
    path: "bat.tmLanguage.json",
    displayName: "Batch",
    samplePath: "bat.sample",
    aliases: ["batch"]
  },
  {
    id: "beancount",
    scopeName: "text.beancount",
    path: "beancount.tmLanguage.json",
    displayName: "Beancount",
    samplePath: "beancount.sample"
  },
  {
    id: "berry",
    scopeName: "source.berry",
    path: "berry.tmLanguage.json",
    displayName: "Berry",
    samplePath: "berry.sample",
    aliases: ["be"]
  },
  {
    id: "bibtex",
    scopeName: "text.bibtex",
    path: "bibtex.tmLanguage.json",
    displayName: "BibTeX"
  },
  {
    id: "bicep",
    scopeName: "source.bicep",
    path: "bicep.tmLanguage.json",
    displayName: "Bicep",
    samplePath: "bicep.sample"
  },
  {
    id: "blade",
    scopeName: "text.html.php.blade",
    path: "blade.tmLanguage.json",
    displayName: "Blade",
    samplePath: "blade.sample",
    embeddedLangs: ["html", "xml", "sql", "javascript", "json", "css"]
  },
  {
    id: "c",
    scopeName: "source.c",
    path: "c.tmLanguage.json",
    displayName: "C",
    samplePath: "c.sample"
  },
  {
    id: "cadence",
    scopeName: "source.cadence",
    path: "cadence.tmLanguage.json",
    displayName: "Cadence",
    samplePath: "cadence.sample",
    aliases: ["cdc"]
  },
  {
    id: "clarity",
    scopeName: "source.clar",
    path: "clarity.tmLanguage.json",
    displayName: "Clarity",
    samplePath: "clarity.sample"
  },
  {
    id: "clojure",
    scopeName: "source.clojure",
    path: "clojure.tmLanguage.json",
    displayName: "Clojure",
    samplePath: "clojure.sample",
    aliases: ["clj"]
  },
  {
    id: "cmake",
    scopeName: "source.cmake",
    path: "cmake.tmLanguage.json",
    displayName: "CMake",
    samplePath: "cmake.sample"
  },
  {
    id: "cobol",
    scopeName: "source.cobol",
    path: "cobol.tmLanguage.json",
    displayName: "COBOL",
    samplePath: "cobol.sample",
    embeddedLangs: ["sql", "html", "java"]
  },
  {
    id: "codeql",
    scopeName: "source.ql",
    path: "codeql.tmLanguage.json",
    displayName: "CodeQL",
    samplePath: "codeql.sample",
    aliases: ["ql"],
    embeddedLangs: ["markdown"]
  },
  {
    id: "coffee",
    scopeName: "source.coffee",
    path: "coffee.tmLanguage.json",
    displayName: "CoffeeScript",
    samplePath: "coffee.sample",
    embeddedLangs: ["javascript"]
  },
  {
    id: "cpp",
    scopeName: "source.cpp",
    path: "cpp.tmLanguage.json",
    displayName: "C++",
    samplePath: "cpp.sample",
    embeddedLangs: ["glsl", "sql"]
  },
  {
    id: "crystal",
    scopeName: "source.crystal",
    path: "crystal.tmLanguage.json",
    displayName: "Crystal",
    samplePath: "crystal.sample",
    embeddedLangs: ["html", "sql", "css", "c", "javascript", "shellscript"]
  },
  {
    id: "csharp",
    scopeName: "source.cs",
    path: "csharp.tmLanguage.json",
    displayName: "C#",
    samplePath: "csharp.sample",
    aliases: ["c#", "cs"]
  },
  {
    id: "css",
    scopeName: "source.css",
    path: "css.tmLanguage.json",
    displayName: "CSS",
    samplePath: "css.sample"
  },
  {
    id: "cue",
    scopeName: "source.cue",
    path: "cue.tmLanguage.json",
    displayName: "CUE",
    samplePath: "cue.sample"
  },
  {
    id: "cypher",
    scopeName: "source.cypher",
    path: "cypher.tmLanguage.json",
    displayName: "Cypher",
    samplePath: "cypher.sample",
    aliases: ["cql"]
  },
  {
    id: "d",
    scopeName: "source.d",
    path: "d.tmLanguage.json",
    displayName: "D",
    samplePath: "d.sample"
  },
  {
    id: "dart",
    scopeName: "source.dart",
    path: "dart.tmLanguage.json",
    displayName: "Dart",
    samplePath: "dart.sample"
  },
  {
    id: "dax",
    scopeName: "source.dax",
    path: "dax.tmLanguage.json",
    displayName: "DAX",
    samplePath: "dax.sample"
  },
  {
    id: "diff",
    scopeName: "source.diff",
    path: "diff.tmLanguage.json",
    displayName: "Diff",
    samplePath: "diff.sample"
  },
  {
    id: "docker",
    scopeName: "source.dockerfile",
    path: "docker.tmLanguage.json",
    displayName: "Docker",
    samplePath: "docker.sample",
    aliases: ["dockerfile"]
  },
  {
    id: "dream-maker",
    scopeName: "source.dm",
    path: "dream-maker.tmLanguage.json",
    displayName: "Dream Maker"
  },
  {
    id: "elixir",
    scopeName: "source.elixir",
    path: "elixir.tmLanguage.json",
    displayName: "Elixir",
    samplePath: "elixir.sample",
    embeddedLangs: ["html"]
  },
  {
    id: "elm",
    scopeName: "source.elm",
    path: "elm.tmLanguage.json",
    displayName: "Elm",
    samplePath: "elm.sample",
    embeddedLangs: ["glsl"]
  },
  {
    id: "erb",
    scopeName: "text.html.erb",
    path: "erb.tmLanguage.json",
    displayName: "ERB",
    samplePath: "erb.sample",
    embeddedLangs: ["html", "ruby"]
  },
  {
    id: "erlang",
    scopeName: "source.erlang",
    path: "erlang.tmLanguage.json",
    displayName: "Erlang",
    samplePath: "erlang.sample",
    aliases: ["erl"]
  },
  {
    id: "fish",
    scopeName: "source.fish",
    path: "fish.tmLanguage.json",
    displayName: "Fish",
    samplePath: "fish.sample"
  },
  {
    id: "fsharp",
    scopeName: "source.fsharp",
    path: "fsharp.tmLanguage.json",
    displayName: "F#",
    samplePath: "fsharp.sample",
    aliases: ["f#", "fs"],
    embeddedLangs: ["markdown"]
  },
  {
    id: "gdresource",
    scopeName: "source.gdresource",
    path: "gdresource.tmLanguage.json",
    displayName: "GDResource",
    samplePath: "gdresource.sample",
    embeddedLangs: ["gdshader", "gdscript"]
  },
  {
    id: "gdscript",
    scopeName: "source.gdscript",
    path: "gdscript.tmLanguage.json",
    displayName: "GDScript",
    samplePath: "gdscript.sample"
  },
  {
    id: "gdshader",
    scopeName: "source.gdshader",
    path: "gdshader.tmLanguage.json",
    displayName: "GDShader",
    samplePath: "gdshader.sample"
  },
  {
    id: "gherkin",
    scopeName: "text.gherkin.feature",
    path: "gherkin.tmLanguage.json",
    displayName: "Gherkin"
  },
  {
    id: "git-commit",
    scopeName: "text.git-commit",
    path: "git-commit.tmLanguage.json",
    displayName: "Git Commit Message",
    embeddedLangs: ["diff"]
  },
  {
    id: "git-rebase",
    scopeName: "text.git-rebase",
    path: "git-rebase.tmLanguage.json",
    displayName: "Git Rebase Message",
    embeddedLangs: ["shellscript"]
  },
  {
    id: "glimmer-js",
    scopeName: "source.gjs",
    path: "glimmer-js.tmLanguage.json",
    displayName: "Glimmer JS",
    aliases: ["gjs"],
    embeddedLangs: ["javascript", "handlebars"]
  },
  {
    id: "glimmer-ts",
    scopeName: "source.gts",
    path: "glimmer-ts.tmLanguage.json",
    displayName: "Glimmer TS",
    aliases: ["gts"],
    embeddedLangs: ["typescript", "handlebars"]
  },
  {
    id: "glsl",
    scopeName: "source.glsl",
    path: "glsl.tmLanguage.json",
    displayName: "GLSL",
    samplePath: "glsl.sample",
    embeddedLangs: ["c"]
  },
  {
    id: "gnuplot",
    scopeName: "source.gnuplot",
    path: "gnuplot.tmLanguage.json",
    displayName: "Gnuplot"
  },
  {
    id: "go",
    scopeName: "source.go",
    path: "go.tmLanguage.json",
    displayName: "Go",
    samplePath: "go.sample"
  },
  {
    id: "graphql",
    scopeName: "source.graphql",
    path: "graphql.tmLanguage.json",
    displayName: "GraphQL",
    embeddedLangs: ["javascript", "typescript", "jsx", "tsx"]
  },
  {
    id: "groovy",
    scopeName: "source.groovy",
    path: "groovy.tmLanguage.json",
    displayName: "Groovy"
  },
  {
    id: "hack",
    scopeName: "source.hack",
    path: "hack.tmLanguage.json",
    displayName: "Hack",
    embeddedLangs: ["html", "sql"]
  },
  {
    id: "haml",
    scopeName: "text.haml",
    path: "haml.tmLanguage.json",
    displayName: "Ruby Haml",
    embeddedLangs: ["ruby", "javascript", "sass", "coffee", "markdown", "css"]
  },
  {
    id: "handlebars",
    scopeName: "text.html.handlebars",
    path: "handlebars.tmLanguage.json",
    displayName: "Handlebars",
    aliases: ["hbs"],
    embeddedLangs: ["html", "css", "javascript", "yaml"]
  },
  {
    id: "haskell",
    scopeName: "source.haskell",
    path: "haskell.tmLanguage.json",
    displayName: "Haskell",
    aliases: ["hs"]
  },
  {
    id: "hcl",
    scopeName: "source.hcl",
    path: "hcl.tmLanguage.json",
    displayName: "HashiCorp HCL",
    samplePath: "hcl.sample"
  },
  {
    id: "hjson",
    scopeName: "source.hjson",
    path: "hjson.tmLanguage.json",
    displayName: "Hjson",
    samplePath: "hjson.sample"
  },
  {
    id: "hlsl",
    scopeName: "source.hlsl",
    path: "hlsl.tmLanguage.json",
    displayName: "HLSL"
  },
  {
    id: "html",
    scopeName: "text.html.basic",
    path: "html.tmLanguage.json",
    displayName: "HTML",
    samplePath: "html.sample",
    embeddedLangs: ["javascript", "css"]
  },
  {
    id: "http",
    scopeName: "source.http",
    path: "http.tmLanguage.json",
    displayName: "HTTP",
    samplePath: "http.sample",
    embeddedLangs: ["shellscript", "json", "xml", "graphql"]
  },
  {
    id: "imba",
    scopeName: "source.imba",
    path: "imba.tmLanguage.json",
    displayName: "Imba",
    samplePath: "imba.sample"
  },
  {
    id: "ini",
    scopeName: "source.ini",
    path: "ini.tmLanguage.json",
    displayName: "INI",
    aliases: ["properties"]
  },
  {
    id: "java",
    scopeName: "source.java",
    path: "java.tmLanguage.json",
    displayName: "Java",
    samplePath: "java.sample"
  },
  {
    id: "javascript",
    scopeName: "source.js",
    path: "javascript.tmLanguage.json",
    displayName: "JavaScript",
    samplePath: "javascript.sample",
    aliases: ["js"]
  },
  {
    id: "jinja-html",
    scopeName: "text.html.jinja",
    path: "jinja-html.tmLanguage.json",
    displayName: "Jinja",
    embeddedLangs: ["html"]
  },
  {
    id: "jison",
    scopeName: "source.jison",
    path: "jison.tmLanguage.json",
    displayName: "Jison",
    samplePath: "jison.sample",
    embeddedLangs: ["javascript"]
  },
  {
    id: "json",
    scopeName: "source.json",
    path: "json.tmLanguage.json",
    displayName: "JSON"
  },
  {
    id: "json5",
    scopeName: "source.json5",
    path: "json5.tmLanguage.json",
    displayName: "JSON5",
    samplePath: "json5.sample"
  },
  {
    id: "jsonc",
    scopeName: "source.json.comments",
    path: "jsonc.tmLanguage.json",
    displayName: "JSON with Comments"
  },
  {
    id: "jsonl",
    scopeName: "source.json.lines",
    path: "jsonl.tmLanguage.json",
    displayName: "JSON Lines"
  },
  {
    id: "jsonnet",
    scopeName: "source.jsonnet",
    path: "jsonnet.tmLanguage.json",
    displayName: "Jsonnet"
  },
  {
    id: "jssm",
    scopeName: "source.jssm",
    path: "jssm.tmLanguage.json",
    displayName: "JSSM",
    samplePath: "jssm.sample",
    aliases: ["fsl"]
  },
  {
    id: "jsx",
    scopeName: "source.js.jsx",
    path: "jsx.tmLanguage.json",
    displayName: "JSX"
  },
  {
    id: "julia",
    scopeName: "source.julia",
    path: "julia.tmLanguage.json",
    displayName: "Julia",
    embeddedLangs: ["cpp", "python", "javascript", "r", "sql"]
  },
  {
    id: "kotlin",
    scopeName: "source.kotlin",
    path: "kotlin.tmLanguage.json",
    displayName: "Kotlin",
    samplePath: "kotlin.sample"
  },
  {
    id: "kusto",
    scopeName: "source.kusto",
    path: "kusto.tmLanguage.json",
    displayName: "Kusto",
    samplePath: "kusto.sample",
    aliases: ["kql"]
  },
  {
    id: "latex",
    scopeName: "text.tex.latex",
    path: "latex.tmLanguage.json",
    displayName: "LaTeX",
    embeddedLangs: ["tex", "css", "haskell", "html", "xml", "java", "lua", "julia", "ruby", "javascript", "typescript", "python", "yaml", "rust", "scala", "gnuplot"]
  },
  {
    id: "less",
    scopeName: "source.css.less",
    path: "less.tmLanguage.json",
    displayName: "Less",
    embeddedLangs: ["css"]
  },
  {
    id: "liquid",
    scopeName: "text.html.liquid",
    path: "liquid.tmLanguage.json",
    displayName: "Liquid",
    samplePath: "liquid.sample",
    embeddedLangs: ["html", "css", "json", "javascript"]
  },
  {
    id: "lisp",
    scopeName: "source.lisp",
    path: "lisp.tmLanguage.json",
    displayName: "Lisp"
  },
  {
    id: "logo",
    scopeName: "source.logo",
    path: "logo.tmLanguage.json",
    displayName: "Logo"
  },
  {
    id: "lua",
    scopeName: "source.lua",
    path: "lua.tmLanguage.json",
    displayName: "Lua",
    embeddedLangs: ["c"]
  },
  {
    id: "make",
    scopeName: "source.makefile",
    path: "make.tmLanguage.json",
    displayName: "Makefile",
    aliases: ["makefile"]
  },
  {
    id: "markdown",
    scopeName: "text.html.markdown",
    path: "markdown.tmLanguage.json",
    displayName: "Markdown",
    aliases: ["md"],
    embeddedLangs: ["css", "html", "ini", "java", "lua", "make", "perl", "r", "ruby", "php", "sql", "vb", "xml", "xsl", "yaml", "bat", "clojure", "coffee", "c", "cpp", "diff", "docker", "git-commit", "git-rebase", "go", "groovy", "pug", "javascript", "json", "jsonc", "less", "objective-c", "swift", "scss", "raku", "powershell", "python", "julia", "rust", "scala", "shellscript", "typescript", "tsx", "csharp", "fsharp", "dart", "handlebars", "erlang", "elixir", "latex", "bibtex"]
  },
  {
    id: "marko",
    scopeName: "text.marko",
    path: "marko.tmLanguage.json",
    displayName: "Marko",
    embeddedLangs: ["css", "less", "scss", "javascript"]
  },
  {
    id: "matlab",
    scopeName: "source.matlab",
    path: "matlab.tmLanguage.json",
    displayName: "MATLAB"
  },
  {
    id: "mdx",
    scopeName: "source.mdx",
    path: "mdx.tmLanguage.json",
    displayName: "MDX",
    embeddedLangs: ["tsx", "toml", "yaml", "c", "clojure", "coffee", "cpp", "csharp", "css", "diff", "docker", "elixir", "elm", "erlang", "go", "graphql", "haskell", "html", "ini", "java", "javascript", "json", "julia", "kotlin", "less", "lua", "make", "markdown", "objective-c", "perl", "python", "r", "ruby", "rust", "scala", "scss", "shellscript", "sql", "xml", "swift", "typescript"]
  },
  {
    id: "mermaid",
    scopeName: "source.mermaid",
    path: "mermaid.tmLanguage.json",
    displayName: "Mermaid"
  },
  {
    id: "narrat",
    scopeName: "source.narrat",
    path: "narrat.tmLanguage.json",
    displayName: "Narrat Language",
    samplePath: "narrat.sample",
    aliases: ["nar"]
  },
  {
    id: "nextflow",
    scopeName: "source.nextflow",
    path: "nextflow.tmLanguage.json",
    displayName: "Nextflow",
    samplePath: "nextflow.sample",
    aliases: ["nf"]
  },
  {
    id: "nginx",
    scopeName: "source.nginx",
    path: "nginx.tmLanguage.json",
    displayName: "Nginx",
    embeddedLangs: ["lua"]
  },
  {
    id: "nim",
    scopeName: "source.nim",
    path: "nim.tmLanguage.json",
    displayName: "Nim",
    embeddedLangs: ["c", "html", "xml", "javascript", "css", "glsl", "markdown"]
  },
  {
    id: "nix",
    scopeName: "source.nix",
    path: "nix.tmLanguage.json",
    displayName: "Nix"
  },
  {
    id: "objective-c",
    scopeName: "source.objc",
    path: "objective-c.tmLanguage.json",
    displayName: "Objective-C",
    aliases: ["objc"]
  },
  {
    id: "objective-cpp",
    scopeName: "source.objcpp",
    path: "objective-cpp.tmLanguage.json",
    displayName: "Objective-C++"
  },
  {
    id: "ocaml",
    scopeName: "source.ocaml",
    path: "ocaml.tmLanguage.json",
    displayName: "OCaml"
  },
  {
    id: "pascal",
    scopeName: "source.pascal",
    path: "pascal.tmLanguage.json",
    displayName: "Pascal"
  },
  {
    id: "perl",
    scopeName: "source.perl",
    path: "perl.tmLanguage.json",
    displayName: "Perl",
    embeddedLangs: ["html", "xml", "css", "javascript", "sql"]
  },
  {
    id: "php",
    scopeName: "source.php",
    path: "php.tmLanguage.json",
    displayName: "PHP",
    embeddedLangs: ["html", "xml", "sql", "javascript", "json", "css"]
  },
  {
    id: "plsql",
    scopeName: "source.plsql.oracle",
    path: "plsql.tmLanguage.json",
    displayName: "PL/SQL"
  },
  {
    id: "postcss",
    scopeName: "source.css.postcss",
    path: "postcss.tmLanguage.json",
    displayName: "PostCSS"
  },
  {
    id: "powerquery",
    scopeName: "source.powerquery",
    path: "powerquery.tmLanguage.json",
    displayName: "PowerQuery",
    samplePath: "powerquery.sample"
  },
  {
    id: "powershell",
    scopeName: "source.powershell",
    path: "powershell.tmLanguage.json",
    displayName: "PowerShell",
    aliases: ["ps", "ps1"]
  },
  {
    id: "prisma",
    scopeName: "source.prisma",
    path: "prisma.tmLanguage.json",
    displayName: "Prisma",
    samplePath: "prisma.sample"
  },
  {
    id: "prolog",
    scopeName: "source.prolog",
    path: "prolog.tmLanguage.json",
    displayName: "Prolog"
  },
  {
    id: "proto",
    scopeName: "source.proto",
    path: "proto.tmLanguage.json",
    displayName: "Protocol Buffer 3",
    samplePath: "proto.sample"
  },
  {
    id: "pug",
    scopeName: "text.pug",
    path: "pug.tmLanguage.json",
    displayName: "Pug",
    aliases: ["jade"],
    embeddedLangs: ["javascript", "css", "sass", "scss", "stylus", "coffee", "html"]
  },
  {
    id: "puppet",
    scopeName: "source.puppet",
    path: "puppet.tmLanguage.json",
    displayName: "Puppet"
  },
  {
    id: "purescript",
    scopeName: "source.purescript",
    path: "purescript.tmLanguage.json",
    displayName: "PureScript"
  },
  {
    id: "python",
    scopeName: "source.python",
    path: "python.tmLanguage.json",
    displayName: "Python",
    samplePath: "python.sample",
    aliases: ["py"]
  },
  {
    id: "r",
    scopeName: "source.r",
    path: "r.tmLanguage.json",
    displayName: "R"
  },
  {
    id: "raku",
    scopeName: "source.perl.6",
    path: "raku.tmLanguage.json",
    displayName: "Perl 6",
    aliases: ["perl6"]
  },
  {
    id: "razor",
    scopeName: "text.aspnetcorerazor",
    path: "razor.tmLanguage.json",
    displayName: "ASP.NET Razor",
    embeddedLangs: ["html", "csharp"]
  },
  {
    id: "reg",
    scopeName: "source.reg",
    path: "reg.tmLanguage.json",
    displayName: "Windows Registry Script",
    samplePath: "reg.sample"
  },
  {
    id: "rel",
    scopeName: "source.rel",
    path: "rel.tmLanguage.json",
    displayName: "Rel",
    samplePath: "rel.sample"
  },
  {
    id: "riscv",
    scopeName: "source.riscv",
    path: "riscv.tmLanguage.json",
    displayName: "RISC-V"
  },
  {
    id: "rst",
    scopeName: "source.rst",
    path: "rst.tmLanguage.json",
    displayName: "reStructuredText",
    embeddedLangs: ["cpp", "python", "javascript", "shellscript", "yaml", "cmake", "ruby"]
  },
  {
    id: "ruby",
    scopeName: "source.ruby",
    path: "ruby.tmLanguage.json",
    displayName: "Ruby",
    samplePath: "ruby.sample",
    aliases: ["rb"],
    embeddedLangs: ["html", "xml", "sql", "css", "c", "javascript", "shellscript", "lua"]
  },
  {
    id: "rust",
    scopeName: "source.rust",
    path: "rust.tmLanguage.json",
    displayName: "Rust",
    aliases: ["rs"]
  },
  {
    id: "sas",
    scopeName: "source.sas",
    path: "sas.tmLanguage.json",
    displayName: "SAS",
    embeddedLangs: ["sql"]
  },
  {
    id: "sass",
    scopeName: "source.sass",
    path: "sass.tmLanguage.json",
    displayName: "Sass"
  },
  {
    id: "scala",
    scopeName: "source.scala",
    path: "scala.tmLanguage.json",
    displayName: "Scala"
  },
  {
    id: "scheme",
    scopeName: "source.scheme",
    path: "scheme.tmLanguage.json",
    displayName: "Scheme"
  },
  {
    id: "scss",
    scopeName: "source.css.scss",
    path: "scss.tmLanguage.json",
    displayName: "SCSS",
    embeddedLangs: ["css"]
  },
  {
    id: "shaderlab",
    scopeName: "source.shaderlab",
    path: "shaderlab.tmLanguage.json",
    displayName: "ShaderLab",
    aliases: ["shader"],
    embeddedLangs: ["hlsl"]
  },
  {
    id: "shellscript",
    scopeName: "source.shell",
    path: "shellscript.tmLanguage.json",
    displayName: "Shell",
    aliases: ["bash", "console", "sh", "shell", "zsh"]
  },
  {
    id: "smalltalk",
    scopeName: "source.smalltalk",
    path: "smalltalk.tmLanguage.json",
    displayName: "Smalltalk"
  },
  {
    id: "solidity",
    scopeName: "source.solidity",
    path: "solidity.tmLanguage.json",
    displayName: "Solidity"
  },
  {
    id: "sparql",
    scopeName: "source.sparql",
    path: "sparql.tmLanguage.json",
    displayName: "SPARQL",
    samplePath: "sparql.sample",
    embeddedLangs: ["turtle"]
  },
  {
    id: "sql",
    scopeName: "source.sql",
    path: "sql.tmLanguage.json",
    displayName: "SQL"
  },
  {
    id: "ssh-config",
    scopeName: "source.ssh-config",
    path: "ssh-config.tmLanguage.json",
    displayName: "SSH Config"
  },
  {
    id: "stata",
    scopeName: "source.stata",
    path: "stata.tmLanguage.json",
    displayName: "Stata",
    samplePath: "stata.sample",
    embeddedLangs: ["sql"]
  },
  {
    id: "stylus",
    scopeName: "source.stylus",
    path: "stylus.tmLanguage.json",
    displayName: "Stylus",
    aliases: ["styl"]
  },
  {
    id: "svelte",
    scopeName: "source.svelte",
    path: "svelte.tmLanguage.json",
    displayName: "Svelte",
    embeddedLangs: ["javascript", "typescript", "coffee", "stylus", "sass", "css", "scss", "less", "postcss", "pug", "markdown"]
  },
  {
    id: "swift",
    scopeName: "source.swift",
    path: "swift.tmLanguage.json",
    displayName: "Swift"
  },
  {
    id: "system-verilog",
    scopeName: "source.systemverilog",
    path: "system-verilog.tmLanguage.json",
    displayName: "SystemVerilog"
  },
  {
    id: "tasl",
    scopeName: "source.tasl",
    path: "tasl.tmLanguage.json",
    displayName: "Tasl",
    samplePath: "tasl.sample"
  },
  {
    id: "tcl",
    scopeName: "source.tcl",
    path: "tcl.tmLanguage.json",
    displayName: "Tcl"
  },
  {
    id: "tex",
    scopeName: "text.tex",
    path: "tex.tmLanguage.json",
    displayName: "TeX",
    embeddedLangs: ["r"]
  },
  {
    id: "toml",
    scopeName: "source.toml",
    path: "toml.tmLanguage.json",
    displayName: "TOML"
  },
  {
    id: "tsx",
    scopeName: "source.tsx",
    path: "tsx.tmLanguage.json",
    displayName: "TSX",
    samplePath: "tsx.sample"
  },
  {
    id: "turtle",
    scopeName: "source.turtle",
    path: "turtle.tmLanguage.json",
    displayName: "Turtle",
    samplePath: "turtle.sample"
  },
  {
    id: "twig",
    scopeName: "text.html.twig",
    path: "twig.tmLanguage.json",
    displayName: "Twig",
    embeddedLangs: ["css", "javascript", "php", "python", "ruby"]
  },
  {
    id: "typescript",
    scopeName: "source.ts",
    path: "typescript.tmLanguage.json",
    displayName: "TypeScript",
    aliases: ["ts"]
  },
  {
    id: "v",
    scopeName: "source.v",
    path: "v.tmLanguage.json",
    displayName: "V",
    samplePath: "v.sample"
  },
  {
    id: "vb",
    scopeName: "source.asp.vb.net",
    path: "vb.tmLanguage.json",
    displayName: "Visual Basic",
    aliases: ["cmd"]
  },
  {
    id: "verilog",
    scopeName: "source.verilog",
    path: "verilog.tmLanguage.json",
    displayName: "Verilog"
  },
  {
    id: "vhdl",
    scopeName: "source.vhdl",
    path: "vhdl.tmLanguage.json",
    displayName: "VHDL"
  },
  {
    id: "viml",
    scopeName: "source.viml",
    path: "viml.tmLanguage.json",
    displayName: "Vim Script",
    aliases: ["vim", "vimscript"]
  },
  {
    id: "vue-html",
    scopeName: "text.html.vue-html",
    path: "vue-html.tmLanguage.json",
    displayName: "Vue HTML",
    embeddedLangs: ["vue", "javascript"]
  },
  {
    id: "vue",
    scopeName: "source.vue",
    path: "vue.tmLanguage.json",
    displayName: "Vue",
    embeddedLangs: ["html", "markdown", "pug", "stylus", "sass", "css", "scss", "less", "javascript", "typescript", "jsx", "tsx", "json", "jsonc", "json5", "yaml", "toml", "graphql"]
  },
  {
    id: "vyper",
    scopeName: "source.vyper",
    path: "vyper.tmLanguage.json",
    displayName: "Vyper",
    samplePath: "vyper.sample",
    aliases: ["vy"]
  },
  {
    id: "wasm",
    scopeName: "source.wat",
    path: "wasm.tmLanguage.json",
    displayName: "WebAssembly"
  },
  {
    id: "wenyan",
    scopeName: "source.wenyan",
    path: "wenyan.tmLanguage.json",
    displayName: "Wenyan",
    aliases: ["文言"]
  },
  {
    id: "wgsl",
    scopeName: "source.wgsl",
    path: "wgsl.tmLanguage.json",
    displayName: "WGSL",
    samplePath: "wgsl.sample"
  },
  {
    id: "wolfram",
    scopeName: "source.wolfram",
    path: "wolfram.tmLanguage.json",
    displayName: "Wolfram",
    samplePath: "wolfram.sample"
  },
  {
    id: "xml",
    scopeName: "text.xml",
    path: "xml.tmLanguage.json",
    displayName: "XML",
    embeddedLangs: ["java"]
  },
  {
    id: "xsl",
    scopeName: "text.xml.xsl",
    path: "xsl.tmLanguage.json",
    displayName: "XSL",
    embeddedLangs: ["xml"]
  },
  {
    id: "yaml",
    scopeName: "source.yaml",
    path: "yaml.tmLanguage.json",
    displayName: "YAML",
    aliases: ["yml"]
  },
  {
    id: "zenscript",
    scopeName: "source.zenscript",
    path: "zenscript.tmLanguage.json",
    displayName: "ZenScript",
    samplePath: "zenscript.sample"
  }
];
var ye = /* @__PURE__ */ ((n) => (n[n.NotSet = -1] = "NotSet", n[n.None = 0] = "None", n[n.Italic = 1] = "Italic", n[n.Bold = 2] = "Bold", n[n.Underline = 4] = "Underline", n))(ye || {});
class ne {
  static toBinaryStr(e) {
    let t = e.toString(2);
    for (; t.length < 32; )
      t = "0" + t;
    return t;
  }
  static printMetadata(e) {
    let t = ne.getLanguageId(e), s = ne.getTokenType(e), r = ne.getFontStyle(e), o = ne.getForeground(e), a = ne.getBackground(e);
    console.log({
      languageId: t,
      tokenType: s,
      fontStyle: r,
      foreground: o,
      background: a
    });
  }
  static getLanguageId(e) {
    return (e & 255) >>> 0;
  }
  static getTokenType(e) {
    return (e & 768) >>> 8;
  }
  static getFontStyle(e) {
    return (e & 14336) >>> 11;
  }
  static getForeground(e) {
    return (e & 8372224) >>> 15;
  }
  static getBackground(e) {
    return (e & 4286578688) >>> 24;
  }
  static containsBalancedBrackets(e) {
    return (e & 1024) !== 0;
  }
  static set(e, t, s, r, o, a) {
    let c = ne.getLanguageId(e), l = ne.getTokenType(e), i = ne.getFontStyle(e), p = ne.getForeground(e), h = ne.getBackground(e), d = ne.containsBalancedBrackets(
      e
    ) ? 1 : 0;
    return t !== 0 && (c = t), s !== 0 && (l = s === 8 ? 0 : s), r !== -1 && (i = r), o !== 0 && (p = o), a !== 0 && (h = a), (c << 0 | l << 8 | i << 11 | d << 10 | p << 15 | h << 24) >>> 0;
  }
}
function i_e(n) {
  return n.endsWith("/") || n.endsWith("\\") ? n.slice(0, -1) : n;
}
function l_e(n) {
  return n.startsWith("./") ? n.slice(2) : n;
}
function Hs(n) {
  const e = n.split(/[\/\\]/g);
  return e.slice(0, e.length - 1);
}
function Vs(...n) {
  return n.map(i_e).map(l_e).join("/");
}
function u_e(n, e) {
  const t = /* @__PURE__ */ new Map();
  for (const s of n) {
    const r = e(s);
    t.has(r) ? t.get(r).push(s) : t.set(r, [s]);
  }
  return t;
}
function p_e(n, e = !1) {
  const t = n.length;
  let s = 0, r = "", o = 0, a = 16, c = 0, l = 0, i = 0, p = 0, h = 0;
  function d(w, N) {
    let y = 0, u = 0;
    for (; y < w || !N; ) {
      let g = n.charCodeAt(s);
      if (g >= 48 && g <= 57)
        u = u * 16 + g - 48;
      else if (g >= 65 && g <= 70)
        u = u * 16 + g - 65 + 10;
      else if (g >= 97 && g <= 102)
        u = u * 16 + g - 97 + 10;
      else
        break;
      s++, y++;
    }
    return y < w && (u = -1), u;
  }
  function m(w) {
    s = w, r = "", o = 0, a = 16, h = 0;
  }
  function f() {
    let w = s;
    if (n.charCodeAt(s) === 48)
      s++;
    else
      for (s++; s < n.length && Oe(n.charCodeAt(s)); )
        s++;
    if (s < n.length && n.charCodeAt(s) === 46)
      if (s++, s < n.length && Oe(n.charCodeAt(s)))
        for (s++; s < n.length && Oe(n.charCodeAt(s)); )
          s++;
      else
        return h = 3, n.substring(w, s);
    let N = s;
    if (s < n.length && (n.charCodeAt(s) === 69 || n.charCodeAt(s) === 101))
      if (s++, (s < n.length && n.charCodeAt(s) === 43 || n.charCodeAt(s) === 45) && s++, s < n.length && Oe(n.charCodeAt(s))) {
        for (s++; s < n.length && Oe(n.charCodeAt(s)); )
          s++;
        N = s;
      } else
        h = 3;
    return n.substring(w, N);
  }
  function L() {
    let w = "", N = s;
    for (; ; ) {
      if (s >= t) {
        w += n.substring(N, s), h = 2;
        break;
      }
      const y = n.charCodeAt(s);
      if (y === 34) {
        w += n.substring(N, s), s++;
        break;
      }
      if (y === 92) {
        if (w += n.substring(N, s), s++, s >= t) {
          h = 2;
          break;
        }
        switch (n.charCodeAt(s++)) {
          case 34:
            w += '"';
            break;
          case 92:
            w += "\\";
            break;
          case 47:
            w += "/";
            break;
          case 98:
            w += "\b";
            break;
          case 102:
            w += "\f";
            break;
          case 110:
            w += `
`;
            break;
          case 114:
            w += "\r";
            break;
          case 116:
            w += "	";
            break;
          case 117:
            const g = d(4, !0);
            g >= 0 ? w += String.fromCharCode(g) : h = 4;
            break;
          default:
            h = 5;
        }
        N = s;
        continue;
      }
      if (y >= 0 && y <= 31)
        if (We(y)) {
          w += n.substring(N, s), h = 2;
          break;
        } else
          h = 6;
      s++;
    }
    return w;
  }
  function S() {
    if (r = "", h = 0, o = s, l = c, p = i, s >= t)
      return o = t, a = 17;
    let w = n.charCodeAt(s);
    if (Bn(w)) {
      do
        s++, r += String.fromCharCode(w), w = n.charCodeAt(s);
      while (Bn(w));
      return a = 15;
    }
    if (We(w))
      return s++, r += String.fromCharCode(w), w === 13 && n.charCodeAt(s) === 10 && (s++, r += `
`), c++, i = s, a = 14;
    switch (w) {
      case 123:
        return s++, a = 1;
      case 125:
        return s++, a = 2;
      case 91:
        return s++, a = 3;
      case 93:
        return s++, a = 4;
      case 58:
        return s++, a = 6;
      case 44:
        return s++, a = 5;
      case 34:
        return s++, r = L(), a = 10;
      case 47:
        const N = s - 1;
        if (n.charCodeAt(s + 1) === 47) {
          for (s += 2; s < t && !We(n.charCodeAt(s)); )
            s++;
          return r = n.substring(N, s), a = 12;
        }
        if (n.charCodeAt(s + 1) === 42) {
          s += 2;
          const y = t - 1;
          let u = !1;
          for (; s < y; ) {
            const g = n.charCodeAt(s);
            if (g === 42 && n.charCodeAt(s + 1) === 47) {
              s += 2, u = !0;
              break;
            }
            s++, We(g) && (g === 13 && n.charCodeAt(s) === 10 && s++, c++, i = s);
          }
          return u || (s++, h = 1), r = n.substring(N, s), a = 13;
        }
        return r += String.fromCharCode(w), s++, a = 16;
      case 45:
        if (r += String.fromCharCode(w), s++, s === t || !Oe(n.charCodeAt(s)))
          return a = 16;
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
        return r += f(), a = 11;
      default:
        for (; s < t && b(w); )
          s++, w = n.charCodeAt(s);
        if (o !== s) {
          switch (r = n.substring(o, s), r) {
            case "true":
              return a = 8;
            case "false":
              return a = 9;
            case "null":
              return a = 7;
          }
          return a = 16;
        }
        return r += String.fromCharCode(w), s++, a = 16;
    }
  }
  function b(w) {
    if (Bn(w) || We(w))
      return !1;
    switch (w) {
      case 125:
      case 93:
      case 123:
      case 91:
      case 34:
      case 58:
      case 44:
      case 47:
        return !1;
    }
    return !0;
  }
  function k() {
    let w;
    do
      w = S();
    while (w >= 12 && w <= 15);
    return w;
  }
  return {
    setPosition: m,
    getPosition: () => s,
    scan: e ? k : S,
    getToken: () => a,
    getTokenValue: () => r,
    getTokenOffset: () => o,
    getTokenLength: () => s - o,
    getTokenStartLine: () => l,
    getTokenStartCharacter: () => o - p,
    getTokenError: () => h
  };
}
function Bn(n) {
  return n === 32 || n === 9;
}
function We(n) {
  return n === 10 || n === 13;
}
function Oe(n) {
  return n >= 48 && n <= 57;
}
var ss;
(function(n) {
  n[n.lineFeed = 10] = "lineFeed", n[n.carriageReturn = 13] = "carriageReturn", n[n.space = 32] = "space", n[n._0 = 48] = "_0", n[n._1 = 49] = "_1", n[n._2 = 50] = "_2", n[n._3 = 51] = "_3", n[n._4 = 52] = "_4", n[n._5 = 53] = "_5", n[n._6 = 54] = "_6", n[n._7 = 55] = "_7", n[n._8 = 56] = "_8", n[n._9 = 57] = "_9", n[n.a = 97] = "a", n[n.b = 98] = "b", n[n.c = 99] = "c", n[n.d = 100] = "d", n[n.e = 101] = "e", n[n.f = 102] = "f", n[n.g = 103] = "g", n[n.h = 104] = "h", n[n.i = 105] = "i", n[n.j = 106] = "j", n[n.k = 107] = "k", n[n.l = 108] = "l", n[n.m = 109] = "m", n[n.n = 110] = "n", n[n.o = 111] = "o", n[n.p = 112] = "p", n[n.q = 113] = "q", n[n.r = 114] = "r", n[n.s = 115] = "s", n[n.t = 116] = "t", n[n.u = 117] = "u", n[n.v = 118] = "v", n[n.w = 119] = "w", n[n.x = 120] = "x", n[n.y = 121] = "y", n[n.z = 122] = "z", n[n.A = 65] = "A", n[n.B = 66] = "B", n[n.C = 67] = "C", n[n.D = 68] = "D", n[n.E = 69] = "E", n[n.F = 70] = "F", n[n.G = 71] = "G", n[n.H = 72] = "H", n[n.I = 73] = "I", n[n.J = 74] = "J", n[n.K = 75] = "K", n[n.L = 76] = "L", n[n.M = 77] = "M", n[n.N = 78] = "N", n[n.O = 79] = "O", n[n.P = 80] = "P", n[n.Q = 81] = "Q", n[n.R = 82] = "R", n[n.S = 83] = "S", n[n.T = 84] = "T", n[n.U = 85] = "U", n[n.V = 86] = "V", n[n.W = 87] = "W", n[n.X = 88] = "X", n[n.Y = 89] = "Y", n[n.Z = 90] = "Z", n[n.asterisk = 42] = "asterisk", n[n.backslash = 92] = "backslash", n[n.closeBrace = 125] = "closeBrace", n[n.closeBracket = 93] = "closeBracket", n[n.colon = 58] = "colon", n[n.comma = 44] = "comma", n[n.dot = 46] = "dot", n[n.doubleQuote = 34] = "doubleQuote", n[n.minus = 45] = "minus", n[n.openBrace = 123] = "openBrace", n[n.openBracket = 91] = "openBracket", n[n.plus = 43] = "plus", n[n.slash = 47] = "slash", n[n.formFeed = 12] = "formFeed", n[n.tab = 9] = "tab";
})(ss || (ss = {}));
var un;
(function(n) {
  n.DEFAULT = {
    allowTrailingComma: !1
  };
})(un || (un = {}));
function h_e(n, e = [], t = un.DEFAULT) {
  let s = null, r = [];
  const o = [];
  function a(l) {
    Array.isArray(r) ? r.push(l) : s !== null && (r[s] = l);
  }
  return d_e(n, {
    onObjectBegin: () => {
      const l = {};
      a(l), o.push(r), r = l, s = null;
    },
    onObjectProperty: (l) => {
      s = l;
    },
    onObjectEnd: () => {
      r = o.pop();
    },
    onArrayBegin: () => {
      const l = [];
      a(l), o.push(r), r = l, s = null;
    },
    onArrayEnd: () => {
      r = o.pop();
    },
    onLiteralValue: a,
    onError: (l, i, p) => {
      e.push({ error: l, offset: i, length: p });
    }
  }, t), r[0];
}
function d_e(n, e, t = un.DEFAULT) {
  const s = p_e(n, !1), r = [];
  function o(C) {
    return C ? () => C(s.getTokenOffset(), s.getTokenLength(), s.getTokenStartLine(), s.getTokenStartCharacter()) : () => !0;
  }
  function a(C) {
    return C ? () => C(s.getTokenOffset(), s.getTokenLength(), s.getTokenStartLine(), s.getTokenStartCharacter(), () => r.slice()) : () => !0;
  }
  function c(C) {
    return C ? (T) => C(T, s.getTokenOffset(), s.getTokenLength(), s.getTokenStartLine(), s.getTokenStartCharacter()) : () => !0;
  }
  function l(C) {
    return C ? (T) => C(T, s.getTokenOffset(), s.getTokenLength(), s.getTokenStartLine(), s.getTokenStartCharacter(), () => r.slice()) : () => !0;
  }
  const i = a(e.onObjectBegin), p = l(e.onObjectProperty), h = o(e.onObjectEnd), d = a(e.onArrayBegin), m = o(e.onArrayEnd), f = l(e.onLiteralValue), L = c(e.onSeparator), S = o(e.onComment), b = c(e.onError), k = t && t.disallowComments, w = t && t.allowTrailingComma;
  function N() {
    for (; ; ) {
      const C = s.scan();
      switch (s.getTokenError()) {
        case 4:
          y(
            14
            /* ParseErrorCode.InvalidUnicode */
          );
          break;
        case 5:
          y(
            15
            /* ParseErrorCode.InvalidEscapeCharacter */
          );
          break;
        case 3:
          y(
            13
            /* ParseErrorCode.UnexpectedEndOfNumber */
          );
          break;
        case 1:
          k || y(
            11
            /* ParseErrorCode.UnexpectedEndOfComment */
          );
          break;
        case 2:
          y(
            12
            /* ParseErrorCode.UnexpectedEndOfString */
          );
          break;
        case 6:
          y(
            16
            /* ParseErrorCode.InvalidCharacter */
          );
          break;
      }
      switch (C) {
        case 12:
        case 13:
          k ? y(
            10
            /* ParseErrorCode.InvalidCommentToken */
          ) : S();
          break;
        case 16:
          y(
            1
            /* ParseErrorCode.InvalidSymbol */
          );
          break;
        case 15:
        case 14:
          break;
        default:
          return C;
      }
    }
  }
  function y(C, T = [], E = []) {
    if (b(C), T.length + E.length > 0) {
      let D = s.getToken();
      for (; D !== 17; ) {
        if (T.indexOf(D) !== -1) {
          N();
          break;
        } else if (E.indexOf(D) !== -1)
          break;
        D = N();
      }
    }
  }
  function u(C) {
    const T = s.getTokenValue();
    return C ? f(T) : (p(T), r.push(T)), N(), !0;
  }
  function g() {
    switch (s.getToken()) {
      case 11:
        const C = s.getTokenValue();
        let T = Number(C);
        isNaN(T) && (y(
          2
          /* ParseErrorCode.InvalidNumberFormat */
        ), T = 0), f(T);
        break;
      case 7:
        f(null);
        break;
      case 8:
        f(!0);
        break;
      case 9:
        f(!1);
        break;
      default:
        return !1;
    }
    return N(), !0;
  }
  function x() {
    return s.getToken() !== 10 ? (y(3, [], [
      2,
      5
      /* SyntaxKind.CommaToken */
    ]), !1) : (u(!1), s.getToken() === 6 ? (L(":"), N(), A() || y(4, [], [
      2,
      5
      /* SyntaxKind.CommaToken */
    ])) : y(5, [], [
      2,
      5
      /* SyntaxKind.CommaToken */
    ]), r.pop(), !0);
  }
  function _() {
    i(), N();
    let C = !1;
    for (; s.getToken() !== 2 && s.getToken() !== 17; ) {
      if (s.getToken() === 5) {
        if (C || y(4, [], []), L(","), N(), s.getToken() === 2 && w)
          break;
      } else
        C && y(6, [], []);
      x() || y(4, [], [
        2,
        5
        /* SyntaxKind.CommaToken */
      ]), C = !0;
    }
    return h(), s.getToken() !== 2 ? y(7, [
      2
      /* SyntaxKind.CloseBraceToken */
    ], []) : N(), !0;
  }
  function v() {
    d(), N();
    let C = !0, T = !1;
    for (; s.getToken() !== 4 && s.getToken() !== 17; ) {
      if (s.getToken() === 5) {
        if (T || y(4, [], []), L(","), N(), s.getToken() === 4 && w)
          break;
      } else
        T && y(6, [], []);
      C ? (r.push(0), C = !1) : r[r.length - 1]++, A() || y(4, [], [
        4,
        5
        /* SyntaxKind.CommaToken */
      ]), T = !0;
    }
    return m(), C || r.pop(), s.getToken() !== 4 ? y(8, [
      4
      /* SyntaxKind.CloseBracketToken */
    ], []) : N(), !0;
  }
  function A() {
    switch (s.getToken()) {
      case 3:
        return v();
      case 1:
        return _();
      case 10:
        return u(!0);
      default:
        return g();
    }
  }
  return N(), s.getToken() === 17 ? t.allowEmptyContent ? !0 : (y(4, [], []), !1) : A() ? (s.getToken() !== 17 && y(9, [], []), !0) : (y(4, [], []), !1);
}
var os;
(function(n) {
  n[n.None = 0] = "None", n[n.UnexpectedEndOfComment = 1] = "UnexpectedEndOfComment", n[n.UnexpectedEndOfString = 2] = "UnexpectedEndOfString", n[n.UnexpectedEndOfNumber = 3] = "UnexpectedEndOfNumber", n[n.InvalidUnicode = 4] = "InvalidUnicode", n[n.InvalidEscapeCharacter = 5] = "InvalidEscapeCharacter", n[n.InvalidCharacter = 6] = "InvalidCharacter";
})(os || (os = {}));
var rs;
(function(n) {
  n[n.OpenBraceToken = 1] = "OpenBraceToken", n[n.CloseBraceToken = 2] = "CloseBraceToken", n[n.OpenBracketToken = 3] = "OpenBracketToken", n[n.CloseBracketToken = 4] = "CloseBracketToken", n[n.CommaToken = 5] = "CommaToken", n[n.ColonToken = 6] = "ColonToken", n[n.NullKeyword = 7] = "NullKeyword", n[n.TrueKeyword = 8] = "TrueKeyword", n[n.FalseKeyword = 9] = "FalseKeyword", n[n.StringLiteral = 10] = "StringLiteral", n[n.NumericLiteral = 11] = "NumericLiteral", n[n.LineCommentTrivia = 12] = "LineCommentTrivia", n[n.BlockCommentTrivia = 13] = "BlockCommentTrivia", n[n.LineBreakTrivia = 14] = "LineBreakTrivia", n[n.Trivia = 15] = "Trivia", n[n.Unknown = 16] = "Unknown", n[n.EOF = 17] = "EOF";
})(rs || (rs = {}));
const m_e = h_e;
var cs;
(function(n) {
  n[n.InvalidSymbol = 1] = "InvalidSymbol", n[n.InvalidNumberFormat = 2] = "InvalidNumberFormat", n[n.PropertyNameExpected = 3] = "PropertyNameExpected", n[n.ValueExpected = 4] = "ValueExpected", n[n.ColonExpected = 5] = "ColonExpected", n[n.CommaExpected = 6] = "CommaExpected", n[n.CloseBraceExpected = 7] = "CloseBraceExpected", n[n.CloseBracketExpected = 8] = "CloseBracketExpected", n[n.EndOfFileExpected = 9] = "EndOfFileExpected", n[n.InvalidCommentToken = 10] = "InvalidCommentToken", n[n.UnexpectedEndOfComment = 11] = "UnexpectedEndOfComment", n[n.UnexpectedEndOfString = 12] = "UnexpectedEndOfString", n[n.UnexpectedEndOfNumber = 13] = "UnexpectedEndOfNumber", n[n.InvalidUnicode = 14] = "InvalidUnicode", n[n.InvalidEscapeCharacter = 15] = "InvalidEscapeCharacter", n[n.InvalidCharacter = 16] = "InvalidCharacter";
})(cs || (cs = {}));
const f_e = typeof self < "u" && typeof self.WorkerGlobalScope < "u", g_e = "process" in globalThis && typeof process < "u" && typeof process.release < "u" && process.release.name === "node", pt = f_e || !g_e;
let __e = "";
const b_e = "dist/";
let $n = null;
async function k_e(n) {
  if (!$n) {
    let e;
    if (pt)
      e = sn.loadWASM({
        data: await fetch(Ws(Vs(...Hs(n), "onig.wasm")))
      });
    else {
      const s = require("path").join(require.resolve("vscode-oniguruma"), "../onig.wasm"), o = require("fs").readFileSync(s).buffer;
      e = sn.loadWASM(o);
    }
    $n = e.then(() => ({
      createOnigScanner(t) {
        return sn.createOnigScanner(t);
      },
      createOnigString(t) {
        return sn.createOnigString(t);
      }
    }));
  }
  return $n;
}
function Ws(n) {
  if (pt)
    return `${__e}${n}`;
  {
    const e = require("path");
    return e.isAbsolute(n) ? n : e.resolve(__dirname, "..", n);
  }
}
async function y_e(n) {
  const e = Ws(n);
  return pt ? await fetch(e).then((t) => t.text()) : await require("fs").promises.readFile(e, "utf-8");
}
async function Zs(n) {
  const e = [], t = await y_e(n);
  let s;
  try {
    s = JSON.parse(t);
  } catch {
    if (s = m_e(t, e, {
      allowTrailingComma: !0
    }), e.length)
      throw e[0];
  }
  return s;
}
async function Js(n) {
  let e = await Zs(n);
  const t = Qs(e);
  if (t.include) {
    const s = await Js(Vs(...Hs(n), t.include));
    s.settings && (t.settings = s.settings.concat(t.settings)), s.bg && !t.bg && (t.bg = s.bg), s.colors && (t.colors = { ...s.colors, ...t.colors }), delete t.include;
  }
  return t;
}
async function w_e(n) {
  return await Zs(n);
}
function v_e(n) {
  n.settings || (n.settings = []), !(n.settings[0] && n.settings[0].settings && !n.settings[0].scope) && n.settings.unshift({
    settings: {
      foreground: n.fg,
      background: n.bg
    }
  });
}
function Qs(n) {
  const e = n.type || "dark", t = {
    name: n.name,
    type: e,
    ...n,
    ...x_e(n)
  };
  return n.include && (t.include = n.include), n.tokenColors && (t.settings = n.tokenColors, delete t.tokenColors), v_e(t), t;
}
const as = { light: "#333333", dark: "#bbbbbb" }, is = { light: "#fffffe", dark: "#1e1e1e" };
function x_e(n) {
  var o, a, c, l;
  let e, t, s = n.settings ? n.settings : n.tokenColors;
  const r = s ? s.find((i) => !i.name && !i.scope) : void 0;
  return (o = r == null ? void 0 : r.settings) != null && o.foreground && (e = r.settings.foreground), (a = r == null ? void 0 : r.settings) != null && a.background && (t = r.settings.background), !e && ((c = n == null ? void 0 : n.colors) != null && c["editor.foreground"]) && (e = n.colors["editor.foreground"]), !t && ((l = n == null ? void 0 : n.colors) != null && l["editor.background"]) && (t = n.colors["editor.background"]), e || (e = n.type === "light" ? as.light : as.dark), t || (t = n.type === "light" ? is.light : is.dark), {
    fg: e,
    bg: t
  };
}
class A_e {
  constructor(e, t) {
    this.languagesPath = "languages/", this.languageMap = {}, this.scopeToLangMap = {}, this._onigLibPromise = e, this._onigLibName = t;
  }
  get onigLib() {
    return this._onigLibPromise;
  }
  getOnigLibName() {
    return this._onigLibName;
  }
  getLangRegistration(e) {
    return this.languageMap[e];
  }
  async loadGrammar(e) {
    const t = this.scopeToLangMap[e];
    if (!t)
      return null;
    if (t.grammar)
      return t.grammar;
    const s = await w_e(
      An.includes(t) ? `${this.languagesPath}${t.path}` : t.path
    );
    return t.grammar = s, s;
  }
  addLanguage(e) {
    this.languageMap[e.id] = e, e.aliases && e.aliases.forEach((t) => {
      this.languageMap[t] = e;
    }), this.scopeToLangMap[e.scopeName] = e;
  }
}
function S_e(n, e, t, s, r) {
  let o = t.split(/\r\n|\r|\n/), a = Us.INITIAL, c = [], l = [];
  for (let i = 0, p = o.length; i < p; i++) {
    let h = o[i];
    if (h === "") {
      c = [], l.push([]);
      continue;
    }
    let d, m, f;
    r.includeExplanation && (d = s.tokenizeLine(h, a), m = d.tokens, f = 0);
    let L = s.tokenizeLine2(h, a), S = L.tokens.length / 2;
    for (let b = 0; b < S; b++) {
      let k = L.tokens[2 * b], w = b + 1 < S ? L.tokens[2 * b + 2] : h.length;
      if (k === w)
        continue;
      let N = L.tokens[2 * b + 1], y = ne.getForeground(N), u = e[y], g = ne.getFontStyle(N), x = [];
      if (r.includeExplanation) {
        let _ = 0;
        for (; k + _ < w; ) {
          let v = m[f], A = h.substring(
            v.startIndex,
            v.endIndex
          );
          _ += A.length, x.push({
            content: A,
            scopes: L_e(n, v.scopes)
          }), f++;
        }
      }
      c.push({
        content: h.substring(k, w),
        color: u,
        fontStyle: g,
        explanation: x
      });
    }
    l.push(c), c = [], a = L.ruleStack;
  }
  return l;
}
function L_e(n, e) {
  let t = [];
  for (let s = 0, r = e.length; s < r; s++) {
    let o = e.slice(0, s), a = e[s];
    t[s] = {
      scopeName: a,
      themeMatches: C_e(n, a, o)
    };
  }
  return t;
}
function ls(n, e) {
  let t = n + ".";
  return n === e || e.substring(0, t.length) === t;
}
function N_e(n, e, t, s) {
  if (!ls(n, t))
    return !1;
  let r = e.length - 1, o = s.length - 1;
  for (; r >= 0 && o >= 0; )
    ls(e[r], s[o]) && r--, o--;
  return r === -1;
}
function C_e(n, e, t) {
  let s = [], r = 0;
  for (let o = 0, a = n.settings.length; o < a; o++) {
    let c = n.settings[o], l;
    if (typeof c.scope == "string")
      l = c.scope.split(/,/).map((i) => i.trim());
    else if (Array.isArray(c.scope))
      l = c.scope;
    else
      continue;
    for (let i = 0, p = l.length; i < p; i++) {
      let d = l[i].split(/ /), m = d[d.length - 1], f = d.slice(0, d.length - 1);
      N_e(m, f, e, t) && (s[r++] = c, i = p);
    }
  }
  return s;
}
var fe = [
  "black",
  "red",
  "green",
  "yellow",
  "blue",
  "magenta",
  "cyan",
  "white",
  "brightBlack",
  "brightRed",
  "brightGreen",
  "brightYellow",
  "brightBlue",
  "brightMagenta",
  "brightCyan",
  "brightWhite"
], zn = {
  1: "bold",
  2: "dim",
  3: "italic",
  4: "underline",
  7: "reverse",
  9: "strikethrough"
};
function E_e(n, e) {
  const t = n.indexOf("\x1B", e);
  if (t !== -1 && n[t + 1] === "[") {
    const s = n.indexOf("m", t);
    return {
      sequence: n.substring(t + 2, s).split(";"),
      startPosition: t,
      position: s + 1
    };
  }
  return {
    position: n.length
  };
}
function us(n) {
  const e = n.shift();
  if (e === "2") {
    const t = n.splice(0, 3).map((s) => Number.parseInt(s));
    return t.length !== 3 || t.some((s) => Number.isNaN(s)) ? void 0 : {
      type: "rgb",
      rgb: t
    };
  } else if (e === "5") {
    const t = n.shift();
    if (t)
      return { type: "table", index: Number(t) };
  }
}
function T_e(n) {
  const e = [];
  for (; n.length > 0; ) {
    const t = n.shift();
    if (!t)
      continue;
    const s = Number.parseInt(t);
    if (!Number.isNaN(s))
      if (s === 0)
        e.push({ type: "resetAll" });
      else if (s <= 9)
        zn[s] && e.push({
          type: "setDecoration",
          value: zn[s]
        });
      else if (s <= 29) {
        const r = zn[s - 20];
        r && e.push({
          type: "resetDecoration",
          value: r
        });
      } else if (s <= 37)
        e.push({
          type: "setForegroundColor",
          value: { type: "named", name: fe[s - 30] }
        });
      else if (s === 38) {
        const r = us(n);
        r && e.push({
          type: "setForegroundColor",
          value: r
        });
      } else if (s === 39)
        e.push({
          type: "resetForegroundColor"
        });
      else if (s <= 47)
        e.push({
          type: "setBackgroundColor",
          value: { type: "named", name: fe[s - 40] }
        });
      else if (s === 48) {
        const r = us(n);
        r && e.push({
          type: "setBackgroundColor",
          value: r
        });
      } else
        s === 49 ? e.push({
          type: "resetBackgroundColor"
        }) : s >= 90 && s <= 97 ? e.push({
          type: "setForegroundColor",
          value: { type: "named", name: fe[s - 90 + 8] }
        }) : s >= 100 && s <= 107 && e.push({
          type: "setBackgroundColor",
          value: { type: "named", name: fe[s - 100 + 8] }
        });
  }
  return e;
}
function D_e() {
  let n = null, e = null, t = /* @__PURE__ */ new Set();
  return {
    parse(s) {
      const r = [];
      let o = 0;
      do {
        const a = E_e(s, o), c = a.sequence ? s.substring(o, a.startPosition) : s.substring(o);
        if (c.length > 0 && r.push({
          value: c,
          foreground: n,
          background: e,
          decorations: new Set(t)
        }), a.sequence) {
          const l = T_e(a.sequence);
          for (const i of l)
            i.type === "resetAll" ? (n = null, e = null, t.clear()) : i.type === "resetForegroundColor" ? n = null : i.type === "resetBackgroundColor" ? e = null : i.type === "resetDecoration" && t.delete(i.value);
          for (const i of l)
            i.type === "setForegroundColor" ? n = i.value : i.type === "setBackgroundColor" ? e = i.value : i.type === "setDecoration" && t.add(i.value);
        }
        o = a.position;
      } while (o < s.length);
      return r;
    }
  };
}
var j_e = {
  black: "#000000",
  red: "#bb0000",
  green: "#00bb00",
  yellow: "#bbbb00",
  blue: "#0000bb",
  magenta: "#ff00ff",
  cyan: "#00bbbb",
  white: "#eeeeee",
  brightBlack: "#555555",
  brightRed: "#ff5555",
  brightGreen: "#00ff00",
  brightYellow: "#ffff55",
  brightBlue: "#5555ff",
  brightMagenta: "#ff55ff",
  brightCyan: "#55ffff",
  brightWhite: "#ffffff"
};
function q_e(n = j_e) {
  function e(c) {
    return n[c];
  }
  function t(c) {
    return `#${c.map((l) => Math.max(0, Math.min(l, 255)).toString(16).padStart(2, "0")).join("")}`;
  }
  let s;
  function r() {
    if (s)
      return s;
    s = [];
    for (let i = 0; i < fe.length; i++)
      s.push(e(fe[i]));
    let c = [0, 95, 135, 175, 215, 255];
    for (let i = 0; i < 6; i++)
      for (let p = 0; p < 6; p++)
        for (let h = 0; h < 6; h++)
          s.push(t([c[i], c[p], c[h]]));
    let l = 8;
    for (let i = 0; i < 24; i++, l += 10)
      s.push(t([l, l, l]));
    return s;
  }
  function o(c) {
    return r()[c];
  }
  function a(c) {
    switch (c.type) {
      case "named":
        return e(c.name);
      case "rgb":
        return t(c.rgb);
      case "table":
        return o(c.index);
    }
  }
  return {
    value: a
  };
}
function R_e(n, e) {
  const t = e.split(/\r?\n/), s = q_e(
    Object.fromEntries(
      fe.map((o) => [
        o,
        n.colors[`terminal.ansi${o[0].toUpperCase()}${o.substring(1)}`]
      ])
    )
  ), r = D_e();
  return t.map(
    (o) => r.parse(o).map((a) => {
      let c;
      a.decorations.has("reverse") ? c = a.background ? s.value(a.background) : n.bg : c = a.foreground ? s.value(a.foreground) : n.fg, a.decorations.has("dim") && (c = P_e(c));
      let l = ye.None;
      return a.decorations.has("bold") && (l |= ye.Bold), a.decorations.has("italic") && (l |= ye.Italic), a.decorations.has("underline") && (l |= ye.Underline), {
        content: a.value,
        color: c,
        fontStyle: l
      };
    })
  );
}
function P_e(n) {
  const e = n.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);
  if (e)
    if (e[3]) {
      const s = Math.round(Number.parseInt(e[3], 16) / 2).toString(16).padStart(2, "0");
      return `#${e[1]}${e[2]}${s}`;
    } else
      return e[2] ? `#${e[1]}${e[2]}80` : `#${Array.from(e[1]).map((s) => `${s}${s}`).join("")}80`;
  const t = n.match(/var\((--shiki-color-ansi-[\w-]+)\)/);
  return t ? `var(${t[1]}-dim)` : n;
}
const I_e = {
  pre({ className: n, style: e, children: t }) {
    return `<pre class="${n}" style="${e}" tabindex="0">${t}</pre>`;
  },
  code({ children: n }) {
    return `<code>${n}</code>`;
  },
  line({ className: n, children: e }) {
    return `<span class="${n}">${e}</span>`;
  },
  token({ style: n, children: e }) {
    return `<span style="${n}">${e}</span>`;
  }
};
function ps(n, e = {}) {
  const t = e.bg || "#fff", s = u_e(e.lineOptions ?? [], (a) => a.line), r = e.elements || {};
  function o(a = "", c = {}, l) {
    const i = r[a] || I_e[a];
    return i ? (l = l.filter(Boolean), i({
      ...c,
      children: a === "code" ? l.join(`
`) : l.join("")
    })) : "";
  }
  return o(
    "pre",
    { className: "shiki " + (e.themeName || ""), style: `background-color: ${t}` },
    [
      e.langId ? `<div class="language-id">${e.langId}</div>` : "",
      o(
        "code",
        {},
        n.map((a, c) => {
          const l = c + 1, i = s.get(l) ?? [], p = M_e(i).join(" ");
          return o(
            "line",
            {
              className: p,
              lines: n,
              line: a,
              index: c
            },
            a.map((h, d) => {
              const m = [`color: ${h.color || e.fg}`];
              return h.fontStyle & ye.Italic && m.push("font-style: italic"), h.fontStyle & ye.Bold && m.push("font-weight: bold"), h.fontStyle & ye.Underline && m.push("text-decoration: underline"), o(
                "token",
                {
                  style: m.join("; "),
                  tokens: a,
                  token: h,
                  index: d
                },
                [F_e(h.content)]
              );
            })
          );
        })
      )
    ]
  );
}
const O_e = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
function F_e(n) {
  return n.replace(/[&<>"']/g, (e) => O_e[e]);
}
function M_e(n) {
  const e = /* @__PURE__ */ new Set(["line"]);
  for (const t of n)
    for (const s of t.classes ?? [])
      e.add(s);
  return Array.from(e);
}
class B_e extends Us.Registry {
  constructor(e) {
    super(e), this._resolver = e, this.themesPath = "themes/", this._resolvedThemes = {}, this._resolvedGrammars = {}, this._langGraph = /* @__PURE__ */ new Map(), this._langMap = An.reduce((t, s) => (t[s.id] = s, t), {});
  }
  getTheme(e) {
    return typeof e == "string" ? this._resolvedThemes[e] : e;
  }
  async loadTheme(e) {
    return typeof e == "string" ? (this._resolvedThemes[e] || (this._resolvedThemes[e] = await Js(`${this.themesPath}${e}.json`)), this._resolvedThemes[e]) : (e = Qs(e), e.name && (this._resolvedThemes[e.name] = e), e);
  }
  async loadThemes(e) {
    return await Promise.all(e.map((t) => this.loadTheme(t)));
  }
  getLoadedThemes() {
    return Object.keys(this._resolvedThemes);
  }
  getGrammar(e) {
    return this._resolvedGrammars[e];
  }
  async loadLanguage(e) {
    var o;
    const s = {
      embeddedLanguages: (o = e.embeddedLangs) == null ? void 0 : o.reduce(async (a, c, l) => {
        if (!this.getLoadedLanguages().includes(c) && this._resolver.getLangRegistration(c))
          return await this._resolver.loadGrammar(this._resolver.getLangRegistration(c).scopeName), a[this._resolver.getLangRegistration(c).scopeName] = l + 2, a;
      }, {}),
      balancedBracketSelectors: e.balancedBracketSelectors || ["*"],
      unbalancedBracketSelectors: e.unbalancedBracketSelectors || []
    }, r = await this.loadGrammarWithConfiguration(e.scopeName, 1, s);
    this._resolvedGrammars[e.id] = r, e.aliases && e.aliases.forEach((a) => {
      this._resolvedGrammars[a] = r;
    });
  }
  async loadLanguages(e) {
    for (const s of e)
      this.resolveEmbeddedLanguages(s);
    const t = Array.from(this._langGraph.values());
    for (const s of t)
      this._resolver.addLanguage(s);
    for (const s of t)
      await this.loadLanguage(s);
  }
  getLoadedLanguages() {
    return Object.keys(this._resolvedGrammars);
  }
  resolveEmbeddedLanguages(e) {
    if (this._langGraph.has(e.id) || this._langGraph.set(e.id, e), e.embeddedLangs)
      for (const t of e.embeddedLangs)
        this._langGraph.set(t, this._langMap[t]);
  }
}
function Ys(n) {
  return typeof n == "string" ? An.find((e) => {
    var t;
    return e.id === n || ((t = e.aliases) == null ? void 0 : t.includes(n));
  }) : n;
}
function $_e(n) {
  var r;
  let e = An, t = n.themes || [], s = (r = n.paths) != null && r.wasm ? n.paths.wasm.endsWith("/") ? n.paths.wasm : n.paths.wasm + "/" : b_e;
  return n.langs && (e = n.langs.map(Ys)), n.theme && t.unshift(n.theme), t.length || (t = ["nord"]), { _languages: e, _themes: t, _wasmPath: s };
}
function z_e() {
  const n = {
    "#000001": "var(--shiki-color-text)",
    "#000002": "var(--shiki-color-background)",
    "#000004": "var(--shiki-token-constant)",
    "#000005": "var(--shiki-token-string)",
    "#000006": "var(--shiki-token-comment)",
    "#000007": "var(--shiki-token-keyword)",
    "#000008": "var(--shiki-token-parameter)",
    "#000009": "var(--shiki-token-function)",
    "#000010": "var(--shiki-token-string-expression)",
    "#000011": "var(--shiki-token-punctuation)",
    "#000012": "var(--shiki-token-link)"
  };
  for (let e = 0; e < fe.length; e++) {
    const t = `#A${e.toString().padStart(5, "0")}`, s = fe[e].replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
    n[t] = `var(--shiki-color-ansi-${s})`;
  }
  return n;
}
async function G_e(n) {
  var x, _;
  const { _languages: e, _themes: t, _wasmPath: s } = $_e(n), r = new A_e(k_e(s), "vscode-oniguruma"), o = new B_e(r);
  (x = n.paths) != null && x.themes && (o.themesPath = n.paths.themes.endsWith("/") ? n.paths.themes : n.paths.themes + "/"), (_ = n.paths) != null && _.languages && (r.languagesPath = n.paths.languages.endsWith("/") ? n.paths.languages : n.paths.languages + "/");
  const c = (await o.loadThemes(t))[0];
  let l;
  await o.loadLanguages(e);
  let i = z_e();
  function p(v) {
    i = v;
  }
  function h(v, A) {
    v.bg = i[v.bg] || v.bg, v.fg = i[v.fg] || v.fg, Object.entries(v.colors).forEach(([C, T]) => {
      v.colors[C] = i[T] || T;
    }), A.forEach((C, T) => {
      A[T] = i[C] || C;
    });
  }
  function d(v) {
    const A = v ? o.getTheme(v) : c;
    if (!A)
      throw Error(`No theme registration for ${v}`);
    (!l || l.name !== A.name) && (o.setTheme(A), l = A);
    const C = o.getColorMap();
    return A.type === "css" && h(A, C), { _theme: A, _colorMap: C };
  }
  function m(v) {
    const A = o.getGrammar(v);
    if (!A)
      throw Error(`No language registration for ${v}`);
    return { _grammar: A };
  }
  function f(v, A = "text", C, T = { includeExplanation: !0 }) {
    if (U_e(A))
      return [...v.split(/\r\n|\r|\n/).map((M) => [{ content: M }])];
    const { _grammar: E } = m(A), { _theme: D, _colorMap: q } = d(C);
    return S_e(D, q, v, E, T);
  }
  function L(v, A) {
    const { _theme: C } = d(A);
    return R_e(C, v);
  }
  function S(v, A = "text", C) {
    let T;
    typeof A == "object" ? T = A : T = {
      lang: A,
      theme: C
    };
    const E = f(v, T.lang, T.theme, {
      includeExplanation: !1
    }), { _theme: D } = d(T.theme);
    return ps(E, {
      fg: D.fg,
      bg: D.bg,
      lineOptions: T == null ? void 0 : T.lineOptions,
      themeName: D.name
    });
  }
  function b(v, A) {
    const C = L(v, A == null ? void 0 : A.theme), { _theme: T } = d(A == null ? void 0 : A.theme);
    return ps(C, {
      fg: T.fg,
      bg: T.bg,
      lineOptions: A == null ? void 0 : A.lineOptions,
      themeName: T.name
    });
  }
  async function k(v) {
    await o.loadTheme(v);
  }
  async function w(v) {
    const A = Ys(v);
    r.addLanguage(A), await o.loadLanguage(A);
  }
  function N() {
    return o.getLoadedThemes();
  }
  function y() {
    return o.getLoadedLanguages();
  }
  function u(v) {
    const { _theme: A } = d(v);
    return A.bg;
  }
  function g(v) {
    const { _theme: A } = d(v);
    return A.fg;
  }
  return {
    codeToThemedTokens: f,
    codeToHtml: S,
    ansiToThemedTokens: L,
    ansiToHtml: b,
    getTheme: (v) => d(v)._theme,
    loadTheme: k,
    loadLanguage: w,
    getBackgroundColor: u,
    getForegroundColor: g,
    getLoadedThemes: N,
    getLoadedLanguages: y,
    setColorReplacements: p
  };
}
function U_e(n) {
  return !n || ["plaintext", "txt", "text"].includes(n);
}
async function H_e(n = {}) {
  const e = await G_e(n), t = n.processors ?? [];
  return {
    ...e,
    codeToHtml: (s, r) => {
      const o = typeof r == "object" ? r.lang : r, a = typeof r == "object" ? r.lineOptions ?? [] : [], c = typeof r == "object" ? r.theme : void 0, { code: l, lineOptions: i } = c_e(t, s, o), p = e.codeToHtml(l, {
        lang: o,
        theme: c,
        lineOptions: [
          ...i,
          ...a
        ]
      });
      return a_e(t, p, o);
    }
  };
}
const V_e = Qge("abcdefghijklmnopqrstuvwxyz", 10), W_e = (n) => {
  n = n.replace(/^(?:\[.*?\])?.*?([\d,-]+).*/, "$1").trim();
  const e = [];
  return n ? (n.split(",").map((t) => t.split("-").map((s) => parseInt(s, 10))).forEach(([t, s]) => {
    t && s ? e.push(...Array.from({ length: s - t + 1 }, (r, o) => t + o)) : e.push(t);
  }), e.map((t) => ({
    line: t,
    classes: ["highlighted"]
  }))) : [];
}, Z_e = {
  name: "error-level",
  handler: xn({
    error: ["highlighted", "error"],
    warning: ["highlighted", "warning"]
  })
};
async function J_e(n = "material-theme-palenight", e = [], t = "", s = console) {
  const r = typeof n == "string" || "name" in n, o = (L) => typeof L == "string" ? L : L.name, a = [
    o_e(),
    r_e({ hasHighlightClass: "highlighted" }),
    s_e(),
    Z_e
  ], c = await H_e({
    themes: r ? [n] : [n.dark, n.light],
    // something wrong with shiki, cannot dynamic load css
    langs: ["css", ...e],
    processors: a
  }), l = async (L) => {
    L && !c.getLoadedLanguages().includes(L) && await c.loadLanguage(L);
  };
  await l(t);
  const i = /<pre[^>]*(style=".*?")/, p = /^<pre(.*?)>/, h = /-vue$/, d = /:(no-)?line-numbers$/, m = /\{\{.*?\}\}/g;
  return { plugin: (L, S, b) => {
    const k = h.test(S) ? "" : "v-pre";
    S = S.replace(d, "").replace(h, "").toLowerCase() || t, S && !c.getLoadedLanguages().includes(S) && S !== "ansi" && S !== "txt" && s.warn(
      // c.yellow(
      `
The language '${S}' is not loaded, falling back to '${t || "txt"}' for syntax highlighting.`
      // )
    );
    const w = W_e(b), N = (C) => C.replace(p, (T, E) => `<pre ${k}${E.replace(' tabindex="0"', "")}>`).replace(i, (T, E) => T.replace(E, "")), y = /* @__PURE__ */ new Map(), u = (C) => k ? C : C.replace(m, (T) => {
      let E = y.get(T);
      return E || (E = V_e(), y.set(T, E)), E;
    }), g = (C) => (y.forEach((T, E) => {
      C = C.replace(new RegExp(T, "gi"), E);
    }), C), x = (C) => C.replace(/(<span class="line highlighted">)(<\/span>)/g, "$1<wbr>$2");
    L = u(L);
    const _ = (C) => {
      let T;
      try {
        T = S === "ansi" ? c.ansiToHtml(L, {
          lineOptions: w,
          theme: o(C)
        }) : c.codeToHtml(L, {
          lang: S,
          lineOptions: w,
          theme: o(C)
        });
      } catch {
        T = c.ansiToHtml(L, {
          lineOptions: w,
          theme: o(C)
        });
      }
      return x(N(g(T)));
    };
    if (r)
      return _(n);
    const v = Qe(_(n.dark), "vp-code-dark", "pre"), A = Qe(_(n.light), "vp-code-light", "pre");
    return v + A;
  }, highlighter: c, loadLang: l };
}
const Gn = /{([\d,-]+)}/, Q_e = (n) => {
  const e = n.renderer.rules.fence;
  n.renderer.rules.fence = (...t) => {
    const [s, r] = t, o = s[r], a = o.attrs && o.attrs[0];
    let c = null;
    if (!a) {
      const l = o.info;
      if (!l || !Gn.test(l))
        return e(...t);
      const i = l.replace(Gn, "").trim();
      o.info = i, c = Gn.exec(l)[1];
    }
    return !c && (c = a[0], !c || !/[\d,-]+/.test(c)) ? e(...t) : (o.info += " " + c, e(...t));
  };
}, Y_e = (n) => {
  const e = n.renderer.rules.image;
  n.renderer.rules.image = (t, s, r, o, a) => {
    const c = t[s];
    let l = c.attrGet("src");
    return l && !Xn.test(l) && (/^\.?\//.test(l) || (l = "./" + l), c.attrSet("src", decodeURIComponent(l))), e(t, s, r, o, a);
  };
}, X_e = (n, e = !1) => {
  const t = n.renderer.rules.fence;
  n.renderer.rules.fence = (...s) => {
    const r = t(...s), [o, a] = s, c = o[a].info;
    if (!e && !/:line-numbers($| )/.test(c) || e && /:no-line-numbers($| )/.test(c))
      return r;
    const i = r.slice(
      r.indexOf("<code>"),
      r.indexOf("</code>")
    ).split(`
`), h = `<div class="line-numbers-wrapper" aria-hidden="true">${[
      ...Array(
        i.length - (i[i.length - 1] === '<span class="line"></span>' ? 1 : 0)
      )
    ].map((m, f) => `<span class="line-number">${f + 1}</span><br>`).join("")}</div>`;
    return r.replace(/<\/div>$/, `${h}</div>`).replace(/"(language-[^"]*?)"/, '"$1 line-numbers-mode"');
  };
}, K_e = /(^|.*\/)index.md(#?.*)$/i, ebe = (n, e, t) => {
  n.renderer.rules.link_open = (o, a, c, l, i) => {
    const p = o[a], h = p.attrIndex("href");
    if (h >= 0) {
      const d = p.attrs[h], m = d[1];
      Xn.test(m) ? (Object.entries(e).forEach(([L, S]) => {
        p.attrSet(L, S);
      }), m.replace(Xn, "").startsWith("//localhost:") && r(m, l), d[1] = m.replace(Yge, "")) : (// internal anchor links
      !m.startsWith("#") && // mail links
      !m.startsWith("mailto:") && // links to files (other than html/md)
      !/\.(?!html|md)\w+($|\?)/i.test(m) ? s(d, l) : m.startsWith("#") && (d[1] = decodeURI(d[1])), d[1].startsWith("/") && (d[1] = `${t}${d[1]}`.replace(/\/+/g, "/"))), d[1] = d[1].replace(/\bimport\.meta/g, "import%2Emeta").replace(/\bprocess\.env/g, "process%2Eenv");
    }
    return i.renderToken(o, a, c);
  };
  function s(o, a) {
    let c = o[1];
    const l = c.match(K_e);
    if (l) {
      const [, i, p] = l;
      c = i + p;
    } else {
      let i = c.replace(/[?#].*$/, "");
      i.endsWith(".md") && (i = i.replace(/\.md$/, a.cleanUrls ? "" : ".html")), !a.cleanUrls && !i.endsWith(".html") && !i.endsWith("/") && (i += ".html");
      const p = new URL(c, "http://a.com");
      c = i + p.search + p.hash;
    }
    !c.startsWith("/") && !/^\.\//.test(c) && (c = "./" + c), r(c.replace(/\.html$/, ""), a), o[1] = decodeURI(c);
  }
  function r(o, a) {
    (a.links || (a.links = [])).push(o);
  }
}, Xs = async (n = {}, e = "/", t = console) => {
  var c;
  const { plugin: s, highlighter: r, loadLang: o } = await J_e(n.theme, n.languages, n.defaultHighlightLang, t), a = Cz({
    html: !0,
    linkify: !0,
    highlight: n.highlight || s,
    ...n
  });
  return a.linkify.set({ fuzzyLink: !1 }), a.use(Q_e).use(Kge).use(n_e).use(Y_e).use(ebe, { target: "_blank", rel: "noreferrer", ...n.externalLinks }, e).use(X_e, n.lineNumbers), (c = n.attrs) != null && c.disable || a.use(zz, n.attrs), a.use(Vge), a.use(Te, {
    slugify: on,
    permalink: Te.permalink.linkInsideHeader({
      symbol: "&ZeroWidthSpace;",
      renderAttrs: (l, i) => {
        const p = i.tokens.findIndex((d) => {
          const m = d.attrs, f = m == null ? void 0 : m.find((L) => L[0] === "id");
          return f && l === f[1];
        });
        return {
          "aria-label": `Permalink to "${i.tokens[p + 1].content}"`
        };
      }
    }),
    ...n.anchor
  }), n.headers && a.use(mo, {
    level: [2, 3, 4, 5, 6],
    slugify: on,
    ...typeof n.headers == "boolean" ? void 0 : n.headers
  }), a.use(fo).use(bo, {
    ...n.toc
  }), n.config && n.config(a), { md: a, highlighter: r, loadLang: o };
}, nbe = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
}, tbe = /* @__PURE__ */ le("path", {
  fill: "none",
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2",
  d: "M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2M7 11l5 5l5-5m-5-7v12"
}, null, -1), sbe = [
  tbe
];
function obe(n, e) {
  return re(), ie("svg", nbe, sbe);
}
const rbe = { name: "tabler-download", render: obe }, cbe = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
}, abe = /* @__PURE__ */ le("path", {
  fill: "none",
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2",
  d: "m5 12l5 5L20 7"
}, null, -1), ibe = [
  abe
];
function lbe(n, e) {
  return re(), ie("svg", cbe, ibe);
}
const ube = { name: "tabler-check", render: lbe }, pbe = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
}, hbe = /* @__PURE__ */ le("g", {
  fill: "none",
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2"
}, [
  /* @__PURE__ */ le("path", { d: "M8 10a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2z" }),
  /* @__PURE__ */ le("path", { d: "M16 8V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2" })
], -1), dbe = [
  hbe
];
function mbe(n, e) {
  return re(), ie("svg", pbe, dbe);
}
const fbe = { name: "tabler-copy", render: mbe };
async function gbe(n) {
  try {
    return navigator.clipboard.writeText(n);
  } catch {
    const e = document.createElement("textarea"), t = document.activeElement;
    e.value = n, e.setAttribute("readonly", ""), e.style.contain = "strict", e.style.position = "absolute", e.style.left = "-9999px", e.style.fontSize = "12pt";
    const s = document.getSelection(), r = s ? s.rangeCount > 0 && s.getRangeAt(0) : null;
    document.body.appendChild(e), e.select(), e.selectionStart = 0, e.selectionEnd = n.length, document.execCommand("copy"), document.body.removeChild(e), r && (s.removeAllRanges(), s.addRange(r)), t && t.focus();
  }
}
const _be = (n, e = !1) => {
  const t = "ABCDEFGHJKLMNPQRSTUVWXY3456789";
  let s = "";
  for (let r = 0; r < n.valueOf(); r++)
    s += t.charAt(Math.floor(Math.random() * t.length));
  return e ? s.toLowerCase() : s;
}, bbe = {
  javascript: ".js",
  python: ".py",
  java: ".java",
  c: ".c",
  cpp: ".cpp",
  "c++": ".cpp",
  "c#": ".cs",
  ruby: ".rb",
  php: ".php",
  swift: ".swift",
  "objective-c": ".m",
  kotlin: ".kt",
  typescript: ".ts",
  go: ".go",
  perl: ".pl",
  rust: ".rs",
  scala: ".scala",
  haskell: ".hs",
  lua: ".lua",
  shell: ".sh",
  sql: ".sql",
  html: ".html",
  css: ".css"
}, kbe = (n, e, t = "Enter file name") => {
  const s = bbe[n] || ".file", r = `file-${_be(3, !0)}${s}`, o = window.prompt(t || "", r);
  if (!o)
    return;
  const a = new Blob([e], { type: "text/plain" }), c = URL.createObjectURL(a), l = document.createElement("a");
  l.download = o, l.href = c, l.style.display = "none", document.body.appendChild(l), l.click(), document.body.removeChild(l), URL.revokeObjectURL(c);
}, ybe = { class: "vp-header" }, wbe = { class: "ctrl" }, Kn = /* @__PURE__ */ pn({
  __name: "VueMarkDownHeader",
  props: {
    lang: {
      type: String,
      default: "txt"
    },
    copyTxt: {
      type: String,
      default: "Copy"
    },
    copiedTxt: {
      type: String,
      default: "Copied"
    },
    item: {
      type: String,
      default: ""
    },
    downloadTxt: {
      type: String,
      default: "Enter file name"
    }
  },
  setup(n) {
    const e = n, t = Me(!1), s = Me(null), r = Un(() => t.value ? e.copiedTxt : e.copyTxt);
    function o() {
      const c = /* @__PURE__ */ new Map();
      gbe(e.item).then(() => {
        t.value = !0, clearTimeout(c.get(s.value));
        const l = setTimeout(() => {
          t.value = !1, c.delete(s.value);
        }, 2e3);
        c.set(s.value, l);
      });
    }
    function a() {
      kbe(e.lang, e.item, e.downloadTxt);
    }
    return (c, l) => {
      const i = fbe, p = ube, h = rbe;
      return re(), ie("div", ybe, [
        hs(c.$slots, "default", {}, () => [
          le("div", null, Hn(n.lang), 1)
        ]),
        le("div", wbe, [
          le("div", {
            class: "copyRef ctrl",
            onClick: o,
            ref_key: "copyRef",
            ref: s
          }, [
            t.value ? (re(), dt(p, { key: 1 })) : (re(), dt(i, { key: 0 })),
            le("span", null, Hn(r.value), 1)
          ], 512),
          be(h, {
            class: "copyRef",
            onClick: a
          })
        ])
      ]);
    };
  }
}), vbe = { class: "tabs" }, xbe = ["onClick"], Abe = ["innerHTML"], Sbe = /* @__PURE__ */ pn({
  __name: "VueGroupCode",
  props: {
    names: {
      type: Object,
      required: !0
    },
    blocks: {
      type: Object,
      required: !0
    }
  },
  setup(n) {
    const e = Me(0);
    function t(s) {
      e.value = s;
    }
    return (s, r) => (re(), ie(Sn, null, [
      be(Kn, null, {
        default: Ks(() => [
          le("div", vbe, [
            (re(!0), ie(Sn, null, mt(n.names, (o, a) => (re(), ie("span", {
              key: a,
              onClick: () => t(a),
              class: Vn({ active: e.value === a })
            }, Hn(o), 11, xbe))), 128))
          ])
        ]),
        _: 1
      }),
      (re(!0), ie(Sn, null, mt(n.blocks, (o, a) => eo((re(), ie("div", {
        innerHTML: o.innerHTML,
        class: Vn(o.className),
        key: a
      }, null, 10, Abe)), [
        [no, e.value === a]
      ])), 128))
    ], 64));
  }
});
function Lbe(n) {
  let e = n;
  const t = /以下是(.+)续写的代码：\n\n/, s = e.match(t);
  if (s) {
    const o = s[1];
    e = e.replace(t, `以下是${o}续写的代码：

\`\`\`${o.toLocaleLowerCase()}

`);
  }
  const r = /\n```\n/g;
  return e = e.replace(r, "\n``` \n"), e;
}
const Cbe = /* @__PURE__ */ pn({
  components: {
    VueMarkDownHeader: Kn
  },
  props: {
    content: {
      type: String,
      required: !0
    },
    style: {
      type: Object,
      default: () => {
      }
    },
    class: {
      type: String,
      default: ""
    },
    stream: {
      type: Boolean,
      default: !1
    }
  },
  setup(n, {
    expose: e
  }) {
    const t = Me(""), s = Me(), r = Me();
    e({
      render: t,
      md: s,
      loadLangFn: r
    });
    const o = new RegExp("(?<=```)\\S+", "g"), {
      stream: a,
      class: c,
      style: l
    } = to(n), i = Un(() => ["vp-doc", c.value]);
    function p(L, S = "") {
      let b = "";
      const w = new DOMParser().parseFromString(L, "text/html"), N = /shellscript|shell|bash|sh|zsh/.test(S);
      return w.querySelectorAll("span.line:not(.diff.remove)").forEach((y) => b += (y.textContent || "") + `
`), N && (b = b.replace(/^ *(\$|>) /gm, "").trim()), b.slice(0, -1);
    }
    const h = Un(() => Lbe(n.content || ""));
    function d(L) {
      if (L.nodeType === Node.TEXT_NODE)
        return L.textContent;
      if (L.nodeType === Node.ELEMENT_NODE) {
        const S = L, b = /^language-/, k = Array.from(S.classList).some((y) => b.test(y)), w = /vp-code-group/;
        if (Array.from(S.classList).some((y) => w.test(y))) {
          const u = Array.from(S.querySelectorAll(".tabs label")).map((x) => x.innerText), g = S.querySelectorAll(".blocks div");
          return be(Sbe, {
            names: u,
            blocks: g
          }, null);
        } else if (k) {
          const y = S.className.match(/language-([\w+]+)/), u = y ? y[1] : "plain", g = p(S.innerHTML, u), x = S.innerHTML;
          return be("div", {
            class: i.value,
            style: {
              ...l
            }
          }, [be("slot", {
            name: "code",
            item: g,
            html: g,
            lang: u
          }, [be(Kn, {
            lang: u,
            item: g
          }, null)]), be("div", {
            class: S.className,
            innerHTML: x
          }, null)]);
        } else {
          const y = Array.from(S.childNodes).map(d).flat(), u = {};
          for (let g = 0; g < S.attributes.length; g++) {
            const x = S.attributes[g];
            u[x.name] = x.value;
          }
          return co(S.tagName, {
            ...u
          }, y);
        }
      }
    }
    async function m() {
      var S;
      const L = Array.from(h.value.matchAll(o)).map((b) => b[0]);
      if (L && r.value)
        for (let b = 0; b < L.length; b++) {
          const k = L[b];
          try {
            const w = Bs[k.toLocaleLowerCase()] || k;
            await r.value(w);
          } catch {
            continue;
          }
        }
      t.value = ((S = s.value) == null ? void 0 : S.render(h.value)) || "";
    }
    so(h, async () => await m()), oo(async () => {
      const {
        md: L,
        loadLang: S
      } = await ro(ut);
      s.value = L, r.value = S, await m();
    });
    function f() {
      const S = new DOMParser().parseFromString(t.value, "text/html"), b = d(S.body);
      return be("div", {
        class: [i.value, {
          "result-streaming": a.value
        }],
        style: {
          ...l.value
        }
      }, [b]);
    }
    return () => f();
  }
}), Ebe = /* @__PURE__ */ pn({
  __name: "VueMarkdownItProvider",
  props: {
    options: {
      type: Object,
      default: {
        theme: "dracula-soft",
        defaultHighlightLang: "javascript"
      }
    },
    class: {
      type: String,
      default: ""
    }
  },
  setup(n) {
    const t = Xs({
      ...n.options
    });
    return ao(ut, t), (s, r) => (re(), ie("div", {
      class: Vn(n.class)
    }, [
      hs(s.$slots, "default")
    ], 2));
  }
}), Tbe = {
  install(n, e = {
    theme: "dracula-soft",
    defaultHighlightLang: "javascript"
  }) {
    const t = Xs({
      ...e
    });
    n.provide(ut, t);
  }
};
export {
  Kn as VueMarkDownHeader,
  Cbe as VueMarkdownIt,
  Ebe as VueMarkdownItProvider,
  Tbe as default
};
