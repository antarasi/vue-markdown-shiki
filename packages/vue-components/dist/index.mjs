import { openBlock as re, createElementBlock as ie, createElementVNode as le, defineComponent as pn, ref as Me, computed as Un, renderSlot as ho, toDisplayString as Hn, createBlock as dt, unref as es, createVNode as _e, Fragment as Sn, withCtx as ns, renderList as ft, normalizeClass as Vn, withDirectives as ts, vShow as os, toRefs as ss, watch as rs, onBeforeMount as cs, inject as as, h as is, provide as ls } from "vue";
const us = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  "'": "&#39;",
  '"': "&quot;"
}, ps = /[&<>'"]/g, Fe = (n) => n.replace(
  ps,
  (e) => us[e]
), fo = (n, { shouldAllowHtml: e, shouldEscapeText: t }) => {
  const o = n.children ?? [], r = ["text", "emoji", "code_inline"];
  return e && r.push("html_inline"), o.filter(
    (a) => {
      var c;
      return r.includes(a.type) && // filter permalink symbol that generated by markdown-it-anchor
      !((c = a.meta) != null && c.isPermalinkSymbol);
    }
  ).reduce((a, c) => t && (c.type === "code_inline" || c.type === "text") ? `${a}${Fe(c.content)}` : `${a}${c.content}`, "").trim();
}, mo = (n, {
  level: e,
  shouldAllowHtml: t,
  shouldAllowNested: o,
  shouldEscapeText: r,
  slugify: s,
  format: a
}) => {
  const c = [], l = [], i = (p) => {
    for (; l.length !== 0 && p.level <= l[0].level; )
      l.shift();
    l.length === 0 ? (c.push(p), l.push(p)) : (l[0].children.push(p), l.unshift(p));
  };
  for (let p = 0; p < n.length; p += 1) {
    const h = n[p];
    if ((h == null ? void 0 : h.type) !== "heading_open" || (h == null ? void 0 : h.level) !== 0 && !o)
      continue;
    const d = Number.parseInt(h.tag.slice(1), 10);
    if (!e.includes(d))
      continue;
    const f = n[p + 1];
    if (!f)
      continue;
    const m = fo(f, {
      shouldAllowHtml: t,
      shouldEscapeText: r
    }), L = h.attrGet("id") ?? s(m);
    i({
      level: d,
      title: (a == null ? void 0 : a(m)) ?? m,
      slug: L,
      link: `#${L}`,
      children: []
    });
  }
  return c;
}, hs = /[\u0000-\u001f]/g, ds = /[\s~`!@#$%^&*()\-_+=[\]{}|\\;:"'“”‘’<>,.?/]+/g, fs = /[\u0300-\u036F]/g, sn = (n) => n.normalize("NFKD").replace(fs, "").replace(hs, "").replace(ds, "-").replace(/-{2,}/g, "-").replace(/^-+|-+$/g, "").replace(/^(\d)/, "_$1").toLowerCase(), ms = (n, {
  level: e = [2, 3],
  shouldAllowNested: t = !1,
  slugify: o = sn,
  format: r
} = {}) => {
  const s = n.renderer.render.bind(n.renderer);
  n.renderer.render = (a, c, l) => (l.headers = mo(a, {
    level: e,
    shouldAllowHtml: !1,
    shouldAllowNested: t,
    shouldEscapeText: !1,
    slugify: o,
    format: r
  }), s(a, c, l));
}, gs = (n) => {
  const e = n.renderer.render.bind(n.renderer);
  n.renderer.render = (t, o, r) => {
    const s = t.findIndex((a) => a.tag === "h1");
    return r.title = s > -1 ? fo(t[s + 1], {
      shouldAllowHtml: !1,
      shouldEscapeText: !1
    }) : "", e(t, o, r);
  };
}, _s = ({
  listTag: n,
  listClass: e,
  itemClass: t,
  linkTag: o,
  linkClass: r
}) => {
  const s = Fe(n), a = e ? ` class="${Fe(e)}"` : "", c = "li", l = t ? ` class="${Fe(t)}"` : "", i = Fe(o), p = r ? ` class="${Fe(r)}"` : "", h = (f) => o === "router-link" ? ` to="${f}"` : ` href="${f}"`, d = (f) => `<${s}${a}>${f.map(
    (m) => `<${c}${l}${l}><${i}${p}${h(m.link)}>${m.title}</${i}>${m.children.length > 0 ? d(m.children) : ""}</${c}>`
  ).join("")}</${s}>`;
  return d;
}, bs = ({
  pattern: n,
  containerTag: e,
  containerClass: t
}) => (o, r, s, a) => {
  if (o.sCount[r] - o.blkIndent >= 4)
    return !1;
  const c = o.bMarks[r] + o.tShift[r], l = o.eMarks[r], i = o.src.slice(c, l).split(" ")[0];
  if (!n.test(i))
    return !1;
  if (a)
    return !0;
  o.line = r + 1;
  const p = o.push("toc_open", e, 1);
  p.markup = "", p.map = [r, o.line], t && p.attrSet("class", t);
  const h = o.push("toc_body", "", 0);
  h.markup = i, h.map = [r, o.line], h.hidden = !0;
  const d = o.push("toc_close", e, -1);
  return d.markup = "", h.map = [r, o.line], !0;
}, ks = (n, {
  pattern: e = /^\[\[toc\]\]$/i,
  slugify: t = sn,
  format: o,
  level: r = [2, 3],
  shouldAllowNested: s = !1,
  containerTag: a = "nav",
  containerClass: c = "table-of-contents",
  listTag: l = "ul",
  listClass: i = "",
  itemClass: p = "",
  linkTag: h = "a",
  linkClass: d = ""
} = {}) => {
  n.block.ruler.before(
    "heading",
    "toc",
    bs({
      pattern: e,
      containerTag: a,
      containerClass: c
    }),
    {
      alt: ["paragraph", "reference", "blockquote"]
    }
  );
  const f = _s({
    listTag: l,
    listClass: i,
    itemClass: p,
    linkTag: h,
    linkClass: d
  });
  n.renderer.rules.toc_body = (m) => f(
    mo(m, {
      level: r,
      shouldAllowHtml: !0,
      shouldAllowNested: s,
      shouldEscapeText: !0,
      slugify: t,
      format: o
    })
  );
};
var go = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function hn(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
function ys(n) {
  if (n.__esModule)
    return n;
  var e = n.default;
  if (typeof e == "function") {
    var t = function o() {
      if (this instanceof o) {
        var r = [null];
        r.push.apply(r, arguments);
        var s = Function.bind.apply(e, r);
        return new s();
      }
      return e.apply(this, arguments);
    };
    t.prototype = e.prototype;
  } else
    t = {};
  return Object.defineProperty(t, "__esModule", { value: !0 }), Object.keys(n).forEach(function(o) {
    var r = Object.getOwnPropertyDescriptor(n, o);
    Object.defineProperty(t, o, r.get ? r : {
      enumerable: !0,
      get: function() {
        return n[o];
      }
    });
  }), t;
}
var B = {};
const ws = "Á", vs = "á", xs = "Ă", As = "ă", Ss = "∾", Ls = "∿", Cs = "∾̳", Es = "Â", Ts = "â", Ds = "´", qs = "А", js = "а", Rs = "Æ", Ns = "æ", Ps = "⁡", Is = "𝔄", Os = "𝔞", Fs = "À", Ms = "à", Bs = "ℵ", $s = "ℵ", zs = "Α", Gs = "α", Us = "Ā", Hs = "ā", Vs = "⨿", Ws = "&", Zs = "&", Js = "⩕", Qs = "⩓", Ys = "∧", Xs = "⩜", Ks = "⩘", er = "⩚", nr = "∠", tr = "⦤", or = "∠", sr = "⦨", rr = "⦩", cr = "⦪", ar = "⦫", ir = "⦬", lr = "⦭", ur = "⦮", pr = "⦯", hr = "∡", dr = "∟", fr = "⊾", mr = "⦝", gr = "∢", _r = "Å", br = "⍼", kr = "Ą", yr = "ą", wr = "𝔸", vr = "𝕒", xr = "⩯", Ar = "≈", Sr = "⩰", Lr = "≊", Cr = "≋", Er = "'", Tr = "⁡", Dr = "≈", qr = "≊", jr = "Å", Rr = "å", Nr = "𝒜", Pr = "𝒶", Ir = "≔", Or = "*", Fr = "≈", Mr = "≍", Br = "Ã", $r = "ã", zr = "Ä", Gr = "ä", Ur = "∳", Hr = "⨑", Vr = "≌", Wr = "϶", Zr = "‵", Jr = "∽", Qr = "⋍", Yr = "∖", Xr = "⫧", Kr = "⊽", ec = "⌅", nc = "⌆", tc = "⌅", oc = "⎵", sc = "⎶", rc = "≌", cc = "Б", ac = "б", ic = "„", lc = "∵", uc = "∵", pc = "∵", hc = "⦰", dc = "϶", fc = "ℬ", mc = "ℬ", gc = "Β", _c = "β", bc = "ℶ", kc = "≬", yc = "𝔅", wc = "𝔟", vc = "⋂", xc = "◯", Ac = "⋃", Sc = "⨀", Lc = "⨁", Cc = "⨂", Ec = "⨆", Tc = "★", Dc = "▽", qc = "△", jc = "⨄", Rc = "⋁", Nc = "⋀", Pc = "⤍", Ic = "⧫", Oc = "▪", Fc = "▴", Mc = "▾", Bc = "◂", $c = "▸", zc = "␣", Gc = "▒", Uc = "░", Hc = "▓", Vc = "█", Wc = "=⃥", Zc = "≡⃥", Jc = "⫭", Qc = "⌐", Yc = "𝔹", Xc = "𝕓", Kc = "⊥", ea = "⊥", na = "⋈", ta = "⧉", oa = "┐", sa = "╕", ra = "╖", ca = "╗", aa = "┌", ia = "╒", la = "╓", ua = "╔", pa = "─", ha = "═", da = "┬", fa = "╤", ma = "╥", ga = "╦", _a = "┴", ba = "╧", ka = "╨", ya = "╩", wa = "⊟", va = "⊞", xa = "⊠", Aa = "┘", Sa = "╛", La = "╜", Ca = "╝", Ea = "└", Ta = "╘", Da = "╙", qa = "╚", ja = "│", Ra = "║", Na = "┼", Pa = "╪", Ia = "╫", Oa = "╬", Fa = "┤", Ma = "╡", Ba = "╢", $a = "╣", za = "├", Ga = "╞", Ua = "╟", Ha = "╠", Va = "‵", Wa = "˘", Za = "˘", Ja = "¦", Qa = "𝒷", Ya = "ℬ", Xa = "⁏", Ka = "∽", ei = "⋍", ni = "⧅", ti = "\\", oi = "⟈", si = "•", ri = "•", ci = "≎", ai = "⪮", ii = "≏", li = "≎", ui = "≏", pi = "Ć", hi = "ć", di = "⩄", fi = "⩉", mi = "⩋", gi = "∩", _i = "⋒", bi = "⩇", ki = "⩀", yi = "ⅅ", wi = "∩︀", vi = "⁁", xi = "ˇ", Ai = "ℭ", Si = "⩍", Li = "Č", Ci = "č", Ei = "Ç", Ti = "ç", Di = "Ĉ", qi = "ĉ", ji = "∰", Ri = "⩌", Ni = "⩐", Pi = "Ċ", Ii = "ċ", Oi = "¸", Fi = "¸", Mi = "⦲", Bi = "¢", $i = "·", zi = "·", Gi = "𝔠", Ui = "ℭ", Hi = "Ч", Vi = "ч", Wi = "✓", Zi = "✓", Ji = "Χ", Qi = "χ", Yi = "ˆ", Xi = "≗", Ki = "↺", el = "↻", nl = "⊛", tl = "⊚", ol = "⊝", sl = "⊙", rl = "®", cl = "Ⓢ", al = "⊖", il = "⊕", ll = "⊗", ul = "○", pl = "⧃", hl = "≗", dl = "⨐", fl = "⫯", ml = "⧂", gl = "∲", _l = "”", bl = "’", kl = "♣", yl = "♣", wl = ":", vl = "∷", xl = "⩴", Al = "≔", Sl = "≔", Ll = ",", Cl = "@", El = "∁", Tl = "∘", Dl = "∁", ql = "ℂ", jl = "≅", Rl = "⩭", Nl = "≡", Pl = "∮", Il = "∯", Ol = "∮", Fl = "𝕔", Ml = "ℂ", Bl = "∐", $l = "∐", zl = "©", Gl = "©", Ul = "℗", Hl = "∳", Vl = "↵", Wl = "✗", Zl = "⨯", Jl = "𝒞", Ql = "𝒸", Yl = "⫏", Xl = "⫑", Kl = "⫐", eu = "⫒", nu = "⋯", tu = "⤸", ou = "⤵", su = "⋞", ru = "⋟", cu = "↶", au = "⤽", iu = "⩈", lu = "⩆", uu = "≍", pu = "∪", hu = "⋓", du = "⩊", fu = "⊍", mu = "⩅", gu = "∪︀", _u = "↷", bu = "⤼", ku = "⋞", yu = "⋟", wu = "⋎", vu = "⋏", xu = "¤", Au = "↶", Su = "↷", Lu = "⋎", Cu = "⋏", Eu = "∲", Tu = "∱", Du = "⌭", qu = "†", ju = "‡", Ru = "ℸ", Nu = "↓", Pu = "↡", Iu = "⇓", Ou = "‐", Fu = "⫤", Mu = "⊣", Bu = "⤏", $u = "˝", zu = "Ď", Gu = "ď", Uu = "Д", Hu = "д", Vu = "‡", Wu = "⇊", Zu = "ⅅ", Ju = "ⅆ", Qu = "⤑", Yu = "⩷", Xu = "°", Ku = "∇", ep = "Δ", np = "δ", tp = "⦱", op = "⥿", sp = "𝔇", rp = "𝔡", cp = "⥥", ap = "⇃", ip = "⇂", lp = "´", up = "˙", pp = "˝", hp = "`", dp = "˜", fp = "⋄", mp = "⋄", gp = "⋄", _p = "♦", bp = "♦", kp = "¨", yp = "ⅆ", wp = "ϝ", vp = "⋲", xp = "÷", Ap = "÷", Sp = "⋇", Lp = "⋇", Cp = "Ђ", Ep = "ђ", Tp = "⌞", Dp = "⌍", qp = "$", jp = "𝔻", Rp = "𝕕", Np = "¨", Pp = "˙", Ip = "⃜", Op = "≐", Fp = "≑", Mp = "≐", Bp = "∸", $p = "∔", zp = "⊡", Gp = "⌆", Up = "∯", Hp = "¨", Vp = "⇓", Wp = "⇐", Zp = "⇔", Jp = "⫤", Qp = "⟸", Yp = "⟺", Xp = "⟹", Kp = "⇒", eh = "⊨", nh = "⇑", th = "⇕", oh = "∥", sh = "⤓", rh = "↓", ch = "↓", ah = "⇓", ih = "⇵", lh = "̑", uh = "⇊", ph = "⇃", hh = "⇂", dh = "⥐", fh = "⥞", mh = "⥖", gh = "↽", _h = "⥟", bh = "⥗", kh = "⇁", yh = "↧", wh = "⊤", vh = "⤐", xh = "⌟", Ah = "⌌", Sh = "𝒟", Lh = "𝒹", Ch = "Ѕ", Eh = "ѕ", Th = "⧶", Dh = "Đ", qh = "đ", jh = "⋱", Rh = "▿", Nh = "▾", Ph = "⇵", Ih = "⥯", Oh = "⦦", Fh = "Џ", Mh = "џ", Bh = "⟿", $h = "É", zh = "é", Gh = "⩮", Uh = "Ě", Hh = "ě", Vh = "Ê", Wh = "ê", Zh = "≖", Jh = "≕", Qh = "Э", Yh = "э", Xh = "⩷", Kh = "Ė", ed = "ė", nd = "≑", td = "ⅇ", od = "≒", sd = "𝔈", rd = "𝔢", cd = "⪚", ad = "È", id = "è", ld = "⪖", ud = "⪘", pd = "⪙", hd = "∈", dd = "⏧", fd = "ℓ", md = "⪕", gd = "⪗", _d = "Ē", bd = "ē", kd = "∅", yd = "∅", wd = "◻", vd = "∅", xd = "▫", Ad = " ", Sd = " ", Ld = " ", Cd = "Ŋ", Ed = "ŋ", Td = " ", Dd = "Ę", qd = "ę", jd = "𝔼", Rd = "𝕖", Nd = "⋕", Pd = "⧣", Id = "⩱", Od = "ε", Fd = "Ε", Md = "ε", Bd = "ϵ", $d = "≖", zd = "≕", Gd = "≂", Ud = "⪖", Hd = "⪕", Vd = "⩵", Wd = "=", Zd = "≂", Jd = "≟", Qd = "⇌", Yd = "≡", Xd = "⩸", Kd = "⧥", ef = "⥱", nf = "≓", tf = "ℯ", of = "ℰ", sf = "≐", rf = "⩳", cf = "≂", af = "Η", lf = "η", uf = "Ð", pf = "ð", hf = "Ë", df = "ë", ff = "€", mf = "!", gf = "∃", _f = "∃", bf = "ℰ", kf = "ⅇ", yf = "ⅇ", wf = "≒", vf = "Ф", xf = "ф", Af = "♀", Sf = "ﬃ", Lf = "ﬀ", Cf = "ﬄ", Ef = "𝔉", Tf = "𝔣", Df = "ﬁ", qf = "◼", jf = "▪", Rf = "fj", Nf = "♭", Pf = "ﬂ", If = "▱", Of = "ƒ", Ff = "𝔽", Mf = "𝕗", Bf = "∀", $f = "∀", zf = "⋔", Gf = "⫙", Uf = "ℱ", Hf = "⨍", Vf = "½", Wf = "⅓", Zf = "¼", Jf = "⅕", Qf = "⅙", Yf = "⅛", Xf = "⅔", Kf = "⅖", em = "¾", nm = "⅗", tm = "⅜", om = "⅘", sm = "⅚", rm = "⅝", cm = "⅞", am = "⁄", im = "⌢", lm = "𝒻", um = "ℱ", pm = "ǵ", hm = "Γ", dm = "γ", fm = "Ϝ", mm = "ϝ", gm = "⪆", _m = "Ğ", bm = "ğ", km = "Ģ", ym = "Ĝ", wm = "ĝ", vm = "Г", xm = "г", Am = "Ġ", Sm = "ġ", Lm = "≥", Cm = "≧", Em = "⪌", Tm = "⋛", Dm = "≥", qm = "≧", jm = "⩾", Rm = "⪩", Nm = "⩾", Pm = "⪀", Im = "⪂", Om = "⪄", Fm = "⋛︀", Mm = "⪔", Bm = "𝔊", $m = "𝔤", zm = "≫", Gm = "⋙", Um = "⋙", Hm = "ℷ", Vm = "Ѓ", Wm = "ѓ", Zm = "⪥", Jm = "≷", Qm = "⪒", Ym = "⪤", Xm = "⪊", Km = "⪊", eg = "⪈", ng = "≩", tg = "⪈", og = "≩", sg = "⋧", rg = "𝔾", cg = "𝕘", ag = "`", ig = "≥", lg = "⋛", ug = "≧", pg = "⪢", hg = "≷", dg = "⩾", fg = "≳", mg = "𝒢", gg = "ℊ", _g = "≳", bg = "⪎", kg = "⪐", yg = "⪧", wg = "⩺", vg = ">", xg = ">", Ag = "≫", Sg = "⋗", Lg = "⦕", Cg = "⩼", Eg = "⪆", Tg = "⥸", Dg = "⋗", qg = "⋛", jg = "⪌", Rg = "≷", Ng = "≳", Pg = "≩︀", Ig = "≩︀", Og = "ˇ", Fg = " ", Mg = "½", Bg = "ℋ", $g = "Ъ", zg = "ъ", Gg = "⥈", Ug = "↔", Hg = "⇔", Vg = "↭", Wg = "^", Zg = "ℏ", Jg = "Ĥ", Qg = "ĥ", Yg = "♥", Xg = "♥", Kg = "…", e_ = "⊹", n_ = "𝔥", t_ = "ℌ", o_ = "ℋ", s_ = "⤥", r_ = "⤦", c_ = "⇿", a_ = "∻", i_ = "↩", l_ = "↪", u_ = "𝕙", p_ = "ℍ", h_ = "―", d_ = "─", f_ = "𝒽", m_ = "ℋ", g_ = "ℏ", __ = "Ħ", b_ = "ħ", k_ = "≎", y_ = "≏", w_ = "⁃", v_ = "‐", x_ = "Í", A_ = "í", S_ = "⁣", L_ = "Î", C_ = "î", E_ = "И", T_ = "и", D_ = "İ", q_ = "Е", j_ = "е", R_ = "¡", N_ = "⇔", P_ = "𝔦", I_ = "ℑ", O_ = "Ì", F_ = "ì", M_ = "ⅈ", B_ = "⨌", $_ = "∭", z_ = "⧜", G_ = "℩", U_ = "Ĳ", H_ = "ĳ", V_ = "Ī", W_ = "ī", Z_ = "ℑ", J_ = "ⅈ", Q_ = "ℐ", Y_ = "ℑ", X_ = "ı", K_ = "ℑ", eb = "⊷", nb = "Ƶ", tb = "⇒", ob = "℅", sb = "∞", rb = "⧝", cb = "ı", ab = "⊺", ib = "∫", lb = "∬", ub = "ℤ", pb = "∫", hb = "⊺", db = "⋂", fb = "⨗", mb = "⨼", gb = "⁣", _b = "⁢", bb = "Ё", kb = "ё", yb = "Į", wb = "į", vb = "𝕀", xb = "𝕚", Ab = "Ι", Sb = "ι", Lb = "⨼", Cb = "¿", Eb = "𝒾", Tb = "ℐ", Db = "∈", qb = "⋵", jb = "⋹", Rb = "⋴", Nb = "⋳", Pb = "∈", Ib = "⁢", Ob = "Ĩ", Fb = "ĩ", Mb = "І", Bb = "і", $b = "Ï", zb = "ï", Gb = "Ĵ", Ub = "ĵ", Hb = "Й", Vb = "й", Wb = "𝔍", Zb = "𝔧", Jb = "ȷ", Qb = "𝕁", Yb = "𝕛", Xb = "𝒥", Kb = "𝒿", ek = "Ј", nk = "ј", tk = "Є", ok = "є", sk = "Κ", rk = "κ", ck = "ϰ", ak = "Ķ", ik = "ķ", lk = "К", uk = "к", pk = "𝔎", hk = "𝔨", dk = "ĸ", fk = "Х", mk = "х", gk = "Ќ", _k = "ќ", bk = "𝕂", kk = "𝕜", yk = "𝒦", wk = "𝓀", vk = "⇚", xk = "Ĺ", Ak = "ĺ", Sk = "⦴", Lk = "ℒ", Ck = "Λ", Ek = "λ", Tk = "⟨", Dk = "⟪", qk = "⦑", jk = "⟨", Rk = "⪅", Nk = "ℒ", Pk = "«", Ik = "⇤", Ok = "⤟", Fk = "←", Mk = "↞", Bk = "⇐", $k = "⤝", zk = "↩", Gk = "↫", Uk = "⤹", Hk = "⥳", Vk = "↢", Wk = "⤙", Zk = "⤛", Jk = "⪫", Qk = "⪭", Yk = "⪭︀", Xk = "⤌", Kk = "⤎", ey = "❲", ny = "{", ty = "[", oy = "⦋", sy = "⦏", ry = "⦍", cy = "Ľ", ay = "ľ", iy = "Ļ", ly = "ļ", uy = "⌈", py = "{", hy = "Л", dy = "л", fy = "⤶", my = "“", gy = "„", _y = "⥧", by = "⥋", ky = "↲", yy = "≤", wy = "≦", vy = "⟨", xy = "⇤", Ay = "←", Sy = "←", Ly = "⇐", Cy = "⇆", Ey = "↢", Ty = "⌈", Dy = "⟦", qy = "⥡", jy = "⥙", Ry = "⇃", Ny = "⌊", Py = "↽", Iy = "↼", Oy = "⇇", Fy = "↔", My = "↔", By = "⇔", $y = "⇆", zy = "⇋", Gy = "↭", Uy = "⥎", Hy = "↤", Vy = "⊣", Wy = "⥚", Zy = "⋋", Jy = "⧏", Qy = "⊲", Yy = "⊴", Xy = "⥑", Ky = "⥠", ew = "⥘", nw = "↿", tw = "⥒", ow = "↼", sw = "⪋", rw = "⋚", cw = "≤", aw = "≦", iw = "⩽", lw = "⪨", uw = "⩽", pw = "⩿", hw = "⪁", dw = "⪃", fw = "⋚︀", mw = "⪓", gw = "⪅", _w = "⋖", bw = "⋚", kw = "⪋", yw = "⋚", ww = "≦", vw = "≶", xw = "≶", Aw = "⪡", Sw = "≲", Lw = "⩽", Cw = "≲", Ew = "⥼", Tw = "⌊", Dw = "𝔏", qw = "𝔩", jw = "≶", Rw = "⪑", Nw = "⥢", Pw = "↽", Iw = "↼", Ow = "⥪", Fw = "▄", Mw = "Љ", Bw = "љ", $w = "⇇", zw = "≪", Gw = "⋘", Uw = "⌞", Hw = "⇚", Vw = "⥫", Ww = "◺", Zw = "Ŀ", Jw = "ŀ", Qw = "⎰", Yw = "⎰", Xw = "⪉", Kw = "⪉", e0 = "⪇", n0 = "≨", t0 = "⪇", o0 = "≨", s0 = "⋦", r0 = "⟬", c0 = "⇽", a0 = "⟦", i0 = "⟵", l0 = "⟵", u0 = "⟸", p0 = "⟷", h0 = "⟷", d0 = "⟺", f0 = "⟼", m0 = "⟶", g0 = "⟶", _0 = "⟹", b0 = "↫", k0 = "↬", y0 = "⦅", w0 = "𝕃", v0 = "𝕝", x0 = "⨭", A0 = "⨴", S0 = "∗", L0 = "_", C0 = "↙", E0 = "↘", T0 = "◊", D0 = "◊", q0 = "⧫", j0 = "(", R0 = "⦓", N0 = "⇆", P0 = "⌟", I0 = "⇋", O0 = "⥭", F0 = "‎", M0 = "⊿", B0 = "‹", $0 = "𝓁", z0 = "ℒ", G0 = "↰", U0 = "↰", H0 = "≲", V0 = "⪍", W0 = "⪏", Z0 = "[", J0 = "‘", Q0 = "‚", Y0 = "Ł", X0 = "ł", K0 = "⪦", ev = "⩹", nv = "<", tv = "<", ov = "≪", sv = "⋖", rv = "⋋", cv = "⋉", av = "⥶", iv = "⩻", lv = "◃", uv = "⊴", pv = "◂", hv = "⦖", dv = "⥊", fv = "⥦", mv = "≨︀", gv = "≨︀", _v = "¯", bv = "♂", kv = "✠", yv = "✠", wv = "↦", vv = "↦", xv = "↧", Av = "↤", Sv = "↥", Lv = "▮", Cv = "⨩", Ev = "М", Tv = "м", Dv = "—", qv = "∺", jv = "∡", Rv = " ", Nv = "ℳ", Pv = "𝔐", Iv = "𝔪", Ov = "℧", Fv = "µ", Mv = "*", Bv = "⫰", $v = "∣", zv = "·", Gv = "⊟", Uv = "−", Hv = "∸", Vv = "⨪", Wv = "∓", Zv = "⫛", Jv = "…", Qv = "∓", Yv = "⊧", Xv = "𝕄", Kv = "𝕞", e1 = "∓", n1 = "𝓂", t1 = "ℳ", o1 = "∾", s1 = "Μ", r1 = "μ", c1 = "⊸", a1 = "⊸", i1 = "∇", l1 = "Ń", u1 = "ń", p1 = "∠⃒", h1 = "≉", d1 = "⩰̸", f1 = "≋̸", m1 = "ŉ", g1 = "≉", _1 = "♮", b1 = "ℕ", k1 = "♮", y1 = " ", w1 = "≎̸", v1 = "≏̸", x1 = "⩃", A1 = "Ň", S1 = "ň", L1 = "Ņ", C1 = "ņ", E1 = "≇", T1 = "⩭̸", D1 = "⩂", q1 = "Н", j1 = "н", R1 = "–", N1 = "⤤", P1 = "↗", I1 = "⇗", O1 = "↗", F1 = "≠", M1 = "≐̸", B1 = "​", $1 = "​", z1 = "​", G1 = "​", U1 = "≢", H1 = "⤨", V1 = "≂̸", W1 = "≫", Z1 = "≪", J1 = `
`, Q1 = "∄", Y1 = "∄", X1 = "𝔑", K1 = "𝔫", ex = "≧̸", nx = "≱", tx = "≱", ox = "≧̸", sx = "⩾̸", rx = "⩾̸", cx = "⋙̸", ax = "≵", ix = "≫⃒", lx = "≯", ux = "≯", px = "≫̸", hx = "↮", dx = "⇎", fx = "⫲", mx = "∋", gx = "⋼", _x = "⋺", bx = "∋", kx = "Њ", yx = "њ", wx = "↚", vx = "⇍", xx = "‥", Ax = "≦̸", Sx = "≰", Lx = "↚", Cx = "⇍", Ex = "↮", Tx = "⇎", Dx = "≰", qx = "≦̸", jx = "⩽̸", Rx = "⩽̸", Nx = "≮", Px = "⋘̸", Ix = "≴", Ox = "≪⃒", Fx = "≮", Mx = "⋪", Bx = "⋬", $x = "≪̸", zx = "∤", Gx = "⁠", Ux = " ", Hx = "𝕟", Vx = "ℕ", Wx = "⫬", Zx = "¬", Jx = "≢", Qx = "≭", Yx = "∦", Xx = "∉", Kx = "≠", eA = "≂̸", nA = "∄", tA = "≯", oA = "≱", sA = "≧̸", rA = "≫̸", cA = "≹", aA = "⩾̸", iA = "≵", lA = "≎̸", uA = "≏̸", pA = "∉", hA = "⋵̸", dA = "⋹̸", fA = "∉", mA = "⋷", gA = "⋶", _A = "⧏̸", bA = "⋪", kA = "⋬", yA = "≮", wA = "≰", vA = "≸", xA = "≪̸", AA = "⩽̸", SA = "≴", LA = "⪢̸", CA = "⪡̸", EA = "∌", TA = "∌", DA = "⋾", qA = "⋽", jA = "⊀", RA = "⪯̸", NA = "⋠", PA = "∌", IA = "⧐̸", OA = "⋫", FA = "⋭", MA = "⊏̸", BA = "⋢", $A = "⊐̸", zA = "⋣", GA = "⊂⃒", UA = "⊈", HA = "⊁", VA = "⪰̸", WA = "⋡", ZA = "≿̸", JA = "⊃⃒", QA = "⊉", YA = "≁", XA = "≄", KA = "≇", eS = "≉", nS = "∤", tS = "∦", oS = "∦", sS = "⫽⃥", rS = "∂̸", cS = "⨔", aS = "⊀", iS = "⋠", lS = "⊀", uS = "⪯̸", pS = "⪯̸", hS = "⤳̸", dS = "↛", fS = "⇏", mS = "↝̸", gS = "↛", _S = "⇏", bS = "⋫", kS = "⋭", yS = "⊁", wS = "⋡", vS = "⪰̸", xS = "𝒩", AS = "𝓃", SS = "∤", LS = "∦", CS = "≁", ES = "≄", TS = "≄", DS = "∤", qS = "∦", jS = "⋢", RS = "⋣", NS = "⊄", PS = "⫅̸", IS = "⊈", OS = "⊂⃒", FS = "⊈", MS = "⫅̸", BS = "⊁", $S = "⪰̸", zS = "⊅", GS = "⫆̸", US = "⊉", HS = "⊃⃒", VS = "⊉", WS = "⫆̸", ZS = "≹", JS = "Ñ", QS = "ñ", YS = "≸", XS = "⋪", KS = "⋬", eL = "⋫", nL = "⋭", tL = "Ν", oL = "ν", sL = "#", rL = "№", cL = " ", aL = "≍⃒", iL = "⊬", lL = "⊭", uL = "⊮", pL = "⊯", hL = "≥⃒", dL = ">⃒", fL = "⤄", mL = "⧞", gL = "⤂", _L = "≤⃒", bL = "<⃒", kL = "⊴⃒", yL = "⤃", wL = "⊵⃒", vL = "∼⃒", xL = "⤣", AL = "↖", SL = "⇖", LL = "↖", CL = "⤧", EL = "Ó", TL = "ó", DL = "⊛", qL = "Ô", jL = "ô", RL = "⊚", NL = "О", PL = "о", IL = "⊝", OL = "Ő", FL = "ő", ML = "⨸", BL = "⊙", $L = "⦼", zL = "Œ", GL = "œ", UL = "⦿", HL = "𝔒", VL = "𝔬", WL = "˛", ZL = "Ò", JL = "ò", QL = "⧁", YL = "⦵", XL = "Ω", KL = "∮", eC = "↺", nC = "⦾", tC = "⦻", oC = "‾", sC = "⧀", rC = "Ō", cC = "ō", aC = "Ω", iC = "ω", lC = "Ο", uC = "ο", pC = "⦶", hC = "⊖", dC = "𝕆", fC = "𝕠", mC = "⦷", gC = "“", _C = "‘", bC = "⦹", kC = "⊕", yC = "↻", wC = "⩔", vC = "∨", xC = "⩝", AC = "ℴ", SC = "ℴ", LC = "ª", CC = "º", EC = "⊶", TC = "⩖", DC = "⩗", qC = "⩛", jC = "Ⓢ", RC = "𝒪", NC = "ℴ", PC = "Ø", IC = "ø", OC = "⊘", FC = "Õ", MC = "õ", BC = "⨶", $C = "⨷", zC = "⊗", GC = "Ö", UC = "ö", HC = "⌽", VC = "‾", WC = "⏞", ZC = "⎴", JC = "⏜", QC = "¶", YC = "∥", XC = "∥", KC = "⫳", eE = "⫽", nE = "∂", tE = "∂", oE = "П", sE = "п", rE = "%", cE = ".", aE = "‰", iE = "⊥", lE = "‱", uE = "𝔓", pE = "𝔭", hE = "Φ", dE = "φ", fE = "ϕ", mE = "ℳ", gE = "☎", _E = "Π", bE = "π", kE = "⋔", yE = "ϖ", wE = "ℏ", vE = "ℎ", xE = "ℏ", AE = "⨣", SE = "⊞", LE = "⨢", CE = "+", EE = "∔", TE = "⨥", DE = "⩲", qE = "±", jE = "±", RE = "⨦", NE = "⨧", PE = "±", IE = "ℌ", OE = "⨕", FE = "𝕡", ME = "ℙ", BE = "£", $E = "⪷", zE = "⪻", GE = "≺", UE = "≼", HE = "⪷", VE = "≺", WE = "≼", ZE = "≺", JE = "⪯", QE = "≼", YE = "≾", XE = "⪯", KE = "⪹", eT = "⪵", nT = "⋨", tT = "⪯", oT = "⪳", sT = "≾", rT = "′", cT = "″", aT = "ℙ", iT = "⪹", lT = "⪵", uT = "⋨", pT = "∏", hT = "∏", dT = "⌮", fT = "⌒", mT = "⌓", gT = "∝", _T = "∝", bT = "∷", kT = "∝", yT = "≾", wT = "⊰", vT = "𝒫", xT = "𝓅", AT = "Ψ", ST = "ψ", LT = " ", CT = "𝔔", ET = "𝔮", TT = "⨌", DT = "𝕢", qT = "ℚ", jT = "⁗", RT = "𝒬", NT = "𝓆", PT = "ℍ", IT = "⨖", OT = "?", FT = "≟", MT = '"', BT = '"', $T = "⇛", zT = "∽̱", GT = "Ŕ", UT = "ŕ", HT = "√", VT = "⦳", WT = "⟩", ZT = "⟫", JT = "⦒", QT = "⦥", YT = "⟩", XT = "»", KT = "⥵", eD = "⇥", nD = "⤠", tD = "⤳", oD = "→", sD = "↠", rD = "⇒", cD = "⤞", aD = "↪", iD = "↬", lD = "⥅", uD = "⥴", pD = "⤖", hD = "↣", dD = "↝", fD = "⤚", mD = "⤜", gD = "∶", _D = "ℚ", bD = "⤍", kD = "⤏", yD = "⤐", wD = "❳", vD = "}", xD = "]", AD = "⦌", SD = "⦎", LD = "⦐", CD = "Ř", ED = "ř", TD = "Ŗ", DD = "ŗ", qD = "⌉", jD = "}", RD = "Р", ND = "р", PD = "⤷", ID = "⥩", OD = "”", FD = "”", MD = "↳", BD = "ℜ", $D = "ℛ", zD = "ℜ", GD = "ℝ", UD = "ℜ", HD = "▭", VD = "®", WD = "®", ZD = "∋", JD = "⇋", QD = "⥯", YD = "⥽", XD = "⌋", KD = "𝔯", eq = "ℜ", nq = "⥤", tq = "⇁", oq = "⇀", sq = "⥬", rq = "Ρ", cq = "ρ", aq = "ϱ", iq = "⟩", lq = "⇥", uq = "→", pq = "→", hq = "⇒", dq = "⇄", fq = "↣", mq = "⌉", gq = "⟧", _q = "⥝", bq = "⥕", kq = "⇂", yq = "⌋", wq = "⇁", vq = "⇀", xq = "⇄", Aq = "⇌", Sq = "⇉", Lq = "↝", Cq = "↦", Eq = "⊢", Tq = "⥛", Dq = "⋌", qq = "⧐", jq = "⊳", Rq = "⊵", Nq = "⥏", Pq = "⥜", Iq = "⥔", Oq = "↾", Fq = "⥓", Mq = "⇀", Bq = "˚", $q = "≓", zq = "⇄", Gq = "⇌", Uq = "‏", Hq = "⎱", Vq = "⎱", Wq = "⫮", Zq = "⟭", Jq = "⇾", Qq = "⟧", Yq = "⦆", Xq = "𝕣", Kq = "ℝ", ej = "⨮", nj = "⨵", tj = "⥰", oj = ")", sj = "⦔", rj = "⨒", cj = "⇉", aj = "⇛", ij = "›", lj = "𝓇", uj = "ℛ", pj = "↱", hj = "↱", dj = "]", fj = "’", mj = "’", gj = "⋌", _j = "⋊", bj = "▹", kj = "⊵", yj = "▸", wj = "⧎", vj = "⧴", xj = "⥨", Aj = "℞", Sj = "Ś", Lj = "ś", Cj = "‚", Ej = "⪸", Tj = "Š", Dj = "š", qj = "⪼", jj = "≻", Rj = "≽", Nj = "⪰", Pj = "⪴", Ij = "Ş", Oj = "ş", Fj = "Ŝ", Mj = "ŝ", Bj = "⪺", $j = "⪶", zj = "⋩", Gj = "⨓", Uj = "≿", Hj = "С", Vj = "с", Wj = "⊡", Zj = "⋅", Jj = "⩦", Qj = "⤥", Yj = "↘", Xj = "⇘", Kj = "↘", e2 = "§", n2 = ";", t2 = "⤩", o2 = "∖", s2 = "∖", r2 = "✶", c2 = "𝔖", a2 = "𝔰", i2 = "⌢", l2 = "♯", u2 = "Щ", p2 = "щ", h2 = "Ш", d2 = "ш", f2 = "↓", m2 = "←", g2 = "∣", _2 = "∥", b2 = "→", k2 = "↑", y2 = "­", w2 = "Σ", v2 = "σ", x2 = "ς", A2 = "ς", S2 = "∼", L2 = "⩪", C2 = "≃", E2 = "≃", T2 = "⪞", D2 = "⪠", q2 = "⪝", j2 = "⪟", R2 = "≆", N2 = "⨤", P2 = "⥲", I2 = "←", O2 = "∘", F2 = "∖", M2 = "⨳", B2 = "⧤", $2 = "∣", z2 = "⌣", G2 = "⪪", U2 = "⪬", H2 = "⪬︀", V2 = "Ь", W2 = "ь", Z2 = "⌿", J2 = "⧄", Q2 = "/", Y2 = "𝕊", X2 = "𝕤", K2 = "♠", eR = "♠", nR = "∥", tR = "⊓", oR = "⊓︀", sR = "⊔", rR = "⊔︀", cR = "√", aR = "⊏", iR = "⊑", lR = "⊏", uR = "⊑", pR = "⊐", hR = "⊒", dR = "⊐", fR = "⊒", mR = "□", gR = "□", _R = "⊓", bR = "⊏", kR = "⊑", yR = "⊐", wR = "⊒", vR = "⊔", xR = "▪", AR = "□", SR = "▪", LR = "→", CR = "𝒮", ER = "𝓈", TR = "∖", DR = "⌣", qR = "⋆", jR = "⋆", RR = "☆", NR = "★", PR = "ϵ", IR = "ϕ", OR = "¯", FR = "⊂", MR = "⋐", BR = "⪽", $R = "⫅", zR = "⊆", GR = "⫃", UR = "⫁", HR = "⫋", VR = "⊊", WR = "⪿", ZR = "⥹", JR = "⊂", QR = "⋐", YR = "⊆", XR = "⫅", KR = "⊆", eN = "⊊", nN = "⫋", tN = "⫇", oN = "⫕", sN = "⫓", rN = "⪸", cN = "≻", aN = "≽", iN = "≻", lN = "⪰", uN = "≽", pN = "≿", hN = "⪰", dN = "⪺", fN = "⪶", mN = "⋩", gN = "≿", _N = "∋", bN = "∑", kN = "∑", yN = "♪", wN = "¹", vN = "²", xN = "³", AN = "⊃", SN = "⋑", LN = "⪾", CN = "⫘", EN = "⫆", TN = "⊇", DN = "⫄", qN = "⊃", jN = "⊇", RN = "⟉", NN = "⫗", PN = "⥻", IN = "⫂", ON = "⫌", FN = "⊋", MN = "⫀", BN = "⊃", $N = "⋑", zN = "⊇", GN = "⫆", UN = "⊋", HN = "⫌", VN = "⫈", WN = "⫔", ZN = "⫖", JN = "⤦", QN = "↙", YN = "⇙", XN = "↙", KN = "⤪", eP = "ß", nP = "	", tP = "⌖", oP = "Τ", sP = "τ", rP = "⎴", cP = "Ť", aP = "ť", iP = "Ţ", lP = "ţ", uP = "Т", pP = "т", hP = "⃛", dP = "⌕", fP = "𝔗", mP = "𝔱", gP = "∴", _P = "∴", bP = "∴", kP = "Θ", yP = "θ", wP = "ϑ", vP = "ϑ", xP = "≈", AP = "∼", SP = "  ", LP = " ", CP = " ", EP = "≈", TP = "∼", DP = "Þ", qP = "þ", jP = "˜", RP = "∼", NP = "≃", PP = "≅", IP = "≈", OP = "⨱", FP = "⊠", MP = "×", BP = "⨰", $P = "∭", zP = "⤨", GP = "⌶", UP = "⫱", HP = "⊤", VP = "𝕋", WP = "𝕥", ZP = "⫚", JP = "⤩", QP = "‴", YP = "™", XP = "™", KP = "▵", eI = "▿", nI = "◃", tI = "⊴", oI = "≜", sI = "▹", rI = "⊵", cI = "◬", aI = "≜", iI = "⨺", lI = "⃛", uI = "⨹", pI = "⧍", hI = "⨻", dI = "⏢", fI = "𝒯", mI = "𝓉", gI = "Ц", _I = "ц", bI = "Ћ", kI = "ћ", yI = "Ŧ", wI = "ŧ", vI = "≬", xI = "↞", AI = "↠", SI = "Ú", LI = "ú", CI = "↑", EI = "↟", TI = "⇑", DI = "⥉", qI = "Ў", jI = "ў", RI = "Ŭ", NI = "ŭ", PI = "Û", II = "û", OI = "У", FI = "у", MI = "⇅", BI = "Ű", $I = "ű", zI = "⥮", GI = "⥾", UI = "𝔘", HI = "𝔲", VI = "Ù", WI = "ù", ZI = "⥣", JI = "↿", QI = "↾", YI = "▀", XI = "⌜", KI = "⌜", eO = "⌏", nO = "◸", tO = "Ū", oO = "ū", sO = "¨", rO = "_", cO = "⏟", aO = "⎵", iO = "⏝", lO = "⋃", uO = "⊎", pO = "Ų", hO = "ų", dO = "𝕌", fO = "𝕦", mO = "⤒", gO = "↑", _O = "↑", bO = "⇑", kO = "⇅", yO = "↕", wO = "↕", vO = "⇕", xO = "⥮", AO = "↿", SO = "↾", LO = "⊎", CO = "↖", EO = "↗", TO = "υ", DO = "ϒ", qO = "ϒ", jO = "Υ", RO = "υ", NO = "↥", PO = "⊥", IO = "⇈", OO = "⌝", FO = "⌝", MO = "⌎", BO = "Ů", $O = "ů", zO = "◹", GO = "𝒰", UO = "𝓊", HO = "⋰", VO = "Ũ", WO = "ũ", ZO = "▵", JO = "▴", QO = "⇈", YO = "Ü", XO = "ü", KO = "⦧", eF = "⦜", nF = "ϵ", tF = "ϰ", oF = "∅", sF = "ϕ", rF = "ϖ", cF = "∝", aF = "↕", iF = "⇕", lF = "ϱ", uF = "ς", pF = "⊊︀", hF = "⫋︀", dF = "⊋︀", fF = "⫌︀", mF = "ϑ", gF = "⊲", _F = "⊳", bF = "⫨", kF = "⫫", yF = "⫩", wF = "В", vF = "в", xF = "⊢", AF = "⊨", SF = "⊩", LF = "⊫", CF = "⫦", EF = "⊻", TF = "∨", DF = "⋁", qF = "≚", jF = "⋮", RF = "|", NF = "‖", PF = "|", IF = "‖", OF = "∣", FF = "|", MF = "❘", BF = "≀", $F = " ", zF = "𝔙", GF = "𝔳", UF = "⊲", HF = "⊂⃒", VF = "⊃⃒", WF = "𝕍", ZF = "𝕧", JF = "∝", QF = "⊳", YF = "𝒱", XF = "𝓋", KF = "⫋︀", e3 = "⊊︀", n3 = "⫌︀", t3 = "⊋︀", o3 = "⊪", s3 = "⦚", r3 = "Ŵ", c3 = "ŵ", a3 = "⩟", i3 = "∧", l3 = "⋀", u3 = "≙", p3 = "℘", h3 = "𝔚", d3 = "𝔴", f3 = "𝕎", m3 = "𝕨", g3 = "℘", _3 = "≀", b3 = "≀", k3 = "𝒲", y3 = "𝓌", w3 = "⋂", v3 = "◯", x3 = "⋃", A3 = "▽", S3 = "𝔛", L3 = "𝔵", C3 = "⟷", E3 = "⟺", T3 = "Ξ", D3 = "ξ", q3 = "⟵", j3 = "⟸", R3 = "⟼", N3 = "⋻", P3 = "⨀", I3 = "𝕏", O3 = "𝕩", F3 = "⨁", M3 = "⨂", B3 = "⟶", $3 = "⟹", z3 = "𝒳", G3 = "𝓍", U3 = "⨆", H3 = "⨄", V3 = "△", W3 = "⋁", Z3 = "⋀", J3 = "Ý", Q3 = "ý", Y3 = "Я", X3 = "я", K3 = "Ŷ", eM = "ŷ", nM = "Ы", tM = "ы", oM = "¥", sM = "𝔜", rM = "𝔶", cM = "Ї", aM = "ї", iM = "𝕐", lM = "𝕪", uM = "𝒴", pM = "𝓎", hM = "Ю", dM = "ю", fM = "ÿ", mM = "Ÿ", gM = "Ź", _M = "ź", bM = "Ž", kM = "ž", yM = "З", wM = "з", vM = "Ż", xM = "ż", AM = "ℨ", SM = "​", LM = "Ζ", CM = "ζ", EM = "𝔷", TM = "ℨ", DM = "Ж", qM = "ж", jM = "⇝", RM = "𝕫", NM = "ℤ", PM = "𝒵", IM = "𝓏", OM = "‍", FM = "‌", MM = {
  Aacute: ws,
  aacute: vs,
  Abreve: xs,
  abreve: As,
  ac: Ss,
  acd: Ls,
  acE: Cs,
  Acirc: Es,
  acirc: Ts,
  acute: Ds,
  Acy: qs,
  acy: js,
  AElig: Rs,
  aelig: Ns,
  af: Ps,
  Afr: Is,
  afr: Os,
  Agrave: Fs,
  agrave: Ms,
  alefsym: Bs,
  aleph: $s,
  Alpha: zs,
  alpha: Gs,
  Amacr: Us,
  amacr: Hs,
  amalg: Vs,
  amp: Ws,
  AMP: Zs,
  andand: Js,
  And: Qs,
  and: Ys,
  andd: Xs,
  andslope: Ks,
  andv: er,
  ang: nr,
  ange: tr,
  angle: or,
  angmsdaa: sr,
  angmsdab: rr,
  angmsdac: cr,
  angmsdad: ar,
  angmsdae: ir,
  angmsdaf: lr,
  angmsdag: ur,
  angmsdah: pr,
  angmsd: hr,
  angrt: dr,
  angrtvb: fr,
  angrtvbd: mr,
  angsph: gr,
  angst: _r,
  angzarr: br,
  Aogon: kr,
  aogon: yr,
  Aopf: wr,
  aopf: vr,
  apacir: xr,
  ap: Ar,
  apE: Sr,
  ape: Lr,
  apid: Cr,
  apos: Er,
  ApplyFunction: Tr,
  approx: Dr,
  approxeq: qr,
  Aring: jr,
  aring: Rr,
  Ascr: Nr,
  ascr: Pr,
  Assign: Ir,
  ast: Or,
  asymp: Fr,
  asympeq: Mr,
  Atilde: Br,
  atilde: $r,
  Auml: zr,
  auml: Gr,
  awconint: Ur,
  awint: Hr,
  backcong: Vr,
  backepsilon: Wr,
  backprime: Zr,
  backsim: Jr,
  backsimeq: Qr,
  Backslash: Yr,
  Barv: Xr,
  barvee: Kr,
  barwed: ec,
  Barwed: nc,
  barwedge: tc,
  bbrk: oc,
  bbrktbrk: sc,
  bcong: rc,
  Bcy: cc,
  bcy: ac,
  bdquo: ic,
  becaus: lc,
  because: uc,
  Because: pc,
  bemptyv: hc,
  bepsi: dc,
  bernou: fc,
  Bernoullis: mc,
  Beta: gc,
  beta: _c,
  beth: bc,
  between: kc,
  Bfr: yc,
  bfr: wc,
  bigcap: vc,
  bigcirc: xc,
  bigcup: Ac,
  bigodot: Sc,
  bigoplus: Lc,
  bigotimes: Cc,
  bigsqcup: Ec,
  bigstar: Tc,
  bigtriangledown: Dc,
  bigtriangleup: qc,
  biguplus: jc,
  bigvee: Rc,
  bigwedge: Nc,
  bkarow: Pc,
  blacklozenge: Ic,
  blacksquare: Oc,
  blacktriangle: Fc,
  blacktriangledown: Mc,
  blacktriangleleft: Bc,
  blacktriangleright: $c,
  blank: zc,
  blk12: Gc,
  blk14: Uc,
  blk34: Hc,
  block: Vc,
  bne: Wc,
  bnequiv: Zc,
  bNot: Jc,
  bnot: Qc,
  Bopf: Yc,
  bopf: Xc,
  bot: Kc,
  bottom: ea,
  bowtie: na,
  boxbox: ta,
  boxdl: oa,
  boxdL: sa,
  boxDl: ra,
  boxDL: ca,
  boxdr: aa,
  boxdR: ia,
  boxDr: la,
  boxDR: ua,
  boxh: pa,
  boxH: ha,
  boxhd: da,
  boxHd: fa,
  boxhD: ma,
  boxHD: ga,
  boxhu: _a,
  boxHu: ba,
  boxhU: ka,
  boxHU: ya,
  boxminus: wa,
  boxplus: va,
  boxtimes: xa,
  boxul: Aa,
  boxuL: Sa,
  boxUl: La,
  boxUL: Ca,
  boxur: Ea,
  boxuR: Ta,
  boxUr: Da,
  boxUR: qa,
  boxv: ja,
  boxV: Ra,
  boxvh: Na,
  boxvH: Pa,
  boxVh: Ia,
  boxVH: Oa,
  boxvl: Fa,
  boxvL: Ma,
  boxVl: Ba,
  boxVL: $a,
  boxvr: za,
  boxvR: Ga,
  boxVr: Ua,
  boxVR: Ha,
  bprime: Va,
  breve: Wa,
  Breve: Za,
  brvbar: Ja,
  bscr: Qa,
  Bscr: Ya,
  bsemi: Xa,
  bsim: Ka,
  bsime: ei,
  bsolb: ni,
  bsol: ti,
  bsolhsub: oi,
  bull: si,
  bullet: ri,
  bump: ci,
  bumpE: ai,
  bumpe: ii,
  Bumpeq: li,
  bumpeq: ui,
  Cacute: pi,
  cacute: hi,
  capand: di,
  capbrcup: fi,
  capcap: mi,
  cap: gi,
  Cap: _i,
  capcup: bi,
  capdot: ki,
  CapitalDifferentialD: yi,
  caps: wi,
  caret: vi,
  caron: xi,
  Cayleys: Ai,
  ccaps: Si,
  Ccaron: Li,
  ccaron: Ci,
  Ccedil: Ei,
  ccedil: Ti,
  Ccirc: Di,
  ccirc: qi,
  Cconint: ji,
  ccups: Ri,
  ccupssm: Ni,
  Cdot: Pi,
  cdot: Ii,
  cedil: Oi,
  Cedilla: Fi,
  cemptyv: Mi,
  cent: Bi,
  centerdot: $i,
  CenterDot: zi,
  cfr: Gi,
  Cfr: Ui,
  CHcy: Hi,
  chcy: Vi,
  check: Wi,
  checkmark: Zi,
  Chi: Ji,
  chi: Qi,
  circ: Yi,
  circeq: Xi,
  circlearrowleft: Ki,
  circlearrowright: el,
  circledast: nl,
  circledcirc: tl,
  circleddash: ol,
  CircleDot: sl,
  circledR: rl,
  circledS: cl,
  CircleMinus: al,
  CirclePlus: il,
  CircleTimes: ll,
  cir: ul,
  cirE: pl,
  cire: hl,
  cirfnint: dl,
  cirmid: fl,
  cirscir: ml,
  ClockwiseContourIntegral: gl,
  CloseCurlyDoubleQuote: _l,
  CloseCurlyQuote: bl,
  clubs: kl,
  clubsuit: yl,
  colon: wl,
  Colon: vl,
  Colone: xl,
  colone: Al,
  coloneq: Sl,
  comma: Ll,
  commat: Cl,
  comp: El,
  compfn: Tl,
  complement: Dl,
  complexes: ql,
  cong: jl,
  congdot: Rl,
  Congruent: Nl,
  conint: Pl,
  Conint: Il,
  ContourIntegral: Ol,
  copf: Fl,
  Copf: Ml,
  coprod: Bl,
  Coproduct: $l,
  copy: zl,
  COPY: Gl,
  copysr: Ul,
  CounterClockwiseContourIntegral: Hl,
  crarr: Vl,
  cross: Wl,
  Cross: Zl,
  Cscr: Jl,
  cscr: Ql,
  csub: Yl,
  csube: Xl,
  csup: Kl,
  csupe: eu,
  ctdot: nu,
  cudarrl: tu,
  cudarrr: ou,
  cuepr: su,
  cuesc: ru,
  cularr: cu,
  cularrp: au,
  cupbrcap: iu,
  cupcap: lu,
  CupCap: uu,
  cup: pu,
  Cup: hu,
  cupcup: du,
  cupdot: fu,
  cupor: mu,
  cups: gu,
  curarr: _u,
  curarrm: bu,
  curlyeqprec: ku,
  curlyeqsucc: yu,
  curlyvee: wu,
  curlywedge: vu,
  curren: xu,
  curvearrowleft: Au,
  curvearrowright: Su,
  cuvee: Lu,
  cuwed: Cu,
  cwconint: Eu,
  cwint: Tu,
  cylcty: Du,
  dagger: qu,
  Dagger: ju,
  daleth: Ru,
  darr: Nu,
  Darr: Pu,
  dArr: Iu,
  dash: Ou,
  Dashv: Fu,
  dashv: Mu,
  dbkarow: Bu,
  dblac: $u,
  Dcaron: zu,
  dcaron: Gu,
  Dcy: Uu,
  dcy: Hu,
  ddagger: Vu,
  ddarr: Wu,
  DD: Zu,
  dd: Ju,
  DDotrahd: Qu,
  ddotseq: Yu,
  deg: Xu,
  Del: Ku,
  Delta: ep,
  delta: np,
  demptyv: tp,
  dfisht: op,
  Dfr: sp,
  dfr: rp,
  dHar: cp,
  dharl: ap,
  dharr: ip,
  DiacriticalAcute: lp,
  DiacriticalDot: up,
  DiacriticalDoubleAcute: pp,
  DiacriticalGrave: hp,
  DiacriticalTilde: dp,
  diam: fp,
  diamond: mp,
  Diamond: gp,
  diamondsuit: _p,
  diams: bp,
  die: kp,
  DifferentialD: yp,
  digamma: wp,
  disin: vp,
  div: xp,
  divide: Ap,
  divideontimes: Sp,
  divonx: Lp,
  DJcy: Cp,
  djcy: Ep,
  dlcorn: Tp,
  dlcrop: Dp,
  dollar: qp,
  Dopf: jp,
  dopf: Rp,
  Dot: Np,
  dot: Pp,
  DotDot: Ip,
  doteq: Op,
  doteqdot: Fp,
  DotEqual: Mp,
  dotminus: Bp,
  dotplus: $p,
  dotsquare: zp,
  doublebarwedge: Gp,
  DoubleContourIntegral: Up,
  DoubleDot: Hp,
  DoubleDownArrow: Vp,
  DoubleLeftArrow: Wp,
  DoubleLeftRightArrow: Zp,
  DoubleLeftTee: Jp,
  DoubleLongLeftArrow: Qp,
  DoubleLongLeftRightArrow: Yp,
  DoubleLongRightArrow: Xp,
  DoubleRightArrow: Kp,
  DoubleRightTee: eh,
  DoubleUpArrow: nh,
  DoubleUpDownArrow: th,
  DoubleVerticalBar: oh,
  DownArrowBar: sh,
  downarrow: rh,
  DownArrow: ch,
  Downarrow: ah,
  DownArrowUpArrow: ih,
  DownBreve: lh,
  downdownarrows: uh,
  downharpoonleft: ph,
  downharpoonright: hh,
  DownLeftRightVector: dh,
  DownLeftTeeVector: fh,
  DownLeftVectorBar: mh,
  DownLeftVector: gh,
  DownRightTeeVector: _h,
  DownRightVectorBar: bh,
  DownRightVector: kh,
  DownTeeArrow: yh,
  DownTee: wh,
  drbkarow: vh,
  drcorn: xh,
  drcrop: Ah,
  Dscr: Sh,
  dscr: Lh,
  DScy: Ch,
  dscy: Eh,
  dsol: Th,
  Dstrok: Dh,
  dstrok: qh,
  dtdot: jh,
  dtri: Rh,
  dtrif: Nh,
  duarr: Ph,
  duhar: Ih,
  dwangle: Oh,
  DZcy: Fh,
  dzcy: Mh,
  dzigrarr: Bh,
  Eacute: $h,
  eacute: zh,
  easter: Gh,
  Ecaron: Uh,
  ecaron: Hh,
  Ecirc: Vh,
  ecirc: Wh,
  ecir: Zh,
  ecolon: Jh,
  Ecy: Qh,
  ecy: Yh,
  eDDot: Xh,
  Edot: Kh,
  edot: ed,
  eDot: nd,
  ee: td,
  efDot: od,
  Efr: sd,
  efr: rd,
  eg: cd,
  Egrave: ad,
  egrave: id,
  egs: ld,
  egsdot: ud,
  el: pd,
  Element: hd,
  elinters: dd,
  ell: fd,
  els: md,
  elsdot: gd,
  Emacr: _d,
  emacr: bd,
  empty: kd,
  emptyset: yd,
  EmptySmallSquare: wd,
  emptyv: vd,
  EmptyVerySmallSquare: xd,
  emsp13: Ad,
  emsp14: Sd,
  emsp: Ld,
  ENG: Cd,
  eng: Ed,
  ensp: Td,
  Eogon: Dd,
  eogon: qd,
  Eopf: jd,
  eopf: Rd,
  epar: Nd,
  eparsl: Pd,
  eplus: Id,
  epsi: Od,
  Epsilon: Fd,
  epsilon: Md,
  epsiv: Bd,
  eqcirc: $d,
  eqcolon: zd,
  eqsim: Gd,
  eqslantgtr: Ud,
  eqslantless: Hd,
  Equal: Vd,
  equals: Wd,
  EqualTilde: Zd,
  equest: Jd,
  Equilibrium: Qd,
  equiv: Yd,
  equivDD: Xd,
  eqvparsl: Kd,
  erarr: ef,
  erDot: nf,
  escr: tf,
  Escr: of,
  esdot: sf,
  Esim: rf,
  esim: cf,
  Eta: af,
  eta: lf,
  ETH: uf,
  eth: pf,
  Euml: hf,
  euml: df,
  euro: ff,
  excl: mf,
  exist: gf,
  Exists: _f,
  expectation: bf,
  exponentiale: kf,
  ExponentialE: yf,
  fallingdotseq: wf,
  Fcy: vf,
  fcy: xf,
  female: Af,
  ffilig: Sf,
  fflig: Lf,
  ffllig: Cf,
  Ffr: Ef,
  ffr: Tf,
  filig: Df,
  FilledSmallSquare: qf,
  FilledVerySmallSquare: jf,
  fjlig: Rf,
  flat: Nf,
  fllig: Pf,
  fltns: If,
  fnof: Of,
  Fopf: Ff,
  fopf: Mf,
  forall: Bf,
  ForAll: $f,
  fork: zf,
  forkv: Gf,
  Fouriertrf: Uf,
  fpartint: Hf,
  frac12: Vf,
  frac13: Wf,
  frac14: Zf,
  frac15: Jf,
  frac16: Qf,
  frac18: Yf,
  frac23: Xf,
  frac25: Kf,
  frac34: em,
  frac35: nm,
  frac38: tm,
  frac45: om,
  frac56: sm,
  frac58: rm,
  frac78: cm,
  frasl: am,
  frown: im,
  fscr: lm,
  Fscr: um,
  gacute: pm,
  Gamma: hm,
  gamma: dm,
  Gammad: fm,
  gammad: mm,
  gap: gm,
  Gbreve: _m,
  gbreve: bm,
  Gcedil: km,
  Gcirc: ym,
  gcirc: wm,
  Gcy: vm,
  gcy: xm,
  Gdot: Am,
  gdot: Sm,
  ge: Lm,
  gE: Cm,
  gEl: Em,
  gel: Tm,
  geq: Dm,
  geqq: qm,
  geqslant: jm,
  gescc: Rm,
  ges: Nm,
  gesdot: Pm,
  gesdoto: Im,
  gesdotol: Om,
  gesl: Fm,
  gesles: Mm,
  Gfr: Bm,
  gfr: $m,
  gg: zm,
  Gg: Gm,
  ggg: Um,
  gimel: Hm,
  GJcy: Vm,
  gjcy: Wm,
  gla: Zm,
  gl: Jm,
  glE: Qm,
  glj: Ym,
  gnap: Xm,
  gnapprox: Km,
  gne: eg,
  gnE: ng,
  gneq: tg,
  gneqq: og,
  gnsim: sg,
  Gopf: rg,
  gopf: cg,
  grave: ag,
  GreaterEqual: ig,
  GreaterEqualLess: lg,
  GreaterFullEqual: ug,
  GreaterGreater: pg,
  GreaterLess: hg,
  GreaterSlantEqual: dg,
  GreaterTilde: fg,
  Gscr: mg,
  gscr: gg,
  gsim: _g,
  gsime: bg,
  gsiml: kg,
  gtcc: yg,
  gtcir: wg,
  gt: vg,
  GT: xg,
  Gt: Ag,
  gtdot: Sg,
  gtlPar: Lg,
  gtquest: Cg,
  gtrapprox: Eg,
  gtrarr: Tg,
  gtrdot: Dg,
  gtreqless: qg,
  gtreqqless: jg,
  gtrless: Rg,
  gtrsim: Ng,
  gvertneqq: Pg,
  gvnE: Ig,
  Hacek: Og,
  hairsp: Fg,
  half: Mg,
  hamilt: Bg,
  HARDcy: $g,
  hardcy: zg,
  harrcir: Gg,
  harr: Ug,
  hArr: Hg,
  harrw: Vg,
  Hat: Wg,
  hbar: Zg,
  Hcirc: Jg,
  hcirc: Qg,
  hearts: Yg,
  heartsuit: Xg,
  hellip: Kg,
  hercon: e_,
  hfr: n_,
  Hfr: t_,
  HilbertSpace: o_,
  hksearow: s_,
  hkswarow: r_,
  hoarr: c_,
  homtht: a_,
  hookleftarrow: i_,
  hookrightarrow: l_,
  hopf: u_,
  Hopf: p_,
  horbar: h_,
  HorizontalLine: d_,
  hscr: f_,
  Hscr: m_,
  hslash: g_,
  Hstrok: __,
  hstrok: b_,
  HumpDownHump: k_,
  HumpEqual: y_,
  hybull: w_,
  hyphen: v_,
  Iacute: x_,
  iacute: A_,
  ic: S_,
  Icirc: L_,
  icirc: C_,
  Icy: E_,
  icy: T_,
  Idot: D_,
  IEcy: q_,
  iecy: j_,
  iexcl: R_,
  iff: N_,
  ifr: P_,
  Ifr: I_,
  Igrave: O_,
  igrave: F_,
  ii: M_,
  iiiint: B_,
  iiint: $_,
  iinfin: z_,
  iiota: G_,
  IJlig: U_,
  ijlig: H_,
  Imacr: V_,
  imacr: W_,
  image: Z_,
  ImaginaryI: J_,
  imagline: Q_,
  imagpart: Y_,
  imath: X_,
  Im: K_,
  imof: eb,
  imped: nb,
  Implies: tb,
  incare: ob,
  in: "∈",
  infin: sb,
  infintie: rb,
  inodot: cb,
  intcal: ab,
  int: ib,
  Int: lb,
  integers: ub,
  Integral: pb,
  intercal: hb,
  Intersection: db,
  intlarhk: fb,
  intprod: mb,
  InvisibleComma: gb,
  InvisibleTimes: _b,
  IOcy: bb,
  iocy: kb,
  Iogon: yb,
  iogon: wb,
  Iopf: vb,
  iopf: xb,
  Iota: Ab,
  iota: Sb,
  iprod: Lb,
  iquest: Cb,
  iscr: Eb,
  Iscr: Tb,
  isin: Db,
  isindot: qb,
  isinE: jb,
  isins: Rb,
  isinsv: Nb,
  isinv: Pb,
  it: Ib,
  Itilde: Ob,
  itilde: Fb,
  Iukcy: Mb,
  iukcy: Bb,
  Iuml: $b,
  iuml: zb,
  Jcirc: Gb,
  jcirc: Ub,
  Jcy: Hb,
  jcy: Vb,
  Jfr: Wb,
  jfr: Zb,
  jmath: Jb,
  Jopf: Qb,
  jopf: Yb,
  Jscr: Xb,
  jscr: Kb,
  Jsercy: ek,
  jsercy: nk,
  Jukcy: tk,
  jukcy: ok,
  Kappa: sk,
  kappa: rk,
  kappav: ck,
  Kcedil: ak,
  kcedil: ik,
  Kcy: lk,
  kcy: uk,
  Kfr: pk,
  kfr: hk,
  kgreen: dk,
  KHcy: fk,
  khcy: mk,
  KJcy: gk,
  kjcy: _k,
  Kopf: bk,
  kopf: kk,
  Kscr: yk,
  kscr: wk,
  lAarr: vk,
  Lacute: xk,
  lacute: Ak,
  laemptyv: Sk,
  lagran: Lk,
  Lambda: Ck,
  lambda: Ek,
  lang: Tk,
  Lang: Dk,
  langd: qk,
  langle: jk,
  lap: Rk,
  Laplacetrf: Nk,
  laquo: Pk,
  larrb: Ik,
  larrbfs: Ok,
  larr: Fk,
  Larr: Mk,
  lArr: Bk,
  larrfs: $k,
  larrhk: zk,
  larrlp: Gk,
  larrpl: Uk,
  larrsim: Hk,
  larrtl: Vk,
  latail: Wk,
  lAtail: Zk,
  lat: Jk,
  late: Qk,
  lates: Yk,
  lbarr: Xk,
  lBarr: Kk,
  lbbrk: ey,
  lbrace: ny,
  lbrack: ty,
  lbrke: oy,
  lbrksld: sy,
  lbrkslu: ry,
  Lcaron: cy,
  lcaron: ay,
  Lcedil: iy,
  lcedil: ly,
  lceil: uy,
  lcub: py,
  Lcy: hy,
  lcy: dy,
  ldca: fy,
  ldquo: my,
  ldquor: gy,
  ldrdhar: _y,
  ldrushar: by,
  ldsh: ky,
  le: yy,
  lE: wy,
  LeftAngleBracket: vy,
  LeftArrowBar: xy,
  leftarrow: Ay,
  LeftArrow: Sy,
  Leftarrow: Ly,
  LeftArrowRightArrow: Cy,
  leftarrowtail: Ey,
  LeftCeiling: Ty,
  LeftDoubleBracket: Dy,
  LeftDownTeeVector: qy,
  LeftDownVectorBar: jy,
  LeftDownVector: Ry,
  LeftFloor: Ny,
  leftharpoondown: Py,
  leftharpoonup: Iy,
  leftleftarrows: Oy,
  leftrightarrow: Fy,
  LeftRightArrow: My,
  Leftrightarrow: By,
  leftrightarrows: $y,
  leftrightharpoons: zy,
  leftrightsquigarrow: Gy,
  LeftRightVector: Uy,
  LeftTeeArrow: Hy,
  LeftTee: Vy,
  LeftTeeVector: Wy,
  leftthreetimes: Zy,
  LeftTriangleBar: Jy,
  LeftTriangle: Qy,
  LeftTriangleEqual: Yy,
  LeftUpDownVector: Xy,
  LeftUpTeeVector: Ky,
  LeftUpVectorBar: ew,
  LeftUpVector: nw,
  LeftVectorBar: tw,
  LeftVector: ow,
  lEg: sw,
  leg: rw,
  leq: cw,
  leqq: aw,
  leqslant: iw,
  lescc: lw,
  les: uw,
  lesdot: pw,
  lesdoto: hw,
  lesdotor: dw,
  lesg: fw,
  lesges: mw,
  lessapprox: gw,
  lessdot: _w,
  lesseqgtr: bw,
  lesseqqgtr: kw,
  LessEqualGreater: yw,
  LessFullEqual: ww,
  LessGreater: vw,
  lessgtr: xw,
  LessLess: Aw,
  lesssim: Sw,
  LessSlantEqual: Lw,
  LessTilde: Cw,
  lfisht: Ew,
  lfloor: Tw,
  Lfr: Dw,
  lfr: qw,
  lg: jw,
  lgE: Rw,
  lHar: Nw,
  lhard: Pw,
  lharu: Iw,
  lharul: Ow,
  lhblk: Fw,
  LJcy: Mw,
  ljcy: Bw,
  llarr: $w,
  ll: zw,
  Ll: Gw,
  llcorner: Uw,
  Lleftarrow: Hw,
  llhard: Vw,
  lltri: Ww,
  Lmidot: Zw,
  lmidot: Jw,
  lmoustache: Qw,
  lmoust: Yw,
  lnap: Xw,
  lnapprox: Kw,
  lne: e0,
  lnE: n0,
  lneq: t0,
  lneqq: o0,
  lnsim: s0,
  loang: r0,
  loarr: c0,
  lobrk: a0,
  longleftarrow: i0,
  LongLeftArrow: l0,
  Longleftarrow: u0,
  longleftrightarrow: p0,
  LongLeftRightArrow: h0,
  Longleftrightarrow: d0,
  longmapsto: f0,
  longrightarrow: m0,
  LongRightArrow: g0,
  Longrightarrow: _0,
  looparrowleft: b0,
  looparrowright: k0,
  lopar: y0,
  Lopf: w0,
  lopf: v0,
  loplus: x0,
  lotimes: A0,
  lowast: S0,
  lowbar: L0,
  LowerLeftArrow: C0,
  LowerRightArrow: E0,
  loz: T0,
  lozenge: D0,
  lozf: q0,
  lpar: j0,
  lparlt: R0,
  lrarr: N0,
  lrcorner: P0,
  lrhar: I0,
  lrhard: O0,
  lrm: F0,
  lrtri: M0,
  lsaquo: B0,
  lscr: $0,
  Lscr: z0,
  lsh: G0,
  Lsh: U0,
  lsim: H0,
  lsime: V0,
  lsimg: W0,
  lsqb: Z0,
  lsquo: J0,
  lsquor: Q0,
  Lstrok: Y0,
  lstrok: X0,
  ltcc: K0,
  ltcir: ev,
  lt: nv,
  LT: tv,
  Lt: ov,
  ltdot: sv,
  lthree: rv,
  ltimes: cv,
  ltlarr: av,
  ltquest: iv,
  ltri: lv,
  ltrie: uv,
  ltrif: pv,
  ltrPar: hv,
  lurdshar: dv,
  luruhar: fv,
  lvertneqq: mv,
  lvnE: gv,
  macr: _v,
  male: bv,
  malt: kv,
  maltese: yv,
  Map: "⤅",
  map: wv,
  mapsto: vv,
  mapstodown: xv,
  mapstoleft: Av,
  mapstoup: Sv,
  marker: Lv,
  mcomma: Cv,
  Mcy: Ev,
  mcy: Tv,
  mdash: Dv,
  mDDot: qv,
  measuredangle: jv,
  MediumSpace: Rv,
  Mellintrf: Nv,
  Mfr: Pv,
  mfr: Iv,
  mho: Ov,
  micro: Fv,
  midast: Mv,
  midcir: Bv,
  mid: $v,
  middot: zv,
  minusb: Gv,
  minus: Uv,
  minusd: Hv,
  minusdu: Vv,
  MinusPlus: Wv,
  mlcp: Zv,
  mldr: Jv,
  mnplus: Qv,
  models: Yv,
  Mopf: Xv,
  mopf: Kv,
  mp: e1,
  mscr: n1,
  Mscr: t1,
  mstpos: o1,
  Mu: s1,
  mu: r1,
  multimap: c1,
  mumap: a1,
  nabla: i1,
  Nacute: l1,
  nacute: u1,
  nang: p1,
  nap: h1,
  napE: d1,
  napid: f1,
  napos: m1,
  napprox: g1,
  natural: _1,
  naturals: b1,
  natur: k1,
  nbsp: y1,
  nbump: w1,
  nbumpe: v1,
  ncap: x1,
  Ncaron: A1,
  ncaron: S1,
  Ncedil: L1,
  ncedil: C1,
  ncong: E1,
  ncongdot: T1,
  ncup: D1,
  Ncy: q1,
  ncy: j1,
  ndash: R1,
  nearhk: N1,
  nearr: P1,
  neArr: I1,
  nearrow: O1,
  ne: F1,
  nedot: M1,
  NegativeMediumSpace: B1,
  NegativeThickSpace: $1,
  NegativeThinSpace: z1,
  NegativeVeryThinSpace: G1,
  nequiv: U1,
  nesear: H1,
  nesim: V1,
  NestedGreaterGreater: W1,
  NestedLessLess: Z1,
  NewLine: J1,
  nexist: Q1,
  nexists: Y1,
  Nfr: X1,
  nfr: K1,
  ngE: ex,
  nge: nx,
  ngeq: tx,
  ngeqq: ox,
  ngeqslant: sx,
  nges: rx,
  nGg: cx,
  ngsim: ax,
  nGt: ix,
  ngt: lx,
  ngtr: ux,
  nGtv: px,
  nharr: hx,
  nhArr: dx,
  nhpar: fx,
  ni: mx,
  nis: gx,
  nisd: _x,
  niv: bx,
  NJcy: kx,
  njcy: yx,
  nlarr: wx,
  nlArr: vx,
  nldr: xx,
  nlE: Ax,
  nle: Sx,
  nleftarrow: Lx,
  nLeftarrow: Cx,
  nleftrightarrow: Ex,
  nLeftrightarrow: Tx,
  nleq: Dx,
  nleqq: qx,
  nleqslant: jx,
  nles: Rx,
  nless: Nx,
  nLl: Px,
  nlsim: Ix,
  nLt: Ox,
  nlt: Fx,
  nltri: Mx,
  nltrie: Bx,
  nLtv: $x,
  nmid: zx,
  NoBreak: Gx,
  NonBreakingSpace: Ux,
  nopf: Hx,
  Nopf: Vx,
  Not: Wx,
  not: Zx,
  NotCongruent: Jx,
  NotCupCap: Qx,
  NotDoubleVerticalBar: Yx,
  NotElement: Xx,
  NotEqual: Kx,
  NotEqualTilde: eA,
  NotExists: nA,
  NotGreater: tA,
  NotGreaterEqual: oA,
  NotGreaterFullEqual: sA,
  NotGreaterGreater: rA,
  NotGreaterLess: cA,
  NotGreaterSlantEqual: aA,
  NotGreaterTilde: iA,
  NotHumpDownHump: lA,
  NotHumpEqual: uA,
  notin: pA,
  notindot: hA,
  notinE: dA,
  notinva: fA,
  notinvb: mA,
  notinvc: gA,
  NotLeftTriangleBar: _A,
  NotLeftTriangle: bA,
  NotLeftTriangleEqual: kA,
  NotLess: yA,
  NotLessEqual: wA,
  NotLessGreater: vA,
  NotLessLess: xA,
  NotLessSlantEqual: AA,
  NotLessTilde: SA,
  NotNestedGreaterGreater: LA,
  NotNestedLessLess: CA,
  notni: EA,
  notniva: TA,
  notnivb: DA,
  notnivc: qA,
  NotPrecedes: jA,
  NotPrecedesEqual: RA,
  NotPrecedesSlantEqual: NA,
  NotReverseElement: PA,
  NotRightTriangleBar: IA,
  NotRightTriangle: OA,
  NotRightTriangleEqual: FA,
  NotSquareSubset: MA,
  NotSquareSubsetEqual: BA,
  NotSquareSuperset: $A,
  NotSquareSupersetEqual: zA,
  NotSubset: GA,
  NotSubsetEqual: UA,
  NotSucceeds: HA,
  NotSucceedsEqual: VA,
  NotSucceedsSlantEqual: WA,
  NotSucceedsTilde: ZA,
  NotSuperset: JA,
  NotSupersetEqual: QA,
  NotTilde: YA,
  NotTildeEqual: XA,
  NotTildeFullEqual: KA,
  NotTildeTilde: eS,
  NotVerticalBar: nS,
  nparallel: tS,
  npar: oS,
  nparsl: sS,
  npart: rS,
  npolint: cS,
  npr: aS,
  nprcue: iS,
  nprec: lS,
  npreceq: uS,
  npre: pS,
  nrarrc: hS,
  nrarr: dS,
  nrArr: fS,
  nrarrw: mS,
  nrightarrow: gS,
  nRightarrow: _S,
  nrtri: bS,
  nrtrie: kS,
  nsc: yS,
  nsccue: wS,
  nsce: vS,
  Nscr: xS,
  nscr: AS,
  nshortmid: SS,
  nshortparallel: LS,
  nsim: CS,
  nsime: ES,
  nsimeq: TS,
  nsmid: DS,
  nspar: qS,
  nsqsube: jS,
  nsqsupe: RS,
  nsub: NS,
  nsubE: PS,
  nsube: IS,
  nsubset: OS,
  nsubseteq: FS,
  nsubseteqq: MS,
  nsucc: BS,
  nsucceq: $S,
  nsup: zS,
  nsupE: GS,
  nsupe: US,
  nsupset: HS,
  nsupseteq: VS,
  nsupseteqq: WS,
  ntgl: ZS,
  Ntilde: JS,
  ntilde: QS,
  ntlg: YS,
  ntriangleleft: XS,
  ntrianglelefteq: KS,
  ntriangleright: eL,
  ntrianglerighteq: nL,
  Nu: tL,
  nu: oL,
  num: sL,
  numero: rL,
  numsp: cL,
  nvap: aL,
  nvdash: iL,
  nvDash: lL,
  nVdash: uL,
  nVDash: pL,
  nvge: hL,
  nvgt: dL,
  nvHarr: fL,
  nvinfin: mL,
  nvlArr: gL,
  nvle: _L,
  nvlt: bL,
  nvltrie: kL,
  nvrArr: yL,
  nvrtrie: wL,
  nvsim: vL,
  nwarhk: xL,
  nwarr: AL,
  nwArr: SL,
  nwarrow: LL,
  nwnear: CL,
  Oacute: EL,
  oacute: TL,
  oast: DL,
  Ocirc: qL,
  ocirc: jL,
  ocir: RL,
  Ocy: NL,
  ocy: PL,
  odash: IL,
  Odblac: OL,
  odblac: FL,
  odiv: ML,
  odot: BL,
  odsold: $L,
  OElig: zL,
  oelig: GL,
  ofcir: UL,
  Ofr: HL,
  ofr: VL,
  ogon: WL,
  Ograve: ZL,
  ograve: JL,
  ogt: QL,
  ohbar: YL,
  ohm: XL,
  oint: KL,
  olarr: eC,
  olcir: nC,
  olcross: tC,
  oline: oC,
  olt: sC,
  Omacr: rC,
  omacr: cC,
  Omega: aC,
  omega: iC,
  Omicron: lC,
  omicron: uC,
  omid: pC,
  ominus: hC,
  Oopf: dC,
  oopf: fC,
  opar: mC,
  OpenCurlyDoubleQuote: gC,
  OpenCurlyQuote: _C,
  operp: bC,
  oplus: kC,
  orarr: yC,
  Or: wC,
  or: vC,
  ord: xC,
  order: AC,
  orderof: SC,
  ordf: LC,
  ordm: CC,
  origof: EC,
  oror: TC,
  orslope: DC,
  orv: qC,
  oS: jC,
  Oscr: RC,
  oscr: NC,
  Oslash: PC,
  oslash: IC,
  osol: OC,
  Otilde: FC,
  otilde: MC,
  otimesas: BC,
  Otimes: $C,
  otimes: zC,
  Ouml: GC,
  ouml: UC,
  ovbar: HC,
  OverBar: VC,
  OverBrace: WC,
  OverBracket: ZC,
  OverParenthesis: JC,
  para: QC,
  parallel: YC,
  par: XC,
  parsim: KC,
  parsl: eE,
  part: nE,
  PartialD: tE,
  Pcy: oE,
  pcy: sE,
  percnt: rE,
  period: cE,
  permil: aE,
  perp: iE,
  pertenk: lE,
  Pfr: uE,
  pfr: pE,
  Phi: hE,
  phi: dE,
  phiv: fE,
  phmmat: mE,
  phone: gE,
  Pi: _E,
  pi: bE,
  pitchfork: kE,
  piv: yE,
  planck: wE,
  planckh: vE,
  plankv: xE,
  plusacir: AE,
  plusb: SE,
  pluscir: LE,
  plus: CE,
  plusdo: EE,
  plusdu: TE,
  pluse: DE,
  PlusMinus: qE,
  plusmn: jE,
  plussim: RE,
  plustwo: NE,
  pm: PE,
  Poincareplane: IE,
  pointint: OE,
  popf: FE,
  Popf: ME,
  pound: BE,
  prap: $E,
  Pr: zE,
  pr: GE,
  prcue: UE,
  precapprox: HE,
  prec: VE,
  preccurlyeq: WE,
  Precedes: ZE,
  PrecedesEqual: JE,
  PrecedesSlantEqual: QE,
  PrecedesTilde: YE,
  preceq: XE,
  precnapprox: KE,
  precneqq: eT,
  precnsim: nT,
  pre: tT,
  prE: oT,
  precsim: sT,
  prime: rT,
  Prime: cT,
  primes: aT,
  prnap: iT,
  prnE: lT,
  prnsim: uT,
  prod: pT,
  Product: hT,
  profalar: dT,
  profline: fT,
  profsurf: mT,
  prop: gT,
  Proportional: _T,
  Proportion: bT,
  propto: kT,
  prsim: yT,
  prurel: wT,
  Pscr: vT,
  pscr: xT,
  Psi: AT,
  psi: ST,
  puncsp: LT,
  Qfr: CT,
  qfr: ET,
  qint: TT,
  qopf: DT,
  Qopf: qT,
  qprime: jT,
  Qscr: RT,
  qscr: NT,
  quaternions: PT,
  quatint: IT,
  quest: OT,
  questeq: FT,
  quot: MT,
  QUOT: BT,
  rAarr: $T,
  race: zT,
  Racute: GT,
  racute: UT,
  radic: HT,
  raemptyv: VT,
  rang: WT,
  Rang: ZT,
  rangd: JT,
  range: QT,
  rangle: YT,
  raquo: XT,
  rarrap: KT,
  rarrb: eD,
  rarrbfs: nD,
  rarrc: tD,
  rarr: oD,
  Rarr: sD,
  rArr: rD,
  rarrfs: cD,
  rarrhk: aD,
  rarrlp: iD,
  rarrpl: lD,
  rarrsim: uD,
  Rarrtl: pD,
  rarrtl: hD,
  rarrw: dD,
  ratail: fD,
  rAtail: mD,
  ratio: gD,
  rationals: _D,
  rbarr: bD,
  rBarr: kD,
  RBarr: yD,
  rbbrk: wD,
  rbrace: vD,
  rbrack: xD,
  rbrke: AD,
  rbrksld: SD,
  rbrkslu: LD,
  Rcaron: CD,
  rcaron: ED,
  Rcedil: TD,
  rcedil: DD,
  rceil: qD,
  rcub: jD,
  Rcy: RD,
  rcy: ND,
  rdca: PD,
  rdldhar: ID,
  rdquo: OD,
  rdquor: FD,
  rdsh: MD,
  real: BD,
  realine: $D,
  realpart: zD,
  reals: GD,
  Re: UD,
  rect: HD,
  reg: VD,
  REG: WD,
  ReverseElement: ZD,
  ReverseEquilibrium: JD,
  ReverseUpEquilibrium: QD,
  rfisht: YD,
  rfloor: XD,
  rfr: KD,
  Rfr: eq,
  rHar: nq,
  rhard: tq,
  rharu: oq,
  rharul: sq,
  Rho: rq,
  rho: cq,
  rhov: aq,
  RightAngleBracket: iq,
  RightArrowBar: lq,
  rightarrow: uq,
  RightArrow: pq,
  Rightarrow: hq,
  RightArrowLeftArrow: dq,
  rightarrowtail: fq,
  RightCeiling: mq,
  RightDoubleBracket: gq,
  RightDownTeeVector: _q,
  RightDownVectorBar: bq,
  RightDownVector: kq,
  RightFloor: yq,
  rightharpoondown: wq,
  rightharpoonup: vq,
  rightleftarrows: xq,
  rightleftharpoons: Aq,
  rightrightarrows: Sq,
  rightsquigarrow: Lq,
  RightTeeArrow: Cq,
  RightTee: Eq,
  RightTeeVector: Tq,
  rightthreetimes: Dq,
  RightTriangleBar: qq,
  RightTriangle: jq,
  RightTriangleEqual: Rq,
  RightUpDownVector: Nq,
  RightUpTeeVector: Pq,
  RightUpVectorBar: Iq,
  RightUpVector: Oq,
  RightVectorBar: Fq,
  RightVector: Mq,
  ring: Bq,
  risingdotseq: $q,
  rlarr: zq,
  rlhar: Gq,
  rlm: Uq,
  rmoustache: Hq,
  rmoust: Vq,
  rnmid: Wq,
  roang: Zq,
  roarr: Jq,
  robrk: Qq,
  ropar: Yq,
  ropf: Xq,
  Ropf: Kq,
  roplus: ej,
  rotimes: nj,
  RoundImplies: tj,
  rpar: oj,
  rpargt: sj,
  rppolint: rj,
  rrarr: cj,
  Rrightarrow: aj,
  rsaquo: ij,
  rscr: lj,
  Rscr: uj,
  rsh: pj,
  Rsh: hj,
  rsqb: dj,
  rsquo: fj,
  rsquor: mj,
  rthree: gj,
  rtimes: _j,
  rtri: bj,
  rtrie: kj,
  rtrif: yj,
  rtriltri: wj,
  RuleDelayed: vj,
  ruluhar: xj,
  rx: Aj,
  Sacute: Sj,
  sacute: Lj,
  sbquo: Cj,
  scap: Ej,
  Scaron: Tj,
  scaron: Dj,
  Sc: qj,
  sc: jj,
  sccue: Rj,
  sce: Nj,
  scE: Pj,
  Scedil: Ij,
  scedil: Oj,
  Scirc: Fj,
  scirc: Mj,
  scnap: Bj,
  scnE: $j,
  scnsim: zj,
  scpolint: Gj,
  scsim: Uj,
  Scy: Hj,
  scy: Vj,
  sdotb: Wj,
  sdot: Zj,
  sdote: Jj,
  searhk: Qj,
  searr: Yj,
  seArr: Xj,
  searrow: Kj,
  sect: e2,
  semi: n2,
  seswar: t2,
  setminus: o2,
  setmn: s2,
  sext: r2,
  Sfr: c2,
  sfr: a2,
  sfrown: i2,
  sharp: l2,
  SHCHcy: u2,
  shchcy: p2,
  SHcy: h2,
  shcy: d2,
  ShortDownArrow: f2,
  ShortLeftArrow: m2,
  shortmid: g2,
  shortparallel: _2,
  ShortRightArrow: b2,
  ShortUpArrow: k2,
  shy: y2,
  Sigma: w2,
  sigma: v2,
  sigmaf: x2,
  sigmav: A2,
  sim: S2,
  simdot: L2,
  sime: C2,
  simeq: E2,
  simg: T2,
  simgE: D2,
  siml: q2,
  simlE: j2,
  simne: R2,
  simplus: N2,
  simrarr: P2,
  slarr: I2,
  SmallCircle: O2,
  smallsetminus: F2,
  smashp: M2,
  smeparsl: B2,
  smid: $2,
  smile: z2,
  smt: G2,
  smte: U2,
  smtes: H2,
  SOFTcy: V2,
  softcy: W2,
  solbar: Z2,
  solb: J2,
  sol: Q2,
  Sopf: Y2,
  sopf: X2,
  spades: K2,
  spadesuit: eR,
  spar: nR,
  sqcap: tR,
  sqcaps: oR,
  sqcup: sR,
  sqcups: rR,
  Sqrt: cR,
  sqsub: aR,
  sqsube: iR,
  sqsubset: lR,
  sqsubseteq: uR,
  sqsup: pR,
  sqsupe: hR,
  sqsupset: dR,
  sqsupseteq: fR,
  square: mR,
  Square: gR,
  SquareIntersection: _R,
  SquareSubset: bR,
  SquareSubsetEqual: kR,
  SquareSuperset: yR,
  SquareSupersetEqual: wR,
  SquareUnion: vR,
  squarf: xR,
  squ: AR,
  squf: SR,
  srarr: LR,
  Sscr: CR,
  sscr: ER,
  ssetmn: TR,
  ssmile: DR,
  sstarf: qR,
  Star: jR,
  star: RR,
  starf: NR,
  straightepsilon: PR,
  straightphi: IR,
  strns: OR,
  sub: FR,
  Sub: MR,
  subdot: BR,
  subE: $R,
  sube: zR,
  subedot: GR,
  submult: UR,
  subnE: HR,
  subne: VR,
  subplus: WR,
  subrarr: ZR,
  subset: JR,
  Subset: QR,
  subseteq: YR,
  subseteqq: XR,
  SubsetEqual: KR,
  subsetneq: eN,
  subsetneqq: nN,
  subsim: tN,
  subsub: oN,
  subsup: sN,
  succapprox: rN,
  succ: cN,
  succcurlyeq: aN,
  Succeeds: iN,
  SucceedsEqual: lN,
  SucceedsSlantEqual: uN,
  SucceedsTilde: pN,
  succeq: hN,
  succnapprox: dN,
  succneqq: fN,
  succnsim: mN,
  succsim: gN,
  SuchThat: _N,
  sum: bN,
  Sum: kN,
  sung: yN,
  sup1: wN,
  sup2: vN,
  sup3: xN,
  sup: AN,
  Sup: SN,
  supdot: LN,
  supdsub: CN,
  supE: EN,
  supe: TN,
  supedot: DN,
  Superset: qN,
  SupersetEqual: jN,
  suphsol: RN,
  suphsub: NN,
  suplarr: PN,
  supmult: IN,
  supnE: ON,
  supne: FN,
  supplus: MN,
  supset: BN,
  Supset: $N,
  supseteq: zN,
  supseteqq: GN,
  supsetneq: UN,
  supsetneqq: HN,
  supsim: VN,
  supsub: WN,
  supsup: ZN,
  swarhk: JN,
  swarr: QN,
  swArr: YN,
  swarrow: XN,
  swnwar: KN,
  szlig: eP,
  Tab: nP,
  target: tP,
  Tau: oP,
  tau: sP,
  tbrk: rP,
  Tcaron: cP,
  tcaron: aP,
  Tcedil: iP,
  tcedil: lP,
  Tcy: uP,
  tcy: pP,
  tdot: hP,
  telrec: dP,
  Tfr: fP,
  tfr: mP,
  there4: gP,
  therefore: _P,
  Therefore: bP,
  Theta: kP,
  theta: yP,
  thetasym: wP,
  thetav: vP,
  thickapprox: xP,
  thicksim: AP,
  ThickSpace: SP,
  ThinSpace: LP,
  thinsp: CP,
  thkap: EP,
  thksim: TP,
  THORN: DP,
  thorn: qP,
  tilde: jP,
  Tilde: RP,
  TildeEqual: NP,
  TildeFullEqual: PP,
  TildeTilde: IP,
  timesbar: OP,
  timesb: FP,
  times: MP,
  timesd: BP,
  tint: $P,
  toea: zP,
  topbot: GP,
  topcir: UP,
  top: HP,
  Topf: VP,
  topf: WP,
  topfork: ZP,
  tosa: JP,
  tprime: QP,
  trade: YP,
  TRADE: XP,
  triangle: KP,
  triangledown: eI,
  triangleleft: nI,
  trianglelefteq: tI,
  triangleq: oI,
  triangleright: sI,
  trianglerighteq: rI,
  tridot: cI,
  trie: aI,
  triminus: iI,
  TripleDot: lI,
  triplus: uI,
  trisb: pI,
  tritime: hI,
  trpezium: dI,
  Tscr: fI,
  tscr: mI,
  TScy: gI,
  tscy: _I,
  TSHcy: bI,
  tshcy: kI,
  Tstrok: yI,
  tstrok: wI,
  twixt: vI,
  twoheadleftarrow: xI,
  twoheadrightarrow: AI,
  Uacute: SI,
  uacute: LI,
  uarr: CI,
  Uarr: EI,
  uArr: TI,
  Uarrocir: DI,
  Ubrcy: qI,
  ubrcy: jI,
  Ubreve: RI,
  ubreve: NI,
  Ucirc: PI,
  ucirc: II,
  Ucy: OI,
  ucy: FI,
  udarr: MI,
  Udblac: BI,
  udblac: $I,
  udhar: zI,
  ufisht: GI,
  Ufr: UI,
  ufr: HI,
  Ugrave: VI,
  ugrave: WI,
  uHar: ZI,
  uharl: JI,
  uharr: QI,
  uhblk: YI,
  ulcorn: XI,
  ulcorner: KI,
  ulcrop: eO,
  ultri: nO,
  Umacr: tO,
  umacr: oO,
  uml: sO,
  UnderBar: rO,
  UnderBrace: cO,
  UnderBracket: aO,
  UnderParenthesis: iO,
  Union: lO,
  UnionPlus: uO,
  Uogon: pO,
  uogon: hO,
  Uopf: dO,
  uopf: fO,
  UpArrowBar: mO,
  uparrow: gO,
  UpArrow: _O,
  Uparrow: bO,
  UpArrowDownArrow: kO,
  updownarrow: yO,
  UpDownArrow: wO,
  Updownarrow: vO,
  UpEquilibrium: xO,
  upharpoonleft: AO,
  upharpoonright: SO,
  uplus: LO,
  UpperLeftArrow: CO,
  UpperRightArrow: EO,
  upsi: TO,
  Upsi: DO,
  upsih: qO,
  Upsilon: jO,
  upsilon: RO,
  UpTeeArrow: NO,
  UpTee: PO,
  upuparrows: IO,
  urcorn: OO,
  urcorner: FO,
  urcrop: MO,
  Uring: BO,
  uring: $O,
  urtri: zO,
  Uscr: GO,
  uscr: UO,
  utdot: HO,
  Utilde: VO,
  utilde: WO,
  utri: ZO,
  utrif: JO,
  uuarr: QO,
  Uuml: YO,
  uuml: XO,
  uwangle: KO,
  vangrt: eF,
  varepsilon: nF,
  varkappa: tF,
  varnothing: oF,
  varphi: sF,
  varpi: rF,
  varpropto: cF,
  varr: aF,
  vArr: iF,
  varrho: lF,
  varsigma: uF,
  varsubsetneq: pF,
  varsubsetneqq: hF,
  varsupsetneq: dF,
  varsupsetneqq: fF,
  vartheta: mF,
  vartriangleleft: gF,
  vartriangleright: _F,
  vBar: bF,
  Vbar: kF,
  vBarv: yF,
  Vcy: wF,
  vcy: vF,
  vdash: xF,
  vDash: AF,
  Vdash: SF,
  VDash: LF,
  Vdashl: CF,
  veebar: EF,
  vee: TF,
  Vee: DF,
  veeeq: qF,
  vellip: jF,
  verbar: RF,
  Verbar: NF,
  vert: PF,
  Vert: IF,
  VerticalBar: OF,
  VerticalLine: FF,
  VerticalSeparator: MF,
  VerticalTilde: BF,
  VeryThinSpace: $F,
  Vfr: zF,
  vfr: GF,
  vltri: UF,
  vnsub: HF,
  vnsup: VF,
  Vopf: WF,
  vopf: ZF,
  vprop: JF,
  vrtri: QF,
  Vscr: YF,
  vscr: XF,
  vsubnE: KF,
  vsubne: e3,
  vsupnE: n3,
  vsupne: t3,
  Vvdash: o3,
  vzigzag: s3,
  Wcirc: r3,
  wcirc: c3,
  wedbar: a3,
  wedge: i3,
  Wedge: l3,
  wedgeq: u3,
  weierp: p3,
  Wfr: h3,
  wfr: d3,
  Wopf: f3,
  wopf: m3,
  wp: g3,
  wr: _3,
  wreath: b3,
  Wscr: k3,
  wscr: y3,
  xcap: w3,
  xcirc: v3,
  xcup: x3,
  xdtri: A3,
  Xfr: S3,
  xfr: L3,
  xharr: C3,
  xhArr: E3,
  Xi: T3,
  xi: D3,
  xlarr: q3,
  xlArr: j3,
  xmap: R3,
  xnis: N3,
  xodot: P3,
  Xopf: I3,
  xopf: O3,
  xoplus: F3,
  xotime: M3,
  xrarr: B3,
  xrArr: $3,
  Xscr: z3,
  xscr: G3,
  xsqcup: U3,
  xuplus: H3,
  xutri: V3,
  xvee: W3,
  xwedge: Z3,
  Yacute: J3,
  yacute: Q3,
  YAcy: Y3,
  yacy: X3,
  Ycirc: K3,
  ycirc: eM,
  Ycy: nM,
  ycy: tM,
  yen: oM,
  Yfr: sM,
  yfr: rM,
  YIcy: cM,
  yicy: aM,
  Yopf: iM,
  yopf: lM,
  Yscr: uM,
  yscr: pM,
  YUcy: hM,
  yucy: dM,
  yuml: fM,
  Yuml: mM,
  Zacute: gM,
  zacute: _M,
  Zcaron: bM,
  zcaron: kM,
  Zcy: yM,
  zcy: wM,
  Zdot: vM,
  zdot: xM,
  zeetrf: AM,
  ZeroWidthSpace: SM,
  Zeta: LM,
  zeta: CM,
  zfr: EM,
  Zfr: TM,
  ZHcy: DM,
  zhcy: qM,
  zigrarr: jM,
  zopf: RM,
  Zopf: NM,
  Zscr: PM,
  zscr: IM,
  zwj: OM,
  zwnj: FM
};
var _o = MM, et = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/, ze = {}, mt = {};
function BM(n) {
  var e, t, o = mt[n];
  if (o)
    return o;
  for (o = mt[n] = [], e = 0; e < 128; e++)
    t = String.fromCharCode(e), /^[0-9a-z]$/i.test(t) ? o.push(t) : o.push("%" + ("0" + e.toString(16).toUpperCase()).slice(-2));
  for (e = 0; e < n.length; e++)
    o[n.charCodeAt(e)] = n[e];
  return o;
}
function dn(n, e, t) {
  var o, r, s, a, c, l = "";
  for (typeof e != "string" && (t = e, e = dn.defaultChars), typeof t > "u" && (t = !0), c = BM(e), o = 0, r = n.length; o < r; o++) {
    if (s = n.charCodeAt(o), t && s === 37 && o + 2 < r && /^[0-9a-f]{2}$/i.test(n.slice(o + 1, o + 3))) {
      l += n.slice(o, o + 3), o += 2;
      continue;
    }
    if (s < 128) {
      l += c[s];
      continue;
    }
    if (s >= 55296 && s <= 57343) {
      if (s >= 55296 && s <= 56319 && o + 1 < r && (a = n.charCodeAt(o + 1), a >= 56320 && a <= 57343)) {
        l += encodeURIComponent(n[o] + n[o + 1]), o++;
        continue;
      }
      l += "%EF%BF%BD";
      continue;
    }
    l += encodeURIComponent(n[o]);
  }
  return l;
}
dn.defaultChars = ";/?:@&=+$,-_.!~*'()#";
dn.componentChars = "-_.!~*'()";
var $M = dn, gt = {};
function zM(n) {
  var e, t, o = gt[n];
  if (o)
    return o;
  for (o = gt[n] = [], e = 0; e < 128; e++)
    t = String.fromCharCode(e), o.push(t);
  for (e = 0; e < n.length; e++)
    t = n.charCodeAt(e), o[t] = "%" + ("0" + t.toString(16).toUpperCase()).slice(-2);
  return o;
}
function fn(n, e) {
  var t;
  return typeof e != "string" && (e = fn.defaultChars), t = zM(e), n.replace(/(%[a-f0-9]{2})+/gi, function(o) {
    var r, s, a, c, l, i, p, h = "";
    for (r = 0, s = o.length; r < s; r += 3) {
      if (a = parseInt(o.slice(r + 1, r + 3), 16), a < 128) {
        h += t[a];
        continue;
      }
      if ((a & 224) === 192 && r + 3 < s && (c = parseInt(o.slice(r + 4, r + 6), 16), (c & 192) === 128)) {
        p = a << 6 & 1984 | c & 63, p < 128 ? h += "��" : h += String.fromCharCode(p), r += 3;
        continue;
      }
      if ((a & 240) === 224 && r + 6 < s && (c = parseInt(o.slice(r + 4, r + 6), 16), l = parseInt(o.slice(r + 7, r + 9), 16), (c & 192) === 128 && (l & 192) === 128)) {
        p = a << 12 & 61440 | c << 6 & 4032 | l & 63, p < 2048 || p >= 55296 && p <= 57343 ? h += "���" : h += String.fromCharCode(p), r += 6;
        continue;
      }
      if ((a & 248) === 240 && r + 9 < s && (c = parseInt(o.slice(r + 4, r + 6), 16), l = parseInt(o.slice(r + 7, r + 9), 16), i = parseInt(o.slice(r + 10, r + 12), 16), (c & 192) === 128 && (l & 192) === 128 && (i & 192) === 128)) {
        p = a << 18 & 1835008 | c << 12 & 258048 | l << 6 & 4032 | i & 63, p < 65536 || p > 1114111 ? h += "����" : (p -= 65536, h += String.fromCharCode(55296 + (p >> 10), 56320 + (p & 1023))), r += 9;
        continue;
      }
      h += "�";
    }
    return h;
  });
}
fn.defaultChars = ";/?:@&=+$,#";
fn.componentChars = "";
var GM = fn, UM = function(e) {
  var t = "";
  return t += e.protocol || "", t += e.slashes ? "//" : "", t += e.auth ? e.auth + "@" : "", e.hostname && e.hostname.indexOf(":") !== -1 ? t += "[" + e.hostname + "]" : t += e.hostname || "", t += e.port ? ":" + e.port : "", t += e.pathname || "", t += e.search || "", t += e.hash || "", t;
};
function rn() {
  this.protocol = null, this.slashes = null, this.auth = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.pathname = null;
}
var HM = /^([a-z0-9.+-]+:)/i, VM = /:[0-9]*$/, WM = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, ZM = ["<", ">", '"', "`", " ", "\r", `
`, "	"], JM = ["{", "}", "|", "\\", "^", "`"].concat(ZM), QM = ["'"].concat(JM), _t = ["%", "/", "?", ";", "#"].concat(QM), bt = ["/", "?", "#"], YM = 255, kt = /^[+a-z0-9A-Z_-]{0,63}$/, XM = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, yt = {
  javascript: !0,
  "javascript:": !0
}, wt = {
  http: !0,
  https: !0,
  ftp: !0,
  gopher: !0,
  file: !0,
  "http:": !0,
  "https:": !0,
  "ftp:": !0,
  "gopher:": !0,
  "file:": !0
};
function KM(n, e) {
  if (n && n instanceof rn)
    return n;
  var t = new rn();
  return t.parse(n, e), t;
}
rn.prototype.parse = function(n, e) {
  var t, o, r, s, a, c = n;
  if (c = c.trim(), !e && n.split("#").length === 1) {
    var l = WM.exec(c);
    if (l)
      return this.pathname = l[1], l[2] && (this.search = l[2]), this;
  }
  var i = HM.exec(c);
  if (i && (i = i[0], r = i.toLowerCase(), this.protocol = i, c = c.substr(i.length)), (e || i || c.match(/^\/\/[^@\/]+@[^@\/]+/)) && (a = c.substr(0, 2) === "//", a && !(i && yt[i]) && (c = c.substr(2), this.slashes = !0)), !yt[i] && (a || i && !wt[i])) {
    var p = -1;
    for (t = 0; t < bt.length; t++)
      s = c.indexOf(bt[t]), s !== -1 && (p === -1 || s < p) && (p = s);
    var h, d;
    for (p === -1 ? d = c.lastIndexOf("@") : d = c.lastIndexOf("@", p), d !== -1 && (h = c.slice(0, d), c = c.slice(d + 1), this.auth = h), p = -1, t = 0; t < _t.length; t++)
      s = c.indexOf(_t[t]), s !== -1 && (p === -1 || s < p) && (p = s);
    p === -1 && (p = c.length), c[p - 1] === ":" && p--;
    var f = c.slice(0, p);
    c = c.slice(p), this.parseHost(f), this.hostname = this.hostname || "";
    var m = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
    if (!m) {
      var L = this.hostname.split(/\./);
      for (t = 0, o = L.length; t < o; t++) {
        var S = L[t];
        if (S && !S.match(kt)) {
          for (var b = "", k = 0, w = S.length; k < w; k++)
            S.charCodeAt(k) > 127 ? b += "x" : b += S[k];
          if (!b.match(kt)) {
            var C = L.slice(0, t), y = L.slice(t + 1), u = S.match(XM);
            u && (C.push(u[1]), y.unshift(u[2])), y.length && (c = y.join(".") + c), this.hostname = C.join(".");
            break;
          }
        }
      }
    }
    this.hostname.length > YM && (this.hostname = ""), m && (this.hostname = this.hostname.substr(1, this.hostname.length - 2));
  }
  var g = c.indexOf("#");
  g !== -1 && (this.hash = c.substr(g), c = c.slice(0, g));
  var x = c.indexOf("?");
  return x !== -1 && (this.search = c.substr(x), c = c.slice(0, x)), c && (this.pathname = c), wt[r] && this.hostname && !this.pathname && (this.pathname = ""), this;
};
rn.prototype.parseHost = function(n) {
  var e = VM.exec(n);
  e && (e = e[0], e !== ":" && (this.port = e.substr(1)), n = n.substr(0, n.length - e.length)), n && (this.hostname = n);
};
var eB = KM;
ze.encode = $M;
ze.decode = GM;
ze.format = UM;
ze.parse = eB;
var Le = {}, Ln, vt;
function bo() {
  return vt || (vt = 1, Ln = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/), Ln;
}
var Cn, xt;
function ko() {
  return xt || (xt = 1, Cn = /[\0-\x1F\x7F-\x9F]/), Cn;
}
var En, At;
function nB() {
  return At || (At = 1, En = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/), En;
}
var Tn, St;
function yo() {
  return St || (St = 1, Tn = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/), Tn;
}
var Lt;
function tB() {
  return Lt || (Lt = 1, Le.Any = bo(), Le.Cc = ko(), Le.Cf = nB(), Le.P = et, Le.Z = yo()), Le;
}
(function(n) {
  function e(T) {
    return Object.prototype.toString.call(T);
  }
  function t(T) {
    return e(T) === "[object String]";
  }
  var o = Object.prototype.hasOwnProperty;
  function r(T, q) {
    return o.call(T, q);
  }
  function s(T) {
    var q = Array.prototype.slice.call(arguments, 1);
    return q.forEach(function(R) {
      if (R) {
        if (typeof R != "object")
          throw new TypeError(R + "must be object");
        Object.keys(R).forEach(function(F) {
          T[F] = R[F];
        });
      }
    }), T;
  }
  function a(T, q, R) {
    return [].concat(T.slice(0, q), R, T.slice(q + 1));
  }
  function c(T) {
    return !(T >= 55296 && T <= 57343 || T >= 64976 && T <= 65007 || (T & 65535) === 65535 || (T & 65535) === 65534 || T >= 0 && T <= 8 || T === 11 || T >= 14 && T <= 31 || T >= 127 && T <= 159 || T > 1114111);
  }
  function l(T) {
    if (T > 65535) {
      T -= 65536;
      var q = 55296 + (T >> 10), R = 56320 + (T & 1023);
      return String.fromCharCode(q, R);
    }
    return String.fromCharCode(T);
  }
  var i = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g, p = /&([a-z#][a-z0-9]{1,31});/gi, h = new RegExp(i.source + "|" + p.source, "gi"), d = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i, f = _o;
  function m(T, q) {
    var R = 0;
    return r(f, q) ? f[q] : q.charCodeAt(0) === 35 && d.test(q) && (R = q[1].toLowerCase() === "x" ? parseInt(q.slice(2), 16) : parseInt(q.slice(1), 10), c(R)) ? l(R) : T;
  }
  function L(T) {
    return T.indexOf("\\") < 0 ? T : T.replace(i, "$1");
  }
  function S(T) {
    return T.indexOf("\\") < 0 && T.indexOf("&") < 0 ? T : T.replace(h, function(q, R, F) {
      return R || m(q, F);
    });
  }
  var b = /[&<>"]/, k = /[&<>"]/g, w = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;"
  };
  function C(T) {
    return w[T];
  }
  function y(T) {
    return b.test(T) ? T.replace(k, C) : T;
  }
  var u = /[.?*+^$[\]\\(){}|-]/g;
  function g(T) {
    return T.replace(u, "\\$&");
  }
  function x(T) {
    switch (T) {
      case 9:
      case 32:
        return !0;
    }
    return !1;
  }
  function _(T) {
    if (T >= 8192 && T <= 8202)
      return !0;
    switch (T) {
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
      case 160:
      case 5760:
      case 8239:
      case 8287:
      case 12288:
        return !0;
    }
    return !1;
  }
  var v = et;
  function A(T) {
    return v.test(T);
  }
  function E(T) {
    switch (T) {
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 123:
      case 124:
      case 125:
      case 126:
        return !0;
      default:
        return !1;
    }
  }
  function D(T) {
    return T = T.trim().replace(/\s+/g, " "), "ẞ".toLowerCase() === "Ṿ" && (T = T.replace(/ẞ/g, "ß")), T.toLowerCase().toUpperCase();
  }
  n.lib = {}, n.lib.mdurl = ze, n.lib.ucmicro = tB(), n.assign = s, n.isString = t, n.has = r, n.unescapeMd = L, n.unescapeAll = S, n.isValidEntityCode = c, n.fromCodePoint = l, n.escapeHtml = y, n.arrayReplaceAt = a, n.isSpace = x, n.isWhiteSpace = _, n.isMdAsciiPunct = E, n.isPunctChar = A, n.escapeRE = g, n.normalizeReference = D;
})(B);
var mn = {}, oB = function(e, t, o) {
  var r, s, a, c, l = -1, i = e.posMax, p = e.pos;
  for (e.pos = t + 1, r = 1; e.pos < i; ) {
    if (a = e.src.charCodeAt(e.pos), a === 93 && (r--, r === 0)) {
      s = !0;
      break;
    }
    if (c = e.pos, e.md.inline.skipToken(e), a === 91) {
      if (c === e.pos - 1)
        r++;
      else if (o)
        return e.pos = p, -1;
    }
  }
  return s && (l = e.pos), e.pos = p, l;
}, Ct = B.unescapeAll, sB = function(e, t, o) {
  var r, s, a = 0, c = t, l = {
    ok: !1,
    pos: 0,
    lines: 0,
    str: ""
  };
  if (e.charCodeAt(t) === 60) {
    for (t++; t < o; ) {
      if (r = e.charCodeAt(t), r === 10 || r === 60)
        return l;
      if (r === 62)
        return l.pos = t + 1, l.str = Ct(e.slice(c + 1, t)), l.ok = !0, l;
      if (r === 92 && t + 1 < o) {
        t += 2;
        continue;
      }
      t++;
    }
    return l;
  }
  for (s = 0; t < o && (r = e.charCodeAt(t), !(r === 32 || r < 32 || r === 127)); ) {
    if (r === 92 && t + 1 < o) {
      if (e.charCodeAt(t + 1) === 32)
        break;
      t += 2;
      continue;
    }
    if (r === 40 && (s++, s > 32))
      return l;
    if (r === 41) {
      if (s === 0)
        break;
      s--;
    }
    t++;
  }
  return c === t || s !== 0 || (l.str = Ct(e.slice(c, t)), l.lines = a, l.pos = t, l.ok = !0), l;
}, rB = B.unescapeAll, cB = function(e, t, o) {
  var r, s, a = 0, c = t, l = {
    ok: !1,
    pos: 0,
    lines: 0,
    str: ""
  };
  if (t >= o || (s = e.charCodeAt(t), s !== 34 && s !== 39 && s !== 40))
    return l;
  for (t++, s === 40 && (s = 41); t < o; ) {
    if (r = e.charCodeAt(t), r === s)
      return l.pos = t + 1, l.lines = a, l.str = rB(e.slice(c + 1, t)), l.ok = !0, l;
    if (r === 40 && s === 41)
      return l;
    r === 10 ? a++ : r === 92 && t + 1 < o && (t++, e.charCodeAt(t) === 10 && a++), t++;
  }
  return l;
};
mn.parseLinkLabel = oB;
mn.parseLinkDestination = sB;
mn.parseLinkTitle = cB;
var aB = B.assign, iB = B.unescapeAll, qe = B.escapeHtml, he = {};
he.code_inline = function(n, e, t, o, r) {
  var s = n[e];
  return "<code" + r.renderAttrs(s) + ">" + qe(n[e].content) + "</code>";
};
he.code_block = function(n, e, t, o, r) {
  var s = n[e];
  return "<pre" + r.renderAttrs(s) + "><code>" + qe(n[e].content) + `</code></pre>
`;
};
he.fence = function(n, e, t, o, r) {
  var s = n[e], a = s.info ? iB(s.info).trim() : "", c = "", l = "", i, p, h, d, f;
  return a && (h = a.split(/(\s+)/g), c = h[0], l = h.slice(2).join("")), t.highlight ? i = t.highlight(s.content, c, l) || qe(s.content) : i = qe(s.content), i.indexOf("<pre") === 0 ? i + `
` : a ? (p = s.attrIndex("class"), d = s.attrs ? s.attrs.slice() : [], p < 0 ? d.push(["class", t.langPrefix + c]) : (d[p] = d[p].slice(), d[p][1] += " " + t.langPrefix + c), f = {
    attrs: d
  }, "<pre><code" + r.renderAttrs(f) + ">" + i + `</code></pre>
`) : "<pre><code" + r.renderAttrs(s) + ">" + i + `</code></pre>
`;
};
he.image = function(n, e, t, o, r) {
  var s = n[e];
  return s.attrs[s.attrIndex("alt")][1] = r.renderInlineAsText(s.children, t, o), r.renderToken(n, e, t);
};
he.hardbreak = function(n, e, t) {
  return t.xhtmlOut ? `<br />
` : `<br>
`;
};
he.softbreak = function(n, e, t) {
  return t.breaks ? t.xhtmlOut ? `<br />
` : `<br>
` : `
`;
};
he.text = function(n, e) {
  return qe(n[e].content);
};
he.html_block = function(n, e) {
  return n[e].content;
};
he.html_inline = function(n, e) {
  return n[e].content;
};
function Ge() {
  this.rules = aB({}, he);
}
Ge.prototype.renderAttrs = function(e) {
  var t, o, r;
  if (!e.attrs)
    return "";
  for (r = "", t = 0, o = e.attrs.length; t < o; t++)
    r += " " + qe(e.attrs[t][0]) + '="' + qe(e.attrs[t][1]) + '"';
  return r;
};
Ge.prototype.renderToken = function(e, t, o) {
  var r, s = "", a = !1, c = e[t];
  return c.hidden ? "" : (c.block && c.nesting !== -1 && t && e[t - 1].hidden && (s += `
`), s += (c.nesting === -1 ? "</" : "<") + c.tag, s += this.renderAttrs(c), c.nesting === 0 && o.xhtmlOut && (s += " /"), c.block && (a = !0, c.nesting === 1 && t + 1 < e.length && (r = e[t + 1], (r.type === "inline" || r.hidden || r.nesting === -1 && r.tag === c.tag) && (a = !1))), s += a ? `>
` : ">", s);
};
Ge.prototype.renderInline = function(n, e, t) {
  for (var o, r = "", s = this.rules, a = 0, c = n.length; a < c; a++)
    o = n[a].type, typeof s[o] < "u" ? r += s[o](n, a, e, t, this) : r += this.renderToken(n, a, e);
  return r;
};
Ge.prototype.renderInlineAsText = function(n, e, t) {
  for (var o = "", r = 0, s = n.length; r < s; r++)
    n[r].type === "text" ? o += n[r].content : n[r].type === "image" ? o += this.renderInlineAsText(n[r].children, e, t) : n[r].type === "softbreak" && (o += `
`);
  return o;
};
Ge.prototype.render = function(n, e, t) {
  var o, r, s, a = "", c = this.rules;
  for (o = 0, r = n.length; o < r; o++)
    s = n[o].type, s === "inline" ? a += this.renderInline(n[o].children, e, t) : typeof c[s] < "u" ? a += c[n[o].type](n, o, e, t, this) : a += this.renderToken(n, o, e, t);
  return a;
};
var lB = Ge;
function ae() {
  this.__rules__ = [], this.__cache__ = null;
}
ae.prototype.__find__ = function(n) {
  for (var e = 0; e < this.__rules__.length; e++)
    if (this.__rules__[e].name === n)
      return e;
  return -1;
};
ae.prototype.__compile__ = function() {
  var n = this, e = [""];
  n.__rules__.forEach(function(t) {
    t.enabled && t.alt.forEach(function(o) {
      e.indexOf(o) < 0 && e.push(o);
    });
  }), n.__cache__ = {}, e.forEach(function(t) {
    n.__cache__[t] = [], n.__rules__.forEach(function(o) {
      o.enabled && (t && o.alt.indexOf(t) < 0 || n.__cache__[t].push(o.fn));
    });
  });
};
ae.prototype.at = function(n, e, t) {
  var o = this.__find__(n), r = t || {};
  if (o === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__[o].fn = e, this.__rules__[o].alt = r.alt || [], this.__cache__ = null;
};
ae.prototype.before = function(n, e, t, o) {
  var r = this.__find__(n), s = o || {};
  if (r === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__.splice(r, 0, {
    name: e,
    enabled: !0,
    fn: t,
    alt: s.alt || []
  }), this.__cache__ = null;
};
ae.prototype.after = function(n, e, t, o) {
  var r = this.__find__(n), s = o || {};
  if (r === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__.splice(r + 1, 0, {
    name: e,
    enabled: !0,
    fn: t,
    alt: s.alt || []
  }), this.__cache__ = null;
};
ae.prototype.push = function(n, e, t) {
  var o = t || {};
  this.__rules__.push({
    name: n,
    enabled: !0,
    fn: e,
    alt: o.alt || []
  }), this.__cache__ = null;
};
ae.prototype.enable = function(n, e) {
  Array.isArray(n) || (n = [n]);
  var t = [];
  return n.forEach(function(o) {
    var r = this.__find__(o);
    if (r < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + o);
    }
    this.__rules__[r].enabled = !0, t.push(o);
  }, this), this.__cache__ = null, t;
};
ae.prototype.enableOnly = function(n, e) {
  Array.isArray(n) || (n = [n]), this.__rules__.forEach(function(t) {
    t.enabled = !1;
  }), this.enable(n, e);
};
ae.prototype.disable = function(n, e) {
  Array.isArray(n) || (n = [n]);
  var t = [];
  return n.forEach(function(o) {
    var r = this.__find__(o);
    if (r < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + o);
    }
    this.__rules__[r].enabled = !1, t.push(o);
  }, this), this.__cache__ = null, t;
};
ae.prototype.getRules = function(n) {
  return this.__cache__ === null && this.__compile__(), this.__cache__[n] || [];
};
var nt = ae, uB = /\r\n?|\n/g, pB = /\0/g, hB = function(e) {
  var t;
  t = e.src.replace(uB, `
`), t = t.replace(pB, "�"), e.src = t;
}, dB = function(e) {
  var t;
  e.inlineMode ? (t = new e.Token("inline", "", 0), t.content = e.src, t.map = [0, 1], t.children = [], e.tokens.push(t)) : e.md.block.parse(e.src, e.md, e.env, e.tokens);
}, fB = function(e) {
  var t = e.tokens, o, r, s;
  for (r = 0, s = t.length; r < s; r++)
    o = t[r], o.type === "inline" && e.md.inline.parse(o.content, e.md, e.env, o.children);
}, mB = B.arrayReplaceAt;
function gB(n) {
  return /^<a[>\s]/i.test(n);
}
function _B(n) {
  return /^<\/a\s*>/i.test(n);
}
var bB = function(e) {
  var t, o, r, s, a, c, l, i, p, h, d, f, m, L, S, b, k = e.tokens, w;
  if (e.md.options.linkify) {
    for (o = 0, r = k.length; o < r; o++)
      if (!(k[o].type !== "inline" || !e.md.linkify.pretest(k[o].content)))
        for (s = k[o].children, m = 0, t = s.length - 1; t >= 0; t--) {
          if (c = s[t], c.type === "link_close") {
            for (t--; s[t].level !== c.level && s[t].type !== "link_open"; )
              t--;
            continue;
          }
          if (c.type === "html_inline" && (gB(c.content) && m > 0 && m--, _B(c.content) && m++), !(m > 0) && c.type === "text" && e.md.linkify.test(c.content)) {
            for (p = c.content, w = e.md.linkify.match(p), l = [], f = c.level, d = 0, w.length > 0 && w[0].index === 0 && t > 0 && s[t - 1].type === "text_special" && (w = w.slice(1)), i = 0; i < w.length; i++)
              L = w[i].url, S = e.md.normalizeLink(L), e.md.validateLink(S) && (b = w[i].text, w[i].schema ? w[i].schema === "mailto:" && !/^mailto:/i.test(b) ? b = e.md.normalizeLinkText("mailto:" + b).replace(/^mailto:/, "") : b = e.md.normalizeLinkText(b) : b = e.md.normalizeLinkText("http://" + b).replace(/^http:\/\//, ""), h = w[i].index, h > d && (a = new e.Token("text", "", 0), a.content = p.slice(d, h), a.level = f, l.push(a)), a = new e.Token("link_open", "a", 1), a.attrs = [["href", S]], a.level = f++, a.markup = "linkify", a.info = "auto", l.push(a), a = new e.Token("text", "", 0), a.content = b, a.level = f, l.push(a), a = new e.Token("link_close", "a", -1), a.level = --f, a.markup = "linkify", a.info = "auto", l.push(a), d = w[i].lastIndex);
            d < p.length && (a = new e.Token("text", "", 0), a.content = p.slice(d), a.level = f, l.push(a)), k[o].children = s = mB(s, t, l);
          }
        }
  }
}, wo = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/, kB = /\((c|tm|r)\)/i, yB = /\((c|tm|r)\)/ig, wB = {
  c: "©",
  r: "®",
  tm: "™"
};
function vB(n, e) {
  return wB[e.toLowerCase()];
}
function xB(n) {
  var e, t, o = 0;
  for (e = n.length - 1; e >= 0; e--)
    t = n[e], t.type === "text" && !o && (t.content = t.content.replace(yB, vB)), t.type === "link_open" && t.info === "auto" && o--, t.type === "link_close" && t.info === "auto" && o++;
}
function AB(n) {
  var e, t, o = 0;
  for (e = n.length - 1; e >= 0; e--)
    t = n[e], t.type === "text" && !o && wo.test(t.content) && (t.content = t.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/mg, "$1—").replace(/(^|\s)--(?=\s|$)/mg, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg, "$1–")), t.type === "link_open" && t.info === "auto" && o--, t.type === "link_close" && t.info === "auto" && o++;
}
var SB = function(e) {
  var t;
  if (e.md.options.typographer)
    for (t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type === "inline" && (kB.test(e.tokens[t].content) && xB(e.tokens[t].children), wo.test(e.tokens[t].content) && AB(e.tokens[t].children));
}, Et = B.isWhiteSpace, Tt = B.isPunctChar, Dt = B.isMdAsciiPunct, LB = /['"]/, qt = /['"]/g, jt = "’";
function en(n, e, t) {
  return n.slice(0, e) + t + n.slice(e + 1);
}
function CB(n, e) {
  var t, o, r, s, a, c, l, i, p, h, d, f, m, L, S, b, k, w, C, y, u;
  for (C = [], t = 0; t < n.length; t++) {
    for (o = n[t], l = n[t].level, k = C.length - 1; k >= 0 && !(C[k].level <= l); k--)
      ;
    if (C.length = k + 1, o.type === "text") {
      r = o.content, a = 0, c = r.length;
      e:
        for (; a < c && (qt.lastIndex = a, s = qt.exec(r), !!s); ) {
          if (S = b = !0, a = s.index + 1, w = s[0] === "'", p = 32, s.index - 1 >= 0)
            p = r.charCodeAt(s.index - 1);
          else
            for (k = t - 1; k >= 0 && !(n[k].type === "softbreak" || n[k].type === "hardbreak"); k--)
              if (n[k].content) {
                p = n[k].content.charCodeAt(n[k].content.length - 1);
                break;
              }
          if (h = 32, a < c)
            h = r.charCodeAt(a);
          else
            for (k = t + 1; k < n.length && !(n[k].type === "softbreak" || n[k].type === "hardbreak"); k++)
              if (n[k].content) {
                h = n[k].content.charCodeAt(0);
                break;
              }
          if (d = Dt(p) || Tt(String.fromCharCode(p)), f = Dt(h) || Tt(String.fromCharCode(h)), m = Et(p), L = Et(h), L ? S = !1 : f && (m || d || (S = !1)), m ? b = !1 : d && (L || f || (b = !1)), h === 34 && s[0] === '"' && p >= 48 && p <= 57 && (b = S = !1), S && b && (S = d, b = f), !S && !b) {
            w && (o.content = en(o.content, s.index, jt));
            continue;
          }
          if (b) {
            for (k = C.length - 1; k >= 0 && (i = C[k], !(C[k].level < l)); k--)
              if (i.single === w && C[k].level === l) {
                i = C[k], w ? (y = e.md.options.quotes[2], u = e.md.options.quotes[3]) : (y = e.md.options.quotes[0], u = e.md.options.quotes[1]), o.content = en(o.content, s.index, u), n[i.token].content = en(
                  n[i.token].content,
                  i.pos,
                  y
                ), a += u.length - 1, i.token === t && (a += y.length - 1), r = o.content, c = r.length, C.length = k;
                continue e;
              }
          }
          S ? C.push({
            token: t,
            pos: s.index,
            single: w,
            level: l
          }) : b && w && (o.content = en(o.content, s.index, jt));
        }
    }
  }
}
var EB = function(e) {
  var t;
  if (e.md.options.typographer)
    for (t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type !== "inline" || !LB.test(e.tokens[t].content) || CB(e.tokens[t].children, e);
}, TB = function(e) {
  var t, o, r, s, a, c, l = e.tokens;
  for (t = 0, o = l.length; t < o; t++)
    if (l[t].type === "inline") {
      for (r = l[t].children, a = r.length, s = 0; s < a; s++)
        r[s].type === "text_special" && (r[s].type = "text");
      for (s = c = 0; s < a; s++)
        r[s].type === "text" && s + 1 < a && r[s + 1].type === "text" ? r[s + 1].content = r[s].content + r[s + 1].content : (s !== c && (r[c] = r[s]), c++);
      s !== c && (r.length = c);
    }
};
function Ue(n, e, t) {
  this.type = n, this.tag = e, this.attrs = null, this.map = null, this.nesting = t, this.level = 0, this.children = null, this.content = "", this.markup = "", this.info = "", this.meta = null, this.block = !1, this.hidden = !1;
}
Ue.prototype.attrIndex = function(e) {
  var t, o, r;
  if (!this.attrs)
    return -1;
  for (t = this.attrs, o = 0, r = t.length; o < r; o++)
    if (t[o][0] === e)
      return o;
  return -1;
};
Ue.prototype.attrPush = function(e) {
  this.attrs ? this.attrs.push(e) : this.attrs = [e];
};
Ue.prototype.attrSet = function(e, t) {
  var o = this.attrIndex(e), r = [e, t];
  o < 0 ? this.attrPush(r) : this.attrs[o] = r;
};
Ue.prototype.attrGet = function(e) {
  var t = this.attrIndex(e), o = null;
  return t >= 0 && (o = this.attrs[t][1]), o;
};
Ue.prototype.attrJoin = function(e, t) {
  var o = this.attrIndex(e);
  o < 0 ? this.attrPush([e, t]) : this.attrs[o][1] = this.attrs[o][1] + " " + t;
};
var tt = Ue, DB = tt;
function vo(n, e, t) {
  this.src = n, this.env = t, this.tokens = [], this.inlineMode = !1, this.md = e;
}
vo.prototype.Token = DB;
var qB = vo, jB = nt, Dn = [
  ["normalize", hB],
  ["block", dB],
  ["inline", fB],
  ["linkify", bB],
  ["replacements", SB],
  ["smartquotes", EB],
  // `text_join` finds `text_special` tokens (for escape sequences)
  // and joins them with the rest of the text
  ["text_join", TB]
];
function ot() {
  this.ruler = new jB();
  for (var n = 0; n < Dn.length; n++)
    this.ruler.push(Dn[n][0], Dn[n][1]);
}
ot.prototype.process = function(n) {
  var e, t, o;
  for (o = this.ruler.getRules(""), e = 0, t = o.length; e < t; e++)
    o[e](n);
};
ot.prototype.State = qB;
var RB = ot, qn = B.isSpace;
function jn(n, e) {
  var t = n.bMarks[e] + n.tShift[e], o = n.eMarks[e];
  return n.src.slice(t, o);
}
function Rt(n) {
  var e = [], t = 0, o = n.length, r, s = !1, a = 0, c = "";
  for (r = n.charCodeAt(t); t < o; )
    r === 124 && (s ? (c += n.substring(a, t - 1), a = t) : (e.push(c + n.substring(a, t)), c = "", a = t + 1)), s = r === 92, t++, r = n.charCodeAt(t);
  return e.push(c + n.substring(a)), e;
}
var NB = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d, f, m, L, S, b, k, w, C, y, u;
  if (t + 2 > o || (p = t + 1, e.sCount[p] < e.blkIndent) || e.sCount[p] - e.blkIndent >= 4 || (c = e.bMarks[p] + e.tShift[p], c >= e.eMarks[p]) || (y = e.src.charCodeAt(c++), y !== 124 && y !== 45 && y !== 58) || c >= e.eMarks[p] || (u = e.src.charCodeAt(c++), u !== 124 && u !== 45 && u !== 58 && !qn(u)) || y === 45 && qn(u))
    return !1;
  for (; c < e.eMarks[p]; ) {
    if (s = e.src.charCodeAt(c), s !== 124 && s !== 45 && s !== 58 && !qn(s))
      return !1;
    c++;
  }
  for (a = jn(e, t + 1), h = a.split("|"), m = [], l = 0; l < h.length; l++) {
    if (L = h[l].trim(), !L) {
      if (l === 0 || l === h.length - 1)
        continue;
      return !1;
    }
    if (!/^:?-+:?$/.test(L))
      return !1;
    L.charCodeAt(L.length - 1) === 58 ? m.push(L.charCodeAt(0) === 58 ? "center" : "right") : L.charCodeAt(0) === 58 ? m.push("left") : m.push("");
  }
  if (a = jn(e, t).trim(), a.indexOf("|") === -1 || e.sCount[t] - e.blkIndent >= 4 || (h = Rt(a), h.length && h[0] === "" && h.shift(), h.length && h[h.length - 1] === "" && h.pop(), d = h.length, d === 0 || d !== m.length))
    return !1;
  if (r)
    return !0;
  for (k = e.parentType, e.parentType = "table", C = e.md.block.ruler.getRules("blockquote"), f = e.push("table_open", "table", 1), f.map = S = [t, 0], f = e.push("thead_open", "thead", 1), f.map = [t, t + 1], f = e.push("tr_open", "tr", 1), f.map = [t, t + 1], l = 0; l < h.length; l++)
    f = e.push("th_open", "th", 1), m[l] && (f.attrs = [["style", "text-align:" + m[l]]]), f = e.push("inline", "", 0), f.content = h[l].trim(), f.children = [], f = e.push("th_close", "th", -1);
  for (f = e.push("tr_close", "tr", -1), f = e.push("thead_close", "thead", -1), p = t + 2; p < o && !(e.sCount[p] < e.blkIndent); p++) {
    for (w = !1, l = 0, i = C.length; l < i; l++)
      if (C[l](e, p, o, !0)) {
        w = !0;
        break;
      }
    if (w || (a = jn(e, p).trim(), !a) || e.sCount[p] - e.blkIndent >= 4)
      break;
    for (h = Rt(a), h.length && h[0] === "" && h.shift(), h.length && h[h.length - 1] === "" && h.pop(), p === t + 2 && (f = e.push("tbody_open", "tbody", 1), f.map = b = [t + 2, 0]), f = e.push("tr_open", "tr", 1), f.map = [p, p + 1], l = 0; l < d; l++)
      f = e.push("td_open", "td", 1), m[l] && (f.attrs = [["style", "text-align:" + m[l]]]), f = e.push("inline", "", 0), f.content = h[l] ? h[l].trim() : "", f.children = [], f = e.push("td_close", "td", -1);
    f = e.push("tr_close", "tr", -1);
  }
  return b && (f = e.push("tbody_close", "tbody", -1), b[1] = p), f = e.push("table_close", "table", -1), S[1] = p, e.parentType = k, e.line = p, !0;
}, PB = function(e, t, o) {
  var r, s, a;
  if (e.sCount[t] - e.blkIndent < 4)
    return !1;
  for (s = r = t + 1; r < o; ) {
    if (e.isEmpty(r)) {
      r++;
      continue;
    }
    if (e.sCount[r] - e.blkIndent >= 4) {
      r++, s = r;
      continue;
    }
    break;
  }
  return e.line = s, a = e.push("code_block", "code", 0), a.content = e.getLines(t, s, 4 + e.blkIndent, !1) + `
`, a.map = [t, e.line], !0;
}, IB = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d = !1, f = e.bMarks[t] + e.tShift[t], m = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || f + 3 > m || (s = e.src.charCodeAt(f), s !== 126 && s !== 96) || (i = f, f = e.skipChars(f, s), a = f - i, a < 3) || (h = e.src.slice(i, f), c = e.src.slice(f, m), s === 96 && c.indexOf(String.fromCharCode(s)) >= 0))
    return !1;
  if (r)
    return !0;
  for (l = t; l++, !(l >= o || (f = i = e.bMarks[l] + e.tShift[l], m = e.eMarks[l], f < m && e.sCount[l] < e.blkIndent)); )
    if (e.src.charCodeAt(f) === s && !(e.sCount[l] - e.blkIndent >= 4) && (f = e.skipChars(f, s), !(f - i < a) && (f = e.skipSpaces(f), !(f < m)))) {
      d = !0;
      break;
    }
  return a = e.sCount[t], e.line = l + (d ? 1 : 0), p = e.push("fence", "code", 0), p.info = c, p.content = e.getLines(t + 1, l, a, !0), p.markup = h, p.map = [t, e.line], !0;
}, Nt = B.isSpace, OB = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d, f, m, L, S, b, k, w, C, y, u, g, x, _ = e.lineMax, v = e.bMarks[t] + e.tShift[t], A = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(v++) !== 62)
    return !1;
  if (r)
    return !0;
  for (l = f = e.sCount[t] + 1, e.src.charCodeAt(v) === 32 ? (v++, l++, f++, s = !1, C = !0) : e.src.charCodeAt(v) === 9 ? (C = !0, (e.bsCount[t] + f) % 4 === 3 ? (v++, l++, f++, s = !1) : s = !0) : C = !1, m = [e.bMarks[t]], e.bMarks[t] = v; v < A && (a = e.src.charCodeAt(v), Nt(a)); ) {
    a === 9 ? f += 4 - (f + e.bsCount[t] + (s ? 1 : 0)) % 4 : f++;
    v++;
  }
  for (L = [e.bsCount[t]], e.bsCount[t] = e.sCount[t] + 1 + (C ? 1 : 0), p = v >= A, k = [e.sCount[t]], e.sCount[t] = f - l, w = [e.tShift[t]], e.tShift[t] = v - e.bMarks[t], u = e.md.block.ruler.getRules("blockquote"), b = e.parentType, e.parentType = "blockquote", d = t + 1; d < o && (x = e.sCount[d] < e.blkIndent, v = e.bMarks[d] + e.tShift[d], A = e.eMarks[d], !(v >= A)); d++) {
    if (e.src.charCodeAt(v++) === 62 && !x) {
      for (l = f = e.sCount[d] + 1, e.src.charCodeAt(v) === 32 ? (v++, l++, f++, s = !1, C = !0) : e.src.charCodeAt(v) === 9 ? (C = !0, (e.bsCount[d] + f) % 4 === 3 ? (v++, l++, f++, s = !1) : s = !0) : C = !1, m.push(e.bMarks[d]), e.bMarks[d] = v; v < A && (a = e.src.charCodeAt(v), Nt(a)); ) {
        a === 9 ? f += 4 - (f + e.bsCount[d] + (s ? 1 : 0)) % 4 : f++;
        v++;
      }
      p = v >= A, L.push(e.bsCount[d]), e.bsCount[d] = e.sCount[d] + 1 + (C ? 1 : 0), k.push(e.sCount[d]), e.sCount[d] = f - l, w.push(e.tShift[d]), e.tShift[d] = v - e.bMarks[d];
      continue;
    }
    if (p)
      break;
    for (y = !1, c = 0, i = u.length; c < i; c++)
      if (u[c](e, d, o, !0)) {
        y = !0;
        break;
      }
    if (y) {
      e.lineMax = d, e.blkIndent !== 0 && (m.push(e.bMarks[d]), L.push(e.bsCount[d]), w.push(e.tShift[d]), k.push(e.sCount[d]), e.sCount[d] -= e.blkIndent);
      break;
    }
    m.push(e.bMarks[d]), L.push(e.bsCount[d]), w.push(e.tShift[d]), k.push(e.sCount[d]), e.sCount[d] = -1;
  }
  for (S = e.blkIndent, e.blkIndent = 0, g = e.push("blockquote_open", "blockquote", 1), g.markup = ">", g.map = h = [t, 0], e.md.block.tokenize(e, t, d), g = e.push("blockquote_close", "blockquote", -1), g.markup = ">", e.lineMax = _, e.parentType = b, h[1] = e.line, c = 0; c < w.length; c++)
    e.bMarks[c + t] = m[c], e.tShift[c + t] = w[c], e.sCount[c + t] = k[c], e.bsCount[c + t] = L[c];
  return e.blkIndent = S, !0;
}, FB = B.isSpace, MB = function(e, t, o, r) {
  var s, a, c, l, i = e.bMarks[t] + e.tShift[t], p = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || (s = e.src.charCodeAt(i++), s !== 42 && s !== 45 && s !== 95))
    return !1;
  for (a = 1; i < p; ) {
    if (c = e.src.charCodeAt(i++), c !== s && !FB(c))
      return !1;
    c === s && a++;
  }
  return a < 3 ? !1 : (r || (e.line = t + 1, l = e.push("hr", "hr", 0), l.map = [t, e.line], l.markup = Array(a + 1).join(String.fromCharCode(s))), !0);
}, xo = B.isSpace;
function Pt(n, e) {
  var t, o, r, s;
  return o = n.bMarks[e] + n.tShift[e], r = n.eMarks[e], t = n.src.charCodeAt(o++), t !== 42 && t !== 45 && t !== 43 || o < r && (s = n.src.charCodeAt(o), !xo(s)) ? -1 : o;
}
function It(n, e) {
  var t, o = n.bMarks[e] + n.tShift[e], r = o, s = n.eMarks[e];
  if (r + 1 >= s || (t = n.src.charCodeAt(r++), t < 48 || t > 57))
    return -1;
  for (; ; ) {
    if (r >= s)
      return -1;
    if (t = n.src.charCodeAt(r++), t >= 48 && t <= 57) {
      if (r - o >= 10)
        return -1;
      continue;
    }
    if (t === 41 || t === 46)
      break;
    return -1;
  }
  return r < s && (t = n.src.charCodeAt(r), !xo(t)) ? -1 : r;
}
function BB(n, e) {
  var t, o, r = n.level + 2;
  for (t = e + 2, o = n.tokens.length - 2; t < o; t++)
    n.tokens[t].level === r && n.tokens[t].type === "paragraph_open" && (n.tokens[t + 2].hidden = !0, n.tokens[t].hidden = !0, t += 2);
}
var $B = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d, f, m, L, S, b, k, w, C, y, u, g, x, _, v, A, E, D, T, q, R, F = !1, M = !0;
  if (e.sCount[t] - e.blkIndent >= 4 || e.listIndent >= 0 && e.sCount[t] - e.listIndent >= 4 && e.sCount[t] < e.blkIndent)
    return !1;
  if (r && e.parentType === "paragraph" && e.sCount[t] >= e.blkIndent && (F = !0), (A = It(e, t)) >= 0) {
    if (h = !0, D = e.bMarks[t] + e.tShift[t], b = Number(e.src.slice(D, A - 1)), F && b !== 1)
      return !1;
  } else if ((A = Pt(e, t)) >= 0)
    h = !1;
  else
    return !1;
  if (F && e.skipSpaces(A) >= e.eMarks[t])
    return !1;
  if (S = e.src.charCodeAt(A - 1), r)
    return !0;
  for (L = e.tokens.length, h ? (R = e.push("ordered_list_open", "ol", 1), b !== 1 && (R.attrs = [["start", b]])) : R = e.push("bullet_list_open", "ul", 1), R.map = m = [t, 0], R.markup = String.fromCharCode(S), w = t, E = !1, q = e.md.block.ruler.getRules("list"), u = e.parentType, e.parentType = "list"; w < o; ) {
    for (v = A, k = e.eMarks[w], p = C = e.sCount[w] + A - (e.bMarks[t] + e.tShift[t]); v < k; ) {
      if (s = e.src.charCodeAt(v), s === 9)
        C += 4 - (C + e.bsCount[w]) % 4;
      else if (s === 32)
        C++;
      else
        break;
      v++;
    }
    if (a = v, a >= k ? i = 1 : i = C - p, i > 4 && (i = 1), l = p + i, R = e.push("list_item_open", "li", 1), R.markup = String.fromCharCode(S), R.map = d = [t, 0], h && (R.info = e.src.slice(D, A - 1)), _ = e.tight, x = e.tShift[t], g = e.sCount[t], y = e.listIndent, e.listIndent = e.blkIndent, e.blkIndent = l, e.tight = !0, e.tShift[t] = a - e.bMarks[t], e.sCount[t] = C, a >= k && e.isEmpty(t + 1) ? e.line = Math.min(e.line + 2, o) : e.md.block.tokenize(e, t, o, !0), (!e.tight || E) && (M = !1), E = e.line - t > 1 && e.isEmpty(e.line - 1), e.blkIndent = e.listIndent, e.listIndent = y, e.tShift[t] = x, e.sCount[t] = g, e.tight = _, R = e.push("list_item_close", "li", -1), R.markup = String.fromCharCode(S), w = t = e.line, d[1] = w, a = e.bMarks[t], w >= o || e.sCount[w] < e.blkIndent || e.sCount[t] - e.blkIndent >= 4)
      break;
    for (T = !1, c = 0, f = q.length; c < f; c++)
      if (q[c](e, w, o, !0)) {
        T = !0;
        break;
      }
    if (T)
      break;
    if (h) {
      if (A = It(e, w), A < 0)
        break;
      D = e.bMarks[w] + e.tShift[w];
    } else if (A = Pt(e, w), A < 0)
      break;
    if (S !== e.src.charCodeAt(A - 1))
      break;
  }
  return h ? R = e.push("ordered_list_close", "ol", -1) : R = e.push("bullet_list_close", "ul", -1), R.markup = String.fromCharCode(S), m[1] = w, e.line = w, e.parentType = u, M && BB(e, L), !0;
}, zB = B.normalizeReference, nn = B.isSpace, GB = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d, f, m, L, S, b, k, w, C, y = 0, u = e.bMarks[t] + e.tShift[t], g = e.eMarks[t], x = t + 1;
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(u) !== 91)
    return !1;
  for (; ++u < g; )
    if (e.src.charCodeAt(u) === 93 && e.src.charCodeAt(u - 1) !== 92) {
      if (u + 1 === g || e.src.charCodeAt(u + 1) !== 58)
        return !1;
      break;
    }
  for (l = e.lineMax, w = e.md.block.ruler.getRules("reference"), m = e.parentType, e.parentType = "reference"; x < l && !e.isEmpty(x); x++)
    if (!(e.sCount[x] - e.blkIndent > 3) && !(e.sCount[x] < 0)) {
      for (k = !1, p = 0, h = w.length; p < h; p++)
        if (w[p](e, x, l, !0)) {
          k = !0;
          break;
        }
      if (k)
        break;
    }
  for (b = e.getLines(t, x, e.blkIndent, !1).trim(), g = b.length, u = 1; u < g; u++) {
    if (s = b.charCodeAt(u), s === 91)
      return !1;
    if (s === 93) {
      f = u;
      break;
    } else
      s === 10 ? y++ : s === 92 && (u++, u < g && b.charCodeAt(u) === 10 && y++);
  }
  if (f < 0 || b.charCodeAt(f + 1) !== 58)
    return !1;
  for (u = f + 2; u < g; u++)
    if (s = b.charCodeAt(u), s === 10)
      y++;
    else if (!nn(s))
      break;
  if (L = e.md.helpers.parseLinkDestination(b, u, g), !L.ok || (i = e.md.normalizeLink(L.str), !e.md.validateLink(i)))
    return !1;
  for (u = L.pos, y += L.lines, a = u, c = y, S = u; u < g; u++)
    if (s = b.charCodeAt(u), s === 10)
      y++;
    else if (!nn(s))
      break;
  for (L = e.md.helpers.parseLinkTitle(b, u, g), u < g && S !== u && L.ok ? (C = L.str, u = L.pos, y += L.lines) : (C = "", u = a, y = c); u < g && (s = b.charCodeAt(u), !!nn(s)); )
    u++;
  if (u < g && b.charCodeAt(u) !== 10 && C)
    for (C = "", u = a, y = c; u < g && (s = b.charCodeAt(u), !!nn(s)); )
      u++;
  return u < g && b.charCodeAt(u) !== 10 || (d = zB(b.slice(1, f)), !d) ? !1 : (r || (typeof e.env.references > "u" && (e.env.references = {}), typeof e.env.references[d] > "u" && (e.env.references[d] = { title: C, href: i }), e.parentType = m, e.line = t + y + 1), !0);
}, UB = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "section",
  "source",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], gn = {}, HB = "[a-zA-Z_:][a-zA-Z0-9:._-]*", VB = "[^\"'=<>`\\x00-\\x20]+", WB = "'[^']*'", ZB = '"[^"]*"', JB = "(?:" + VB + "|" + WB + "|" + ZB + ")", QB = "(?:\\s+" + HB + "(?:\\s*=\\s*" + JB + ")?)", Ao = "<[A-Za-z][A-Za-z0-9\\-]*" + QB + "*\\s*\\/?>", So = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>", YB = "<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->", XB = "<[?][\\s\\S]*?[?]>", KB = "<![A-Z]+\\s+[^>]*>", e$ = "<!\\[CDATA\\[[\\s\\S]*?\\]\\]>", n$ = new RegExp("^(?:" + Ao + "|" + So + "|" + YB + "|" + XB + "|" + KB + "|" + e$ + ")"), t$ = new RegExp("^(?:" + Ao + "|" + So + ")");
gn.HTML_TAG_RE = n$;
gn.HTML_OPEN_CLOSE_TAG_RE = t$;
var o$ = UB, s$ = gn.HTML_OPEN_CLOSE_TAG_RE, Ie = [
  [/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, !0],
  [/^<!--/, /-->/, !0],
  [/^<\?/, /\?>/, !0],
  [/^<![A-Z]/, />/, !0],
  [/^<!\[CDATA\[/, /\]\]>/, !0],
  [new RegExp("^</?(" + o$.join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, !0],
  [new RegExp(s$.source + "\\s*$"), /^$/, !1]
], r$ = function(e, t, o, r) {
  var s, a, c, l, i = e.bMarks[t] + e.tShift[t], p = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || !e.md.options.html || e.src.charCodeAt(i) !== 60)
    return !1;
  for (l = e.src.slice(i, p), s = 0; s < Ie.length && !Ie[s][0].test(l); s++)
    ;
  if (s === Ie.length)
    return !1;
  if (r)
    return Ie[s][2];
  if (a = t + 1, !Ie[s][1].test(l)) {
    for (; a < o && !(e.sCount[a] < e.blkIndent); a++)
      if (i = e.bMarks[a] + e.tShift[a], p = e.eMarks[a], l = e.src.slice(i, p), Ie[s][1].test(l)) {
        l.length !== 0 && a++;
        break;
      }
  }
  return e.line = a, c = e.push("html_block", "", 0), c.map = [t, a], c.content = e.getLines(t, a, e.blkIndent, !0), !0;
}, Ot = B.isSpace, c$ = function(e, t, o, r) {
  var s, a, c, l, i = e.bMarks[t] + e.tShift[t], p = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || (s = e.src.charCodeAt(i), s !== 35 || i >= p))
    return !1;
  for (a = 1, s = e.src.charCodeAt(++i); s === 35 && i < p && a <= 6; )
    a++, s = e.src.charCodeAt(++i);
  return a > 6 || i < p && !Ot(s) ? !1 : (r || (p = e.skipSpacesBack(p, i), c = e.skipCharsBack(p, 35, i), c > i && Ot(e.src.charCodeAt(c - 1)) && (p = c), e.line = t + 1, l = e.push("heading_open", "h" + String(a), 1), l.markup = "########".slice(0, a), l.map = [t, e.line], l = e.push("inline", "", 0), l.content = e.src.slice(i, p).trim(), l.map = [t, e.line], l.children = [], l = e.push("heading_close", "h" + String(a), -1), l.markup = "########".slice(0, a)), !0);
}, a$ = function(e, t, o) {
  var r, s, a, c, l, i, p, h, d, f = t + 1, m, L = e.md.block.ruler.getRules("paragraph");
  if (e.sCount[t] - e.blkIndent >= 4)
    return !1;
  for (m = e.parentType, e.parentType = "paragraph"; f < o && !e.isEmpty(f); f++)
    if (!(e.sCount[f] - e.blkIndent > 3)) {
      if (e.sCount[f] >= e.blkIndent && (i = e.bMarks[f] + e.tShift[f], p = e.eMarks[f], i < p && (d = e.src.charCodeAt(i), (d === 45 || d === 61) && (i = e.skipChars(i, d), i = e.skipSpaces(i), i >= p)))) {
        h = d === 61 ? 1 : 2;
        break;
      }
      if (!(e.sCount[f] < 0)) {
        for (s = !1, a = 0, c = L.length; a < c; a++)
          if (L[a](e, f, o, !0)) {
            s = !0;
            break;
          }
        if (s)
          break;
      }
    }
  return h ? (r = e.getLines(t, f, e.blkIndent, !1).trim(), e.line = f + 1, l = e.push("heading_open", "h" + String(h), 1), l.markup = String.fromCharCode(d), l.map = [t, e.line], l = e.push("inline", "", 0), l.content = r, l.map = [t, e.line - 1], l.children = [], l = e.push("heading_close", "h" + String(h), -1), l.markup = String.fromCharCode(d), e.parentType = m, !0) : !1;
}, i$ = function(e, t) {
  var o, r, s, a, c, l, i = t + 1, p = e.md.block.ruler.getRules("paragraph"), h = e.lineMax;
  for (l = e.parentType, e.parentType = "paragraph"; i < h && !e.isEmpty(i); i++)
    if (!(e.sCount[i] - e.blkIndent > 3) && !(e.sCount[i] < 0)) {
      for (r = !1, s = 0, a = p.length; s < a; s++)
        if (p[s](e, i, h, !0)) {
          r = !0;
          break;
        }
      if (r)
        break;
    }
  return o = e.getLines(t, i, e.blkIndent, !1).trim(), e.line = i, c = e.push("paragraph_open", "p", 1), c.map = [t, e.line], c = e.push("inline", "", 0), c.content = o, c.map = [t, e.line], c.children = [], c = e.push("paragraph_close", "p", -1), e.parentType = l, !0;
}, Lo = tt, _n = B.isSpace;
function de(n, e, t, o) {
  var r, s, a, c, l, i, p, h;
  for (this.src = n, this.md = e, this.env = t, this.tokens = o, this.bMarks = [], this.eMarks = [], this.tShift = [], this.sCount = [], this.bsCount = [], this.blkIndent = 0, this.line = 0, this.lineMax = 0, this.tight = !1, this.ddIndent = -1, this.listIndent = -1, this.parentType = "root", this.level = 0, this.result = "", s = this.src, h = !1, a = c = i = p = 0, l = s.length; c < l; c++) {
    if (r = s.charCodeAt(c), !h)
      if (_n(r)) {
        i++, r === 9 ? p += 4 - p % 4 : p++;
        continue;
      } else
        h = !0;
    (r === 10 || c === l - 1) && (r !== 10 && c++, this.bMarks.push(a), this.eMarks.push(c), this.tShift.push(i), this.sCount.push(p), this.bsCount.push(0), h = !1, i = 0, p = 0, a = c + 1);
  }
  this.bMarks.push(s.length), this.eMarks.push(s.length), this.tShift.push(0), this.sCount.push(0), this.bsCount.push(0), this.lineMax = this.bMarks.length - 1;
}
de.prototype.push = function(n, e, t) {
  var o = new Lo(n, e, t);
  return o.block = !0, t < 0 && this.level--, o.level = this.level, t > 0 && this.level++, this.tokens.push(o), o;
};
de.prototype.isEmpty = function(e) {
  return this.bMarks[e] + this.tShift[e] >= this.eMarks[e];
};
de.prototype.skipEmptyLines = function(e) {
  for (var t = this.lineMax; e < t && !(this.bMarks[e] + this.tShift[e] < this.eMarks[e]); e++)
    ;
  return e;
};
de.prototype.skipSpaces = function(e) {
  for (var t, o = this.src.length; e < o && (t = this.src.charCodeAt(e), !!_n(t)); e++)
    ;
  return e;
};
de.prototype.skipSpacesBack = function(e, t) {
  if (e <= t)
    return e;
  for (; e > t; )
    if (!_n(this.src.charCodeAt(--e)))
      return e + 1;
  return e;
};
de.prototype.skipChars = function(e, t) {
  for (var o = this.src.length; e < o && this.src.charCodeAt(e) === t; e++)
    ;
  return e;
};
de.prototype.skipCharsBack = function(e, t, o) {
  if (e <= o)
    return e;
  for (; e > o; )
    if (t !== this.src.charCodeAt(--e))
      return e + 1;
  return e;
};
de.prototype.getLines = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d = e;
  if (e >= t)
    return "";
  for (p = new Array(t - e), s = 0; d < t; d++, s++) {
    for (a = 0, h = l = this.bMarks[d], d + 1 < t || r ? i = this.eMarks[d] + 1 : i = this.eMarks[d]; l < i && a < o; ) {
      if (c = this.src.charCodeAt(l), _n(c))
        c === 9 ? a += 4 - (a + this.bsCount[d]) % 4 : a++;
      else if (l - h < this.tShift[d])
        a++;
      else
        break;
      l++;
    }
    a > o ? p[s] = new Array(a - o + 1).join(" ") + this.src.slice(l, i) : p[s] = this.src.slice(l, i);
  }
  return p.join("");
};
de.prototype.Token = Lo;
var l$ = de, u$ = nt, tn = [
  // First 2 params - rule name & source. Secondary array - list of rules,
  // which can be terminated by this one.
  ["table", NB, ["paragraph", "reference"]],
  ["code", PB],
  ["fence", IB, ["paragraph", "reference", "blockquote", "list"]],
  ["blockquote", OB, ["paragraph", "reference", "blockquote", "list"]],
  ["hr", MB, ["paragraph", "reference", "blockquote", "list"]],
  ["list", $B, ["paragraph", "reference", "blockquote"]],
  ["reference", GB],
  ["html_block", r$, ["paragraph", "reference", "blockquote"]],
  ["heading", c$, ["paragraph", "reference", "blockquote"]],
  ["lheading", a$],
  ["paragraph", i$]
];
function bn() {
  this.ruler = new u$();
  for (var n = 0; n < tn.length; n++)
    this.ruler.push(tn[n][0], tn[n][1], { alt: (tn[n][2] || []).slice() });
}
bn.prototype.tokenize = function(n, e, t) {
  for (var o, r, s = this.ruler.getRules(""), a = s.length, c = e, l = !1, i = n.md.options.maxNesting; c < t && (n.line = c = n.skipEmptyLines(c), !(c >= t || n.sCount[c] < n.blkIndent)); ) {
    if (n.level >= i) {
      n.line = t;
      break;
    }
    for (r = 0; r < a && (o = s[r](n, c, t, !1), !o); r++)
      ;
    n.tight = !l, n.isEmpty(n.line - 1) && (l = !0), c = n.line, c < t && n.isEmpty(c) && (l = !0, c++, n.line = c);
  }
};
bn.prototype.parse = function(n, e, t, o) {
  var r;
  n && (r = new this.State(n, e, t, o), this.tokenize(r, r.line, r.lineMax));
};
bn.prototype.State = l$;
var p$ = bn;
function h$(n) {
  switch (n) {
    case 10:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 42:
    case 43:
    case 45:
    case 58:
    case 60:
    case 61:
    case 62:
    case 64:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 123:
    case 125:
    case 126:
      return !0;
    default:
      return !1;
  }
}
var d$ = function(e, t) {
  for (var o = e.pos; o < e.posMax && !h$(e.src.charCodeAt(o)); )
    o++;
  return o === e.pos ? !1 : (t || (e.pending += e.src.slice(e.pos, o)), e.pos = o, !0);
}, f$ = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i, m$ = function(e, t) {
  var o, r, s, a, c, l, i, p;
  return !e.md.options.linkify || e.linkLevel > 0 || (o = e.pos, r = e.posMax, o + 3 > r) || e.src.charCodeAt(o) !== 58 || e.src.charCodeAt(o + 1) !== 47 || e.src.charCodeAt(o + 2) !== 47 || (s = e.pending.match(f$), !s) || (a = s[1], c = e.md.linkify.matchAtStart(e.src.slice(o - a.length)), !c) || (l = c.url, l = l.replace(/\*+$/, ""), i = e.md.normalizeLink(l), !e.md.validateLink(i)) ? !1 : (t || (e.pending = e.pending.slice(0, -a.length), p = e.push("link_open", "a", 1), p.attrs = [["href", i]], p.markup = "linkify", p.info = "auto", p = e.push("text", "", 0), p.content = e.md.normalizeLinkText(l), p = e.push("link_close", "a", -1), p.markup = "linkify", p.info = "auto"), e.pos += l.length - a.length, !0);
}, g$ = B.isSpace, _$ = function(e, t) {
  var o, r, s, a = e.pos;
  if (e.src.charCodeAt(a) !== 10)
    return !1;
  if (o = e.pending.length - 1, r = e.posMax, !t)
    if (o >= 0 && e.pending.charCodeAt(o) === 32)
      if (o >= 1 && e.pending.charCodeAt(o - 1) === 32) {
        for (s = o - 1; s >= 1 && e.pending.charCodeAt(s - 1) === 32; )
          s--;
        e.pending = e.pending.slice(0, s), e.push("hardbreak", "br", 0);
      } else
        e.pending = e.pending.slice(0, -1), e.push("softbreak", "br", 0);
    else
      e.push("softbreak", "br", 0);
  for (a++; a < r && g$(e.src.charCodeAt(a)); )
    a++;
  return e.pos = a, !0;
}, b$ = B.isSpace, st = [];
for (var Ft = 0; Ft < 256; Ft++)
  st.push(0);
"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(n) {
  st[n.charCodeAt(0)] = 1;
});
var k$ = function(e, t) {
  var o, r, s, a, c, l = e.pos, i = e.posMax;
  if (e.src.charCodeAt(l) !== 92 || (l++, l >= i))
    return !1;
  if (o = e.src.charCodeAt(l), o === 10) {
    for (t || e.push("hardbreak", "br", 0), l++; l < i && (o = e.src.charCodeAt(l), !!b$(o)); )
      l++;
    return e.pos = l, !0;
  }
  return a = e.src[l], o >= 55296 && o <= 56319 && l + 1 < i && (r = e.src.charCodeAt(l + 1), r >= 56320 && r <= 57343 && (a += e.src[l + 1], l++)), s = "\\" + a, t || (c = e.push("text_special", "", 0), o < 256 && st[o] !== 0 ? c.content = a : c.content = s, c.markup = s, c.info = "escape"), e.pos = l + 1, !0;
}, y$ = function(e, t) {
  var o, r, s, a, c, l, i, p, h = e.pos, d = e.src.charCodeAt(h);
  if (d !== 96)
    return !1;
  for (o = h, h++, r = e.posMax; h < r && e.src.charCodeAt(h) === 96; )
    h++;
  if (s = e.src.slice(o, h), i = s.length, e.backticksScanned && (e.backticks[i] || 0) <= o)
    return t || (e.pending += s), e.pos += i, !0;
  for (c = l = h; (c = e.src.indexOf("`", l)) !== -1; ) {
    for (l = c + 1; l < r && e.src.charCodeAt(l) === 96; )
      l++;
    if (p = l - c, p === i)
      return t || (a = e.push("code_inline", "code", 0), a.markup = s, a.content = e.src.slice(h, c).replace(/\n/g, " ").replace(/^ (.+) $/, "$1")), e.pos = l, !0;
    e.backticks[p] = c;
  }
  return e.backticksScanned = !0, t || (e.pending += s), e.pos += i, !0;
}, kn = {};
kn.tokenize = function(e, t) {
  var o, r, s, a, c, l = e.pos, i = e.src.charCodeAt(l);
  if (t || i !== 126 || (r = e.scanDelims(e.pos, !0), a = r.length, c = String.fromCharCode(i), a < 2))
    return !1;
  for (a % 2 && (s = e.push("text", "", 0), s.content = c, a--), o = 0; o < a; o += 2)
    s = e.push("text", "", 0), s.content = c + c, e.delimiters.push({
      marker: i,
      length: 0,
      // disable "rule of 3" length checks meant for emphasis
      token: e.tokens.length - 1,
      end: -1,
      open: r.can_open,
      close: r.can_close
    });
  return e.pos += r.length, !0;
};
function Mt(n, e) {
  var t, o, r, s, a, c = [], l = e.length;
  for (t = 0; t < l; t++)
    r = e[t], r.marker === 126 && r.end !== -1 && (s = e[r.end], a = n.tokens[r.token], a.type = "s_open", a.tag = "s", a.nesting = 1, a.markup = "~~", a.content = "", a = n.tokens[s.token], a.type = "s_close", a.tag = "s", a.nesting = -1, a.markup = "~~", a.content = "", n.tokens[s.token - 1].type === "text" && n.tokens[s.token - 1].content === "~" && c.push(s.token - 1));
  for (; c.length; ) {
    for (t = c.pop(), o = t + 1; o < n.tokens.length && n.tokens[o].type === "s_close"; )
      o++;
    o--, t !== o && (a = n.tokens[o], n.tokens[o] = n.tokens[t], n.tokens[t] = a);
  }
}
kn.postProcess = function(e) {
  var t, o = e.tokens_meta, r = e.tokens_meta.length;
  for (Mt(e, e.delimiters), t = 0; t < r; t++)
    o[t] && o[t].delimiters && Mt(e, o[t].delimiters);
};
var yn = {};
yn.tokenize = function(e, t) {
  var o, r, s, a = e.pos, c = e.src.charCodeAt(a);
  if (t || c !== 95 && c !== 42)
    return !1;
  for (r = e.scanDelims(e.pos, c === 42), o = 0; o < r.length; o++)
    s = e.push("text", "", 0), s.content = String.fromCharCode(c), e.delimiters.push({
      // Char code of the starting marker (number).
      //
      marker: c,
      // Total length of these series of delimiters.
      //
      length: r.length,
      // A position of the token this delimiter corresponds to.
      //
      token: e.tokens.length - 1,
      // If this delimiter is matched as a valid opener, `end` will be
      // equal to its position, otherwise it's `-1`.
      //
      end: -1,
      // Boolean flags that determine if this delimiter could open or close
      // an emphasis.
      //
      open: r.can_open,
      close: r.can_close
    });
  return e.pos += r.length, !0;
};
function Bt(n, e) {
  var t, o, r, s, a, c, l = e.length;
  for (t = l - 1; t >= 0; t--)
    o = e[t], !(o.marker !== 95 && o.marker !== 42) && o.end !== -1 && (r = e[o.end], c = t > 0 && e[t - 1].end === o.end + 1 && // check that first two markers match and adjacent
    e[t - 1].marker === o.marker && e[t - 1].token === o.token - 1 && // check that last two markers are adjacent (we can safely assume they match)
    e[o.end + 1].token === r.token + 1, a = String.fromCharCode(o.marker), s = n.tokens[o.token], s.type = c ? "strong_open" : "em_open", s.tag = c ? "strong" : "em", s.nesting = 1, s.markup = c ? a + a : a, s.content = "", s = n.tokens[r.token], s.type = c ? "strong_close" : "em_close", s.tag = c ? "strong" : "em", s.nesting = -1, s.markup = c ? a + a : a, s.content = "", c && (n.tokens[e[t - 1].token].content = "", n.tokens[e[o.end + 1].token].content = "", t--));
}
yn.postProcess = function(e) {
  var t, o = e.tokens_meta, r = e.tokens_meta.length;
  for (Bt(e, e.delimiters), t = 0; t < r; t++)
    o[t] && o[t].delimiters && Bt(e, o[t].delimiters);
};
var w$ = B.normalizeReference, Rn = B.isSpace, v$ = function(e, t) {
  var o, r, s, a, c, l, i, p, h, d = "", f = "", m = e.pos, L = e.posMax, S = e.pos, b = !0;
  if (e.src.charCodeAt(e.pos) !== 91 || (c = e.pos + 1, a = e.md.helpers.parseLinkLabel(e, e.pos, !0), a < 0))
    return !1;
  if (l = a + 1, l < L && e.src.charCodeAt(l) === 40) {
    for (b = !1, l++; l < L && (r = e.src.charCodeAt(l), !(!Rn(r) && r !== 10)); l++)
      ;
    if (l >= L)
      return !1;
    if (S = l, i = e.md.helpers.parseLinkDestination(e.src, l, e.posMax), i.ok) {
      for (d = e.md.normalizeLink(i.str), e.md.validateLink(d) ? l = i.pos : d = "", S = l; l < L && (r = e.src.charCodeAt(l), !(!Rn(r) && r !== 10)); l++)
        ;
      if (i = e.md.helpers.parseLinkTitle(e.src, l, e.posMax), l < L && S !== l && i.ok)
        for (f = i.str, l = i.pos; l < L && (r = e.src.charCodeAt(l), !(!Rn(r) && r !== 10)); l++)
          ;
    }
    (l >= L || e.src.charCodeAt(l) !== 41) && (b = !0), l++;
  }
  if (b) {
    if (typeof e.env.references > "u")
      return !1;
    if (l < L && e.src.charCodeAt(l) === 91 ? (S = l + 1, l = e.md.helpers.parseLinkLabel(e, l), l >= 0 ? s = e.src.slice(S, l++) : l = a + 1) : l = a + 1, s || (s = e.src.slice(c, a)), p = e.env.references[w$(s)], !p)
      return e.pos = m, !1;
    d = p.href, f = p.title;
  }
  return t || (e.pos = c, e.posMax = a, h = e.push("link_open", "a", 1), h.attrs = o = [["href", d]], f && o.push(["title", f]), e.linkLevel++, e.md.inline.tokenize(e), e.linkLevel--, h = e.push("link_close", "a", -1)), e.pos = l, e.posMax = L, !0;
}, x$ = B.normalizeReference, Nn = B.isSpace, A$ = function(e, t) {
  var o, r, s, a, c, l, i, p, h, d, f, m, L, S = "", b = e.pos, k = e.posMax;
  if (e.src.charCodeAt(e.pos) !== 33 || e.src.charCodeAt(e.pos + 1) !== 91 || (l = e.pos + 2, c = e.md.helpers.parseLinkLabel(e, e.pos + 1, !1), c < 0))
    return !1;
  if (i = c + 1, i < k && e.src.charCodeAt(i) === 40) {
    for (i++; i < k && (r = e.src.charCodeAt(i), !(!Nn(r) && r !== 10)); i++)
      ;
    if (i >= k)
      return !1;
    for (L = i, h = e.md.helpers.parseLinkDestination(e.src, i, e.posMax), h.ok && (S = e.md.normalizeLink(h.str), e.md.validateLink(S) ? i = h.pos : S = ""), L = i; i < k && (r = e.src.charCodeAt(i), !(!Nn(r) && r !== 10)); i++)
      ;
    if (h = e.md.helpers.parseLinkTitle(e.src, i, e.posMax), i < k && L !== i && h.ok)
      for (d = h.str, i = h.pos; i < k && (r = e.src.charCodeAt(i), !(!Nn(r) && r !== 10)); i++)
        ;
    else
      d = "";
    if (i >= k || e.src.charCodeAt(i) !== 41)
      return e.pos = b, !1;
    i++;
  } else {
    if (typeof e.env.references > "u")
      return !1;
    if (i < k && e.src.charCodeAt(i) === 91 ? (L = i + 1, i = e.md.helpers.parseLinkLabel(e, i), i >= 0 ? a = e.src.slice(L, i++) : i = c + 1) : i = c + 1, a || (a = e.src.slice(l, c)), p = e.env.references[x$(a)], !p)
      return e.pos = b, !1;
    S = p.href, d = p.title;
  }
  return t || (s = e.src.slice(l, c), e.md.inline.parse(
    s,
    e.md,
    e.env,
    m = []
  ), f = e.push("image", "img", 0), f.attrs = o = [["src", S], ["alt", ""]], f.children = m, f.content = s, d && o.push(["title", d])), e.pos = i, e.posMax = k, !0;
}, S$ = /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/, L$ = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/, C$ = function(e, t) {
  var o, r, s, a, c, l, i = e.pos;
  if (e.src.charCodeAt(i) !== 60)
    return !1;
  for (c = e.pos, l = e.posMax; ; ) {
    if (++i >= l || (a = e.src.charCodeAt(i), a === 60))
      return !1;
    if (a === 62)
      break;
  }
  return o = e.src.slice(c + 1, i), L$.test(o) ? (r = e.md.normalizeLink(o), e.md.validateLink(r) ? (t || (s = e.push("link_open", "a", 1), s.attrs = [["href", r]], s.markup = "autolink", s.info = "auto", s = e.push("text", "", 0), s.content = e.md.normalizeLinkText(o), s = e.push("link_close", "a", -1), s.markup = "autolink", s.info = "auto"), e.pos += o.length + 2, !0) : !1) : S$.test(o) ? (r = e.md.normalizeLink("mailto:" + o), e.md.validateLink(r) ? (t || (s = e.push("link_open", "a", 1), s.attrs = [["href", r]], s.markup = "autolink", s.info = "auto", s = e.push("text", "", 0), s.content = e.md.normalizeLinkText(o), s = e.push("link_close", "a", -1), s.markup = "autolink", s.info = "auto"), e.pos += o.length + 2, !0) : !1) : !1;
}, E$ = gn.HTML_TAG_RE;
function T$(n) {
  return /^<a[>\s]/i.test(n);
}
function D$(n) {
  return /^<\/a\s*>/i.test(n);
}
function q$(n) {
  var e = n | 32;
  return e >= 97 && e <= 122;
}
var j$ = function(e, t) {
  var o, r, s, a, c = e.pos;
  return !e.md.options.html || (s = e.posMax, e.src.charCodeAt(c) !== 60 || c + 2 >= s) || (o = e.src.charCodeAt(c + 1), o !== 33 && o !== 63 && o !== 47 && !q$(o)) || (r = e.src.slice(c).match(E$), !r) ? !1 : (t || (a = e.push("html_inline", "", 0), a.content = e.src.slice(c, c + r[0].length), T$(a.content) && e.linkLevel++, D$(a.content) && e.linkLevel--), e.pos += r[0].length, !0);
}, $t = _o, R$ = B.has, N$ = B.isValidEntityCode, zt = B.fromCodePoint, P$ = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i, I$ = /^&([a-z][a-z0-9]{1,31});/i, O$ = function(e, t) {
  var o, r, s, a, c = e.pos, l = e.posMax;
  if (e.src.charCodeAt(c) !== 38 || c + 1 >= l)
    return !1;
  if (o = e.src.charCodeAt(c + 1), o === 35) {
    if (s = e.src.slice(c).match(P$), s)
      return t || (r = s[1][0].toLowerCase() === "x" ? parseInt(s[1].slice(1), 16) : parseInt(s[1], 10), a = e.push("text_special", "", 0), a.content = N$(r) ? zt(r) : zt(65533), a.markup = s[0], a.info = "entity"), e.pos += s[0].length, !0;
  } else if (s = e.src.slice(c).match(I$), s && R$($t, s[1]))
    return t || (a = e.push("text_special", "", 0), a.content = $t[s[1]], a.markup = s[0], a.info = "entity"), e.pos += s[0].length, !0;
  return !1;
};
function Gt(n, e) {
  var t, o, r, s, a, c, l, i, p = {}, h = e.length;
  if (h) {
    var d = 0, f = -2, m = [];
    for (t = 0; t < h; t++)
      if (r = e[t], m.push(0), (e[d].marker !== r.marker || f !== r.token - 1) && (d = t), f = r.token, r.length = r.length || 0, !!r.close) {
        for (p.hasOwnProperty(r.marker) || (p[r.marker] = [-1, -1, -1, -1, -1, -1]), a = p[r.marker][(r.open ? 3 : 0) + r.length % 3], o = d - m[d] - 1, c = o; o > a; o -= m[o] + 1)
          if (s = e[o], s.marker === r.marker && s.open && s.end < 0 && (l = !1, (s.close || r.open) && (s.length + r.length) % 3 === 0 && (s.length % 3 !== 0 || r.length % 3 !== 0) && (l = !0), !l)) {
            i = o > 0 && !e[o - 1].open ? m[o - 1] + 1 : 0, m[t] = t - o + i, m[o] = i, r.open = !1, s.end = t, s.close = !1, c = -1, f = -2;
            break;
          }
        c !== -1 && (p[r.marker][(r.open ? 3 : 0) + (r.length || 0) % 3] = c);
      }
  }
}
var F$ = function(e) {
  var t, o = e.tokens_meta, r = e.tokens_meta.length;
  for (Gt(e, e.delimiters), t = 0; t < r; t++)
    o[t] && o[t].delimiters && Gt(e, o[t].delimiters);
}, M$ = function(e) {
  var t, o, r = 0, s = e.tokens, a = e.tokens.length;
  for (t = o = 0; t < a; t++)
    s[t].nesting < 0 && r--, s[t].level = r, s[t].nesting > 0 && r++, s[t].type === "text" && t + 1 < a && s[t + 1].type === "text" ? s[t + 1].content = s[t].content + s[t + 1].content : (t !== o && (s[o] = s[t]), o++);
  t !== o && (s.length = o);
}, rt = tt, Ut = B.isWhiteSpace, Ht = B.isPunctChar, Vt = B.isMdAsciiPunct;
function Ye(n, e, t, o) {
  this.src = n, this.env = t, this.md = e, this.tokens = o, this.tokens_meta = Array(o.length), this.pos = 0, this.posMax = this.src.length, this.level = 0, this.pending = "", this.pendingLevel = 0, this.cache = {}, this.delimiters = [], this._prev_delimiters = [], this.backticks = {}, this.backticksScanned = !1, this.linkLevel = 0;
}
Ye.prototype.pushPending = function() {
  var n = new rt("text", "", 0);
  return n.content = this.pending, n.level = this.pendingLevel, this.tokens.push(n), this.pending = "", n;
};
Ye.prototype.push = function(n, e, t) {
  this.pending && this.pushPending();
  var o = new rt(n, e, t), r = null;
  return t < 0 && (this.level--, this.delimiters = this._prev_delimiters.pop()), o.level = this.level, t > 0 && (this.level++, this._prev_delimiters.push(this.delimiters), this.delimiters = [], r = { delimiters: this.delimiters }), this.pendingLevel = this.level, this.tokens.push(o), this.tokens_meta.push(r), o;
};
Ye.prototype.scanDelims = function(n, e) {
  var t = n, o, r, s, a, c, l, i, p, h, d = !0, f = !0, m = this.posMax, L = this.src.charCodeAt(n);
  for (o = n > 0 ? this.src.charCodeAt(n - 1) : 32; t < m && this.src.charCodeAt(t) === L; )
    t++;
  return s = t - n, r = t < m ? this.src.charCodeAt(t) : 32, i = Vt(o) || Ht(String.fromCharCode(o)), h = Vt(r) || Ht(String.fromCharCode(r)), l = Ut(o), p = Ut(r), p ? d = !1 : h && (l || i || (d = !1)), l ? f = !1 : i && (p || h || (f = !1)), e ? (a = d, c = f) : (a = d && (!f || i), c = f && (!d || h)), {
    can_open: a,
    can_close: c,
    length: s
  };
};
Ye.prototype.Token = rt;
var B$ = Ye, Wt = nt, Pn = [
  ["text", d$],
  ["linkify", m$],
  ["newline", _$],
  ["escape", k$],
  ["backticks", y$],
  ["strikethrough", kn.tokenize],
  ["emphasis", yn.tokenize],
  ["link", v$],
  ["image", A$],
  ["autolink", C$],
  ["html_inline", j$],
  ["entity", O$]
], In = [
  ["balance_pairs", F$],
  ["strikethrough", kn.postProcess],
  ["emphasis", yn.postProcess],
  // rules for pairs separate '**' into its own text tokens, which may be left unused,
  // rule below merges unused segments back with the rest of the text
  ["fragments_join", M$]
];
function Xe() {
  var n;
  for (this.ruler = new Wt(), n = 0; n < Pn.length; n++)
    this.ruler.push(Pn[n][0], Pn[n][1]);
  for (this.ruler2 = new Wt(), n = 0; n < In.length; n++)
    this.ruler2.push(In[n][0], In[n][1]);
}
Xe.prototype.skipToken = function(n) {
  var e, t, o = n.pos, r = this.ruler.getRules(""), s = r.length, a = n.md.options.maxNesting, c = n.cache;
  if (typeof c[o] < "u") {
    n.pos = c[o];
    return;
  }
  if (n.level < a)
    for (t = 0; t < s && (n.level++, e = r[t](n, !0), n.level--, !e); t++)
      ;
  else
    n.pos = n.posMax;
  e || n.pos++, c[o] = n.pos;
};
Xe.prototype.tokenize = function(n) {
  for (var e, t, o = this.ruler.getRules(""), r = o.length, s = n.posMax, a = n.md.options.maxNesting; n.pos < s; ) {
    if (n.level < a)
      for (t = 0; t < r && (e = o[t](n, !1), !e); t++)
        ;
    if (e) {
      if (n.pos >= s)
        break;
      continue;
    }
    n.pending += n.src[n.pos++];
  }
  n.pending && n.pushPending();
};
Xe.prototype.parse = function(n, e, t, o) {
  var r, s, a, c = new this.State(n, e, t, o);
  for (this.tokenize(c), s = this.ruler2.getRules(""), a = s.length, r = 0; r < a; r++)
    s[r](c);
};
Xe.prototype.State = B$;
var $$ = Xe, On, Zt;
function z$() {
  return Zt || (Zt = 1, On = function(n) {
    var e = {};
    n = n || {}, e.src_Any = bo().source, e.src_Cc = ko().source, e.src_Z = yo().source, e.src_P = et.source, e.src_ZPCc = [e.src_Z, e.src_P, e.src_Cc].join("|"), e.src_ZCc = [e.src_Z, e.src_Cc].join("|");
    var t = "[><｜]";
    return e.src_pseudo_letter = "(?:(?!" + t + "|" + e.src_ZPCc + ")" + e.src_Any + ")", e.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", e.src_auth = "(?:(?:(?!" + e.src_ZCc + "|[@/\\[\\]()]).)+@)?", e.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?", e.src_host_terminator = "(?=$|" + t + "|" + e.src_ZPCc + ")(?!" + (n["---"] ? "-(?!--)|" : "-|") + "_|:\\d|\\.-|\\.(?!$|" + e.src_ZPCc + "))", e.src_path = "(?:[/?#](?:(?!" + e.src_ZCc + "|" + t + `|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!` + e.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + e.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + e.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + e.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + e.src_ZCc + "|[']).)+\\'|\\'(?=" + e.src_pseudo_letter + "|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + e.src_ZCc + "|[.]|$)|" + (n["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + ",(?!" + e.src_ZCc + "|$)|;(?!" + e.src_ZCc + "|$)|\\!+(?!" + e.src_ZCc + "|[!]|$)|\\?(?!" + e.src_ZCc + "|[?]|$))+|\\/)?", e.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*', e.src_xn = "xn--[a-z0-9\\-]{1,59}", e.src_domain_root = // Allow letters & digits (http://test1)
    "(?:" + e.src_xn + "|" + e.src_pseudo_letter + "{1,63})", e.src_domain = "(?:" + e.src_xn + "|(?:" + e.src_pseudo_letter + ")|(?:" + e.src_pseudo_letter + "(?:-|" + e.src_pseudo_letter + "){0,61}" + e.src_pseudo_letter + "))", e.src_host = "(?:(?:(?:(?:" + e.src_domain + ")\\.)*" + e.src_domain + "))", e.tpl_host_fuzzy = "(?:" + e.src_ip4 + "|(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%)))", e.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%))", e.src_host_strict = e.src_host + e.src_host_terminator, e.tpl_host_fuzzy_strict = e.tpl_host_fuzzy + e.src_host_terminator, e.src_host_port_strict = e.src_host + e.src_port + e.src_host_terminator, e.tpl_host_port_fuzzy_strict = e.tpl_host_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_port_no_ip_fuzzy_strict = e.tpl_host_no_ip_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + e.src_ZPCc + "|>|$))", e.tpl_email_fuzzy = "(^|" + t + '|"|\\(|' + e.src_ZCc + ")(" + e.src_email_name + "@" + e.tpl_host_fuzzy_strict + ")", e.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
    // but can start with > (markdown blockquote)
    "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_fuzzy_strict + e.src_path + ")", e.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
    // but can start with > (markdown blockquote)
    "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_no_ip_fuzzy_strict + e.src_path + ")", e;
  }), On;
}
function Wn(n) {
  var e = Array.prototype.slice.call(arguments, 1);
  return e.forEach(function(t) {
    t && Object.keys(t).forEach(function(o) {
      n[o] = t[o];
    });
  }), n;
}
function wn(n) {
  return Object.prototype.toString.call(n);
}
function G$(n) {
  return wn(n) === "[object String]";
}
function U$(n) {
  return wn(n) === "[object Object]";
}
function H$(n) {
  return wn(n) === "[object RegExp]";
}
function Jt(n) {
  return wn(n) === "[object Function]";
}
function V$(n) {
  return n.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
}
var Co = {
  fuzzyLink: !0,
  fuzzyEmail: !0,
  fuzzyIP: !1
};
function W$(n) {
  return Object.keys(n || {}).reduce(function(e, t) {
    return e || Co.hasOwnProperty(t);
  }, !1);
}
var Z$ = {
  "http:": {
    validate: function(n, e, t) {
      var o = n.slice(e);
      return t.re.http || (t.re.http = new RegExp(
        "^\\/\\/" + t.re.src_auth + t.re.src_host_port_strict + t.re.src_path,
        "i"
      )), t.re.http.test(o) ? o.match(t.re.http)[0].length : 0;
    }
  },
  "https:": "http:",
  "ftp:": "http:",
  "//": {
    validate: function(n, e, t) {
      var o = n.slice(e);
      return t.re.no_http || (t.re.no_http = new RegExp(
        "^" + t.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'
        // with code comments
        "(?:localhost|(?:(?:" + t.re.src_domain + ")\\.)+" + t.re.src_domain_root + ")" + t.re.src_port + t.re.src_host_terminator + t.re.src_path,
        "i"
      )), t.re.no_http.test(o) ? e >= 3 && n[e - 3] === ":" || e >= 3 && n[e - 3] === "/" ? 0 : o.match(t.re.no_http)[0].length : 0;
    }
  },
  "mailto:": {
    validate: function(n, e, t) {
      var o = n.slice(e);
      return t.re.mailto || (t.re.mailto = new RegExp(
        "^" + t.re.src_email_name + "@" + t.re.src_host_strict,
        "i"
      )), t.re.mailto.test(o) ? o.match(t.re.mailto)[0].length : 0;
    }
  }
}, J$ = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]", Q$ = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
function Y$(n) {
  n.__index__ = -1, n.__text_cache__ = "";
}
function X$(n) {
  return function(e, t) {
    var o = e.slice(t);
    return n.test(o) ? o.match(n)[0].length : 0;
  };
}
function Qt() {
  return function(n, e) {
    e.normalize(n);
  };
}
function cn(n) {
  var e = n.re = z$()(n.__opts__), t = n.__tlds__.slice();
  n.onCompile(), n.__tlds_replaced__ || t.push(J$), t.push(e.src_xn), e.src_tlds = t.join("|");
  function o(c) {
    return c.replace("%TLDS%", e.src_tlds);
  }
  e.email_fuzzy = RegExp(o(e.tpl_email_fuzzy), "i"), e.link_fuzzy = RegExp(o(e.tpl_link_fuzzy), "i"), e.link_no_ip_fuzzy = RegExp(o(e.tpl_link_no_ip_fuzzy), "i"), e.host_fuzzy_test = RegExp(o(e.tpl_host_fuzzy_test), "i");
  var r = [];
  n.__compiled__ = {};
  function s(c, l) {
    throw new Error('(LinkifyIt) Invalid schema "' + c + '": ' + l);
  }
  Object.keys(n.__schemas__).forEach(function(c) {
    var l = n.__schemas__[c];
    if (l !== null) {
      var i = { validate: null, link: null };
      if (n.__compiled__[c] = i, U$(l)) {
        H$(l.validate) ? i.validate = X$(l.validate) : Jt(l.validate) ? i.validate = l.validate : s(c, l), Jt(l.normalize) ? i.normalize = l.normalize : l.normalize ? s(c, l) : i.normalize = Qt();
        return;
      }
      if (G$(l)) {
        r.push(c);
        return;
      }
      s(c, l);
    }
  }), r.forEach(function(c) {
    n.__compiled__[n.__schemas__[c]] && (n.__compiled__[c].validate = n.__compiled__[n.__schemas__[c]].validate, n.__compiled__[c].normalize = n.__compiled__[n.__schemas__[c]].normalize);
  }), n.__compiled__[""] = { validate: null, normalize: Qt() };
  var a = Object.keys(n.__compiled__).filter(function(c) {
    return c.length > 0 && n.__compiled__[c];
  }).map(V$).join("|");
  n.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + a + ")", "i"), n.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + a + ")", "ig"), n.re.schema_at_start = RegExp("^" + n.re.schema_search.source, "i"), n.re.pretest = RegExp(
    "(" + n.re.schema_test.source + ")|(" + n.re.host_fuzzy_test.source + ")|@",
    "i"
  ), Y$(n);
}
function K$(n, e) {
  var t = n.__index__, o = n.__last_index__, r = n.__text_cache__.slice(t, o);
  this.schema = n.__schema__.toLowerCase(), this.index = t + e, this.lastIndex = o + e, this.raw = r, this.text = r, this.url = r;
}
function Zn(n, e) {
  var t = new K$(n, e);
  return n.__compiled__[t.schema].normalize(t, n), t;
}
function te(n, e) {
  if (!(this instanceof te))
    return new te(n, e);
  e || W$(n) && (e = n, n = {}), this.__opts__ = Wn({}, Co, e), this.__index__ = -1, this.__last_index__ = -1, this.__schema__ = "", this.__text_cache__ = "", this.__schemas__ = Wn({}, Z$, n), this.__compiled__ = {}, this.__tlds__ = Q$, this.__tlds_replaced__ = !1, this.re = {}, cn(this);
}
te.prototype.add = function(e, t) {
  return this.__schemas__[e] = t, cn(this), this;
};
te.prototype.set = function(e) {
  return this.__opts__ = Wn(this.__opts__, e), this;
};
te.prototype.test = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length)
    return !1;
  var t, o, r, s, a, c, l, i, p;
  if (this.re.schema_test.test(e)) {
    for (l = this.re.schema_search, l.lastIndex = 0; (t = l.exec(e)) !== null; )
      if (s = this.testSchemaAt(e, t[2], l.lastIndex), s) {
        this.__schema__ = t[2], this.__index__ = t.index + t[1].length, this.__last_index__ = t.index + t[0].length + s;
        break;
      }
  }
  return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (i = e.search(this.re.host_fuzzy_test), i >= 0 && (this.__index__ < 0 || i < this.__index__) && (o = e.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null && (a = o.index + o[1].length, (this.__index__ < 0 || a < this.__index__) && (this.__schema__ = "", this.__index__ = a, this.__last_index__ = o.index + o[0].length))), this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && (p = e.indexOf("@"), p >= 0 && (r = e.match(this.re.email_fuzzy)) !== null && (a = r.index + r[1].length, c = r.index + r[0].length, (this.__index__ < 0 || a < this.__index__ || a === this.__index__ && c > this.__last_index__) && (this.__schema__ = "mailto:", this.__index__ = a, this.__last_index__ = c))), this.__index__ >= 0;
};
te.prototype.pretest = function(e) {
  return this.re.pretest.test(e);
};
te.prototype.testSchemaAt = function(e, t, o) {
  return this.__compiled__[t.toLowerCase()] ? this.__compiled__[t.toLowerCase()].validate(e, o, this) : 0;
};
te.prototype.match = function(e) {
  var t = 0, o = [];
  this.__index__ >= 0 && this.__text_cache__ === e && (o.push(Zn(this, t)), t = this.__last_index__);
  for (var r = t ? e.slice(t) : e; this.test(r); )
    o.push(Zn(this, t)), r = r.slice(this.__last_index__), t += this.__last_index__;
  return o.length ? o : null;
};
te.prototype.matchAtStart = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length)
    return null;
  var t = this.re.schema_at_start.exec(e);
  if (!t)
    return null;
  var o = this.testSchemaAt(e, t[2], t[0].length);
  return o ? (this.__schema__ = t[2], this.__index__ = t.index + t[1].length, this.__last_index__ = t.index + t[0].length + o, Zn(this, 0)) : null;
};
te.prototype.tlds = function(e, t) {
  return e = Array.isArray(e) ? e : [e], t ? (this.__tlds__ = this.__tlds__.concat(e).sort().filter(function(o, r, s) {
    return o !== s[r - 1];
  }).reverse(), cn(this), this) : (this.__tlds__ = e.slice(), this.__tlds_replaced__ = !0, cn(this), this);
};
te.prototype.normalize = function(e) {
  e.schema || (e.url = "http://" + e.url), e.schema === "mailto:" && !/^mailto:/i.test(e.url) && (e.url = "mailto:" + e.url);
};
te.prototype.onCompile = function() {
};
var ez = te;
const Be = 2147483647, ue = 36, ct = 1, Je = 26, nz = 38, tz = 700, Eo = 72, To = 128, Do = "-", oz = /^xn--/, sz = /[^\0-\x7F]/, rz = /[\x2E\u3002\uFF0E\uFF61]/g, cz = {
  overflow: "Overflow: input needs wider integers to process",
  "not-basic": "Illegal input >= 0x80 (not a basic code point)",
  "invalid-input": "Invalid input"
}, Fn = ue - ct, pe = Math.floor, Mn = String.fromCharCode;
function be(n) {
  throw new RangeError(cz[n]);
}
function az(n, e) {
  const t = [];
  let o = n.length;
  for (; o--; )
    t[o] = e(n[o]);
  return t;
}
function qo(n, e) {
  const t = n.split("@");
  let o = "";
  t.length > 1 && (o = t[0] + "@", n = t[1]), n = n.replace(rz, ".");
  const r = n.split("."), s = az(r, e).join(".");
  return o + s;
}
function at(n) {
  const e = [];
  let t = 0;
  const o = n.length;
  for (; t < o; ) {
    const r = n.charCodeAt(t++);
    if (r >= 55296 && r <= 56319 && t < o) {
      const s = n.charCodeAt(t++);
      (s & 64512) == 56320 ? e.push(((r & 1023) << 10) + (s & 1023) + 65536) : (e.push(r), t--);
    } else
      e.push(r);
  }
  return e;
}
const jo = (n) => String.fromCodePoint(...n), iz = function(n) {
  return n >= 48 && n < 58 ? 26 + (n - 48) : n >= 65 && n < 91 ? n - 65 : n >= 97 && n < 123 ? n - 97 : ue;
}, Yt = function(n, e) {
  return n + 22 + 75 * (n < 26) - ((e != 0) << 5);
}, Ro = function(n, e, t) {
  let o = 0;
  for (n = t ? pe(n / tz) : n >> 1, n += pe(n / e); n > Fn * Je >> 1; o += ue)
    n = pe(n / Fn);
  return pe(o + (Fn + 1) * n / (n + nz));
}, it = function(n) {
  const e = [], t = n.length;
  let o = 0, r = To, s = Eo, a = n.lastIndexOf(Do);
  a < 0 && (a = 0);
  for (let c = 0; c < a; ++c)
    n.charCodeAt(c) >= 128 && be("not-basic"), e.push(n.charCodeAt(c));
  for (let c = a > 0 ? a + 1 : 0; c < t; ) {
    const l = o;
    for (let p = 1, h = ue; ; h += ue) {
      c >= t && be("invalid-input");
      const d = iz(n.charCodeAt(c++));
      d >= ue && be("invalid-input"), d > pe((Be - o) / p) && be("overflow"), o += d * p;
      const f = h <= s ? ct : h >= s + Je ? Je : h - s;
      if (d < f)
        break;
      const m = ue - f;
      p > pe(Be / m) && be("overflow"), p *= m;
    }
    const i = e.length + 1;
    s = Ro(o - l, i, l == 0), pe(o / i) > Be - r && be("overflow"), r += pe(o / i), o %= i, e.splice(o++, 0, r);
  }
  return String.fromCodePoint(...e);
}, lt = function(n) {
  const e = [];
  n = at(n);
  const t = n.length;
  let o = To, r = 0, s = Eo;
  for (const l of n)
    l < 128 && e.push(Mn(l));
  const a = e.length;
  let c = a;
  for (a && e.push(Do); c < t; ) {
    let l = Be;
    for (const p of n)
      p >= o && p < l && (l = p);
    const i = c + 1;
    l - o > pe((Be - r) / i) && be("overflow"), r += (l - o) * i, o = l;
    for (const p of n)
      if (p < o && ++r > Be && be("overflow"), p === o) {
        let h = r;
        for (let d = ue; ; d += ue) {
          const f = d <= s ? ct : d >= s + Je ? Je : d - s;
          if (h < f)
            break;
          const m = h - f, L = ue - f;
          e.push(
            Mn(Yt(f + m % L, 0))
          ), h = pe(m / L);
        }
        e.push(Mn(Yt(h, 0))), s = Ro(r, i, c === a), r = 0, ++c;
      }
    ++r, ++o;
  }
  return e.join("");
}, No = function(n) {
  return qo(n, function(e) {
    return oz.test(e) ? it(e.slice(4).toLowerCase()) : e;
  });
}, Po = function(n) {
  return qo(n, function(e) {
    return sz.test(e) ? "xn--" + lt(e) : e;
  });
}, lz = {
  /**
   * A string representing the current Punycode.js version number.
   * @memberOf punycode
   * @type String
   */
  version: "2.1.0",
  /**
   * An object of methods to convert from JavaScript's internal character
   * representation (UCS-2) to Unicode code points, and back.
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode
   * @type Object
   */
  ucs2: {
    decode: at,
    encode: jo
  },
  decode: it,
  encode: lt,
  toASCII: Po,
  toUnicode: No
}, uz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decode: it,
  default: lz,
  encode: lt,
  toASCII: Po,
  toUnicode: No,
  ucs2decode: at,
  ucs2encode: jo
}, Symbol.toStringTag, { value: "Module" })), pz = /* @__PURE__ */ ys(uz);
var hz = {
  options: {
    html: !1,
    // Enable HTML tags in source
    xhtmlOut: !1,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 100
    // Internal protection, recursion limit
  },
  components: {
    core: {},
    block: {},
    inline: {}
  }
}, dz = {
  options: {
    html: !1,
    // Enable HTML tags in source
    xhtmlOut: !1,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20
    // Internal protection, recursion limit
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "text"
      ],
      rules2: [
        "balance_pairs",
        "fragments_join"
      ]
    }
  }
}, fz = {
  options: {
    html: !0,
    // Enable HTML tags in source
    xhtmlOut: !0,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20
    // Internal protection, recursion limit
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "blockquote",
        "code",
        "fence",
        "heading",
        "hr",
        "html_block",
        "lheading",
        "list",
        "reference",
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "autolink",
        "backticks",
        "emphasis",
        "entity",
        "escape",
        "html_inline",
        "image",
        "link",
        "newline",
        "text"
      ],
      rules2: [
        "balance_pairs",
        "emphasis",
        "fragments_join"
      ]
    }
  }
}, Ze = B, mz = mn, gz = lB, _z = RB, bz = p$, kz = $$, yz = ez, Ee = ze, Io = pz, wz = {
  default: hz,
  zero: dz,
  commonmark: fz
}, vz = /^(vbscript|javascript|file|data):/, xz = /^data:image\/(gif|png|jpeg|webp);/;
function Az(n) {
  var e = n.trim().toLowerCase();
  return vz.test(e) ? !!xz.test(e) : !0;
}
var Oo = ["http:", "https:", "mailto:"];
function Sz(n) {
  var e = Ee.parse(n, !0);
  if (e.hostname && (!e.protocol || Oo.indexOf(e.protocol) >= 0))
    try {
      e.hostname = Io.toASCII(e.hostname);
    } catch {
    }
  return Ee.encode(Ee.format(e));
}
function Lz(n) {
  var e = Ee.parse(n, !0);
  if (e.hostname && (!e.protocol || Oo.indexOf(e.protocol) >= 0))
    try {
      e.hostname = Io.toUnicode(e.hostname);
    } catch {
    }
  return Ee.decode(Ee.format(e), Ee.decode.defaultChars + "%");
}
function ce(n, e) {
  if (!(this instanceof ce))
    return new ce(n, e);
  e || Ze.isString(n) || (e = n || {}, n = "default"), this.inline = new kz(), this.block = new bz(), this.core = new _z(), this.renderer = new gz(), this.linkify = new yz(), this.validateLink = Az, this.normalizeLink = Sz, this.normalizeLinkText = Lz, this.utils = Ze, this.helpers = Ze.assign({}, mz), this.options = {}, this.configure(n), e && this.set(e);
}
ce.prototype.set = function(n) {
  return Ze.assign(this.options, n), this;
};
ce.prototype.configure = function(n) {
  var e = this, t;
  if (Ze.isString(n) && (t = n, n = wz[t], !n))
    throw new Error('Wrong `markdown-it` preset "' + t + '", check name');
  if (!n)
    throw new Error("Wrong `markdown-it` preset, can't be empty");
  return n.options && e.set(n.options), n.components && Object.keys(n.components).forEach(function(o) {
    n.components[o].rules && e[o].ruler.enableOnly(n.components[o].rules), n.components[o].rules2 && e[o].ruler2.enableOnly(n.components[o].rules2);
  }), this;
};
ce.prototype.enable = function(n, e) {
  var t = [];
  Array.isArray(n) || (n = [n]), ["core", "block", "inline"].forEach(function(r) {
    t = t.concat(this[r].ruler.enable(n, !0));
  }, this), t = t.concat(this.inline.ruler2.enable(n, !0));
  var o = n.filter(function(r) {
    return t.indexOf(r) < 0;
  });
  if (o.length && !e)
    throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + o);
  return this;
};
ce.prototype.disable = function(n, e) {
  var t = [];
  Array.isArray(n) || (n = [n]), ["core", "block", "inline"].forEach(function(r) {
    t = t.concat(this[r].ruler.disable(n, !0));
  }, this), t = t.concat(this.inline.ruler2.disable(n, !0));
  var o = n.filter(function(r) {
    return t.indexOf(r) < 0;
  });
  if (o.length && !e)
    throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + o);
  return this;
};
ce.prototype.use = function(n) {
  var e = [this].concat(Array.prototype.slice.call(arguments, 1));
  return n.apply(n, e), this;
};
ce.prototype.parse = function(n, e) {
  if (typeof n != "string")
    throw new Error("Input data should be a String");
  var t = new this.core.State(n, this, e);
  return this.core.process(t), t.tokens;
};
ce.prototype.render = function(n, e) {
  return e = e || {}, this.renderer.render(this.parse(n, e), this.options, e);
};
ce.prototype.parseInline = function(n, e) {
  var t = new this.core.State(n, this, e);
  return t.inlineMode = !0, this.core.process(t), t.tokens;
};
ce.prototype.renderInline = function(n, e) {
  return e = e || {}, this.renderer.render(this.parseInline(n, e), this.options, e);
};
var Cz = ce, Ez = Cz;
const Tz = /* @__PURE__ */ hn(Ez);
var Xt = !1, $e = { false: "push", true: "unshift", after: "push", before: "unshift" }, an = { isPermalinkSymbol: !0 };
function Jn(n, e, t, o) {
  var r;
  if (!Xt) {
    var s = "Using deprecated markdown-it-anchor permalink option, see https://github.com/valeriangalliat/markdown-it-anchor#permalinks";
    typeof process == "object" && process && process.emitWarning ? process.emitWarning(s) : console.warn(s), Xt = !0;
  }
  var a = [Object.assign(new t.Token("link_open", "a", 1), { attrs: [].concat(e.permalinkClass ? [["class", e.permalinkClass]] : [], [["href", e.permalinkHref(n, t)]], Object.entries(e.permalinkAttrs(n, t))) }), Object.assign(new t.Token("html_block", "", 0), { content: e.permalinkSymbol, meta: an }), new t.Token("link_close", "a", -1)];
  e.permalinkSpace && t.tokens[o + 1].children[$e[e.permalinkBefore]](Object.assign(new t.Token("text", "", 0), { content: " " })), (r = t.tokens[o + 1].children)[$e[e.permalinkBefore]].apply(r, a);
}
function Fo(n) {
  return "#" + n;
}
function Mo(n) {
  return {};
}
var Dz = { class: "header-anchor", symbol: "#", renderHref: Fo, renderAttrs: Mo };
function Ke(n) {
  function e(t) {
    return t = Object.assign({}, e.defaults, t), function(o, r, s, a) {
      return n(o, t, r, s, a);
    };
  }
  return e.defaults = Object.assign({}, Dz), e.renderPermalinkImpl = n, e;
}
var vn = Ke(function(n, e, t, o, r) {
  var s, a = [Object.assign(new o.Token("link_open", "a", 1), { attrs: [].concat(e.class ? [["class", e.class]] : [], [["href", e.renderHref(n, o)]], e.ariaHidden ? [["aria-hidden", "true"]] : [], Object.entries(e.renderAttrs(n, o))) }), Object.assign(new o.Token("html_inline", "", 0), { content: e.symbol, meta: an }), new o.Token("link_close", "a", -1)];
  if (e.space) {
    var c = typeof e.space == "string" ? e.space : " ";
    o.tokens[r + 1].children[$e[e.placement]](Object.assign(new o.Token(typeof e.space == "string" ? "html_inline" : "text", "", 0), { content: c }));
  }
  (s = o.tokens[r + 1].children)[$e[e.placement]].apply(s, a);
});
Object.assign(vn.defaults, { space: !0, placement: "after", ariaHidden: !1 });
var Ce = Ke(vn.renderPermalinkImpl);
Ce.defaults = Object.assign({}, vn.defaults, { ariaHidden: !0 });
var Bo = Ke(function(n, e, t, o, r) {
  var s = [Object.assign(new o.Token("link_open", "a", 1), { attrs: [].concat(e.class ? [["class", e.class]] : [], [["href", e.renderHref(n, o)]], Object.entries(e.renderAttrs(n, o))) })].concat(e.safariReaderFix ? [new o.Token("span_open", "span", 1)] : [], o.tokens[r + 1].children, e.safariReaderFix ? [new o.Token("span_close", "span", -1)] : [], [new o.Token("link_close", "a", -1)]);
  o.tokens[r + 1] = Object.assign(new o.Token("inline", "", 0), { children: s });
});
Object.assign(Bo.defaults, { safariReaderFix: !1 });
var Kt = Ke(function(n, e, t, o, r) {
  var s;
  if (!["visually-hidden", "aria-label", "aria-describedby", "aria-labelledby"].includes(e.style))
    throw new Error("`permalink.linkAfterHeader` called with unknown style option `" + e.style + "`");
  if (!["aria-describedby", "aria-labelledby"].includes(e.style) && !e.assistiveText)
    throw new Error("`permalink.linkAfterHeader` called without the `assistiveText` option in `" + e.style + "` style");
  if (e.style === "visually-hidden" && !e.visuallyHiddenClass)
    throw new Error("`permalink.linkAfterHeader` called without the `visuallyHiddenClass` option in `visually-hidden` style");
  var a = o.tokens[r + 1].children.filter(function(h) {
    return h.type === "text" || h.type === "code_inline";
  }).reduce(function(h, d) {
    return h + d.content;
  }, ""), c = [], l = [];
  if (e.class && l.push(["class", e.class]), l.push(["href", e.renderHref(n, o)]), l.push.apply(l, Object.entries(e.renderAttrs(n, o))), e.style === "visually-hidden") {
    if (c.push(Object.assign(new o.Token("span_open", "span", 1), { attrs: [["class", e.visuallyHiddenClass]] }), Object.assign(new o.Token("text", "", 0), { content: e.assistiveText(a) }), new o.Token("span_close", "span", -1)), e.space) {
      var i = typeof e.space == "string" ? e.space : " ";
      c[$e[e.placement]](Object.assign(new o.Token(typeof e.space == "string" ? "html_inline" : "text", "", 0), { content: i }));
    }
    c[$e[e.placement]](Object.assign(new o.Token("span_open", "span", 1), { attrs: [["aria-hidden", "true"]] }), Object.assign(new o.Token("html_inline", "", 0), { content: e.symbol, meta: an }), new o.Token("span_close", "span", -1));
  } else
    c.push(Object.assign(new o.Token("html_inline", "", 0), { content: e.symbol, meta: an }));
  e.style === "aria-label" ? l.push(["aria-label", e.assistiveText(a)]) : ["aria-describedby", "aria-labelledby"].includes(e.style) && l.push([e.style, n]);
  var p = [Object.assign(new o.Token("link_open", "a", 1), { attrs: l })].concat(c, [new o.Token("link_close", "a", -1)]);
  (s = o.tokens).splice.apply(s, [r + 3, 0].concat(p)), e.wrapper && (o.tokens.splice(r, 0, Object.assign(new o.Token("html_block", "", 0), { content: e.wrapper[0] + `
` })), o.tokens.splice(r + 3 + p.length + 1, 0, Object.assign(new o.Token("html_block", "", 0), { content: e.wrapper[1] + `
` })));
});
function eo(n, e, t, o) {
  var r = n, s = o;
  if (t && Object.prototype.hasOwnProperty.call(e, r))
    throw new Error("User defined `id` attribute `" + n + "` is not unique. Please fix it in your Markdown to continue.");
  for (; Object.prototype.hasOwnProperty.call(e, r); )
    r = n + "-" + s, s += 1;
  return e[r] = !0, r;
}
function Te(n, e) {
  e = Object.assign({}, Te.defaults, e), n.core.ruler.push("anchor", function(t) {
    for (var o, r = {}, s = t.tokens, a = Array.isArray(e.level) ? (o = e.level, function(h) {
      return o.includes(h);
    }) : function(h) {
      return function(d) {
        return d >= h;
      };
    }(e.level), c = 0; c < s.length; c++) {
      var l = s[c];
      if (l.type === "heading_open" && a(Number(l.tag.substr(1)))) {
        var i = e.getTokensText(s[c + 1].children), p = l.attrGet("id");
        p = p == null ? eo(e.slugify(i), r, !1, e.uniqueSlugStartIndex) : eo(p, r, !0, e.uniqueSlugStartIndex), l.attrSet("id", p), e.tabIndex !== !1 && l.attrSet("tabindex", "" + e.tabIndex), typeof e.permalink == "function" ? e.permalink(p, e, t, c) : (e.permalink || e.renderPermalink && e.renderPermalink !== Jn) && e.renderPermalink(p, e, t, c), c = s.indexOf(l), e.callback && e.callback(l, { slug: p, title: i });
      }
    }
  });
}
Object.assign(Kt.defaults, { style: "visually-hidden", space: !0, placement: "after", wrapper: null }), Te.permalink = { __proto__: null, legacy: Jn, renderHref: Fo, renderAttrs: Mo, makePermalink: Ke, linkInsideHeader: vn, ariaHidden: Ce, headerLink: Bo, linkAfterHeader: Kt }, Te.defaults = { level: 1, slugify: function(n) {
  return encodeURIComponent(String(n).trim().toLowerCase().replace(/\s+/g, "-"));
}, uniqueSlugStartIndex: 1, tabIndex: "-1", getTokensText: function(n) {
  return n.filter(function(e) {
    return ["text", "code_inline"].includes(e.type);
  }).map(function(e) {
    return e.content;
  }).join("");
}, permalink: !1, renderPermalink: Jn, permalinkClass: Ce.defaults.class, permalinkSpace: Ce.defaults.space, permalinkSymbol: "¶", permalinkBefore: Ce.defaults.placement === "before", permalinkHref: Ce.defaults.renderHref, permalinkAttrs: Ce.defaults.renderAttrs }, Te.default = Te;
var ye = {};
ye.getAttrs = function(n, e, t) {
  const o = /[^\t\n\f />"'=]/, r = " ", s = "=", a = ".", c = "#", l = [];
  let i = "", p = "", h = !0, d = !1;
  for (let f = e + t.leftDelimiter.length; f < n.length; f++) {
    if (n.slice(f, f + t.rightDelimiter.length) === t.rightDelimiter) {
      i !== "" && l.push([i, p]);
      break;
    }
    const m = n.charAt(f);
    if (m === s && h) {
      h = !1;
      continue;
    }
    if (m === a && i === "") {
      n.charAt(f + 1) === a ? (i = "css-module", f += 1) : i = "class", h = !1;
      continue;
    }
    if (m === c && i === "") {
      i = "id", h = !1;
      continue;
    }
    if (m === '"' && p === "" && !d) {
      d = !0;
      continue;
    }
    if (m === '"' && d) {
      d = !1;
      continue;
    }
    if (m === r && !d) {
      if (i === "")
        continue;
      l.push([i, p]), i = "", p = "", h = !0;
      continue;
    }
    if (!(h && m.search(o) === -1)) {
      if (h) {
        i += m;
        continue;
      }
      p += m;
    }
  }
  if (t.allowedAttributes && t.allowedAttributes.length) {
    const f = t.allowedAttributes;
    return l.filter(function(m) {
      const L = m[0];
      function S(b) {
        return L === b || b instanceof RegExp && b.test(L);
      }
      return f.some(S);
    });
  }
  return l;
};
ye.addAttrs = function(n, e) {
  for (let t = 0, o = n.length; t < o; ++t) {
    const r = n[t][0];
    r === "class" ? e.attrJoin("class", n[t][1]) : r === "css-module" ? e.attrJoin("css-module", n[t][1]) : e.attrPush(n[t]);
  }
  return e;
};
ye.hasDelimiters = function(n, e) {
  if (!n)
    throw new Error('Parameter `where` not passed. Should be "start", "end" or "only".');
  return function(t) {
    const o = e.leftDelimiter.length + 1 + e.rightDelimiter.length;
    if (!t || typeof t != "string" || t.length < o)
      return !1;
    function r(p) {
      const h = p.charAt(e.leftDelimiter.length) === ".", d = p.charAt(e.leftDelimiter.length) === "#";
      return h || d ? p.length >= o + 1 : p.length >= o;
    }
    let s, a, c, l;
    const i = o - e.rightDelimiter.length;
    switch (n) {
      case "start":
        c = t.slice(0, e.leftDelimiter.length), s = c === e.leftDelimiter ? 0 : -1, a = s === -1 ? -1 : t.indexOf(e.rightDelimiter, i), l = t.charAt(a + e.rightDelimiter.length), l && e.rightDelimiter.indexOf(l) !== -1 && (a = -1);
        break;
      case "end":
        s = t.lastIndexOf(e.leftDelimiter), a = s === -1 ? -1 : t.indexOf(e.rightDelimiter, s + i), a = a === t.length - e.rightDelimiter.length ? a : -1;
        break;
      case "only":
        c = t.slice(0, e.leftDelimiter.length), s = c === e.leftDelimiter ? 0 : -1, c = t.slice(t.length - e.rightDelimiter.length), a = c === e.rightDelimiter ? t.length - e.rightDelimiter.length : -1;
        break;
      default:
        throw new Error(`Unexpected case ${n}, expected 'start', 'end' or 'only'`);
    }
    return s !== -1 && a !== -1 && r(t.substring(s, a + e.rightDelimiter.length));
  };
};
ye.removeDelimiter = function(n, e) {
  const t = Qn(e.leftDelimiter), o = Qn(e.rightDelimiter), r = new RegExp(
    "[ \\n]?" + t + "[^" + t + o + "]+" + o + "$"
  ), s = n.search(r);
  return s !== -1 ? n.slice(0, s) : n;
};
function Qn(n) {
  return n.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
}
ye.escapeRegExp = Qn;
ye.getMatchingOpeningToken = function(n, e) {
  if (n[e].type === "softbreak")
    return !1;
  if (n[e].nesting === 0)
    return n[e];
  const t = n[e].level, o = n[e].type.replace("_close", "_open");
  for (; e >= 0; --e)
    if (n[e].type === o && n[e].level === t)
      return n[e];
  return !1;
};
const qz = /[&<>"]/, jz = /[&<>"]/g, Rz = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;"
};
function Nz(n) {
  return Rz[n];
}
ye.escapeHtml = function(n) {
  return qz.test(n) ? n.replace(jz, Nz) : n;
};
const I = ye;
var Pz = (n) => {
  const e = new RegExp("^ {0,3}[-*_]{3,} ?" + I.escapeRegExp(n.leftDelimiter) + "[^" + I.escapeRegExp(n.rightDelimiter) + "]");
  return [
    {
      /**
       * ```python {.cls}
       * for i in range(10):
       *     print(i)
       * ```
       */
      name: "fenced code blocks",
      tests: [
        {
          shift: 0,
          block: !0,
          info: I.hasDelimiters("end", n)
        }
      ],
      transform: (t, o) => {
        const r = t[o], s = r.info.lastIndexOf(n.leftDelimiter), a = I.getAttrs(r.info, s, n);
        I.addAttrs(a, r), r.info = I.removeDelimiter(r.info, n);
      }
    },
    {
      /**
       * bla `click()`{.c} ![](img.png){.d}
       *
       * differs from 'inline attributes' as it does
       * not have a closing tag (nesting: -1)
       */
      name: "inline nesting 0",
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              shift: -1,
              type: (t) => t === "image" || t === "code_inline"
            },
            {
              shift: 0,
              type: "text",
              content: I.hasDelimiters("start", n)
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const s = t[o].children[r], a = s.content.indexOf(n.rightDelimiter), c = t[o].children[r - 1], l = I.getAttrs(s.content, 0, n);
        I.addAttrs(l, c), s.content.length === a + n.rightDelimiter.length ? t[o].children.splice(r, 1) : s.content = s.content.slice(a + n.rightDelimiter.length);
      }
    },
    {
      /**
       * | h1 |
       * | -- |
       * | c1 |
       *
       * {.c}
       */
      name: "tables",
      tests: [
        {
          // let this token be i, such that for-loop continues at
          // next token after tokens.splice
          shift: 0,
          type: "table_close"
        },
        {
          shift: 1,
          type: "paragraph_open"
        },
        {
          shift: 2,
          type: "inline",
          content: I.hasDelimiters("only", n)
        }
      ],
      transform: (t, o) => {
        const r = t[o + 2], s = I.getMatchingOpeningToken(t, o), a = I.getAttrs(r.content, 0, n);
        I.addAttrs(a, s), t.splice(o + 1, 3);
      }
    },
    {
      /**
       * *emphasis*{.with attrs=1}
       */
      name: "inline attributes",
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              shift: -1,
              nesting: -1
              // closing inline tag, </em>{.a}
            },
            {
              shift: 0,
              type: "text",
              content: I.hasDelimiters("start", n)
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const s = t[o].children[r], a = s.content, c = I.getAttrs(a, 0, n), l = I.getMatchingOpeningToken(t[o].children, r - 1);
        I.addAttrs(c, l), s.content = a.slice(a.indexOf(n.rightDelimiter) + n.rightDelimiter.length);
      }
    },
    {
      /**
       * - item
       * {.a}
       */
      name: "list softbreak",
      tests: [
        {
          shift: -2,
          type: "list_item_open"
        },
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -2,
              type: "softbreak"
            },
            {
              position: -1,
              type: "text",
              content: I.hasDelimiters("only", n)
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const a = t[o].children[r].content, c = I.getAttrs(a, 0, n);
        let l = o - 2;
        for (; t[l - 1] && t[l - 1].type !== "ordered_list_open" && t[l - 1].type !== "bullet_list_open"; )
          l--;
        I.addAttrs(c, t[l - 1]), t[o].children = t[o].children.slice(0, -2);
      }
    },
    {
      /**
       * - nested list
       *   - with double \n
       *   {.a} <-- apply to nested ul
       *
       * {.b} <-- apply to root <ul>
       */
      name: "list double softbreak",
      tests: [
        {
          // let this token be i = 0 so that we can erase
          // the <p>{.a}</p> tokens below
          shift: 0,
          type: (t) => t === "bullet_list_close" || t === "ordered_list_close"
        },
        {
          shift: 1,
          type: "paragraph_open"
        },
        {
          shift: 2,
          type: "inline",
          content: I.hasDelimiters("only", n),
          children: (t) => t.length === 1
        },
        {
          shift: 3,
          type: "paragraph_close"
        }
      ],
      transform: (t, o) => {
        const s = t[o + 2].content, a = I.getAttrs(s, 0, n), c = I.getMatchingOpeningToken(t, o);
        I.addAttrs(a, c), t.splice(o + 1, 3);
      }
    },
    {
      /**
       * - end of {.list-item}
       */
      name: "list item end",
      tests: [
        {
          shift: -2,
          type: "list_item_open"
        },
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -1,
              type: "text",
              content: I.hasDelimiters("end", n)
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const s = t[o].children[r], a = s.content, c = I.getAttrs(a, a.lastIndexOf(n.leftDelimiter), n);
        I.addAttrs(c, t[o - 2]);
        const l = a.slice(0, a.lastIndexOf(n.leftDelimiter));
        s.content = no(l) !== " " ? l : l.slice(0, -1);
      }
    },
    {
      /**
       * something with softbreak
       * {.cls}
       */
      name: `
{.a} softbreak then curly in start`,
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -2,
              type: "softbreak"
            },
            {
              position: -1,
              type: "text",
              content: I.hasDelimiters("only", n)
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const s = t[o].children[r], a = I.getAttrs(s.content, 0, n);
        let c = o + 1;
        for (; t[c + 1] && t[c + 1].nesting === -1; )
          c++;
        const l = I.getMatchingOpeningToken(t, c);
        I.addAttrs(a, l), t[o].children = t[o].children.slice(0, -2);
      }
    },
    {
      /**
       * horizontal rule --- {#id}
       */
      name: "horizontal rule",
      tests: [
        {
          shift: 0,
          type: "paragraph_open"
        },
        {
          shift: 1,
          type: "inline",
          children: (t) => t.length === 1,
          content: (t) => t.match(e) !== null
        },
        {
          shift: 2,
          type: "paragraph_close"
        }
      ],
      transform: (t, o) => {
        const r = t[o];
        r.type = "hr", r.tag = "hr", r.nesting = 0;
        const s = t[o + 1].content, a = s.lastIndexOf(n.leftDelimiter), c = I.getAttrs(s, a, n);
        I.addAttrs(c, r), r.markup = s, t.splice(o + 1, 2);
      }
    },
    {
      /**
       * end of {.block}
       */
      name: "end of block",
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -1,
              content: I.hasDelimiters("end", n),
              type: (t) => t !== "code_inline" && t !== "math_inline"
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const s = t[o].children[r], a = s.content, c = I.getAttrs(a, a.lastIndexOf(n.leftDelimiter), n);
        let l = o + 1;
        for (; t[l + 1] && t[l + 1].nesting === -1; )
          l++;
        const i = I.getMatchingOpeningToken(t, l);
        I.addAttrs(c, i);
        const p = a.slice(0, a.lastIndexOf(n.leftDelimiter));
        s.content = no(p) !== " " ? p : p.slice(0, -1);
      }
    }
  ];
};
function no(n) {
  return n.slice(-1)[0];
}
const Iz = Pz, Oz = {
  leftDelimiter: "{",
  rightDelimiter: "}",
  allowedAttributes: []
};
var Fz = function(e, t) {
  let o = Object.assign({}, Oz);
  o = Object.assign(o, t);
  const r = Iz(o);
  function s(a) {
    const c = a.tokens;
    for (let l = 0; l < c.length; l++)
      for (let i = 0; i < r.length; i++) {
        const p = r[i];
        let h = null;
        p.tests.every((f) => {
          const m = Yn(c, l, f);
          return m.j !== null && (h = m.j), m.match;
        }) && (p.transform(c, l, h), (p.name === "inline attributes" || p.name === "inline nesting 0") && i--);
      }
  }
  e.core.ruler.before("linkify", "curly_attributes", s);
};
function Yn(n, e, t) {
  const o = {
    match: !1,
    j: null
    // position of child
  }, r = t.shift !== void 0 ? e + t.shift : t.position;
  if (t.shift !== void 0 && r < 0)
    return o;
  const s = $z(n, r);
  if (s === void 0)
    return o;
  for (const a of Object.keys(t))
    if (!(a === "shift" || a === "position")) {
      if (s[a] === void 0)
        return o;
      if (a === "children" && Mz(t.children)) {
        if (s.children.length === 0)
          return o;
        let c;
        const l = t.children, i = s.children;
        if (l.every((p) => p.position !== void 0)) {
          if (c = l.every((p) => Yn(i, p.position, p).match), c) {
            const p = zz(l).position;
            o.j = p >= 0 ? p : i.length + p;
          }
        } else
          for (let p = 0; p < i.length; p++)
            if (c = l.every((h) => Yn(i, p, h).match), c) {
              o.j = p;
              break;
            }
        if (c === !1)
          return o;
        continue;
      }
      switch (typeof t[a]) {
        case "boolean":
        case "number":
        case "string":
          if (s[a] !== t[a])
            return o;
          break;
        case "function":
          if (!t[a](s[a]))
            return o;
          break;
        case "object":
          if (Bz(t[a])) {
            if (t[a].every((l) => l(s[a])) === !1)
              return o;
            break;
          }
        default:
          throw new Error(`Unknown type of pattern test (key: ${a}). Test should be of type boolean, number, string, function or array of functions.`);
      }
    }
  return o.match = !0, o;
}
function Mz(n) {
  return Array.isArray(n) && n.length && n.every((e) => typeof e == "object");
}
function Bz(n) {
  return Array.isArray(n) && n.length && n.every((e) => typeof e == "function");
}
function $z(n, e) {
  return e >= 0 ? n[e] : n[n.length + e];
}
function zz(n) {
  return n.slice(-1)[0] || {};
}
const Gz = /* @__PURE__ */ hn(Fz), Uz = "😀", Hz = "😃", Vz = "😄", Wz = "😁", Zz = "😆", Jz = "😆", Qz = "😅", Yz = "🤣", Xz = "😂", Kz = "🙂", e5 = "🙃", n5 = "😉", t5 = "😊", o5 = "😇", s5 = "🥰", r5 = "😍", c5 = "🤩", a5 = "😘", i5 = "😗", l5 = "☺️", u5 = "😚", p5 = "😙", h5 = "🥲", d5 = "😋", f5 = "😛", m5 = "😜", g5 = "🤪", _5 = "😝", b5 = "🤑", k5 = "🤗", y5 = "🤭", w5 = "🤫", v5 = "🤔", x5 = "🤐", A5 = "🤨", S5 = "😐", L5 = "😑", C5 = "😶", E5 = "😏", T5 = "😒", D5 = "🙄", q5 = "😬", j5 = "🤥", R5 = "😌", N5 = "😔", P5 = "😪", I5 = "🤤", O5 = "😴", F5 = "😷", M5 = "🤒", B5 = "🤕", $5 = "🤢", z5 = "🤮", G5 = "🤧", U5 = "🥵", H5 = "🥶", V5 = "🥴", W5 = "😵", Z5 = "🤯", J5 = "🤠", Q5 = "🥳", Y5 = "🥸", X5 = "😎", K5 = "🤓", e6 = "🧐", n6 = "😕", t6 = "😟", o6 = "🙁", s6 = "☹️", r6 = "😮", c6 = "😯", a6 = "😲", i6 = "😳", l6 = "🥺", u6 = "😦", p6 = "😧", h6 = "😨", d6 = "😰", f6 = "😥", m6 = "😢", g6 = "😭", _6 = "😱", b6 = "😖", k6 = "😣", y6 = "😞", w6 = "😓", v6 = "😩", x6 = "😫", A6 = "🥱", S6 = "😤", L6 = "😡", C6 = "😡", E6 = "😠", T6 = "🤬", D6 = "😈", q6 = "👿", j6 = "💀", R6 = "☠️", N6 = "💩", P6 = "💩", I6 = "💩", O6 = "🤡", F6 = "👹", M6 = "👺", B6 = "👻", $6 = "👽", z6 = "👾", G6 = "🤖", U6 = "😺", H6 = "😸", V6 = "😹", W6 = "😻", Z6 = "😼", J6 = "😽", Q6 = "🙀", Y6 = "😿", X6 = "😾", K6 = "🙈", e4 = "🙉", n4 = "🙊", t4 = "💋", o4 = "💌", s4 = "💘", r4 = "💝", c4 = "💖", a4 = "💗", i4 = "💓", l4 = "💞", u4 = "💕", p4 = "💟", h4 = "❣️", d4 = "💔", f4 = "❤️", m4 = "🧡", g4 = "💛", _4 = "💚", b4 = "💙", k4 = "💜", y4 = "🤎", w4 = "🖤", v4 = "🤍", x4 = "💢", A4 = "💥", S4 = "💥", L4 = "💫", C4 = "💦", E4 = "💨", T4 = "🕳️", D4 = "💣", q4 = "💬", j4 = "👁️‍🗨️", R4 = "🗨️", N4 = "🗯️", P4 = "💭", I4 = "💤", O4 = "👋", F4 = "🤚", M4 = "🖐️", B4 = "✋", $4 = "✋", z4 = "🖖", G4 = "👌", U4 = "🤌", H4 = "🤏", V4 = "✌️", W4 = "🤞", Z4 = "🤟", J4 = "🤘", Q4 = "🤙", Y4 = "👈", X4 = "👉", K4 = "👆", e8 = "🖕", n8 = "🖕", t8 = "👇", o8 = "☝️", s8 = "👍", r8 = "👎", c8 = "✊", a8 = "✊", i8 = "👊", l8 = "👊", u8 = "👊", p8 = "🤛", h8 = "🤜", d8 = "👏", f8 = "🙌", m8 = "👐", g8 = "🤲", _8 = "🤝", b8 = "🙏", k8 = "✍️", y8 = "💅", w8 = "🤳", v8 = "💪", x8 = "🦾", A8 = "🦿", S8 = "🦵", L8 = "🦶", C8 = "👂", E8 = "🦻", T8 = "👃", D8 = "🧠", q8 = "🫀", j8 = "🫁", R8 = "🦷", N8 = "🦴", P8 = "👀", I8 = "👁️", O8 = "👅", F8 = "👄", M8 = "👶", B8 = "🧒", $8 = "👦", z8 = "👧", G8 = "🧑", U8 = "👱", H8 = "👨", V8 = "🧔", W8 = "👨‍🦰", Z8 = "👨‍🦱", J8 = "👨‍🦳", Q8 = "👨‍🦲", Y8 = "👩", X8 = "👩‍🦰", K8 = "🧑‍🦰", eG = "👩‍🦱", nG = "🧑‍🦱", tG = "👩‍🦳", oG = "🧑‍🦳", sG = "👩‍🦲", rG = "🧑‍🦲", cG = "👱‍♀️", aG = "👱‍♀️", iG = "👱‍♂️", lG = "🧓", uG = "👴", pG = "👵", hG = "🙍", dG = "🙍‍♂️", fG = "🙍‍♀️", mG = "🙎", gG = "🙎‍♂️", _G = "🙎‍♀️", bG = "🙅", kG = "🙅‍♂️", yG = "🙅‍♂️", wG = "🙅‍♀️", vG = "🙅‍♀️", xG = "🙆", AG = "🙆‍♂️", SG = "🙆‍♀️", LG = "💁", CG = "💁", EG = "💁‍♂️", TG = "💁‍♂️", DG = "💁‍♀️", qG = "💁‍♀️", jG = "🙋", RG = "🙋‍♂️", NG = "🙋‍♀️", PG = "🧏", IG = "🧏‍♂️", OG = "🧏‍♀️", FG = "🙇", MG = "🙇‍♂️", BG = "🙇‍♀️", $G = "🤦", zG = "🤦‍♂️", GG = "🤦‍♀️", UG = "🤷", HG = "🤷‍♂️", VG = "🤷‍♀️", WG = "🧑‍⚕️", ZG = "👨‍⚕️", JG = "👩‍⚕️", QG = "🧑‍🎓", YG = "👨‍🎓", XG = "👩‍🎓", KG = "🧑‍🏫", eU = "👨‍🏫", nU = "👩‍🏫", tU = "🧑‍⚖️", oU = "👨‍⚖️", sU = "👩‍⚖️", rU = "🧑‍🌾", cU = "👨‍🌾", aU = "👩‍🌾", iU = "🧑‍🍳", lU = "👨‍🍳", uU = "👩‍🍳", pU = "🧑‍🔧", hU = "👨‍🔧", dU = "👩‍🔧", fU = "🧑‍🏭", mU = "👨‍🏭", gU = "👩‍🏭", _U = "🧑‍💼", bU = "👨‍💼", kU = "👩‍💼", yU = "🧑‍🔬", wU = "👨‍🔬", vU = "👩‍🔬", xU = "🧑‍💻", AU = "👨‍💻", SU = "👩‍💻", LU = "🧑‍🎤", CU = "👨‍🎤", EU = "👩‍🎤", TU = "🧑‍🎨", DU = "👨‍🎨", qU = "👩‍🎨", jU = "🧑‍✈️", RU = "👨‍✈️", NU = "👩‍✈️", PU = "🧑‍🚀", IU = "👨‍🚀", OU = "👩‍🚀", FU = "🧑‍🚒", MU = "👨‍🚒", BU = "👩‍🚒", $U = "👮", zU = "👮", GU = "👮‍♂️", UU = "👮‍♀️", HU = "🕵️", VU = "🕵️‍♂️", WU = "🕵️‍♀️", ZU = "💂", JU = "💂‍♂️", QU = "💂‍♀️", YU = "🥷", XU = "👷", KU = "👷‍♂️", e9 = "👷‍♀️", n9 = "🤴", t9 = "👸", o9 = "👳", s9 = "👳‍♂️", r9 = "👳‍♀️", c9 = "👲", a9 = "🧕", i9 = "🤵", l9 = "🤵‍♂️", u9 = "🤵‍♀️", p9 = "👰", h9 = "👰‍♂️", d9 = "👰‍♀️", f9 = "👰‍♀️", m9 = "🤰", g9 = "🤱", _9 = "👩‍🍼", b9 = "👨‍🍼", k9 = "🧑‍🍼", y9 = "👼", w9 = "🎅", v9 = "🤶", x9 = "🧑‍🎄", A9 = "🦸", S9 = "🦸‍♂️", L9 = "🦸‍♀️", C9 = "🦹", E9 = "🦹‍♂️", T9 = "🦹‍♀️", D9 = "🧙", q9 = "🧙‍♂️", j9 = "🧙‍♀️", R9 = "🧚", N9 = "🧚‍♂️", P9 = "🧚‍♀️", I9 = "🧛", O9 = "🧛‍♂️", F9 = "🧛‍♀️", M9 = "🧜", B9 = "🧜‍♂️", $9 = "🧜‍♀️", z9 = "🧝", G9 = "🧝‍♂️", U9 = "🧝‍♀️", H9 = "🧞", V9 = "🧞‍♂️", W9 = "🧞‍♀️", Z9 = "🧟", J9 = "🧟‍♂️", Q9 = "🧟‍♀️", Y9 = "💆", X9 = "💆‍♂️", K9 = "💆‍♀️", e7 = "💇", n7 = "💇‍♂️", t7 = "💇‍♀️", o7 = "🚶", s7 = "🚶‍♂️", r7 = "🚶‍♀️", c7 = "🧍", a7 = "🧍‍♂️", i7 = "🧍‍♀️", l7 = "🧎", u7 = "🧎‍♂️", p7 = "🧎‍♀️", h7 = "🧑‍🦯", d7 = "👨‍🦯", f7 = "👩‍🦯", m7 = "🧑‍🦼", g7 = "👨‍🦼", _7 = "👩‍🦼", b7 = "🧑‍🦽", k7 = "👨‍🦽", y7 = "👩‍🦽", w7 = "🏃", v7 = "🏃", x7 = "🏃‍♂️", A7 = "🏃‍♀️", S7 = "💃", L7 = "💃", C7 = "🕺", E7 = "🕴️", T7 = "👯", D7 = "👯‍♂️", q7 = "👯‍♀️", j7 = "🧖", R7 = "🧖‍♂️", N7 = "🧖‍♀️", P7 = "🧗", I7 = "🧗‍♂️", O7 = "🧗‍♀️", F7 = "🤺", M7 = "🏇", B7 = "⛷️", $7 = "🏂", z7 = "🏌️", G7 = "🏌️‍♂️", U7 = "🏌️‍♀️", H7 = "🏄", V7 = "🏄‍♂️", W7 = "🏄‍♀️", Z7 = "🚣", J7 = "🚣‍♂️", Q7 = "🚣‍♀️", Y7 = "🏊", X7 = "🏊‍♂️", K7 = "🏊‍♀️", eH = "⛹️", nH = "⛹️‍♂️", tH = "⛹️‍♂️", oH = "⛹️‍♀️", sH = "⛹️‍♀️", rH = "🏋️", cH = "🏋️‍♂️", aH = "🏋️‍♀️", iH = "🚴", lH = "🚴‍♂️", uH = "🚴‍♀️", pH = "🚵", hH = "🚵‍♂️", dH = "🚵‍♀️", fH = "🤸", mH = "🤸‍♂️", gH = "🤸‍♀️", _H = "🤼", bH = "🤼‍♂️", kH = "🤼‍♀️", yH = "🤽", wH = "🤽‍♂️", vH = "🤽‍♀️", xH = "🤾", AH = "🤾‍♂️", SH = "🤾‍♀️", LH = "🤹", CH = "🤹‍♂️", EH = "🤹‍♀️", TH = "🧘", DH = "🧘‍♂️", qH = "🧘‍♀️", jH = "🛀", RH = "🛌", NH = "🧑‍🤝‍🧑", PH = "👭", IH = "👫", OH = "👬", FH = "💏", MH = "👩‍❤️‍💋‍👨", BH = "👨‍❤️‍💋‍👨", $H = "👩‍❤️‍💋‍👩", zH = "💑", GH = "👩‍❤️‍👨", UH = "👨‍❤️‍👨", HH = "👩‍❤️‍👩", VH = "👪", WH = "👨‍👩‍👦", ZH = "👨‍👩‍👧", JH = "👨‍👩‍👧‍👦", QH = "👨‍👩‍👦‍👦", YH = "👨‍👩‍👧‍👧", XH = "👨‍👨‍👦", KH = "👨‍👨‍👧", eV = "👨‍👨‍👧‍👦", nV = "👨‍👨‍👦‍👦", tV = "👨‍👨‍👧‍👧", oV = "👩‍👩‍👦", sV = "👩‍👩‍👧", rV = "👩‍👩‍👧‍👦", cV = "👩‍👩‍👦‍👦", aV = "👩‍👩‍👧‍👧", iV = "👨‍👦", lV = "👨‍👦‍👦", uV = "👨‍👧", pV = "👨‍👧‍👦", hV = "👨‍👧‍👧", dV = "👩‍👦", fV = "👩‍👦‍👦", mV = "👩‍👧", gV = "👩‍👧‍👦", _V = "👩‍👧‍👧", bV = "🗣️", kV = "👤", yV = "👥", wV = "🫂", vV = "👣", xV = "🐵", AV = "🐒", SV = "🦍", LV = "🦧", CV = "🐶", EV = "🐕", TV = "🦮", DV = "🐕‍🦺", qV = "🐩", jV = "🐺", RV = "🦊", NV = "🦝", PV = "🐱", IV = "🐈", OV = "🐈‍⬛", FV = "🦁", MV = "🐯", BV = "🐅", $V = "🐆", zV = "🐴", GV = "🐎", UV = "🦄", HV = "🦓", VV = "🦌", WV = "🦬", ZV = "🐮", JV = "🐂", QV = "🐃", YV = "🐄", XV = "🐷", KV = "🐖", eW = "🐗", nW = "🐽", tW = "🐏", oW = "🐑", sW = "🐐", rW = "🐪", cW = "🐫", aW = "🦙", iW = "🦒", lW = "🐘", uW = "🦣", pW = "🦏", hW = "🦛", dW = "🐭", fW = "🐁", mW = "🐀", gW = "🐹", _W = "🐰", bW = "🐇", kW = "🐿️", yW = "🦫", wW = "🦔", vW = "🦇", xW = "🐻", AW = "🐻‍❄️", SW = "🐨", LW = "🐼", CW = "🦥", EW = "🦦", TW = "🦨", DW = "🦘", qW = "🦡", jW = "🐾", RW = "🐾", NW = "🦃", PW = "🐔", IW = "🐓", OW = "🐣", FW = "🐤", MW = "🐥", BW = "🐦", $W = "🐧", zW = "🕊️", GW = "🦅", UW = "🦆", HW = "🦢", VW = "🦉", WW = "🦤", ZW = "🪶", JW = "🦩", QW = "🦚", YW = "🦜", XW = "🐸", KW = "🐊", eZ = "🐢", nZ = "🦎", tZ = "🐍", oZ = "🐲", sZ = "🐉", rZ = "🦕", cZ = "🐳", aZ = "🐋", iZ = "🐬", lZ = "🐬", uZ = "🦭", pZ = "🐟", hZ = "🐠", dZ = "🐡", fZ = "🦈", mZ = "🐙", gZ = "🐚", _Z = "🐌", bZ = "🦋", kZ = "🐛", yZ = "🐜", wZ = "🐝", vZ = "🐝", xZ = "🪲", AZ = "🐞", SZ = "🦗", LZ = "🪳", CZ = "🕷️", EZ = "🕸️", TZ = "🦂", DZ = "🦟", qZ = "🪰", jZ = "🪱", RZ = "🦠", NZ = "💐", PZ = "🌸", IZ = "💮", OZ = "🏵️", FZ = "🌹", MZ = "🥀", BZ = "🌺", $Z = "🌻", zZ = "🌼", GZ = "🌷", UZ = "🌱", HZ = "🪴", VZ = "🌲", WZ = "🌳", ZZ = "🌴", JZ = "🌵", QZ = "🌾", YZ = "🌿", XZ = "☘️", KZ = "🍀", eJ = "🍁", nJ = "🍂", tJ = "🍃", oJ = "🍇", sJ = "🍈", rJ = "🍉", cJ = "🍊", aJ = "🍊", iJ = "🍊", lJ = "🍋", uJ = "🍌", pJ = "🍍", hJ = "🥭", dJ = "🍎", fJ = "🍏", mJ = "🍐", gJ = "🍑", _J = "🍒", bJ = "🍓", kJ = "🫐", yJ = "🥝", wJ = "🍅", vJ = "🫒", xJ = "🥥", AJ = "🥑", SJ = "🍆", LJ = "🥔", CJ = "🥕", EJ = "🌽", TJ = "🌶️", DJ = "🫑", qJ = "🥒", jJ = "🥬", RJ = "🥦", NJ = "🧄", PJ = "🧅", IJ = "🍄", OJ = "🥜", FJ = "🌰", MJ = "🍞", BJ = "🥐", $J = "🥖", zJ = "🫓", GJ = "🥨", UJ = "🥯", HJ = "🥞", VJ = "🧇", WJ = "🧀", ZJ = "🍖", JJ = "🍗", QJ = "🥩", YJ = "🥓", XJ = "🍔", KJ = "🍟", eQ = "🍕", nQ = "🌭", tQ = "🥪", oQ = "🌮", sQ = "🌯", rQ = "🫔", cQ = "🥙", aQ = "🧆", iQ = "🥚", lQ = "🍳", uQ = "🥘", pQ = "🍲", hQ = "🫕", dQ = "🥣", fQ = "🥗", mQ = "🍿", gQ = "🧈", _Q = "🧂", bQ = "🥫", kQ = "🍱", yQ = "🍘", wQ = "🍙", vQ = "🍚", xQ = "🍛", AQ = "🍜", SQ = "🍝", LQ = "🍠", CQ = "🍢", EQ = "🍣", TQ = "🍤", DQ = "🍥", qQ = "🥮", jQ = "🍡", RQ = "🥟", NQ = "🥠", PQ = "🥡", IQ = "🦀", OQ = "🦞", FQ = "🦐", MQ = "🦑", BQ = "🦪", $Q = "🍦", zQ = "🍧", GQ = "🍨", UQ = "🍩", HQ = "🍪", VQ = "🎂", WQ = "🍰", ZQ = "🧁", JQ = "🥧", QQ = "🍫", YQ = "🍬", XQ = "🍭", KQ = "🍮", eY = "🍯", nY = "🍼", tY = "🥛", oY = "☕", sY = "🫖", rY = "🍵", cY = "🍶", aY = "🍾", iY = "🍷", lY = "🍸", uY = "🍹", pY = "🍺", hY = "🍻", dY = "🥂", fY = "🥃", mY = "🥤", gY = "🧋", _Y = "🧃", bY = "🧉", kY = "🧊", yY = "🥢", wY = "🍽️", vY = "🍴", xY = "🥄", AY = "🔪", SY = "🔪", LY = "🏺", CY = "🌍", EY = "🌎", TY = "🌏", DY = "🌐", qY = "🗺️", jY = "🗾", RY = "🧭", NY = "🏔️", PY = "⛰️", IY = "🌋", OY = "🗻", FY = "🏕️", MY = "🏖️", BY = "🏜️", $Y = "🏝️", zY = "🏞️", GY = "🏟️", UY = "🏛️", HY = "🏗️", VY = "🧱", WY = "🪨", ZY = "🪵", JY = "🛖", QY = "🏘️", YY = "🏚️", XY = "🏠", KY = "🏡", eX = "🏢", nX = "🏣", tX = "🏤", oX = "🏥", sX = "🏦", rX = "🏨", cX = "🏩", aX = "🏪", iX = "🏫", lX = "🏬", uX = "🏭", pX = "🏯", hX = "🏰", dX = "💒", fX = "🗼", mX = "🗽", gX = "⛪", _X = "🕌", bX = "🛕", kX = "🕍", yX = "⛩️", wX = "🕋", vX = "⛲", xX = "⛺", AX = "🌁", SX = "🌃", LX = "🏙️", CX = "🌄", EX = "🌅", TX = "🌆", DX = "🌇", qX = "🌉", jX = "♨️", RX = "🎠", NX = "🎡", PX = "🎢", IX = "💈", OX = "🎪", FX = "🚂", MX = "🚃", BX = "🚄", $X = "🚅", zX = "🚆", GX = "🚇", UX = "🚈", HX = "🚉", VX = "🚊", WX = "🚝", ZX = "🚞", JX = "🚋", QX = "🚌", YX = "🚍", XX = "🚎", KX = "🚐", eK = "🚑", nK = "🚒", tK = "🚓", oK = "🚔", sK = "🚕", rK = "🚖", cK = "🚗", aK = "🚗", iK = "🚘", lK = "🚙", uK = "🛻", pK = "🚚", hK = "🚛", dK = "🚜", fK = "🏎️", mK = "🏍️", gK = "🛵", _K = "🦽", bK = "🦼", kK = "🛺", yK = "🚲", wK = "🛴", vK = "🛹", xK = "🛼", AK = "🚏", SK = "🛣️", LK = "🛤️", CK = "🛢️", EK = "⛽", TK = "🚨", DK = "🚥", qK = "🚦", jK = "🛑", RK = "🚧", NK = "⚓", PK = "⛵", IK = "⛵", OK = "🛶", FK = "🚤", MK = "🛳️", BK = "⛴️", $K = "🛥️", zK = "🚢", GK = "✈️", UK = "🛩️", HK = "🛫", VK = "🛬", WK = "🪂", ZK = "💺", JK = "🚁", QK = "🚟", YK = "🚠", XK = "🚡", KK = "🛰️", eee = "🚀", nee = "🛸", tee = "🛎️", oee = "🧳", see = "⌛", ree = "⏳", cee = "⌚", aee = "⏰", iee = "⏱️", lee = "⏲️", uee = "🕰️", pee = "🕛", hee = "🕧", dee = "🕐", fee = "🕜", mee = "🕑", gee = "🕝", _ee = "🕒", bee = "🕞", kee = "🕓", yee = "🕟", wee = "🕔", vee = "🕠", xee = "🕕", Aee = "🕡", See = "🕖", Lee = "🕢", Cee = "🕗", Eee = "🕣", Tee = "🕘", Dee = "🕤", qee = "🕙", jee = "🕥", Ree = "🕚", Nee = "🕦", Pee = "🌑", Iee = "🌒", Oee = "🌓", Fee = "🌔", Mee = "🌔", Bee = "🌕", $ee = "🌖", zee = "🌗", Gee = "🌘", Uee = "🌙", Hee = "🌚", Vee = "🌛", Wee = "🌜", Zee = "🌡️", Jee = "☀️", Qee = "🌝", Yee = "🌞", Xee = "🪐", Kee = "⭐", ene = "🌟", nne = "🌠", tne = "🌌", one = "☁️", sne = "⛅", rne = "⛈️", cne = "🌤️", ane = "🌥️", ine = "🌦️", lne = "🌧️", une = "🌨️", pne = "🌩️", hne = "🌪️", dne = "🌫️", fne = "🌬️", mne = "🌀", gne = "🌈", _ne = "🌂", bne = "☂️", kne = "☔", yne = "⛱️", wne = "⚡", vne = "❄️", xne = "☃️", Ane = "⛄", Sne = "☄️", Lne = "🔥", Cne = "💧", Ene = "🌊", Tne = "🎃", Dne = "🎄", qne = "🎆", jne = "🎇", Rne = "🧨", Nne = "✨", Pne = "🎈", Ine = "🎉", One = "🎊", Fne = "🎋", Mne = "🎍", Bne = "🎎", $ne = "🎏", zne = "🎐", Gne = "🎑", Une = "🧧", Hne = "🎀", Vne = "🎁", Wne = "🎗️", Zne = "🎟️", Jne = "🎫", Qne = "🎖️", Yne = "🏆", Xne = "🏅", Kne = "⚽", ete = "⚾", nte = "🥎", tte = "🏀", ote = "🏐", ste = "🏈", rte = "🏉", cte = "🎾", ate = "🥏", ite = "🎳", lte = "🏏", ute = "🏑", pte = "🏒", hte = "🥍", dte = "🏓", fte = "🏸", mte = "🥊", gte = "🥋", _te = "🥅", bte = "⛳", kte = "⛸️", yte = "🎣", wte = "🤿", vte = "🎽", xte = "🎿", Ate = "🛷", Ste = "🥌", Lte = "🎯", Cte = "🪀", Ete = "🪁", Tte = "🔮", Dte = "🪄", qte = "🧿", jte = "🎮", Rte = "🕹️", Nte = "🎰", Pte = "🎲", Ite = "🧩", Ote = "🧸", Fte = "🪅", Mte = "🪆", Bte = "♠️", $te = "♥️", zte = "♦️", Gte = "♣️", Ute = "♟️", Hte = "🃏", Vte = "🀄", Wte = "🎴", Zte = "🎭", Jte = "🖼️", Qte = "🎨", Yte = "🧵", Xte = "🪡", Kte = "🧶", eoe = "🪢", noe = "👓", toe = "🕶️", ooe = "🥽", soe = "🥼", roe = "🦺", coe = "👔", aoe = "👕", ioe = "👕", loe = "👖", uoe = "🧣", poe = "🧤", hoe = "🧥", doe = "🧦", foe = "👗", moe = "👘", goe = "🥻", _oe = "🩱", boe = "🩲", koe = "🩳", yoe = "👙", woe = "👚", voe = "👛", xoe = "👜", Aoe = "👝", Soe = "🛍️", Loe = "🎒", Coe = "🩴", Eoe = "👞", Toe = "👞", Doe = "👟", qoe = "🥾", joe = "🥿", Roe = "👠", Noe = "👡", Poe = "🩰", Ioe = "👢", Ooe = "👑", Foe = "👒", Moe = "🎩", Boe = "🎓", $oe = "🧢", zoe = "🪖", Goe = "⛑️", Uoe = "📿", Hoe = "💄", Voe = "💍", Woe = "💎", Zoe = "🔇", Joe = "🔈", Qoe = "🔉", Yoe = "🔊", Xoe = "📢", Koe = "📣", ese = "📯", nse = "🔔", tse = "🔕", ose = "🎼", sse = "🎵", rse = "🎶", cse = "🎙️", ase = "🎚️", ise = "🎛️", lse = "🎤", use = "🎧", pse = "📻", hse = "🎷", dse = "🪗", fse = "🎸", mse = "🎹", gse = "🎺", _se = "🎻", bse = "🪕", kse = "🥁", yse = "🪘", wse = "📱", vse = "📲", xse = "☎️", Ase = "☎️", Sse = "📞", Lse = "📟", Cse = "📠", Ese = "🔋", Tse = "🔌", Dse = "💻", qse = "🖥️", jse = "🖨️", Rse = "⌨️", Nse = "🖱️", Pse = "🖲️", Ise = "💽", Ose = "💾", Fse = "💿", Mse = "📀", Bse = "🧮", $se = "🎥", zse = "🎞️", Gse = "📽️", Use = "🎬", Hse = "📺", Vse = "📷", Wse = "📸", Zse = "📹", Jse = "📼", Qse = "🔍", Yse = "🔎", Xse = "🕯️", Kse = "💡", ere = "🔦", nre = "🏮", tre = "🏮", ore = "🪔", sre = "📔", rre = "📕", cre = "📖", are = "📖", ire = "📗", lre = "📘", ure = "📙", pre = "📚", hre = "📓", dre = "📒", fre = "📃", mre = "📜", gre = "📄", _re = "📰", bre = "🗞️", kre = "📑", yre = "🔖", wre = "🏷️", vre = "💰", xre = "🪙", Are = "💴", Sre = "💵", Lre = "💶", Cre = "💷", Ere = "💸", Tre = "💳", Dre = "🧾", qre = "💹", jre = "✉️", Rre = "📧", Nre = "📨", Pre = "📩", Ire = "📤", Ore = "📥", Fre = "📫", Mre = "📪", Bre = "📬", $re = "📭", zre = "📮", Gre = "🗳️", Ure = "✏️", Hre = "✒️", Vre = "🖋️", Wre = "🖊️", Zre = "🖌️", Jre = "🖍️", Qre = "📝", Yre = "📝", Xre = "💼", Kre = "📁", ece = "📂", nce = "🗂️", tce = "📅", oce = "📆", sce = "🗒️", rce = "🗓️", cce = "📇", ace = "📈", ice = "📉", lce = "📊", uce = "📋", pce = "📌", hce = "📍", dce = "📎", fce = "🖇️", mce = "📏", gce = "📐", _ce = "✂️", bce = "🗃️", kce = "🗄️", yce = "🗑️", wce = "🔒", vce = "🔓", xce = "🔏", Ace = "🔐", Sce = "🔑", Lce = "🗝️", Cce = "🔨", Ece = "🪓", Tce = "⛏️", Dce = "⚒️", qce = "🛠️", jce = "🗡️", Rce = "⚔️", Nce = "🔫", Pce = "🪃", Ice = "🏹", Oce = "🛡️", Fce = "🪚", Mce = "🔧", Bce = "🪛", $ce = "🔩", zce = "⚙️", Gce = "🗜️", Uce = "⚖️", Hce = "🦯", Vce = "🔗", Wce = "⛓️", Zce = "🪝", Jce = "🧰", Qce = "🧲", Yce = "🪜", Xce = "⚗️", Kce = "🧪", eae = "🧫", nae = "🧬", tae = "🔬", oae = "🔭", sae = "📡", rae = "💉", cae = "🩸", aae = "💊", iae = "🩹", lae = "🩺", uae = "🚪", pae = "🛗", hae = "🪞", dae = "🪟", fae = "🛏️", mae = "🛋️", gae = "🪑", _ae = "🚽", bae = "🪠", kae = "🚿", yae = "🛁", wae = "🪤", vae = "🪒", xae = "🧴", Aae = "🧷", Sae = "🧹", Lae = "🧺", Cae = "🧻", Eae = "🪣", Tae = "🧼", Dae = "🪥", qae = "🧽", jae = "🧯", Rae = "🛒", Nae = "🚬", Pae = "⚰️", Iae = "🪦", Oae = "⚱️", Fae = "🗿", Mae = "🪧", Bae = "🏧", $ae = "🚮", zae = "🚰", Gae = "♿", Uae = "🚹", Hae = "🚺", Vae = "🚻", Wae = "🚼", Zae = "🚾", Jae = "🛂", Qae = "🛃", Yae = "🛄", Xae = "🛅", Kae = "⚠️", eie = "🚸", nie = "⛔", tie = "🚫", oie = "🚳", sie = "🚭", rie = "🚯", cie = "🚷", aie = "📵", iie = "🔞", lie = "☢️", uie = "☣️", pie = "⬆️", hie = "↗️", die = "➡️", fie = "↘️", mie = "⬇️", gie = "↙️", _ie = "⬅️", bie = "↖️", kie = "↕️", yie = "↔️", wie = "↩️", vie = "↪️", xie = "⤴️", Aie = "⤵️", Sie = "🔃", Lie = "🔄", Cie = "🔙", Eie = "🔚", Tie = "🔛", Die = "🔜", qie = "🔝", jie = "🛐", Rie = "⚛️", Nie = "🕉️", Pie = "✡️", Iie = "☸️", Oie = "☯️", Fie = "✝️", Mie = "☦️", Bie = "☪️", $ie = "☮️", zie = "🕎", Gie = "🔯", Uie = "♈", Hie = "♉", Vie = "♊", Wie = "♋", Zie = "♌", Jie = "♍", Qie = "♎", Yie = "♏", Xie = "♐", Kie = "♑", ele = "♒", nle = "♓", tle = "⛎", ole = "🔀", sle = "🔁", rle = "🔂", cle = "▶️", ale = "⏩", ile = "⏭️", lle = "⏯️", ule = "◀️", ple = "⏪", hle = "⏮️", dle = "🔼", fle = "⏫", mle = "🔽", gle = "⏬", _le = "⏸️", ble = "⏹️", kle = "⏺️", yle = "⏏️", wle = "🎦", vle = "🔅", xle = "🔆", Ale = "📶", Sle = "📳", Lle = "📴", Cle = "♀️", Ele = "♂️", Tle = "⚧️", Dle = "✖️", qle = "➕", jle = "➖", Rle = "➗", Nle = "♾️", Ple = "‼️", Ile = "⁉️", Ole = "❓", Fle = "❔", Mle = "❕", Ble = "❗", $le = "❗", zle = "〰️", Gle = "💱", Ule = "💲", Hle = "⚕️", Vle = "♻️", Wle = "⚜️", Zle = "🔱", Jle = "📛", Qle = "🔰", Yle = "⭕", Xle = "✅", Kle = "☑️", eue = "✔️", nue = "❌", tue = "❎", oue = "➰", sue = "➿", rue = "〽️", cue = "✳️", aue = "✴️", iue = "❇️", lue = "©️", uue = "®️", pue = "™️", hue = "#️⃣", due = "*️⃣", fue = "0️⃣", mue = "1️⃣", gue = "2️⃣", _ue = "3️⃣", bue = "4️⃣", kue = "5️⃣", yue = "6️⃣", wue = "7️⃣", vue = "8️⃣", xue = "9️⃣", Aue = "🔟", Sue = "🔠", Lue = "🔡", Cue = "🔣", Eue = "🔤", Tue = "🅰️", Due = "🆎", que = "🅱️", jue = "🆑", Rue = "🆒", Nue = "🆓", Pue = "ℹ️", Iue = "🆔", Oue = "Ⓜ️", Fue = "🆖", Mue = "🅾️", Bue = "🆗", $ue = "🅿️", zue = "🆘", Gue = "🆙", Uue = "🆚", Hue = "🈁", Vue = "🈂️", Wue = "🉐", Zue = "🉑", Jue = "㊗️", Que = "㊙️", Yue = "🈵", Xue = "🔴", Kue = "🟠", epe = "🟡", npe = "🟢", tpe = "🔵", ope = "🟣", spe = "🟤", rpe = "⚫", cpe = "⚪", ape = "🟥", ipe = "🟧", lpe = "🟨", upe = "🟩", ppe = "🟦", hpe = "🟪", dpe = "🟫", fpe = "⬛", mpe = "⬜", gpe = "◼️", _pe = "◻️", bpe = "◾", kpe = "◽", ype = "▪️", wpe = "▫️", vpe = "🔶", xpe = "🔷", Ape = "🔸", Spe = "🔹", Lpe = "🔺", Cpe = "🔻", Epe = "💠", Tpe = "🔘", Dpe = "🔳", qpe = "🔲", jpe = "🏁", Rpe = "🚩", Npe = "🎌", Ppe = "🏴", Ipe = "🏳️", Ope = "🏳️‍🌈", Fpe = "🏳️‍⚧️", Mpe = "🏴‍☠️", Bpe = "🇦🇨", $pe = "🇦🇩", zpe = "🇦🇪", Gpe = "🇦🇫", Upe = "🇦🇬", Hpe = "🇦🇮", Vpe = "🇦🇱", Wpe = "🇦🇲", Zpe = "🇦🇴", Jpe = "🇦🇶", Qpe = "🇦🇷", Ype = "🇦🇸", Xpe = "🇦🇹", Kpe = "🇦🇺", ehe = "🇦🇼", nhe = "🇦🇽", the = "🇦🇿", ohe = "🇧🇦", she = "🇧🇧", rhe = "🇧🇩", che = "🇧🇪", ahe = "🇧🇫", ihe = "🇧🇬", lhe = "🇧🇭", uhe = "🇧🇮", phe = "🇧🇯", hhe = "🇧🇱", dhe = "🇧🇲", fhe = "🇧🇳", mhe = "🇧🇴", ghe = "🇧🇶", _he = "🇧🇷", bhe = "🇧🇸", khe = "🇧🇹", yhe = "🇧🇻", whe = "🇧🇼", vhe = "🇧🇾", xhe = "🇧🇿", Ahe = "🇨🇦", She = "🇨🇨", Lhe = "🇨🇩", Che = "🇨🇫", Ehe = "🇨🇬", The = "🇨🇭", Dhe = "🇨🇮", qhe = "🇨🇰", jhe = "🇨🇱", Rhe = "🇨🇲", Nhe = "🇨🇳", Phe = "🇨🇴", Ihe = "🇨🇵", Ohe = "🇨🇷", Fhe = "🇨🇺", Mhe = "🇨🇻", Bhe = "🇨🇼", $he = "🇨🇽", zhe = "🇨🇾", Ghe = "🇨🇿", Uhe = "🇩🇪", Hhe = "🇩🇬", Vhe = "🇩🇯", Whe = "🇩🇰", Zhe = "🇩🇲", Jhe = "🇩🇴", Qhe = "🇩🇿", Yhe = "🇪🇦", Xhe = "🇪🇨", Khe = "🇪🇪", ede = "🇪🇬", nde = "🇪🇭", tde = "🇪🇷", ode = "🇪🇸", sde = "🇪🇹", rde = "🇪🇺", cde = "🇪🇺", ade = "🇫🇮", ide = "🇫🇯", lde = "🇫🇰", ude = "🇫🇲", pde = "🇫🇴", hde = "🇫🇷", dde = "🇬🇦", fde = "🇬🇧", mde = "🇬🇧", gde = "🇬🇩", _de = "🇬🇪", bde = "🇬🇫", kde = "🇬🇬", yde = "🇬🇭", wde = "🇬🇮", vde = "🇬🇱", xde = "🇬🇲", Ade = "🇬🇳", Sde = "🇬🇵", Lde = "🇬🇶", Cde = "🇬🇷", Ede = "🇬🇸", Tde = "🇬🇹", Dde = "🇬🇺", qde = "🇬🇼", jde = "🇬🇾", Rde = "🇭🇰", Nde = "🇭🇲", Pde = "🇭🇳", Ide = "🇭🇷", Ode = "🇭🇹", Fde = "🇭🇺", Mde = "🇮🇨", Bde = "🇮🇩", $de = "🇮🇪", zde = "🇮🇱", Gde = "🇮🇲", Ude = "🇮🇳", Hde = "🇮🇴", Vde = "🇮🇶", Wde = "🇮🇷", Zde = "🇮🇸", Jde = "🇮🇹", Qde = "🇯🇪", Yde = "🇯🇲", Xde = "🇯🇴", Kde = "🇯🇵", efe = "🇰🇪", nfe = "🇰🇬", tfe = "🇰🇭", ofe = "🇰🇮", sfe = "🇰🇲", rfe = "🇰🇳", cfe = "🇰🇵", afe = "🇰🇷", ife = "🇰🇼", lfe = "🇰🇾", ufe = "🇰🇿", pfe = "🇱🇦", hfe = "🇱🇧", dfe = "🇱🇨", ffe = "🇱🇮", mfe = "🇱🇰", gfe = "🇱🇷", _fe = "🇱🇸", bfe = "🇱🇹", kfe = "🇱🇺", yfe = "🇱🇻", wfe = "🇱🇾", vfe = "🇲🇦", xfe = "🇲🇨", Afe = "🇲🇩", Sfe = "🇲🇪", Lfe = "🇲🇫", Cfe = "🇲🇬", Efe = "🇲🇭", Tfe = "🇲🇰", Dfe = "🇲🇱", qfe = "🇲🇲", jfe = "🇲🇳", Rfe = "🇲🇴", Nfe = "🇲🇵", Pfe = "🇲🇶", Ife = "🇲🇷", Ofe = "🇲🇸", Ffe = "🇲🇹", Mfe = "🇲🇺", Bfe = "🇲🇻", $fe = "🇲🇼", zfe = "🇲🇽", Gfe = "🇲🇾", Ufe = "🇲🇿", Hfe = "🇳🇦", Vfe = "🇳🇨", Wfe = "🇳🇪", Zfe = "🇳🇫", Jfe = "🇳🇬", Qfe = "🇳🇮", Yfe = "🇳🇱", Xfe = "🇳🇴", Kfe = "🇳🇵", eme = "🇳🇷", nme = "🇳🇺", tme = "🇳🇿", ome = "🇴🇲", sme = "🇵🇦", rme = "🇵🇪", cme = "🇵🇫", ame = "🇵🇬", ime = "🇵🇭", lme = "🇵🇰", ume = "🇵🇱", pme = "🇵🇲", hme = "🇵🇳", dme = "🇵🇷", fme = "🇵🇸", mme = "🇵🇹", gme = "🇵🇼", _me = "🇵🇾", bme = "🇶🇦", kme = "🇷🇪", yme = "🇷🇴", wme = "🇷🇸", vme = "🇷🇺", xme = "🇷🇼", Ame = "🇸🇦", Sme = "🇸🇧", Lme = "🇸🇨", Cme = "🇸🇩", Eme = "🇸🇪", Tme = "🇸🇬", Dme = "🇸🇭", qme = "🇸🇮", jme = "🇸🇯", Rme = "🇸🇰", Nme = "🇸🇱", Pme = "🇸🇲", Ime = "🇸🇳", Ome = "🇸🇴", Fme = "🇸🇷", Mme = "🇸🇸", Bme = "🇸🇹", $me = "🇸🇻", zme = "🇸🇽", Gme = "🇸🇾", Ume = "🇸🇿", Hme = "🇹🇦", Vme = "🇹🇨", Wme = "🇹🇩", Zme = "🇹🇫", Jme = "🇹🇬", Qme = "🇹🇭", Yme = "🇹🇯", Xme = "🇹🇰", Kme = "🇹🇱", ege = "🇹🇲", nge = "🇹🇳", tge = "🇹🇴", oge = "🇹🇷", sge = "🇹🇹", rge = "🇹🇻", cge = "🇹🇼", age = "🇹🇿", ige = "🇺🇦", lge = "🇺🇬", uge = "🇺🇲", pge = "🇺🇳", hge = "🇺🇸", dge = "🇺🇾", fge = "🇺🇿", mge = "🇻🇦", gge = "🇻🇨", _ge = "🇻🇪", bge = "🇻🇬", kge = "🇻🇮", yge = "🇻🇳", wge = "🇻🇺", vge = "🇼🇫", xge = "🇼🇸", Age = "🇽🇰", Sge = "🇾🇪", Lge = "🇾🇹", Cge = "🇿🇦", Ege = "🇿🇲", Tge = "🇿🇼", Dge = "🏴󠁧󠁢󠁥󠁮󠁧󠁿", qge = "🏴󠁧󠁢󠁳󠁣󠁴󠁿", jge = "🏴󠁧󠁢󠁷󠁬󠁳󠁿", Rge = {
  100: "💯",
  1234: "🔢",
  grinning: Uz,
  smiley: Hz,
  smile: Vz,
  grin: Wz,
  laughing: Zz,
  satisfied: Jz,
  sweat_smile: Qz,
  rofl: Yz,
  joy: Xz,
  slightly_smiling_face: Kz,
  upside_down_face: e5,
  wink: n5,
  blush: t5,
  innocent: o5,
  smiling_face_with_three_hearts: s5,
  heart_eyes: r5,
  star_struck: c5,
  kissing_heart: a5,
  kissing: i5,
  relaxed: l5,
  kissing_closed_eyes: u5,
  kissing_smiling_eyes: p5,
  smiling_face_with_tear: h5,
  yum: d5,
  stuck_out_tongue: f5,
  stuck_out_tongue_winking_eye: m5,
  zany_face: g5,
  stuck_out_tongue_closed_eyes: _5,
  money_mouth_face: b5,
  hugs: k5,
  hand_over_mouth: y5,
  shushing_face: w5,
  thinking: v5,
  zipper_mouth_face: x5,
  raised_eyebrow: A5,
  neutral_face: S5,
  expressionless: L5,
  no_mouth: C5,
  smirk: E5,
  unamused: T5,
  roll_eyes: D5,
  grimacing: q5,
  lying_face: j5,
  relieved: R5,
  pensive: N5,
  sleepy: P5,
  drooling_face: I5,
  sleeping: O5,
  mask: F5,
  face_with_thermometer: M5,
  face_with_head_bandage: B5,
  nauseated_face: $5,
  vomiting_face: z5,
  sneezing_face: G5,
  hot_face: U5,
  cold_face: H5,
  woozy_face: V5,
  dizzy_face: W5,
  exploding_head: Z5,
  cowboy_hat_face: J5,
  partying_face: Q5,
  disguised_face: Y5,
  sunglasses: X5,
  nerd_face: K5,
  monocle_face: e6,
  confused: n6,
  worried: t6,
  slightly_frowning_face: o6,
  frowning_face: s6,
  open_mouth: r6,
  hushed: c6,
  astonished: a6,
  flushed: i6,
  pleading_face: l6,
  frowning: u6,
  anguished: p6,
  fearful: h6,
  cold_sweat: d6,
  disappointed_relieved: f6,
  cry: m6,
  sob: g6,
  scream: _6,
  confounded: b6,
  persevere: k6,
  disappointed: y6,
  sweat: w6,
  weary: v6,
  tired_face: x6,
  yawning_face: A6,
  triumph: S6,
  rage: L6,
  pout: C6,
  angry: E6,
  cursing_face: T6,
  smiling_imp: D6,
  imp: q6,
  skull: j6,
  skull_and_crossbones: R6,
  hankey: N6,
  poop: P6,
  shit: I6,
  clown_face: O6,
  japanese_ogre: F6,
  japanese_goblin: M6,
  ghost: B6,
  alien: $6,
  space_invader: z6,
  robot: G6,
  smiley_cat: U6,
  smile_cat: H6,
  joy_cat: V6,
  heart_eyes_cat: W6,
  smirk_cat: Z6,
  kissing_cat: J6,
  scream_cat: Q6,
  crying_cat_face: Y6,
  pouting_cat: X6,
  see_no_evil: K6,
  hear_no_evil: e4,
  speak_no_evil: n4,
  kiss: t4,
  love_letter: o4,
  cupid: s4,
  gift_heart: r4,
  sparkling_heart: c4,
  heartpulse: a4,
  heartbeat: i4,
  revolving_hearts: l4,
  two_hearts: u4,
  heart_decoration: p4,
  heavy_heart_exclamation: h4,
  broken_heart: d4,
  heart: f4,
  orange_heart: m4,
  yellow_heart: g4,
  green_heart: _4,
  blue_heart: b4,
  purple_heart: k4,
  brown_heart: y4,
  black_heart: w4,
  white_heart: v4,
  anger: x4,
  boom: A4,
  collision: S4,
  dizzy: L4,
  sweat_drops: C4,
  dash: E4,
  hole: T4,
  bomb: D4,
  speech_balloon: q4,
  eye_speech_bubble: j4,
  left_speech_bubble: R4,
  right_anger_bubble: N4,
  thought_balloon: P4,
  zzz: I4,
  wave: O4,
  raised_back_of_hand: F4,
  raised_hand_with_fingers_splayed: M4,
  hand: B4,
  raised_hand: $4,
  vulcan_salute: z4,
  ok_hand: G4,
  pinched_fingers: U4,
  pinching_hand: H4,
  v: V4,
  crossed_fingers: W4,
  love_you_gesture: Z4,
  metal: J4,
  call_me_hand: Q4,
  point_left: Y4,
  point_right: X4,
  point_up_2: K4,
  middle_finger: e8,
  fu: n8,
  point_down: t8,
  point_up: o8,
  "+1": "👍",
  thumbsup: s8,
  "-1": "👎",
  thumbsdown: r8,
  fist_raised: c8,
  fist: a8,
  fist_oncoming: i8,
  facepunch: l8,
  punch: u8,
  fist_left: p8,
  fist_right: h8,
  clap: d8,
  raised_hands: f8,
  open_hands: m8,
  palms_up_together: g8,
  handshake: _8,
  pray: b8,
  writing_hand: k8,
  nail_care: y8,
  selfie: w8,
  muscle: v8,
  mechanical_arm: x8,
  mechanical_leg: A8,
  leg: S8,
  foot: L8,
  ear: C8,
  ear_with_hearing_aid: E8,
  nose: T8,
  brain: D8,
  anatomical_heart: q8,
  lungs: j8,
  tooth: R8,
  bone: N8,
  eyes: P8,
  eye: I8,
  tongue: O8,
  lips: F8,
  baby: M8,
  child: B8,
  boy: $8,
  girl: z8,
  adult: G8,
  blond_haired_person: U8,
  man: H8,
  bearded_person: V8,
  red_haired_man: W8,
  curly_haired_man: Z8,
  white_haired_man: J8,
  bald_man: Q8,
  woman: Y8,
  red_haired_woman: X8,
  person_red_hair: K8,
  curly_haired_woman: eG,
  person_curly_hair: nG,
  white_haired_woman: tG,
  person_white_hair: oG,
  bald_woman: sG,
  person_bald: rG,
  blond_haired_woman: cG,
  blonde_woman: aG,
  blond_haired_man: iG,
  older_adult: lG,
  older_man: uG,
  older_woman: pG,
  frowning_person: hG,
  frowning_man: dG,
  frowning_woman: fG,
  pouting_face: mG,
  pouting_man: gG,
  pouting_woman: _G,
  no_good: bG,
  no_good_man: kG,
  ng_man: yG,
  no_good_woman: wG,
  ng_woman: vG,
  ok_person: xG,
  ok_man: AG,
  ok_woman: SG,
  tipping_hand_person: LG,
  information_desk_person: CG,
  tipping_hand_man: EG,
  sassy_man: TG,
  tipping_hand_woman: DG,
  sassy_woman: qG,
  raising_hand: jG,
  raising_hand_man: RG,
  raising_hand_woman: NG,
  deaf_person: PG,
  deaf_man: IG,
  deaf_woman: OG,
  bow: FG,
  bowing_man: MG,
  bowing_woman: BG,
  facepalm: $G,
  man_facepalming: zG,
  woman_facepalming: GG,
  shrug: UG,
  man_shrugging: HG,
  woman_shrugging: VG,
  health_worker: WG,
  man_health_worker: ZG,
  woman_health_worker: JG,
  student: QG,
  man_student: YG,
  woman_student: XG,
  teacher: KG,
  man_teacher: eU,
  woman_teacher: nU,
  judge: tU,
  man_judge: oU,
  woman_judge: sU,
  farmer: rU,
  man_farmer: cU,
  woman_farmer: aU,
  cook: iU,
  man_cook: lU,
  woman_cook: uU,
  mechanic: pU,
  man_mechanic: hU,
  woman_mechanic: dU,
  factory_worker: fU,
  man_factory_worker: mU,
  woman_factory_worker: gU,
  office_worker: _U,
  man_office_worker: bU,
  woman_office_worker: kU,
  scientist: yU,
  man_scientist: wU,
  woman_scientist: vU,
  technologist: xU,
  man_technologist: AU,
  woman_technologist: SU,
  singer: LU,
  man_singer: CU,
  woman_singer: EU,
  artist: TU,
  man_artist: DU,
  woman_artist: qU,
  pilot: jU,
  man_pilot: RU,
  woman_pilot: NU,
  astronaut: PU,
  man_astronaut: IU,
  woman_astronaut: OU,
  firefighter: FU,
  man_firefighter: MU,
  woman_firefighter: BU,
  police_officer: $U,
  cop: zU,
  policeman: GU,
  policewoman: UU,
  detective: HU,
  male_detective: VU,
  female_detective: WU,
  guard: ZU,
  guardsman: JU,
  guardswoman: QU,
  ninja: YU,
  construction_worker: XU,
  construction_worker_man: KU,
  construction_worker_woman: e9,
  prince: n9,
  princess: t9,
  person_with_turban: o9,
  man_with_turban: s9,
  woman_with_turban: r9,
  man_with_gua_pi_mao: c9,
  woman_with_headscarf: a9,
  person_in_tuxedo: i9,
  man_in_tuxedo: l9,
  woman_in_tuxedo: u9,
  person_with_veil: p9,
  man_with_veil: h9,
  woman_with_veil: d9,
  bride_with_veil: f9,
  pregnant_woman: m9,
  breast_feeding: g9,
  woman_feeding_baby: _9,
  man_feeding_baby: b9,
  person_feeding_baby: k9,
  angel: y9,
  santa: w9,
  mrs_claus: v9,
  mx_claus: x9,
  superhero: A9,
  superhero_man: S9,
  superhero_woman: L9,
  supervillain: C9,
  supervillain_man: E9,
  supervillain_woman: T9,
  mage: D9,
  mage_man: q9,
  mage_woman: j9,
  fairy: R9,
  fairy_man: N9,
  fairy_woman: P9,
  vampire: I9,
  vampire_man: O9,
  vampire_woman: F9,
  merperson: M9,
  merman: B9,
  mermaid: $9,
  elf: z9,
  elf_man: G9,
  elf_woman: U9,
  genie: H9,
  genie_man: V9,
  genie_woman: W9,
  zombie: Z9,
  zombie_man: J9,
  zombie_woman: Q9,
  massage: Y9,
  massage_man: X9,
  massage_woman: K9,
  haircut: e7,
  haircut_man: n7,
  haircut_woman: t7,
  walking: o7,
  walking_man: s7,
  walking_woman: r7,
  standing_person: c7,
  standing_man: a7,
  standing_woman: i7,
  kneeling_person: l7,
  kneeling_man: u7,
  kneeling_woman: p7,
  person_with_probing_cane: h7,
  man_with_probing_cane: d7,
  woman_with_probing_cane: f7,
  person_in_motorized_wheelchair: m7,
  man_in_motorized_wheelchair: g7,
  woman_in_motorized_wheelchair: _7,
  person_in_manual_wheelchair: b7,
  man_in_manual_wheelchair: k7,
  woman_in_manual_wheelchair: y7,
  runner: w7,
  running: v7,
  running_man: x7,
  running_woman: A7,
  woman_dancing: S7,
  dancer: L7,
  man_dancing: C7,
  business_suit_levitating: E7,
  dancers: T7,
  dancing_men: D7,
  dancing_women: q7,
  sauna_person: j7,
  sauna_man: R7,
  sauna_woman: N7,
  climbing: P7,
  climbing_man: I7,
  climbing_woman: O7,
  person_fencing: F7,
  horse_racing: M7,
  skier: B7,
  snowboarder: $7,
  golfing: z7,
  golfing_man: G7,
  golfing_woman: U7,
  surfer: H7,
  surfing_man: V7,
  surfing_woman: W7,
  rowboat: Z7,
  rowing_man: J7,
  rowing_woman: Q7,
  swimmer: Y7,
  swimming_man: X7,
  swimming_woman: K7,
  bouncing_ball_person: eH,
  bouncing_ball_man: nH,
  basketball_man: tH,
  bouncing_ball_woman: oH,
  basketball_woman: sH,
  weight_lifting: rH,
  weight_lifting_man: cH,
  weight_lifting_woman: aH,
  bicyclist: iH,
  biking_man: lH,
  biking_woman: uH,
  mountain_bicyclist: pH,
  mountain_biking_man: hH,
  mountain_biking_woman: dH,
  cartwheeling: fH,
  man_cartwheeling: mH,
  woman_cartwheeling: gH,
  wrestling: _H,
  men_wrestling: bH,
  women_wrestling: kH,
  water_polo: yH,
  man_playing_water_polo: wH,
  woman_playing_water_polo: vH,
  handball_person: xH,
  man_playing_handball: AH,
  woman_playing_handball: SH,
  juggling_person: LH,
  man_juggling: CH,
  woman_juggling: EH,
  lotus_position: TH,
  lotus_position_man: DH,
  lotus_position_woman: qH,
  bath: jH,
  sleeping_bed: RH,
  people_holding_hands: NH,
  two_women_holding_hands: PH,
  couple: IH,
  two_men_holding_hands: OH,
  couplekiss: FH,
  couplekiss_man_woman: MH,
  couplekiss_man_man: BH,
  couplekiss_woman_woman: $H,
  couple_with_heart: zH,
  couple_with_heart_woman_man: GH,
  couple_with_heart_man_man: UH,
  couple_with_heart_woman_woman: HH,
  family: VH,
  family_man_woman_boy: WH,
  family_man_woman_girl: ZH,
  family_man_woman_girl_boy: JH,
  family_man_woman_boy_boy: QH,
  family_man_woman_girl_girl: YH,
  family_man_man_boy: XH,
  family_man_man_girl: KH,
  family_man_man_girl_boy: eV,
  family_man_man_boy_boy: nV,
  family_man_man_girl_girl: tV,
  family_woman_woman_boy: oV,
  family_woman_woman_girl: sV,
  family_woman_woman_girl_boy: rV,
  family_woman_woman_boy_boy: cV,
  family_woman_woman_girl_girl: aV,
  family_man_boy: iV,
  family_man_boy_boy: lV,
  family_man_girl: uV,
  family_man_girl_boy: pV,
  family_man_girl_girl: hV,
  family_woman_boy: dV,
  family_woman_boy_boy: fV,
  family_woman_girl: mV,
  family_woman_girl_boy: gV,
  family_woman_girl_girl: _V,
  speaking_head: bV,
  bust_in_silhouette: kV,
  busts_in_silhouette: yV,
  people_hugging: wV,
  footprints: vV,
  monkey_face: xV,
  monkey: AV,
  gorilla: SV,
  orangutan: LV,
  dog: CV,
  dog2: EV,
  guide_dog: TV,
  service_dog: DV,
  poodle: qV,
  wolf: jV,
  fox_face: RV,
  raccoon: NV,
  cat: PV,
  cat2: IV,
  black_cat: OV,
  lion: FV,
  tiger: MV,
  tiger2: BV,
  leopard: $V,
  horse: zV,
  racehorse: GV,
  unicorn: UV,
  zebra: HV,
  deer: VV,
  bison: WV,
  cow: ZV,
  ox: JV,
  water_buffalo: QV,
  cow2: YV,
  pig: XV,
  pig2: KV,
  boar: eW,
  pig_nose: nW,
  ram: tW,
  sheep: oW,
  goat: sW,
  dromedary_camel: rW,
  camel: cW,
  llama: aW,
  giraffe: iW,
  elephant: lW,
  mammoth: uW,
  rhinoceros: pW,
  hippopotamus: hW,
  mouse: dW,
  mouse2: fW,
  rat: mW,
  hamster: gW,
  rabbit: _W,
  rabbit2: bW,
  chipmunk: kW,
  beaver: yW,
  hedgehog: wW,
  bat: vW,
  bear: xW,
  polar_bear: AW,
  koala: SW,
  panda_face: LW,
  sloth: CW,
  otter: EW,
  skunk: TW,
  kangaroo: DW,
  badger: qW,
  feet: jW,
  paw_prints: RW,
  turkey: NW,
  chicken: PW,
  rooster: IW,
  hatching_chick: OW,
  baby_chick: FW,
  hatched_chick: MW,
  bird: BW,
  penguin: $W,
  dove: zW,
  eagle: GW,
  duck: UW,
  swan: HW,
  owl: VW,
  dodo: WW,
  feather: ZW,
  flamingo: JW,
  peacock: QW,
  parrot: YW,
  frog: XW,
  crocodile: KW,
  turtle: eZ,
  lizard: nZ,
  snake: tZ,
  dragon_face: oZ,
  dragon: sZ,
  sauropod: rZ,
  "t-rex": "🦖",
  whale: cZ,
  whale2: aZ,
  dolphin: iZ,
  flipper: lZ,
  seal: uZ,
  fish: pZ,
  tropical_fish: hZ,
  blowfish: dZ,
  shark: fZ,
  octopus: mZ,
  shell: gZ,
  snail: _Z,
  butterfly: bZ,
  bug: kZ,
  ant: yZ,
  bee: wZ,
  honeybee: vZ,
  beetle: xZ,
  lady_beetle: AZ,
  cricket: SZ,
  cockroach: LZ,
  spider: CZ,
  spider_web: EZ,
  scorpion: TZ,
  mosquito: DZ,
  fly: qZ,
  worm: jZ,
  microbe: RZ,
  bouquet: NZ,
  cherry_blossom: PZ,
  white_flower: IZ,
  rosette: OZ,
  rose: FZ,
  wilted_flower: MZ,
  hibiscus: BZ,
  sunflower: $Z,
  blossom: zZ,
  tulip: GZ,
  seedling: UZ,
  potted_plant: HZ,
  evergreen_tree: VZ,
  deciduous_tree: WZ,
  palm_tree: ZZ,
  cactus: JZ,
  ear_of_rice: QZ,
  herb: YZ,
  shamrock: XZ,
  four_leaf_clover: KZ,
  maple_leaf: eJ,
  fallen_leaf: nJ,
  leaves: tJ,
  grapes: oJ,
  melon: sJ,
  watermelon: rJ,
  tangerine: cJ,
  orange: aJ,
  mandarin: iJ,
  lemon: lJ,
  banana: uJ,
  pineapple: pJ,
  mango: hJ,
  apple: dJ,
  green_apple: fJ,
  pear: mJ,
  peach: gJ,
  cherries: _J,
  strawberry: bJ,
  blueberries: kJ,
  kiwi_fruit: yJ,
  tomato: wJ,
  olive: vJ,
  coconut: xJ,
  avocado: AJ,
  eggplant: SJ,
  potato: LJ,
  carrot: CJ,
  corn: EJ,
  hot_pepper: TJ,
  bell_pepper: DJ,
  cucumber: qJ,
  leafy_green: jJ,
  broccoli: RJ,
  garlic: NJ,
  onion: PJ,
  mushroom: IJ,
  peanuts: OJ,
  chestnut: FJ,
  bread: MJ,
  croissant: BJ,
  baguette_bread: $J,
  flatbread: zJ,
  pretzel: GJ,
  bagel: UJ,
  pancakes: HJ,
  waffle: VJ,
  cheese: WJ,
  meat_on_bone: ZJ,
  poultry_leg: JJ,
  cut_of_meat: QJ,
  bacon: YJ,
  hamburger: XJ,
  fries: KJ,
  pizza: eQ,
  hotdog: nQ,
  sandwich: tQ,
  taco: oQ,
  burrito: sQ,
  tamale: rQ,
  stuffed_flatbread: cQ,
  falafel: aQ,
  egg: iQ,
  fried_egg: lQ,
  shallow_pan_of_food: uQ,
  stew: pQ,
  fondue: hQ,
  bowl_with_spoon: dQ,
  green_salad: fQ,
  popcorn: mQ,
  butter: gQ,
  salt: _Q,
  canned_food: bQ,
  bento: kQ,
  rice_cracker: yQ,
  rice_ball: wQ,
  rice: vQ,
  curry: xQ,
  ramen: AQ,
  spaghetti: SQ,
  sweet_potato: LQ,
  oden: CQ,
  sushi: EQ,
  fried_shrimp: TQ,
  fish_cake: DQ,
  moon_cake: qQ,
  dango: jQ,
  dumpling: RQ,
  fortune_cookie: NQ,
  takeout_box: PQ,
  crab: IQ,
  lobster: OQ,
  shrimp: FQ,
  squid: MQ,
  oyster: BQ,
  icecream: $Q,
  shaved_ice: zQ,
  ice_cream: GQ,
  doughnut: UQ,
  cookie: HQ,
  birthday: VQ,
  cake: WQ,
  cupcake: ZQ,
  pie: JQ,
  chocolate_bar: QQ,
  candy: YQ,
  lollipop: XQ,
  custard: KQ,
  honey_pot: eY,
  baby_bottle: nY,
  milk_glass: tY,
  coffee: oY,
  teapot: sY,
  tea: rY,
  sake: cY,
  champagne: aY,
  wine_glass: iY,
  cocktail: lY,
  tropical_drink: uY,
  beer: pY,
  beers: hY,
  clinking_glasses: dY,
  tumbler_glass: fY,
  cup_with_straw: mY,
  bubble_tea: gY,
  beverage_box: _Y,
  mate: bY,
  ice_cube: kY,
  chopsticks: yY,
  plate_with_cutlery: wY,
  fork_and_knife: vY,
  spoon: xY,
  hocho: AY,
  knife: SY,
  amphora: LY,
  earth_africa: CY,
  earth_americas: EY,
  earth_asia: TY,
  globe_with_meridians: DY,
  world_map: qY,
  japan: jY,
  compass: RY,
  mountain_snow: NY,
  mountain: PY,
  volcano: IY,
  mount_fuji: OY,
  camping: FY,
  beach_umbrella: MY,
  desert: BY,
  desert_island: $Y,
  national_park: zY,
  stadium: GY,
  classical_building: UY,
  building_construction: HY,
  bricks: VY,
  rock: WY,
  wood: ZY,
  hut: JY,
  houses: QY,
  derelict_house: YY,
  house: XY,
  house_with_garden: KY,
  office: eX,
  post_office: nX,
  european_post_office: tX,
  hospital: oX,
  bank: sX,
  hotel: rX,
  love_hotel: cX,
  convenience_store: aX,
  school: iX,
  department_store: lX,
  factory: uX,
  japanese_castle: pX,
  european_castle: hX,
  wedding: dX,
  tokyo_tower: fX,
  statue_of_liberty: mX,
  church: gX,
  mosque: _X,
  hindu_temple: bX,
  synagogue: kX,
  shinto_shrine: yX,
  kaaba: wX,
  fountain: vX,
  tent: xX,
  foggy: AX,
  night_with_stars: SX,
  cityscape: LX,
  sunrise_over_mountains: CX,
  sunrise: EX,
  city_sunset: TX,
  city_sunrise: DX,
  bridge_at_night: qX,
  hotsprings: jX,
  carousel_horse: RX,
  ferris_wheel: NX,
  roller_coaster: PX,
  barber: IX,
  circus_tent: OX,
  steam_locomotive: FX,
  railway_car: MX,
  bullettrain_side: BX,
  bullettrain_front: $X,
  train2: zX,
  metro: GX,
  light_rail: UX,
  station: HX,
  tram: VX,
  monorail: WX,
  mountain_railway: ZX,
  train: JX,
  bus: QX,
  oncoming_bus: YX,
  trolleybus: XX,
  minibus: KX,
  ambulance: eK,
  fire_engine: nK,
  police_car: tK,
  oncoming_police_car: oK,
  taxi: sK,
  oncoming_taxi: rK,
  car: cK,
  red_car: aK,
  oncoming_automobile: iK,
  blue_car: lK,
  pickup_truck: uK,
  truck: pK,
  articulated_lorry: hK,
  tractor: dK,
  racing_car: fK,
  motorcycle: mK,
  motor_scooter: gK,
  manual_wheelchair: _K,
  motorized_wheelchair: bK,
  auto_rickshaw: kK,
  bike: yK,
  kick_scooter: wK,
  skateboard: vK,
  roller_skate: xK,
  busstop: AK,
  motorway: SK,
  railway_track: LK,
  oil_drum: CK,
  fuelpump: EK,
  rotating_light: TK,
  traffic_light: DK,
  vertical_traffic_light: qK,
  stop_sign: jK,
  construction: RK,
  anchor: NK,
  boat: PK,
  sailboat: IK,
  canoe: OK,
  speedboat: FK,
  passenger_ship: MK,
  ferry: BK,
  motor_boat: $K,
  ship: zK,
  airplane: GK,
  small_airplane: UK,
  flight_departure: HK,
  flight_arrival: VK,
  parachute: WK,
  seat: ZK,
  helicopter: JK,
  suspension_railway: QK,
  mountain_cableway: YK,
  aerial_tramway: XK,
  artificial_satellite: KK,
  rocket: eee,
  flying_saucer: nee,
  bellhop_bell: tee,
  luggage: oee,
  hourglass: see,
  hourglass_flowing_sand: ree,
  watch: cee,
  alarm_clock: aee,
  stopwatch: iee,
  timer_clock: lee,
  mantelpiece_clock: uee,
  clock12: pee,
  clock1230: hee,
  clock1: dee,
  clock130: fee,
  clock2: mee,
  clock230: gee,
  clock3: _ee,
  clock330: bee,
  clock4: kee,
  clock430: yee,
  clock5: wee,
  clock530: vee,
  clock6: xee,
  clock630: Aee,
  clock7: See,
  clock730: Lee,
  clock8: Cee,
  clock830: Eee,
  clock9: Tee,
  clock930: Dee,
  clock10: qee,
  clock1030: jee,
  clock11: Ree,
  clock1130: Nee,
  new_moon: Pee,
  waxing_crescent_moon: Iee,
  first_quarter_moon: Oee,
  moon: Fee,
  waxing_gibbous_moon: Mee,
  full_moon: Bee,
  waning_gibbous_moon: $ee,
  last_quarter_moon: zee,
  waning_crescent_moon: Gee,
  crescent_moon: Uee,
  new_moon_with_face: Hee,
  first_quarter_moon_with_face: Vee,
  last_quarter_moon_with_face: Wee,
  thermometer: Zee,
  sunny: Jee,
  full_moon_with_face: Qee,
  sun_with_face: Yee,
  ringed_planet: Xee,
  star: Kee,
  star2: ene,
  stars: nne,
  milky_way: tne,
  cloud: one,
  partly_sunny: sne,
  cloud_with_lightning_and_rain: rne,
  sun_behind_small_cloud: cne,
  sun_behind_large_cloud: ane,
  sun_behind_rain_cloud: ine,
  cloud_with_rain: lne,
  cloud_with_snow: une,
  cloud_with_lightning: pne,
  tornado: hne,
  fog: dne,
  wind_face: fne,
  cyclone: mne,
  rainbow: gne,
  closed_umbrella: _ne,
  open_umbrella: bne,
  umbrella: kne,
  parasol_on_ground: yne,
  zap: wne,
  snowflake: vne,
  snowman_with_snow: xne,
  snowman: Ane,
  comet: Sne,
  fire: Lne,
  droplet: Cne,
  ocean: Ene,
  jack_o_lantern: Tne,
  christmas_tree: Dne,
  fireworks: qne,
  sparkler: jne,
  firecracker: Rne,
  sparkles: Nne,
  balloon: Pne,
  tada: Ine,
  confetti_ball: One,
  tanabata_tree: Fne,
  bamboo: Mne,
  dolls: Bne,
  flags: $ne,
  wind_chime: zne,
  rice_scene: Gne,
  red_envelope: Une,
  ribbon: Hne,
  gift: Vne,
  reminder_ribbon: Wne,
  tickets: Zne,
  ticket: Jne,
  medal_military: Qne,
  trophy: Yne,
  medal_sports: Xne,
  "1st_place_medal": "🥇",
  "2nd_place_medal": "🥈",
  "3rd_place_medal": "🥉",
  soccer: Kne,
  baseball: ete,
  softball: nte,
  basketball: tte,
  volleyball: ote,
  football: ste,
  rugby_football: rte,
  tennis: cte,
  flying_disc: ate,
  bowling: ite,
  cricket_game: lte,
  field_hockey: ute,
  ice_hockey: pte,
  lacrosse: hte,
  ping_pong: dte,
  badminton: fte,
  boxing_glove: mte,
  martial_arts_uniform: gte,
  goal_net: _te,
  golf: bte,
  ice_skate: kte,
  fishing_pole_and_fish: yte,
  diving_mask: wte,
  running_shirt_with_sash: vte,
  ski: xte,
  sled: Ate,
  curling_stone: Ste,
  dart: Lte,
  yo_yo: Cte,
  kite: Ete,
  "8ball": "🎱",
  crystal_ball: Tte,
  magic_wand: Dte,
  nazar_amulet: qte,
  video_game: jte,
  joystick: Rte,
  slot_machine: Nte,
  game_die: Pte,
  jigsaw: Ite,
  teddy_bear: Ote,
  pinata: Fte,
  nesting_dolls: Mte,
  spades: Bte,
  hearts: $te,
  diamonds: zte,
  clubs: Gte,
  chess_pawn: Ute,
  black_joker: Hte,
  mahjong: Vte,
  flower_playing_cards: Wte,
  performing_arts: Zte,
  framed_picture: Jte,
  art: Qte,
  thread: Yte,
  sewing_needle: Xte,
  yarn: Kte,
  knot: eoe,
  eyeglasses: noe,
  dark_sunglasses: toe,
  goggles: ooe,
  lab_coat: soe,
  safety_vest: roe,
  necktie: coe,
  shirt: aoe,
  tshirt: ioe,
  jeans: loe,
  scarf: uoe,
  gloves: poe,
  coat: hoe,
  socks: doe,
  dress: foe,
  kimono: moe,
  sari: goe,
  one_piece_swimsuit: _oe,
  swim_brief: boe,
  shorts: koe,
  bikini: yoe,
  womans_clothes: woe,
  purse: voe,
  handbag: xoe,
  pouch: Aoe,
  shopping: Soe,
  school_satchel: Loe,
  thong_sandal: Coe,
  mans_shoe: Eoe,
  shoe: Toe,
  athletic_shoe: Doe,
  hiking_boot: qoe,
  flat_shoe: joe,
  high_heel: Roe,
  sandal: Noe,
  ballet_shoes: Poe,
  boot: Ioe,
  crown: Ooe,
  womans_hat: Foe,
  tophat: Moe,
  mortar_board: Boe,
  billed_cap: $oe,
  military_helmet: zoe,
  rescue_worker_helmet: Goe,
  prayer_beads: Uoe,
  lipstick: Hoe,
  ring: Voe,
  gem: Woe,
  mute: Zoe,
  speaker: Joe,
  sound: Qoe,
  loud_sound: Yoe,
  loudspeaker: Xoe,
  mega: Koe,
  postal_horn: ese,
  bell: nse,
  no_bell: tse,
  musical_score: ose,
  musical_note: sse,
  notes: rse,
  studio_microphone: cse,
  level_slider: ase,
  control_knobs: ise,
  microphone: lse,
  headphones: use,
  radio: pse,
  saxophone: hse,
  accordion: dse,
  guitar: fse,
  musical_keyboard: mse,
  trumpet: gse,
  violin: _se,
  banjo: bse,
  drum: kse,
  long_drum: yse,
  iphone: wse,
  calling: vse,
  phone: xse,
  telephone: Ase,
  telephone_receiver: Sse,
  pager: Lse,
  fax: Cse,
  battery: Ese,
  electric_plug: Tse,
  computer: Dse,
  desktop_computer: qse,
  printer: jse,
  keyboard: Rse,
  computer_mouse: Nse,
  trackball: Pse,
  minidisc: Ise,
  floppy_disk: Ose,
  cd: Fse,
  dvd: Mse,
  abacus: Bse,
  movie_camera: $se,
  film_strip: zse,
  film_projector: Gse,
  clapper: Use,
  tv: Hse,
  camera: Vse,
  camera_flash: Wse,
  video_camera: Zse,
  vhs: Jse,
  mag: Qse,
  mag_right: Yse,
  candle: Xse,
  bulb: Kse,
  flashlight: ere,
  izakaya_lantern: nre,
  lantern: tre,
  diya_lamp: ore,
  notebook_with_decorative_cover: sre,
  closed_book: rre,
  book: cre,
  open_book: are,
  green_book: ire,
  blue_book: lre,
  orange_book: ure,
  books: pre,
  notebook: hre,
  ledger: dre,
  page_with_curl: fre,
  scroll: mre,
  page_facing_up: gre,
  newspaper: _re,
  newspaper_roll: bre,
  bookmark_tabs: kre,
  bookmark: yre,
  label: wre,
  moneybag: vre,
  coin: xre,
  yen: Are,
  dollar: Sre,
  euro: Lre,
  pound: Cre,
  money_with_wings: Ere,
  credit_card: Tre,
  receipt: Dre,
  chart: qre,
  envelope: jre,
  email: Rre,
  "e-mail": "📧",
  incoming_envelope: Nre,
  envelope_with_arrow: Pre,
  outbox_tray: Ire,
  inbox_tray: Ore,
  package: "📦",
  mailbox: Fre,
  mailbox_closed: Mre,
  mailbox_with_mail: Bre,
  mailbox_with_no_mail: $re,
  postbox: zre,
  ballot_box: Gre,
  pencil2: Ure,
  black_nib: Hre,
  fountain_pen: Vre,
  pen: Wre,
  paintbrush: Zre,
  crayon: Jre,
  memo: Qre,
  pencil: Yre,
  briefcase: Xre,
  file_folder: Kre,
  open_file_folder: ece,
  card_index_dividers: nce,
  date: tce,
  calendar: oce,
  spiral_notepad: sce,
  spiral_calendar: rce,
  card_index: cce,
  chart_with_upwards_trend: ace,
  chart_with_downwards_trend: ice,
  bar_chart: lce,
  clipboard: uce,
  pushpin: pce,
  round_pushpin: hce,
  paperclip: dce,
  paperclips: fce,
  straight_ruler: mce,
  triangular_ruler: gce,
  scissors: _ce,
  card_file_box: bce,
  file_cabinet: kce,
  wastebasket: yce,
  lock: wce,
  unlock: vce,
  lock_with_ink_pen: xce,
  closed_lock_with_key: Ace,
  key: Sce,
  old_key: Lce,
  hammer: Cce,
  axe: Ece,
  pick: Tce,
  hammer_and_pick: Dce,
  hammer_and_wrench: qce,
  dagger: jce,
  crossed_swords: Rce,
  gun: Nce,
  boomerang: Pce,
  bow_and_arrow: Ice,
  shield: Oce,
  carpentry_saw: Fce,
  wrench: Mce,
  screwdriver: Bce,
  nut_and_bolt: $ce,
  gear: zce,
  clamp: Gce,
  balance_scale: Uce,
  probing_cane: Hce,
  link: Vce,
  chains: Wce,
  hook: Zce,
  toolbox: Jce,
  magnet: Qce,
  ladder: Yce,
  alembic: Xce,
  test_tube: Kce,
  petri_dish: eae,
  dna: nae,
  microscope: tae,
  telescope: oae,
  satellite: sae,
  syringe: rae,
  drop_of_blood: cae,
  pill: aae,
  adhesive_bandage: iae,
  stethoscope: lae,
  door: uae,
  elevator: pae,
  mirror: hae,
  window: dae,
  bed: fae,
  couch_and_lamp: mae,
  chair: gae,
  toilet: _ae,
  plunger: bae,
  shower: kae,
  bathtub: yae,
  mouse_trap: wae,
  razor: vae,
  lotion_bottle: xae,
  safety_pin: Aae,
  broom: Sae,
  basket: Lae,
  roll_of_paper: Cae,
  bucket: Eae,
  soap: Tae,
  toothbrush: Dae,
  sponge: qae,
  fire_extinguisher: jae,
  shopping_cart: Rae,
  smoking: Nae,
  coffin: Pae,
  headstone: Iae,
  funeral_urn: Oae,
  moyai: Fae,
  placard: Mae,
  atm: Bae,
  put_litter_in_its_place: $ae,
  potable_water: zae,
  wheelchair: Gae,
  mens: Uae,
  womens: Hae,
  restroom: Vae,
  baby_symbol: Wae,
  wc: Zae,
  passport_control: Jae,
  customs: Qae,
  baggage_claim: Yae,
  left_luggage: Xae,
  warning: Kae,
  children_crossing: eie,
  no_entry: nie,
  no_entry_sign: tie,
  no_bicycles: oie,
  no_smoking: sie,
  do_not_litter: rie,
  "non-potable_water": "🚱",
  no_pedestrians: cie,
  no_mobile_phones: aie,
  underage: iie,
  radioactive: lie,
  biohazard: uie,
  arrow_up: pie,
  arrow_upper_right: hie,
  arrow_right: die,
  arrow_lower_right: fie,
  arrow_down: mie,
  arrow_lower_left: gie,
  arrow_left: _ie,
  arrow_upper_left: bie,
  arrow_up_down: kie,
  left_right_arrow: yie,
  leftwards_arrow_with_hook: wie,
  arrow_right_hook: vie,
  arrow_heading_up: xie,
  arrow_heading_down: Aie,
  arrows_clockwise: Sie,
  arrows_counterclockwise: Lie,
  back: Cie,
  end: Eie,
  on: Tie,
  soon: Die,
  top: qie,
  place_of_worship: jie,
  atom_symbol: Rie,
  om: Nie,
  star_of_david: Pie,
  wheel_of_dharma: Iie,
  yin_yang: Oie,
  latin_cross: Fie,
  orthodox_cross: Mie,
  star_and_crescent: Bie,
  peace_symbol: $ie,
  menorah: zie,
  six_pointed_star: Gie,
  aries: Uie,
  taurus: Hie,
  gemini: Vie,
  cancer: Wie,
  leo: Zie,
  virgo: Jie,
  libra: Qie,
  scorpius: Yie,
  sagittarius: Xie,
  capricorn: Kie,
  aquarius: ele,
  pisces: nle,
  ophiuchus: tle,
  twisted_rightwards_arrows: ole,
  repeat: sle,
  repeat_one: rle,
  arrow_forward: cle,
  fast_forward: ale,
  next_track_button: ile,
  play_or_pause_button: lle,
  arrow_backward: ule,
  rewind: ple,
  previous_track_button: hle,
  arrow_up_small: dle,
  arrow_double_up: fle,
  arrow_down_small: mle,
  arrow_double_down: gle,
  pause_button: _le,
  stop_button: ble,
  record_button: kle,
  eject_button: yle,
  cinema: wle,
  low_brightness: vle,
  high_brightness: xle,
  signal_strength: Ale,
  vibration_mode: Sle,
  mobile_phone_off: Lle,
  female_sign: Cle,
  male_sign: Ele,
  transgender_symbol: Tle,
  heavy_multiplication_x: Dle,
  heavy_plus_sign: qle,
  heavy_minus_sign: jle,
  heavy_division_sign: Rle,
  infinity: Nle,
  bangbang: Ple,
  interrobang: Ile,
  question: Ole,
  grey_question: Fle,
  grey_exclamation: Mle,
  exclamation: Ble,
  heavy_exclamation_mark: $le,
  wavy_dash: zle,
  currency_exchange: Gle,
  heavy_dollar_sign: Ule,
  medical_symbol: Hle,
  recycle: Vle,
  fleur_de_lis: Wle,
  trident: Zle,
  name_badge: Jle,
  beginner: Qle,
  o: Yle,
  white_check_mark: Xle,
  ballot_box_with_check: Kle,
  heavy_check_mark: eue,
  x: nue,
  negative_squared_cross_mark: tue,
  curly_loop: oue,
  loop: sue,
  part_alternation_mark: rue,
  eight_spoked_asterisk: cue,
  eight_pointed_black_star: aue,
  sparkle: iue,
  copyright: lue,
  registered: uue,
  tm: pue,
  hash: hue,
  asterisk: due,
  zero: fue,
  one: mue,
  two: gue,
  three: _ue,
  four: bue,
  five: kue,
  six: yue,
  seven: wue,
  eight: vue,
  nine: xue,
  keycap_ten: Aue,
  capital_abcd: Sue,
  abcd: Lue,
  symbols: Cue,
  abc: Eue,
  a: Tue,
  ab: Due,
  b: que,
  cl: jue,
  cool: Rue,
  free: Nue,
  information_source: Pue,
  id: Iue,
  m: Oue,
  new: "🆕",
  ng: Fue,
  o2: Mue,
  ok: Bue,
  parking: $ue,
  sos: zue,
  up: Gue,
  vs: Uue,
  koko: Hue,
  sa: Vue,
  ideograph_advantage: Wue,
  accept: Zue,
  congratulations: Jue,
  secret: Que,
  u6e80: Yue,
  red_circle: Xue,
  orange_circle: Kue,
  yellow_circle: epe,
  green_circle: npe,
  large_blue_circle: tpe,
  purple_circle: ope,
  brown_circle: spe,
  black_circle: rpe,
  white_circle: cpe,
  red_square: ape,
  orange_square: ipe,
  yellow_square: lpe,
  green_square: upe,
  blue_square: ppe,
  purple_square: hpe,
  brown_square: dpe,
  black_large_square: fpe,
  white_large_square: mpe,
  black_medium_square: gpe,
  white_medium_square: _pe,
  black_medium_small_square: bpe,
  white_medium_small_square: kpe,
  black_small_square: ype,
  white_small_square: wpe,
  large_orange_diamond: vpe,
  large_blue_diamond: xpe,
  small_orange_diamond: Ape,
  small_blue_diamond: Spe,
  small_red_triangle: Lpe,
  small_red_triangle_down: Cpe,
  diamond_shape_with_a_dot_inside: Epe,
  radio_button: Tpe,
  white_square_button: Dpe,
  black_square_button: qpe,
  checkered_flag: jpe,
  triangular_flag_on_post: Rpe,
  crossed_flags: Npe,
  black_flag: Ppe,
  white_flag: Ipe,
  rainbow_flag: Ope,
  transgender_flag: Fpe,
  pirate_flag: Mpe,
  ascension_island: Bpe,
  andorra: $pe,
  united_arab_emirates: zpe,
  afghanistan: Gpe,
  antigua_barbuda: Upe,
  anguilla: Hpe,
  albania: Vpe,
  armenia: Wpe,
  angola: Zpe,
  antarctica: Jpe,
  argentina: Qpe,
  american_samoa: Ype,
  austria: Xpe,
  australia: Kpe,
  aruba: ehe,
  aland_islands: nhe,
  azerbaijan: the,
  bosnia_herzegovina: ohe,
  barbados: she,
  bangladesh: rhe,
  belgium: che,
  burkina_faso: ahe,
  bulgaria: ihe,
  bahrain: lhe,
  burundi: uhe,
  benin: phe,
  st_barthelemy: hhe,
  bermuda: dhe,
  brunei: fhe,
  bolivia: mhe,
  caribbean_netherlands: ghe,
  brazil: _he,
  bahamas: bhe,
  bhutan: khe,
  bouvet_island: yhe,
  botswana: whe,
  belarus: vhe,
  belize: xhe,
  canada: Ahe,
  cocos_islands: She,
  congo_kinshasa: Lhe,
  central_african_republic: Che,
  congo_brazzaville: Ehe,
  switzerland: The,
  cote_divoire: Dhe,
  cook_islands: qhe,
  chile: jhe,
  cameroon: Rhe,
  cn: Nhe,
  colombia: Phe,
  clipperton_island: Ihe,
  costa_rica: Ohe,
  cuba: Fhe,
  cape_verde: Mhe,
  curacao: Bhe,
  christmas_island: $he,
  cyprus: zhe,
  czech_republic: Ghe,
  de: Uhe,
  diego_garcia: Hhe,
  djibouti: Vhe,
  denmark: Whe,
  dominica: Zhe,
  dominican_republic: Jhe,
  algeria: Qhe,
  ceuta_melilla: Yhe,
  ecuador: Xhe,
  estonia: Khe,
  egypt: ede,
  western_sahara: nde,
  eritrea: tde,
  es: ode,
  ethiopia: sde,
  eu: rde,
  european_union: cde,
  finland: ade,
  fiji: ide,
  falkland_islands: lde,
  micronesia: ude,
  faroe_islands: pde,
  fr: hde,
  gabon: dde,
  gb: fde,
  uk: mde,
  grenada: gde,
  georgia: _de,
  french_guiana: bde,
  guernsey: kde,
  ghana: yde,
  gibraltar: wde,
  greenland: vde,
  gambia: xde,
  guinea: Ade,
  guadeloupe: Sde,
  equatorial_guinea: Lde,
  greece: Cde,
  south_georgia_south_sandwich_islands: Ede,
  guatemala: Tde,
  guam: Dde,
  guinea_bissau: qde,
  guyana: jde,
  hong_kong: Rde,
  heard_mcdonald_islands: Nde,
  honduras: Pde,
  croatia: Ide,
  haiti: Ode,
  hungary: Fde,
  canary_islands: Mde,
  indonesia: Bde,
  ireland: $de,
  israel: zde,
  isle_of_man: Gde,
  india: Ude,
  british_indian_ocean_territory: Hde,
  iraq: Vde,
  iran: Wde,
  iceland: Zde,
  it: Jde,
  jersey: Qde,
  jamaica: Yde,
  jordan: Xde,
  jp: Kde,
  kenya: efe,
  kyrgyzstan: nfe,
  cambodia: tfe,
  kiribati: ofe,
  comoros: sfe,
  st_kitts_nevis: rfe,
  north_korea: cfe,
  kr: afe,
  kuwait: ife,
  cayman_islands: lfe,
  kazakhstan: ufe,
  laos: pfe,
  lebanon: hfe,
  st_lucia: dfe,
  liechtenstein: ffe,
  sri_lanka: mfe,
  liberia: gfe,
  lesotho: _fe,
  lithuania: bfe,
  luxembourg: kfe,
  latvia: yfe,
  libya: wfe,
  morocco: vfe,
  monaco: xfe,
  moldova: Afe,
  montenegro: Sfe,
  st_martin: Lfe,
  madagascar: Cfe,
  marshall_islands: Efe,
  macedonia: Tfe,
  mali: Dfe,
  myanmar: qfe,
  mongolia: jfe,
  macau: Rfe,
  northern_mariana_islands: Nfe,
  martinique: Pfe,
  mauritania: Ife,
  montserrat: Ofe,
  malta: Ffe,
  mauritius: Mfe,
  maldives: Bfe,
  malawi: $fe,
  mexico: zfe,
  malaysia: Gfe,
  mozambique: Ufe,
  namibia: Hfe,
  new_caledonia: Vfe,
  niger: Wfe,
  norfolk_island: Zfe,
  nigeria: Jfe,
  nicaragua: Qfe,
  netherlands: Yfe,
  norway: Xfe,
  nepal: Kfe,
  nauru: eme,
  niue: nme,
  new_zealand: tme,
  oman: ome,
  panama: sme,
  peru: rme,
  french_polynesia: cme,
  papua_new_guinea: ame,
  philippines: ime,
  pakistan: lme,
  poland: ume,
  st_pierre_miquelon: pme,
  pitcairn_islands: hme,
  puerto_rico: dme,
  palestinian_territories: fme,
  portugal: mme,
  palau: gme,
  paraguay: _me,
  qatar: bme,
  reunion: kme,
  romania: yme,
  serbia: wme,
  ru: vme,
  rwanda: xme,
  saudi_arabia: Ame,
  solomon_islands: Sme,
  seychelles: Lme,
  sudan: Cme,
  sweden: Eme,
  singapore: Tme,
  st_helena: Dme,
  slovenia: qme,
  svalbard_jan_mayen: jme,
  slovakia: Rme,
  sierra_leone: Nme,
  san_marino: Pme,
  senegal: Ime,
  somalia: Ome,
  suriname: Fme,
  south_sudan: Mme,
  sao_tome_principe: Bme,
  el_salvador: $me,
  sint_maarten: zme,
  syria: Gme,
  swaziland: Ume,
  tristan_da_cunha: Hme,
  turks_caicos_islands: Vme,
  chad: Wme,
  french_southern_territories: Zme,
  togo: Jme,
  thailand: Qme,
  tajikistan: Yme,
  tokelau: Xme,
  timor_leste: Kme,
  turkmenistan: ege,
  tunisia: nge,
  tonga: tge,
  tr: oge,
  trinidad_tobago: sge,
  tuvalu: rge,
  taiwan: cge,
  tanzania: age,
  ukraine: ige,
  uganda: lge,
  us_outlying_islands: uge,
  united_nations: pge,
  us: hge,
  uruguay: dge,
  uzbekistan: fge,
  vatican_city: mge,
  st_vincent_grenadines: gge,
  venezuela: _ge,
  british_virgin_islands: bge,
  us_virgin_islands: kge,
  vietnam: yge,
  vanuatu: wge,
  wallis_futuna: vge,
  samoa: xge,
  kosovo: Age,
  yemen: Sge,
  mayotte: Lge,
  south_africa: Cge,
  zambia: Ege,
  zimbabwe: Tge,
  england: Dge,
  scotland: qge,
  wales: jge
};
var Nge = {
  angry: [">:(", ">:-("],
  blush: [':")', ':-")'],
  broken_heart: ["</3", "<\\3"],
  // :\ and :-\ not used because of conflict with markdown escaping
  confused: [":/", ":-/"],
  // twemoji shows question
  cry: [":'(", ":'-(", ":,(", ":,-("],
  frowning: [":(", ":-("],
  heart: ["<3"],
  imp: ["]:(", "]:-("],
  innocent: ["o:)", "O:)", "o:-)", "O:-)", "0:)", "0:-)"],
  joy: [":')", ":'-)", ":,)", ":,-)", ":'D", ":'-D", ":,D", ":,-D"],
  kissing: [":*", ":-*"],
  laughing: ["x-)", "X-)"],
  neutral_face: [":|", ":-|"],
  open_mouth: [":o", ":-o", ":O", ":-O"],
  rage: [":@", ":-@"],
  smile: [":D", ":-D"],
  smiley: [":)", ":-)"],
  smiling_imp: ["]:)", "]:-)"],
  sob: [":,'(", ":,'-(", ";(", ";-("],
  stuck_out_tongue: [":P", ":-P"],
  sunglasses: ["8-)", "B-)"],
  sweat: [",:(", ",:-("],
  sweat_smile: [",:)", ",:-)"],
  unamused: [":s", ":-S", ":z", ":-Z", ":$", ":-$"],
  wink: [";)", ";-)"]
}, Pge = function(e, t) {
  return e[t].content;
}, Ige = function(e, t, o, r, s) {
  var a = e.utils.arrayReplaceAt, c = e.utils.lib.ucmicro, l = new RegExp([c.Z.source, c.P.source, c.Cc.source].join("|"));
  function i(p, h, d) {
    var f, m = 0, L = [];
    return p.replace(s, function(S, b, k) {
      var w;
      if (o.hasOwnProperty(S)) {
        if (w = o[S], b > 0 && !l.test(k[b - 1]) || b + S.length < k.length && !l.test(k[b + S.length]))
          return;
      } else
        w = S.slice(1, -1);
      b > m && (f = new d("text", "", 0), f.content = p.slice(m, b), L.push(f)), f = new d("emoji", "", 0), f.markup = w, f.content = t[w], L.push(f), m = b + S.length;
    }), m < p.length && (f = new d("text", "", 0), f.content = p.slice(m), L.push(f)), L;
  }
  return function(h) {
    var d, f, m, L, S, b = h.tokens, k = 0;
    for (f = 0, m = b.length; f < m; f++)
      if (b[f].type === "inline")
        for (L = b[f].children, d = L.length - 1; d >= 0; d--)
          S = L[d], (S.type === "link_open" || S.type === "link_close") && S.info === "auto" && (k -= S.nesting), S.type === "text" && k === 0 && r.test(S.content) && (b[f].children = L = a(
            L,
            d,
            i(S.content, S.level, h.Token)
          ));
  };
};
function Oge(n) {
  return n.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
}
var Fge = function(e) {
  var t = e.defs, o;
  e.enabled.length && (t = Object.keys(t).reduce(function(l, i) {
    return e.enabled.indexOf(i) >= 0 && (l[i] = t[i]), l;
  }, {})), o = Object.keys(e.shortcuts).reduce(function(l, i) {
    return t[i] ? Array.isArray(e.shortcuts[i]) ? (e.shortcuts[i].forEach(function(p) {
      l[p] = i;
    }), l) : (l[e.shortcuts[i]] = i, l) : l;
  }, {});
  var r = Object.keys(t), s;
  r.length === 0 ? s = "^$" : s = r.map(function(l) {
    return ":" + l + ":";
  }).concat(Object.keys(o)).sort().reverse().map(function(l) {
    return Oge(l);
  }).join("|");
  var a = RegExp(s), c = RegExp(s, "g");
  return {
    defs: t,
    shortcuts: o,
    scanRE: a,
    replaceRE: c
  };
}, Mge = Pge, Bge = Ige, $ge = Fge, zge = function(e, t) {
  var o = {
    defs: {},
    shortcuts: {},
    enabled: []
  }, r = $ge(e.utils.assign({}, o, t || {}));
  e.renderer.rules.emoji = Mge, e.core.ruler.after(
    "linkify",
    "emoji",
    Bge(e, r.defs, r.shortcuts, r.scanRE, r.replaceRE)
  );
}, Gge = Rge, Uge = Nge, Hge = zge, Vge = function(e, t) {
  var o = {
    defs: Gge,
    shortcuts: Uge,
    enabled: []
  }, r = e.utils.assign({}, o, t || {});
  Hge(e, r);
};
const Wge = /* @__PURE__ */ hn(Vge);
var Zge = function(e, t, o) {
  function r(f) {
    return f.trim().split(" ", 2)[0] === t;
  }
  function s(f, m, L, S, b) {
    return f[m].nesting === 1 && f[m].attrJoin("class", t), b.renderToken(f, m, L, S, b);
  }
  o = o || {};
  var a = 3, c = o.marker || ":", l = c.charCodeAt(0), i = c.length, p = o.validate || r, h = o.render || s;
  function d(f, m, L, S) {
    var b, k, w, C, y, u, g, x, _ = !1, v = f.bMarks[m] + f.tShift[m], A = f.eMarks[m];
    if (l !== f.src.charCodeAt(v))
      return !1;
    for (b = v + 1; b <= A && c[(b - v) % i] === f.src[b]; b++)
      ;
    if (w = Math.floor((b - v) / i), w < a || (b -= (b - v) % i, C = f.src.slice(v, b), y = f.src.slice(b, A), !p(y, C)))
      return !1;
    if (S)
      return !0;
    for (k = m; k++, !(k >= L || (v = f.bMarks[k] + f.tShift[k], A = f.eMarks[k], v < A && f.sCount[k] < f.blkIndent)); )
      if (l === f.src.charCodeAt(v) && !(f.sCount[k] - f.blkIndent >= 4)) {
        for (b = v + 1; b <= A && c[(b - v) % i] === f.src[b]; b++)
          ;
        if (!(Math.floor((b - v) / i) < w) && (b -= (b - v) % i, b = f.skipSpaces(b), !(b < A))) {
          _ = !0;
          break;
        }
      }
    return g = f.parentType, x = f.lineMax, f.parentType = "container", f.lineMax = k, u = f.push("container_" + t + "_open", "div", 1), u.markup = C, u.block = !0, u.info = y, u.map = [m, k], f.md.block.tokenize(f, m + 1, k), u = f.push("container_" + t + "_close", "div", -1), u.markup = f.src.slice(v, b), u.block = !0, f.parentType = g, f.lineMax = x, f.line = k + (_ ? 1 : 0), !0;
  }
  e.block.ruler.before("fence", "container_" + t, d, {
    alt: ["paragraph", "reference", "blockquote", "list"]
  }), e.renderer.rules["container_" + t + "_open"] = h, e.renderer.rules["container_" + t + "_close"] = h;
};
const ln = /* @__PURE__ */ hn(Zge);
let Jge = (n) => crypto.getRandomValues(new Uint8Array(n)), Qge = (n, e, t) => {
  let o = (2 << Math.log(n.length - 1) / Math.LN2) - 1, r = -~(1.6 * o * e / n.length);
  return (s = e) => {
    let a = "";
    for (; ; ) {
      let c = t(r), l = r;
      for (; l--; )
        if (a += n[c[l] & o] || "", a.length === s)
          return a;
    }
  };
}, Yge = (n, e = 21) => Qge(n, e, Jge), to = (n = 21) => crypto.getRandomValues(new Uint8Array(n)).reduce((e, t) => (t &= 63, t < 36 ? e += t.toString(36) : t < 62 ? e += (t - 26).toString(36).toUpperCase() : t > 62 ? e += "-" : e += "_", e), "");
const Xn = /^[a-z]+:/i, Xge = /^pathname:\/\//, ut = Symbol("vue-md-shiki-component"), Kge = () => [
  ..."abap,actionscript-3,ada,apache,apex,apl,applescript,ara,asm,astro,awk,ballerina,bat,batch,berry,be,bibtex,bicep,blade,c,cadence,cdc,clarity,clojure,clj,cmake,cobol,codeql,ql,coffee,cpp,crystal,csharp,c#,cs,css,cue,d,dart,dax,diff,docker,dream-maker,elixir,elm,erb,erlang,erl,fish,fsharp,f#,fs,gherkin,git-commit,git-rebase,glsl,gnuplot,go,graphql,groovy,hack,haml,handlebars,hbs,haskell,hs,hcl,hlsl,html,http,imba,ini,properties,java,javascript,js,jinja-html,jison,json,json5,jsonc,jsonnet,jssm,fsl,jsx,julia,kotlin,latex,less,liquid,lisp,logo,lua,make,makefile,markdown,md,marko,matlab,mdx,mermaid,nginx,nim,nix,objective-c,objc,objective-cpp,ocaml,pascal,perl,php,plsql,postcss,powerquery,powershell,ps,ps1,prisma,prolog,proto,pug,jade,puppet,purescript,python,py,r,raku,perl6,razor,rel,riscv,rst,ruby,rb,rust,rs,sas,sass,scala,scheme,scss,shaderlab,shader,shellscript,bash,console,sh,shell,zsh,smalltalk,solidity,sparql,sql,ssh-config,stata,stylus,styl,svelte,swift,system-verilog,tasl,tcl,tex,toml,tsx,turtle,twig,typescript,ts,v,vb,cmd,verilog,vhdl,viml,vim,vimscript,vue-html,vue,wasm,wenyan,文言,wgsl,xml,xsl,yaml,yml,zenscript".split(
    ","
  ),
  ...Object.keys($o)
], $o = {
  "C++": "cpp",
  "C#": "csharp"
};
function e_e(n) {
  const e = n.renderer.rules.fence;
  n.renderer.rules.fence = (...t) => {
    const [o, r] = t, s = o[r];
    s.info = s.info.replace(/\[.*\]/, "");
    let a = zo(s.info);
    Kge().includes(a) || (a = "plainText");
    const l = e(...t);
    return `<div class="language-${a}">${l}</div>`;
  };
}
function n_e(n) {
  var e;
  return ((e = n.match(/\[(.*)\]/)) == null ? void 0 : e[1]) || zo(n) || "txt";
}
const zo = (n) => n.trim().replace(/:(no-)?line-numbers({| |$).*/, "").replace(/(-vue|{| ).*$/, "").replace(/^vue-html$/, "template"), t_e = (n) => {
  n.use(...Ve("tip", "TIP", n)).use(...Ve("info", "INFO", n)).use(...Ve("warning", "WARNING", n)).use(...Ve("danger", "DANGER", n)).use(...Ve("details", "Details", n)).use(ln, "v-pre", {
    render: (e, t) => e[t].nesting === 1 ? `<div v-pre>
` : `</div>
`
  }).use(ln, "raw", {
    render: (e, t) => e[t].nesting === 1 ? `<div class="vp-raw">
` : `</div>
`
  }).use(...o_e());
};
function Ve(n, e, t) {
  return [
    ln,
    n,
    {
      render(o, r) {
        const s = o[r], a = s.info.trim().slice(n.length).trim();
        if (s.nesting === 1) {
          const c = t.renderInline(a || e);
          return n === "details" ? `<details class="${n} custom-block"><summary>${c}</summary>
` : `<div class="${n} custom-block"><p class="custom-block-title">${c}</p>
`;
        } else
          return n === "details" ? `</details>
` : `</div>
`;
      }
    }
  ];
}
function o_e() {
  return [
    ln,
    "code-group",
    {
      render(n, e) {
        if (n[e].nesting === 1) {
          const t = to(5);
          let o = "", r = 'checked="checked"';
          for (let s = e + 1; !(n[s].nesting === -1 && n[s].type === "container_code-group_close"); ++s)
            if (n[s].type === "fence" && n[s].tag === "code") {
              const a = n_e(n[s].info), c = to(7);
              o += `<input type="radio" name="group-${t}" id="tab-${c}" ${r}><label for="tab-${c}">${a}</label>`, r && (n[s].info += " active", r = "");
            }
          return `<div class="vp-code-group"><div class="tabs">${o}</div><div class="blocks">
`;
        }
        return `</div></div>
`;
      }
    }
  ];
}
function xn(n, e = {}) {
  return ({ code: t }) => {
    const o = e.tagRegExp ?? /(?:\/\/|\/\*{1,2}) *\[!code\s+([\w+-]+)(?::(\d+))?] *(?:\*{1,2}\/)?/, r = [];
    return t = t.split(`
`).map((s, a) => {
      const [c, l, i] = s.match(o) ?? [];
      return !c || !Object.keys(n).includes(l) ? s : (Array.from({ length: Number(i ?? 1) }).forEach((p, h) => {
        r.push({
          line: a + h + 1,
          classes: n[l]
        });
      }), s.replace(o, ""));
    }).join(`
`), {
      code: t,
      lineOptions: r
    };
  };
}
function Qe(n, e, t) {
  const o = new RegExp(`<${t ?? "w+"}[^>]*class="([\\w+-:;\\/* ]*)"`);
  return e = Array.isArray(e) ? e : [e], n.replace(o, (r, s) => r.replace(s, `${s} ${e}`));
}
function s_e(n = {}) {
  const e = n.commonDiffClass ?? "diff", t = n.removedLinesClasses ?? ["remove"], o = n.removedLinesClasses ?? ["add"], r = n.removeLineTag ?? "--", s = n.addLineTag ?? "++", a = n.hasDiffClass ?? "has-diff";
  return {
    name: "diff",
    handler: xn({
      [r]: [e, ...t],
      [s]: [e, ...o]
    }, n),
    postProcess: ({ code: c }) => c.includes(e) ? Qe(c, a, "pre") : c
  };
}
function r_e(n = {}) {
  const e = n.hasFocusClass ?? "has-focus", t = n.hasFocusedLinesClass ?? "has-focused-lines", o = n.focusTag ?? "focus";
  return {
    name: "focus",
    handler: xn(
      {
        [o]: [e]
      },
      n
    ),
    postProcess: ({ code: r }) => r.includes(e) ? Qe(r, t, "pre") : r
  };
}
function c_e(n = {}) {
  const e = n.hasHighlightClass ?? "has-highlight", t = n.hasHighlightedLinesClass ?? "has-highlighted-lines", o = n.highlightTag ?? "hl";
  return {
    name: "highlight",
    handler: xn({
      [o]: [e]
    }, n),
    postProcess: ({ code: r }) => r.includes(e) ? Qe(r, t, "pre") : r
  };
}
function a_e(n, e, t) {
  return n.reduce((o, r) => {
    var c;
    const { code: s, lineOptions: a } = ((c = r.handler) == null ? void 0 : c.call(r, {
      code: o.code,
      lang: t
    })) ?? o;
    return {
      code: s,
      lineOptions: [
        ...o.lineOptions,
        ...a
      ]
    };
  }, {
    code: e,
    lineOptions: []
  });
}
function i_e(n, e, t) {
  return n.reduce((o, r) => {
    var s;
    return ((s = r.postProcess) == null ? void 0 : s.call(r, {
      code: o,
      lang: t
    })) ?? o;
  }, e);
}
var Go = { exports: {} };
(function(n, e) {
  (function(t, o) {
    n.exports = o();
  })(go, () => {
    return t = { 770: function(r, s, a) {
      var c = this && this.__importDefault || function(S) {
        return S && S.__esModule ? S : { default: S };
      };
      Object.defineProperty(s, "__esModule", { value: !0 }), s.setDefaultDebugCall = s.createOnigScanner = s.createOnigString = s.loadWASM = s.OnigScanner = s.OnigString = void 0;
      const l = c(a(418));
      let i = null, p = !1;
      class h {
        static _utf8ByteLength(b) {
          let k = 0;
          for (let w = 0, C = b.length; w < C; w++) {
            const y = b.charCodeAt(w);
            let u = y, g = !1;
            if (y >= 55296 && y <= 56319 && w + 1 < C) {
              const x = b.charCodeAt(w + 1);
              x >= 56320 && x <= 57343 && (u = 65536 + (y - 55296 << 10) | x - 56320, g = !0);
            }
            k += u <= 127 ? 1 : u <= 2047 ? 2 : u <= 65535 ? 3 : 4, g && w++;
          }
          return k;
        }
        constructor(b) {
          const k = b.length, w = h._utf8ByteLength(b), C = w !== k, y = C ? new Uint32Array(k + 1) : null;
          C && (y[k] = w);
          const u = C ? new Uint32Array(w + 1) : null;
          C && (u[w] = k);
          const g = new Uint8Array(w);
          let x = 0;
          for (let _ = 0; _ < k; _++) {
            const v = b.charCodeAt(_);
            let A = v, E = !1;
            if (v >= 55296 && v <= 56319 && _ + 1 < k) {
              const D = b.charCodeAt(_ + 1);
              D >= 56320 && D <= 57343 && (A = 65536 + (v - 55296 << 10) | D - 56320, E = !0);
            }
            C && (y[_] = x, E && (y[_ + 1] = x), A <= 127 ? u[x + 0] = _ : A <= 2047 ? (u[x + 0] = _, u[x + 1] = _) : A <= 65535 ? (u[x + 0] = _, u[x + 1] = _, u[x + 2] = _) : (u[x + 0] = _, u[x + 1] = _, u[x + 2] = _, u[x + 3] = _)), A <= 127 ? g[x++] = A : A <= 2047 ? (g[x++] = 192 | (1984 & A) >>> 6, g[x++] = 128 | (63 & A) >>> 0) : A <= 65535 ? (g[x++] = 224 | (61440 & A) >>> 12, g[x++] = 128 | (4032 & A) >>> 6, g[x++] = 128 | (63 & A) >>> 0) : (g[x++] = 240 | (1835008 & A) >>> 18, g[x++] = 128 | (258048 & A) >>> 12, g[x++] = 128 | (4032 & A) >>> 6, g[x++] = 128 | (63 & A) >>> 0), E && _++;
          }
          this.utf16Length = k, this.utf8Length = w, this.utf16Value = b, this.utf8Value = g, this.utf16OffsetToUtf8 = y, this.utf8OffsetToUtf16 = u;
        }
        createString(b) {
          const k = b._omalloc(this.utf8Length);
          return b.HEAPU8.set(this.utf8Value, k), k;
        }
      }
      class d {
        constructor(b) {
          if (this.id = ++d.LAST_ID, !i)
            throw new Error("Must invoke loadWASM first.");
          this._onigBinding = i, this.content = b;
          const k = new h(b);
          this.utf16Length = k.utf16Length, this.utf8Length = k.utf8Length, this.utf16OffsetToUtf8 = k.utf16OffsetToUtf8, this.utf8OffsetToUtf16 = k.utf8OffsetToUtf16, this.utf8Length < 1e4 && !d._sharedPtrInUse ? (d._sharedPtr || (d._sharedPtr = i._omalloc(1e4)), d._sharedPtrInUse = !0, i.HEAPU8.set(k.utf8Value, d._sharedPtr), this.ptr = d._sharedPtr) : this.ptr = k.createString(i);
        }
        convertUtf8OffsetToUtf16(b) {
          return this.utf8OffsetToUtf16 ? b < 0 ? 0 : b > this.utf8Length ? this.utf16Length : this.utf8OffsetToUtf16[b] : b;
        }
        convertUtf16OffsetToUtf8(b) {
          return this.utf16OffsetToUtf8 ? b < 0 ? 0 : b > this.utf16Length ? this.utf8Length : this.utf16OffsetToUtf8[b] : b;
        }
        dispose() {
          this.ptr === d._sharedPtr ? d._sharedPtrInUse = !1 : this._onigBinding._ofree(this.ptr);
        }
      }
      s.OnigString = d, d.LAST_ID = 0, d._sharedPtr = 0, d._sharedPtrInUse = !1;
      class f {
        constructor(b) {
          if (!i)
            throw new Error("Must invoke loadWASM first.");
          const k = [], w = [];
          for (let g = 0, x = b.length; g < x; g++) {
            const _ = new h(b[g]);
            k[g] = _.createString(i), w[g] = _.utf8Length;
          }
          const C = i._omalloc(4 * b.length);
          i.HEAPU32.set(k, C / 4);
          const y = i._omalloc(4 * b.length);
          i.HEAPU32.set(w, y / 4);
          const u = i._createOnigScanner(C, y, b.length);
          for (let g = 0, x = b.length; g < x; g++)
            i._ofree(k[g]);
          i._ofree(y), i._ofree(C), u === 0 && function(g) {
            throw new Error(g.UTF8ToString(g._getLastOnigError()));
          }(i), this._onigBinding = i, this._ptr = u;
        }
        dispose() {
          this._onigBinding._freeOnigScanner(this._ptr);
        }
        findNextMatchSync(b, k, w) {
          let C = p, y = 0;
          if (typeof w == "number" ? (8 & w && (C = !0), y = w) : typeof w == "boolean" && (C = w), typeof b == "string") {
            b = new d(b);
            const u = this._findNextMatchSync(b, k, C, y);
            return b.dispose(), u;
          }
          return this._findNextMatchSync(b, k, C, y);
        }
        _findNextMatchSync(b, k, w, C) {
          const y = this._onigBinding;
          let u;
          if (u = w ? y._findNextOnigScannerMatchDbg(this._ptr, b.id, b.ptr, b.utf8Length, b.convertUtf16OffsetToUtf8(k), C) : y._findNextOnigScannerMatch(this._ptr, b.id, b.ptr, b.utf8Length, b.convertUtf16OffsetToUtf8(k), C), u === 0)
            return null;
          const g = y.HEAPU32;
          let x = u / 4;
          const _ = g[x++], v = g[x++];
          let A = [];
          for (let E = 0; E < v; E++) {
            const D = b.convertUtf8OffsetToUtf16(g[x++]), T = b.convertUtf8OffsetToUtf16(g[x++]);
            A[E] = { start: D, end: T, length: T - D };
          }
          return { index: _, captureIndices: A };
        }
      }
      s.OnigScanner = f;
      let m = !1, L = null;
      s.loadWASM = function(S) {
        if (m)
          return L;
        let b, k, w, C;
        if (m = !0, function(y) {
          return typeof y.instantiator == "function";
        }(S))
          b = S.instantiator, k = S.print;
        else {
          let y;
          (function(u) {
            return u.data !== void 0;
          })(S) ? (y = S.data, k = S.print) : y = S, b = function(u) {
            return typeof Response < "u" && u instanceof Response;
          }(y) ? typeof WebAssembly.instantiateStreaming == "function" ? function(u) {
            return (g) => WebAssembly.instantiateStreaming(u, g);
          }(y) : function(u) {
            return async (g) => {
              const x = await u.arrayBuffer();
              return WebAssembly.instantiate(x, g);
            };
          }(y) : function(u) {
            return (g) => WebAssembly.instantiate(u, g);
          }(y);
        }
        return L = new Promise((y, u) => {
          w = y, C = u;
        }), function(y, u, g, x) {
          (0, l.default)({ print: u, instantiateWasm: (_, v) => {
            if (typeof performance > "u") {
              const A = () => Date.now();
              _.env.emscripten_get_now = A, _.wasi_snapshot_preview1.emscripten_get_now = A;
            }
            return y(_).then((A) => v(A.instance), x), {};
          } }).then((_) => {
            i = _, g();
          });
        }(b, k, w, C), L;
      }, s.createOnigString = function(S) {
        return new d(S);
      }, s.createOnigScanner = function(S) {
        return new f(S);
      }, s.setDefaultDebugCall = function(S) {
        p = S;
      };
    }, 418: (r) => {
      var s = (typeof document < "u" && document.currentScript && document.currentScript.src, function(a) {
        var c, l, i = (a = a || {}) !== void 0 ? a : {};
        i.ready = new Promise(function(N, P) {
          c = N, l = P;
        });
        var p, h = Object.assign({}, i), d = !1, f = "";
        function m(N) {
          return i.locateFile ? i.locateFile(N, f) : f + N;
        }
        p = function(N) {
          let P;
          return typeof readbuffer == "function" ? new Uint8Array(readbuffer(N)) : (P = read(N, "binary"), C(typeof P == "object"), P);
        }, typeof scriptArgs < "u" && scriptArgs, typeof onig_print < "u" && (typeof console > "u" && (console = {}), console.log = onig_print, console.warn = console.error = typeof printErr < "u" ? printErr : onig_print);
        var L, S, b = i.print || console.log.bind(console), k = i.printErr || console.warn.bind(console);
        Object.assign(i, h), h = null, i.arguments && i.arguments, i.thisProgram && i.thisProgram, i.quit && i.quit, i.wasmBinary && (L = i.wasmBinary), i.noExitRuntime, typeof WebAssembly != "object" && z("no native wasm support detected");
        var w = !1;
        function C(N, P) {
          N || z(P);
        }
        var y, u, g, x = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0;
        function _(N, P, X) {
          for (var se = P + X, W = P; N[W] && !(W >= se); )
            ++W;
          if (W - P > 16 && N.buffer && x)
            return x.decode(N.subarray(P, W));
          for (var H = ""; P < W; ) {
            var K = N[P++];
            if (128 & K) {
              var Ne = 63 & N[P++];
              if ((224 & K) != 192) {
                var Pe = 63 & N[P++];
                if ((K = (240 & K) == 224 ? (15 & K) << 12 | Ne << 6 | Pe : (7 & K) << 18 | Ne << 12 | Pe << 6 | 63 & N[P++]) < 65536)
                  H += String.fromCharCode(K);
                else {
                  var ht = K - 65536;
                  H += String.fromCharCode(55296 | ht >> 10, 56320 | 1023 & ht);
                }
              } else
                H += String.fromCharCode((31 & K) << 6 | Ne);
            } else
              H += String.fromCharCode(K);
          }
          return H;
        }
        function v(N, P) {
          return N ? _(u, N, P) : "";
        }
        function A(N) {
          y = N, i.HEAP8 = new Int8Array(N), i.HEAP16 = new Int16Array(N), i.HEAP32 = new Int32Array(N), i.HEAPU8 = u = new Uint8Array(N), i.HEAPU16 = new Uint16Array(N), i.HEAPU32 = g = new Uint32Array(N), i.HEAPF32 = new Float32Array(N), i.HEAPF64 = new Float64Array(N);
        }
        i.INITIAL_MEMORY;
        var E = [], D = [], T = [];
        function q() {
          if (i.preRun)
            for (typeof i.preRun == "function" && (i.preRun = [i.preRun]); i.preRun.length; )
              M(i.preRun.shift());
          fe(E);
        }
        function R() {
          fe(D);
        }
        function F() {
          if (i.postRun)
            for (typeof i.postRun == "function" && (i.postRun = [i.postRun]); i.postRun.length; )
              Z(i.postRun.shift());
          fe(T);
        }
        function M(N) {
          E.unshift(N);
        }
        function O(N) {
          D.unshift(N);
        }
        function Z(N) {
          T.unshift(N);
        }
        var J = 0, V = null;
        function G(N) {
          J++, i.monitorRunDependencies && i.monitorRunDependencies(J);
        }
        function $(N) {
          if (J--, i.monitorRunDependencies && i.monitorRunDependencies(J), J == 0 && V) {
            var P = V;
            V = null, P();
          }
        }
        function z(N) {
          i.onAbort && i.onAbort(N), k(N = "Aborted(" + N + ")"), w = !0, N += ". Build with -sASSERTIONS for more info.";
          var P = new WebAssembly.RuntimeError(N);
          throw l(P), P;
        }
        var Y, j, Q = "data:application/octet-stream;base64,";
        function U(N) {
          return N.startsWith(Q);
        }
        function oe(N) {
          try {
            if (N == Y && L)
              return new Uint8Array(L);
            if (p)
              return p(N);
            throw "both async and sync fetching of the wasm failed";
          } catch (P) {
            z(P);
          }
        }
        function we() {
          return L || !d || typeof fetch != "function" ? Promise.resolve().then(function() {
            return oe(Y);
          }) : fetch(Y, { credentials: "same-origin" }).then(function(N) {
            if (!N.ok)
              throw "failed to load wasm binary file at '" + Y + "'";
            return N.arrayBuffer();
          }).catch(function() {
            return oe(Y);
          });
        }
        function He() {
          var N = { env: Se, wasi_snapshot_preview1: Se };
          function P(W, H) {
            var K = W.exports;
            i.asm = K, A((S = i.asm.memory).buffer), i.asm.__indirect_function_table, O(i.asm.__wasm_call_ctors), $();
          }
          function X(W) {
            P(W.instance);
          }
          function se(W) {
            return we().then(function(H) {
              return WebAssembly.instantiate(H, N);
            }).then(function(H) {
              return H;
            }).then(W, function(H) {
              k("failed to asynchronously prepare wasm: " + H), z(H);
            });
          }
          if (G(), i.instantiateWasm)
            try {
              return i.instantiateWasm(N, P);
            } catch (W) {
              k("Module.instantiateWasm callback failed with error: " + W), l(W);
            }
          return (L || typeof WebAssembly.instantiateStreaming != "function" || U(Y) || typeof fetch != "function" ? se(X) : fetch(Y, { credentials: "same-origin" }).then(function(W) {
            return WebAssembly.instantiateStreaming(W, N).then(X, function(H) {
              return k("wasm streaming compile failed: " + H), k("falling back to ArrayBuffer instantiation"), se(X);
            });
          })).catch(l), {};
        }
        function fe(N) {
          for (; N.length > 0; )
            N.shift()(i);
        }
        function me(N, P, X) {
          u.copyWithin(N, P, P + X);
        }
        function je(N) {
          try {
            return S.grow(N - y.byteLength + 65535 >>> 16), A(S.buffer), 1;
          } catch {
          }
        }
        function ve(N) {
          var P, X = u.length, se = 2147483648;
          if ((N >>>= 0) > se)
            return !1;
          for (var W = 1; W <= 4; W *= 2) {
            var H = X * (1 + 0.2 / W);
            if (H = Math.min(H, N + 100663296), je(Math.min(se, (P = Math.max(N, H)) + (65536 - P % 65536) % 65536)))
              return !0;
          }
          return !1;
        }
        U(Y = "onig.wasm") || (Y = m(Y)), j = typeof dateNow < "u" ? dateNow : () => performance.now();
        var xe = [null, [], []];
        function Ae(N, P) {
          var X = xe[N];
          P === 0 || P === 10 ? ((N === 1 ? b : k)(_(X, 0)), X.length = 0) : X.push(P);
        }
        function ge(N, P, X, se) {
          for (var W = 0, H = 0; H < X; H++) {
            var K = g[P >> 2], Ne = g[P + 4 >> 2];
            P += 8;
            for (var Pe = 0; Pe < Ne; Pe++)
              Ae(N, u[K + Pe]);
            W += Ne;
          }
          return g[se >> 2] = W, 0;
        }
        var ee, Se = { emscripten_get_now: j, emscripten_memcpy_big: me, emscripten_resize_heap: ve, fd_write: ge };
        function Re(N) {
          function P() {
            ee || (ee = !0, i.calledRun = !0, w || (R(), c(i), i.onRuntimeInitialized && i.onRuntimeInitialized(), F()));
          }
          J > 0 || (q(), J > 0 || (i.setStatus ? (i.setStatus("Running..."), setTimeout(function() {
            setTimeout(function() {
              i.setStatus("");
            }, 1), P();
          }, 1)) : P()));
        }
        if (He(), i.___wasm_call_ctors = function() {
          return (i.___wasm_call_ctors = i.asm.__wasm_call_ctors).apply(null, arguments);
        }, i.___errno_location = function() {
          return (i.___errno_location = i.asm.__errno_location).apply(null, arguments);
        }, i._omalloc = function() {
          return (i._omalloc = i.asm.omalloc).apply(null, arguments);
        }, i._ofree = function() {
          return (i._ofree = i.asm.ofree).apply(null, arguments);
        }, i._getLastOnigError = function() {
          return (i._getLastOnigError = i.asm.getLastOnigError).apply(null, arguments);
        }, i._createOnigScanner = function() {
          return (i._createOnigScanner = i.asm.createOnigScanner).apply(null, arguments);
        }, i._freeOnigScanner = function() {
          return (i._freeOnigScanner = i.asm.freeOnigScanner).apply(null, arguments);
        }, i._findNextOnigScannerMatch = function() {
          return (i._findNextOnigScannerMatch = i.asm.findNextOnigScannerMatch).apply(null, arguments);
        }, i._findNextOnigScannerMatchDbg = function() {
          return (i._findNextOnigScannerMatchDbg = i.asm.findNextOnigScannerMatchDbg).apply(null, arguments);
        }, i.stackSave = function() {
          return (i.stackSave = i.asm.stackSave).apply(null, arguments);
        }, i.stackRestore = function() {
          return (i.stackRestore = i.asm.stackRestore).apply(null, arguments);
        }, i.stackAlloc = function() {
          return (i.stackAlloc = i.asm.stackAlloc).apply(null, arguments);
        }, i.dynCall_jiji = function() {
          return (i.dynCall_jiji = i.asm.dynCall_jiji).apply(null, arguments);
        }, i.UTF8ToString = v, V = function N() {
          ee || Re(), ee || (V = N);
        }, i.preInit)
          for (typeof i.preInit == "function" && (i.preInit = [i.preInit]); i.preInit.length > 0; )
            i.preInit.pop()();
        return Re(), a.ready;
      });
      r.exports = s;
    } }, o = {}, function r(s) {
      var a = o[s];
      if (a !== void 0)
        return a.exports;
      var c = o[s] = { exports: {} };
      return t[s].call(c.exports, c, c.exports, r), c.exports;
    }(770);
    var t, o;
  });
})(Go);
var on = Go.exports, Uo = { exports: {} };
(function(n, e) {
  (function(t, o) {
    n.exports = o();
  })(go, function() {
    return (() => {
      var t = { 350: (r, s) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.UseOnigurumaFindOptions = s.DebugFlags = void 0, s.DebugFlags = { InDebugMode: typeof process < "u" && !!process.env.VSCODE_TEXTMATE_DEBUG }, s.UseOnigurumaFindOptions = !1;
      }, 36: (r, s) => {
        var a;
        Object.defineProperty(s, "__esModule", { value: !0 }), s.toOptionalTokenType = s.EncodedTokenAttributes = void 0, (a = s.EncodedTokenAttributes || (s.EncodedTokenAttributes = {})).toBinaryStr = function(c) {
          let l = c.toString(2);
          for (; l.length < 32; )
            l = "0" + l;
          return l;
        }, a.print = function(c) {
          const l = a.getLanguageId(c), i = a.getTokenType(c), p = a.getFontStyle(c), h = a.getForeground(c), d = a.getBackground(c);
          console.log({ languageId: l, tokenType: i, fontStyle: p, foreground: h, background: d });
        }, a.getLanguageId = function(c) {
          return (255 & c) >>> 0;
        }, a.getTokenType = function(c) {
          return (768 & c) >>> 8;
        }, a.containsBalancedBrackets = function(c) {
          return (1024 & c) != 0;
        }, a.getFontStyle = function(c) {
          return (30720 & c) >>> 11;
        }, a.getForeground = function(c) {
          return (16744448 & c) >>> 15;
        }, a.getBackground = function(c) {
          return (4278190080 & c) >>> 24;
        }, a.set = function(c, l, i, p, h, d, f) {
          let m = a.getLanguageId(c), L = a.getTokenType(c), S = a.containsBalancedBrackets(c) ? 1 : 0, b = a.getFontStyle(c), k = a.getForeground(c), w = a.getBackground(c);
          return l !== 0 && (m = l), i !== 8 && (L = i), p !== null && (S = p ? 1 : 0), h !== -1 && (b = h), d !== 0 && (k = d), f !== 0 && (w = f), (m << 0 | L << 8 | S << 10 | b << 11 | k << 15 | w << 24) >>> 0;
        }, s.toOptionalTokenType = function(c) {
          return c;
        };
      }, 996: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.BasicScopeAttributesProvider = s.BasicScopeAttributes = void 0;
        const c = a(878);
        class l {
          constructor(d, f) {
            this.languageId = d, this.tokenType = f;
          }
        }
        s.BasicScopeAttributes = l;
        class i {
          constructor(d, f) {
            this._getBasicScopeAttributes = new c.CachedFn((m) => {
              const L = this._scopeToLanguage(m), S = this._toStandardTokenType(m);
              return new l(L, S);
            }), this._defaultAttributes = new l(d, 8), this._embeddedLanguagesMatcher = new p(Object.entries(f || {}));
          }
          getDefaultAttributes() {
            return this._defaultAttributes;
          }
          getBasicScopeAttributes(d) {
            return d === null ? i._NULL_SCOPE_METADATA : this._getBasicScopeAttributes.get(d);
          }
          _scopeToLanguage(d) {
            return this._embeddedLanguagesMatcher.match(d) || 0;
          }
          _toStandardTokenType(d) {
            const f = d.match(i.STANDARD_TOKEN_TYPE_REGEXP);
            if (!f)
              return 8;
            switch (f[1]) {
              case "comment":
                return 1;
              case "string":
                return 2;
              case "regex":
                return 3;
              case "meta.embedded":
                return 0;
            }
            throw new Error("Unexpected match for standard token type!");
          }
        }
        s.BasicScopeAttributesProvider = i, i._NULL_SCOPE_METADATA = new l(0, 0), i.STANDARD_TOKEN_TYPE_REGEXP = /\b(comment|string|regex|meta\.embedded)\b/;
        class p {
          constructor(d) {
            if (d.length === 0)
              this.values = null, this.scopesRegExp = null;
            else {
              this.values = new Map(d);
              const f = d.map(([m, L]) => c.escapeRegExpCharacters(m));
              f.sort(), f.reverse(), this.scopesRegExp = new RegExp(`^((${f.join(")|(")}))($|\\.)`, "");
            }
          }
          match(d) {
            if (!this.scopesRegExp)
              return;
            const f = d.match(this.scopesRegExp);
            return f ? this.values.get(f[1]) : void 0;
          }
        }
      }, 947: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.LineTokens = s.BalancedBracketSelectors = s.StateStack = s.AttributedScopeStack = s.Grammar = s.createGrammar = void 0;
        const c = a(350), l = a(36), i = a(736), p = a(44), h = a(792), d = a(583), f = a(878), m = a(996), L = a(47);
        function S(x, _, v, A, E) {
          const D = i.createMatchers(_, b), T = h.RuleFactory.getCompiledRuleId(v, A, E.repository);
          for (const q of D)
            x.push({ debugSelector: _, matcher: q.matcher, ruleId: T, grammar: E, priority: q.priority });
        }
        function b(x, _) {
          if (_.length < x.length)
            return !1;
          let v = 0;
          return x.every((A) => {
            for (let E = v; E < _.length; E++)
              if (k(_[E], A))
                return v = E + 1, !0;
            return !1;
          });
        }
        function k(x, _) {
          if (!x)
            return !1;
          if (x === _)
            return !0;
          const v = _.length;
          return x.length > v && x.substr(0, v) === _ && x[v] === ".";
        }
        s.createGrammar = function(x, _, v, A, E, D, T, q) {
          return new w(x, _, v, A, E, D, T, q);
        };
        class w {
          constructor(_, v, A, E, D, T, q, R) {
            if (this._rootScopeName = _, this.balancedBracketSelectors = T, this._onigLib = R, this._basicScopeAttributesProvider = new m.BasicScopeAttributesProvider(A, E), this._rootId = -1, this._lastRuleId = 0, this._ruleId2desc = [null], this._includedGrammars = {}, this._grammarRepository = q, this._grammar = C(v, null), this._injections = null, this._tokenTypeMatchers = [], D)
              for (const F of Object.keys(D)) {
                const M = i.createMatchers(F, b);
                for (const O of M)
                  this._tokenTypeMatchers.push({ matcher: O.matcher, type: D[F] });
              }
          }
          get themeProvider() {
            return this._grammarRepository;
          }
          dispose() {
            for (const _ of this._ruleId2desc)
              _ && _.dispose();
          }
          createOnigScanner(_) {
            return this._onigLib.createOnigScanner(_);
          }
          createOnigString(_) {
            return this._onigLib.createOnigString(_);
          }
          getMetadataForScope(_) {
            return this._basicScopeAttributesProvider.getBasicScopeAttributes(_);
          }
          _collectInjections() {
            const _ = [], v = this._rootScopeName, A = ((E) => E === this._rootScopeName ? this._grammar : this.getExternalGrammar(E))(v);
            if (A) {
              const E = A.injections;
              if (E)
                for (let T in E)
                  S(_, T, E[T], this, A);
              const D = this._grammarRepository.injections(v);
              D && D.forEach((T) => {
                const q = this.getExternalGrammar(T);
                if (q) {
                  const R = q.injectionSelector;
                  R && S(_, R, q, this, q);
                }
              });
            }
            return _.sort((E, D) => E.priority - D.priority), _;
          }
          getInjections() {
            if (this._injections === null && (this._injections = this._collectInjections(), c.DebugFlags.InDebugMode && this._injections.length > 0)) {
              console.log(`Grammar ${this._rootScopeName} contains the following injections:`);
              for (const _ of this._injections)
                console.log(`  - ${_.debugSelector}`);
            }
            return this._injections;
          }
          registerRule(_) {
            const v = ++this._lastRuleId, A = _(h.ruleIdFromNumber(v));
            return this._ruleId2desc[v] = A, A;
          }
          getRule(_) {
            return this._ruleId2desc[h.ruleIdToNumber(_)];
          }
          getExternalGrammar(_, v) {
            if (this._includedGrammars[_])
              return this._includedGrammars[_];
            if (this._grammarRepository) {
              const A = this._grammarRepository.lookup(_);
              if (A)
                return this._includedGrammars[_] = C(A, v && v.$base), this._includedGrammars[_];
            }
          }
          tokenizeLine(_, v, A = 0) {
            const E = this._tokenize(_, v, !1, A);
            return { tokens: E.lineTokens.getResult(E.ruleStack, E.lineLength), ruleStack: E.ruleStack, stoppedEarly: E.stoppedEarly };
          }
          tokenizeLine2(_, v, A = 0) {
            const E = this._tokenize(_, v, !0, A);
            return { tokens: E.lineTokens.getBinaryResult(E.ruleStack, E.lineLength), ruleStack: E.ruleStack, stoppedEarly: E.stoppedEarly };
          }
          _tokenize(_, v, A, E) {
            let D;
            if (this._rootId === -1 && (this._rootId = h.RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository)), v && v !== u.NULL)
              D = !1, v.reset();
            else {
              D = !0;
              const M = this._basicScopeAttributesProvider.getDefaultAttributes(), O = this.themeProvider.getDefaults(), Z = l.EncodedTokenAttributes.set(0, M.languageId, M.tokenType, null, O.fontStyle, O.foregroundId, O.backgroundId), J = this.getRule(this._rootId).getName(null, null);
              let V;
              V = J ? y.createRootAndLookUpScopeName(J, Z, this) : y.createRoot("unknown", Z), v = new u(null, this._rootId, -1, -1, !1, null, V, V);
            }
            _ += `
`;
            const T = this.createOnigString(_), q = T.content.length, R = new g(A, _, this._tokenTypeMatchers, this.balancedBracketSelectors), F = L._tokenizeString(this, T, D, 0, v, R, !0, E);
            return p.disposeOnigString(T), { lineLength: q, lineTokens: R, ruleStack: F.stack, stoppedEarly: F.stoppedEarly };
          }
        }
        function C(x, _) {
          return (x = f.clone(x)).repository = x.repository || {}, x.repository.$self = { $vscodeTextmateLocation: x.$vscodeTextmateLocation, patterns: x.patterns, name: x.scopeName }, x.repository.$base = _ || x.repository.$self, x;
        }
        s.Grammar = w;
        class y {
          constructor(_, v, A) {
            this.parent = _, this.scopePath = v, this.tokenAttributes = A;
          }
          static createRoot(_, v) {
            return new y(null, new d.ScopeStack(null, _), v);
          }
          static createRootAndLookUpScopeName(_, v, A) {
            const E = A.getMetadataForScope(_), D = new d.ScopeStack(null, _), T = A.themeProvider.themeMatch(D), q = y.mergeAttributes(v, E, T);
            return new y(null, D, q);
          }
          get scopeName() {
            return this.scopePath.scopeName;
          }
          equals(_) {
            return y._equals(this, _);
          }
          static _equals(_, v) {
            for (; ; ) {
              if (_ === v || !_ && !v)
                return !0;
              if (!_ || !v || _.scopeName !== v.scopeName || _.tokenAttributes !== v.tokenAttributes)
                return !1;
              _ = _.parent, v = v.parent;
            }
          }
          static mergeAttributes(_, v, A) {
            let E = -1, D = 0, T = 0;
            return A !== null && (E = A.fontStyle, D = A.foregroundId, T = A.backgroundId), l.EncodedTokenAttributes.set(_, v.languageId, v.tokenType, null, E, D, T);
          }
          pushAttributed(_, v) {
            if (_ === null)
              return this;
            if (_.indexOf(" ") === -1)
              return y._pushAttributed(this, _, v);
            const A = _.split(/ /g);
            let E = this;
            for (const D of A)
              E = y._pushAttributed(E, D, v);
            return E;
          }
          static _pushAttributed(_, v, A) {
            const E = A.getMetadataForScope(v), D = _.scopePath.push(v), T = A.themeProvider.themeMatch(D), q = y.mergeAttributes(_.tokenAttributes, E, T);
            return new y(_, D, q);
          }
          getScopeNames() {
            return this.scopePath.getSegments();
          }
        }
        s.AttributedScopeStack = y;
        class u {
          constructor(_, v, A, E, D, T, q, R) {
            this.parent = _, this.ruleId = v, this.beginRuleCapturedEOL = D, this.endRule = T, this.nameScopesList = q, this.contentNameScopesList = R, this._stackElementBrand = void 0, this.depth = this.parent ? this.parent.depth + 1 : 1, this._enterPos = A, this._anchorPos = E;
          }
          equals(_) {
            return _ !== null && u._equals(this, _);
          }
          static _equals(_, v) {
            return _ === v || !!this._structuralEquals(_, v) && _.contentNameScopesList.equals(v.contentNameScopesList);
          }
          static _structuralEquals(_, v) {
            for (; ; ) {
              if (_ === v || !_ && !v)
                return !0;
              if (!_ || !v || _.depth !== v.depth || _.ruleId !== v.ruleId || _.endRule !== v.endRule)
                return !1;
              _ = _.parent, v = v.parent;
            }
          }
          clone() {
            return this;
          }
          static _reset(_) {
            for (; _; )
              _._enterPos = -1, _._anchorPos = -1, _ = _.parent;
          }
          reset() {
            u._reset(this);
          }
          pop() {
            return this.parent;
          }
          safePop() {
            return this.parent ? this.parent : this;
          }
          push(_, v, A, E, D, T, q) {
            return new u(this, _, v, A, E, D, T, q);
          }
          getEnterPos() {
            return this._enterPos;
          }
          getAnchorPos() {
            return this._anchorPos;
          }
          getRule(_) {
            return _.getRule(this.ruleId);
          }
          toString() {
            const _ = [];
            return this._writeString(_, 0), "[" + _.join(",") + "]";
          }
          _writeString(_, v) {
            return this.parent && (v = this.parent._writeString(_, v)), _[v++] = `(${this.ruleId}, TODO-${this.nameScopesList}, TODO-${this.contentNameScopesList})`, v;
          }
          withContentNameScopesList(_) {
            return this.contentNameScopesList === _ ? this : this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, _);
          }
          withEndRule(_) {
            return this.endRule === _ ? this : new u(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, _, this.nameScopesList, this.contentNameScopesList);
          }
          hasSameRuleAs(_) {
            let v = this;
            for (; v && v._enterPos === _._enterPos; ) {
              if (v.ruleId === _.ruleId)
                return !0;
              v = v.parent;
            }
            return !1;
          }
        }
        s.StateStack = u, u.NULL = new u(null, 0, 0, 0, !1, null, null, null), s.BalancedBracketSelectors = class {
          constructor(x, _) {
            this.allowAny = !1, this.balancedBracketScopes = x.flatMap((v) => v === "*" ? (this.allowAny = !0, []) : i.createMatchers(v, b).map((A) => A.matcher)), this.unbalancedBracketScopes = _.flatMap((v) => i.createMatchers(v, b).map((A) => A.matcher));
          }
          get matchesAlways() {
            return this.allowAny && this.unbalancedBracketScopes.length === 0;
          }
          get matchesNever() {
            return this.balancedBracketScopes.length === 0 && !this.allowAny;
          }
          match(x) {
            for (const _ of this.unbalancedBracketScopes)
              if (_(x))
                return !1;
            for (const _ of this.balancedBracketScopes)
              if (_(x))
                return !0;
            return this.allowAny;
          }
        };
        class g {
          constructor(_, v, A, E) {
            this.balancedBracketSelectors = E, this._emitBinaryTokens = _, this._tokenTypeOverrides = A, c.DebugFlags.InDebugMode ? this._lineText = v : this._lineText = null, this._tokens = [], this._binaryTokens = [], this._lastTokenEndIndex = 0;
          }
          produce(_, v) {
            this.produceFromScopes(_.contentNameScopesList, v);
          }
          produceFromScopes(_, v) {
            var E;
            if (this._lastTokenEndIndex >= v)
              return;
            if (this._emitBinaryTokens) {
              let D = _.tokenAttributes, T = !1;
              if ((E = this.balancedBracketSelectors) != null && E.matchesAlways && (T = !0), this._tokenTypeOverrides.length > 0 || this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever) {
                const q = _.getScopeNames();
                for (const R of this._tokenTypeOverrides)
                  R.matcher(q) && (D = l.EncodedTokenAttributes.set(D, 0, l.toOptionalTokenType(R.type), null, -1, 0, 0));
                this.balancedBracketSelectors && (T = this.balancedBracketSelectors.match(q));
              }
              if (T && (D = l.EncodedTokenAttributes.set(D, 0, 8, T, -1, 0, 0)), this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === D)
                return void (this._lastTokenEndIndex = v);
              if (c.DebugFlags.InDebugMode) {
                const q = _.getScopeNames();
                console.log("  token: |" + this._lineText.substring(this._lastTokenEndIndex, v).replace(/\n$/, "\\n") + "|");
                for (let R = 0; R < q.length; R++)
                  console.log("      * " + q[R]);
              }
              return this._binaryTokens.push(this._lastTokenEndIndex), this._binaryTokens.push(D), void (this._lastTokenEndIndex = v);
            }
            const A = _.getScopeNames();
            if (c.DebugFlags.InDebugMode) {
              console.log("  token: |" + this._lineText.substring(this._lastTokenEndIndex, v).replace(/\n$/, "\\n") + "|");
              for (let D = 0; D < A.length; D++)
                console.log("      * " + A[D]);
            }
            this._tokens.push({ startIndex: this._lastTokenEndIndex, endIndex: v, scopes: A }), this._lastTokenEndIndex = v;
          }
          getResult(_, v) {
            return this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === v - 1 && this._tokens.pop(), this._tokens.length === 0 && (this._lastTokenEndIndex = -1, this.produce(_, v), this._tokens[this._tokens.length - 1].startIndex = 0), this._tokens;
          }
          getBinaryResult(_, v) {
            this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === v - 1 && (this._binaryTokens.pop(), this._binaryTokens.pop()), this._binaryTokens.length === 0 && (this._lastTokenEndIndex = -1, this.produce(_, v), this._binaryTokens[this._binaryTokens.length - 2] = 0);
            const A = new Uint32Array(this._binaryTokens.length);
            for (let E = 0, D = this._binaryTokens.length; E < D; E++)
              A[E] = this._binaryTokens[E];
            return A;
          }
        }
        s.LineTokens = g;
      }, 965: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.parseInclude = s.TopLevelRepositoryReference = s.TopLevelReference = s.RelativeReference = s.SelfReference = s.BaseReference = s.ScopeDependencyProcessor = s.ExternalReferenceCollector = s.TopLevelRepositoryRuleReference = s.TopLevelRuleReference = void 0;
        const c = a(878);
        class l {
          constructor(u) {
            this.scopeName = u;
          }
          toKey() {
            return this.scopeName;
          }
        }
        s.TopLevelRuleReference = l;
        class i {
          constructor(u, g) {
            this.scopeName = u, this.ruleName = g;
          }
          toKey() {
            return `${this.scopeName}#${this.ruleName}`;
          }
        }
        s.TopLevelRepositoryRuleReference = i;
        class p {
          constructor() {
            this._references = [], this._seenReferenceKeys = /* @__PURE__ */ new Set(), this.visitedRule = /* @__PURE__ */ new Set();
          }
          get references() {
            return this._references;
          }
          add(u) {
            const g = u.toKey();
            this._seenReferenceKeys.has(g) || (this._seenReferenceKeys.add(g), this._references.push(u));
          }
        }
        function h(y, u, g, x) {
          const _ = g.lookup(y.scopeName);
          if (!_) {
            if (y.scopeName === u)
              throw new Error(`No grammar provided for <${u}>`);
            return;
          }
          const v = g.lookup(u);
          y instanceof l ? f({ baseGrammar: v, selfGrammar: _ }, x) : d(y.ruleName, { baseGrammar: v, selfGrammar: _, repository: _.repository }, x);
          const A = g.injections(y.scopeName);
          if (A)
            for (const E of A)
              x.add(new l(E));
        }
        function d(y, u, g) {
          u.repository && u.repository[y] && m([u.repository[y]], u, g);
        }
        function f(y, u) {
          y.selfGrammar.patterns && Array.isArray(y.selfGrammar.patterns) && m(y.selfGrammar.patterns, { ...y, repository: y.selfGrammar.repository }, u), y.selfGrammar.injections && m(Object.values(y.selfGrammar.injections), { ...y, repository: y.selfGrammar.repository }, u);
        }
        function m(y, u, g) {
          for (const x of y) {
            if (g.visitedRule.has(x))
              continue;
            g.visitedRule.add(x);
            const _ = x.repository ? c.mergeObjects({}, u.repository, x.repository) : u.repository;
            Array.isArray(x.patterns) && m(x.patterns, { ...u, repository: _ }, g);
            const v = x.include;
            if (!v)
              continue;
            const A = C(v);
            switch (A.kind) {
              case 0:
                f({ ...u, selfGrammar: u.baseGrammar }, g);
                break;
              case 1:
                f(u, g);
                break;
              case 2:
                d(A.ruleName, { ...u, repository: _ }, g);
                break;
              case 3:
              case 4:
                const E = A.scopeName === u.selfGrammar.scopeName ? u.selfGrammar : A.scopeName === u.baseGrammar.scopeName ? u.baseGrammar : void 0;
                if (E) {
                  const D = { baseGrammar: u.baseGrammar, selfGrammar: E, repository: _ };
                  A.kind === 4 ? d(A.ruleName, D, g) : f(D, g);
                } else
                  A.kind === 4 ? g.add(new i(A.scopeName, A.ruleName)) : g.add(new l(A.scopeName));
            }
          }
        }
        s.ExternalReferenceCollector = p, s.ScopeDependencyProcessor = class {
          constructor(y, u) {
            this.repo = y, this.initialScopeName = u, this.seenFullScopeRequests = /* @__PURE__ */ new Set(), this.seenPartialScopeRequests = /* @__PURE__ */ new Set(), this.seenFullScopeRequests.add(this.initialScopeName), this.Q = [new l(this.initialScopeName)];
          }
          processQueue() {
            const y = this.Q;
            this.Q = [];
            const u = new p();
            for (const g of y)
              h(g, this.initialScopeName, this.repo, u);
            for (const g of u.references)
              if (g instanceof l) {
                if (this.seenFullScopeRequests.has(g.scopeName))
                  continue;
                this.seenFullScopeRequests.add(g.scopeName), this.Q.push(g);
              } else {
                if (this.seenFullScopeRequests.has(g.scopeName) || this.seenPartialScopeRequests.has(g.toKey()))
                  continue;
                this.seenPartialScopeRequests.add(g.toKey()), this.Q.push(g);
              }
          }
        };
        class L {
          constructor() {
            this.kind = 0;
          }
        }
        s.BaseReference = L;
        class S {
          constructor() {
            this.kind = 1;
          }
        }
        s.SelfReference = S;
        class b {
          constructor(u) {
            this.ruleName = u, this.kind = 2;
          }
        }
        s.RelativeReference = b;
        class k {
          constructor(u) {
            this.scopeName = u, this.kind = 3;
          }
        }
        s.TopLevelReference = k;
        class w {
          constructor(u, g) {
            this.scopeName = u, this.ruleName = g, this.kind = 4;
          }
        }
        function C(y) {
          if (y === "$base")
            return new L();
          if (y === "$self")
            return new S();
          const u = y.indexOf("#");
          if (u === -1)
            return new k(y);
          if (u === 0)
            return new b(y.substring(1));
          {
            const g = y.substring(0, u), x = y.substring(u + 1);
            return new w(g, x);
          }
        }
        s.TopLevelRepositoryReference = w, s.parseInclude = C;
      }, 391: function(r, s, a) {
        var c = this && this.__createBinding || (Object.create ? function(i, p, h, d) {
          d === void 0 && (d = h), Object.defineProperty(i, d, { enumerable: !0, get: function() {
            return p[h];
          } });
        } : function(i, p, h, d) {
          d === void 0 && (d = h), i[d] = p[h];
        }), l = this && this.__exportStar || function(i, p) {
          for (var h in i)
            h === "default" || Object.prototype.hasOwnProperty.call(p, h) || c(p, i, h);
        };
        Object.defineProperty(s, "__esModule", { value: !0 }), l(a(947), s);
      }, 47: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.LocalStackElement = s._tokenizeString = void 0;
        const c = a(350), l = a(44), i = a(792), p = a(878);
        class h {
          constructor(w, C) {
            this.stack = w, this.stoppedEarly = C;
          }
        }
        function d(k, w, C, y, u, g, x, _) {
          const v = w.content.length;
          let A = !1, E = -1;
          if (x) {
            const q = function(R, F, M, O, Z, J) {
              let V = Z.beginRuleCapturedEOL ? 0 : -1;
              const G = [];
              for (let $ = Z; $; $ = $.pop()) {
                const z = $.getRule(R);
                z instanceof i.BeginWhileRule && G.push({ rule: z, stack: $ });
              }
              for (let $ = G.pop(); $; $ = G.pop()) {
                const { ruleScanner: z, findOptions: Y } = m($.rule, R, $.stack.endRule, M, O === V), j = z.findNextMatchSync(F, O, Y);
                if (c.DebugFlags.InDebugMode && (console.log("  scanning for while rule"), console.log(z.toString())), !j) {
                  c.DebugFlags.InDebugMode && console.log("  popping " + $.rule.debugName + " - " + $.rule.debugWhileRegExp), Z = $.stack.pop();
                  break;
                }
                if (j.ruleId !== i.whileRuleId) {
                  Z = $.stack.pop();
                  break;
                }
                j.captureIndices && j.captureIndices.length && (J.produce($.stack, j.captureIndices[0].start), S(R, F, M, $.stack, J, $.rule.whileCaptures, j.captureIndices), J.produce($.stack, j.captureIndices[0].end), V = j.captureIndices[0].end, j.captureIndices[0].end > O && (O = j.captureIndices[0].end, M = !1));
              }
              return { stack: Z, linePos: O, anchorPosition: V, isFirstLine: M };
            }(k, w, C, y, u, g);
            u = q.stack, y = q.linePos, C = q.isFirstLine, E = q.anchorPosition;
          }
          const D = Date.now();
          for (; !A; ) {
            if (_ !== 0 && Date.now() - D > _)
              return new h(u, !0);
            T();
          }
          return new h(u, !1);
          function T() {
            c.DebugFlags.InDebugMode && (console.log(""), console.log(`@@scanNext ${y}: |${w.content.substr(y).replace(/\n$/, "\\n")}|`));
            const q = function(O, Z, J, V, G, $) {
              const z = function(oe, we, He, fe, me, je) {
                const ve = me.getRule(oe), { ruleScanner: xe, findOptions: Ae } = f(ve, oe, me.endRule, He, fe === je);
                let ge = 0;
                c.DebugFlags.InDebugMode && (ge = p.performanceNow());
                const ee = xe.findNextMatchSync(we, fe, Ae);
                if (c.DebugFlags.InDebugMode) {
                  const Se = p.performanceNow() - ge;
                  Se > 5 && console.warn(`Rule ${ve.debugName} (${ve.id}) matching took ${Se} against '${we}'`), console.log(`  scanning for (linePos: ${fe}, anchorPosition: ${je})`), console.log(xe.toString()), ee && console.log(`matched rule id: ${ee.ruleId} from ${ee.captureIndices[0].start} to ${ee.captureIndices[0].end}`);
                }
                return ee ? { captureIndices: ee.captureIndices, matchedRuleId: ee.ruleId } : null;
              }(O, Z, J, V, G, $), Y = O.getInjections();
              if (Y.length === 0)
                return z;
              const j = function(oe, we, He, fe, me, je, ve) {
                let xe, Ae = Number.MAX_VALUE, ge = null, ee = 0;
                const Se = je.contentNameScopesList.getScopeNames();
                for (let Re = 0, N = oe.length; Re < N; Re++) {
                  const P = oe[Re];
                  if (!P.matcher(Se))
                    continue;
                  const X = we.getRule(P.ruleId), { ruleScanner: se, findOptions: W } = f(X, we, null, fe, me === ve), H = se.findNextMatchSync(He, me, W);
                  if (!H)
                    continue;
                  c.DebugFlags.InDebugMode && (console.log(`  matched injection: ${P.debugSelector}`), console.log(se.toString()));
                  const K = H.captureIndices[0].start;
                  if (!(K >= Ae) && (Ae = K, ge = H.captureIndices, xe = H.ruleId, ee = P.priority, Ae === me))
                    break;
                }
                return ge ? { priorityMatch: ee === -1, captureIndices: ge, matchedRuleId: xe } : null;
              }(Y, O, Z, J, V, G, $);
              if (!j)
                return z;
              if (!z)
                return j;
              const Q = z.captureIndices[0].start, U = j.captureIndices[0].start;
              return U < Q || j.priorityMatch && U === Q ? j : z;
            }(k, w, C, y, u, E);
            if (!q)
              return c.DebugFlags.InDebugMode && console.log("  no more matches."), g.produce(u, v), void (A = !0);
            const R = q.captureIndices, F = q.matchedRuleId, M = !!(R && R.length > 0) && R[0].end > y;
            if (F === i.endRuleId) {
              const O = u.getRule(k);
              c.DebugFlags.InDebugMode && console.log("  popping " + O.debugName + " - " + O.debugEndRegExp), g.produce(u, R[0].start), u = u.withContentNameScopesList(u.nameScopesList), S(k, w, C, u, g, O.endCaptures, R), g.produce(u, R[0].end);
              const Z = u;
              if (u = u.parent, E = Z.getAnchorPos(), !M && Z.getEnterPos() === y)
                return c.DebugFlags.InDebugMode && console.error("[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing"), u = Z, g.produce(u, v), void (A = !0);
            } else {
              const O = k.getRule(F);
              g.produce(u, R[0].start);
              const Z = u, J = O.getName(w.content, R), V = u.contentNameScopesList.pushAttributed(J, k);
              if (u = u.push(F, y, E, R[0].end === v, null, V, V), O instanceof i.BeginEndRule) {
                const G = O;
                c.DebugFlags.InDebugMode && console.log("  pushing " + G.debugName + " - " + G.debugBeginRegExp), S(k, w, C, u, g, G.beginCaptures, R), g.produce(u, R[0].end), E = R[0].end;
                const $ = G.getContentName(w.content, R), z = V.pushAttributed($, k);
                if (u = u.withContentNameScopesList(z), G.endHasBackReferences && (u = u.withEndRule(G.getEndWithResolvedBackReferences(w.content, R))), !M && Z.hasSameRuleAs(u))
                  return c.DebugFlags.InDebugMode && console.error("[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing"), u = u.pop(), g.produce(u, v), void (A = !0);
              } else if (O instanceof i.BeginWhileRule) {
                const G = O;
                c.DebugFlags.InDebugMode && console.log("  pushing " + G.debugName), S(k, w, C, u, g, G.beginCaptures, R), g.produce(u, R[0].end), E = R[0].end;
                const $ = G.getContentName(w.content, R), z = V.pushAttributed($, k);
                if (u = u.withContentNameScopesList(z), G.whileHasBackReferences && (u = u.withEndRule(G.getWhileWithResolvedBackReferences(w.content, R))), !M && Z.hasSameRuleAs(u))
                  return c.DebugFlags.InDebugMode && console.error("[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing"), u = u.pop(), g.produce(u, v), void (A = !0);
              } else {
                const G = O;
                if (c.DebugFlags.InDebugMode && console.log("  matched " + G.debugName + " - " + G.debugMatchRegExp), S(k, w, C, u, g, G.captures, R), g.produce(u, R[0].end), u = u.pop(), !M)
                  return c.DebugFlags.InDebugMode && console.error("[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping"), u = u.safePop(), g.produce(u, v), void (A = !0);
              }
            }
            R[0].end > y && (y = R[0].end, C = !1);
          }
        }
        function f(k, w, C, y, u) {
          return c.UseOnigurumaFindOptions ? { ruleScanner: k.compile(w, C), findOptions: L(y, u) } : { ruleScanner: k.compileAG(w, C, y, u), findOptions: 0 };
        }
        function m(k, w, C, y, u) {
          return c.UseOnigurumaFindOptions ? { ruleScanner: k.compileWhile(w, C), findOptions: L(y, u) } : { ruleScanner: k.compileWhileAG(w, C, y, u), findOptions: 0 };
        }
        function L(k, w) {
          let C = 0;
          return k || (C |= 1), w || (C |= 4), C;
        }
        function S(k, w, C, y, u, g, x) {
          if (g.length === 0)
            return;
          const _ = w.content, v = Math.min(g.length, x.length), A = [], E = x[0].end;
          for (let D = 0; D < v; D++) {
            const T = g[D];
            if (T === null)
              continue;
            const q = x[D];
            if (q.length === 0)
              continue;
            if (q.start > E)
              break;
            for (; A.length > 0 && A[A.length - 1].endPos <= q.start; )
              u.produceFromScopes(A[A.length - 1].scopes, A[A.length - 1].endPos), A.pop();
            if (A.length > 0 ? u.produceFromScopes(A[A.length - 1].scopes, q.start) : u.produce(y, q.start), T.retokenizeCapturedWithRuleId) {
              const F = T.getName(_, x), M = y.contentNameScopesList.pushAttributed(F, k), O = T.getContentName(_, x), Z = M.pushAttributed(O, k), J = y.push(T.retokenizeCapturedWithRuleId, q.start, -1, !1, null, M, Z), V = k.createOnigString(_.substring(0, q.end));
              d(k, V, C && q.start === 0, q.start, J, u, !1, 0), l.disposeOnigString(V);
              continue;
            }
            const R = T.getName(_, x);
            if (R !== null) {
              const F = (A.length > 0 ? A[A.length - 1].scopes : y.contentNameScopesList).pushAttributed(R, k);
              A.push(new b(F, q.end));
            }
          }
          for (; A.length > 0; )
            u.produceFromScopes(A[A.length - 1].scopes, A[A.length - 1].endPos), A.pop();
        }
        s._tokenizeString = d;
        class b {
          constructor(w, C) {
            this.scopes = w, this.endPos = C;
          }
        }
        s.LocalStackElement = b;
      }, 974: (r, s) => {
        function a(p, h) {
          throw new Error("Near offset " + p.pos + ": " + h + " ~~~" + p.source.substr(p.pos, 50) + "~~~");
        }
        Object.defineProperty(s, "__esModule", { value: !0 }), s.parseJSON = void 0, s.parseJSON = function(p, h, d) {
          let f = new c(p), m = new l(), L = 0, S = null, b = [], k = [];
          function w() {
            b.push(L), k.push(S);
          }
          function C() {
            L = b.pop(), S = k.pop();
          }
          function y(u) {
            a(f, u);
          }
          for (; i(f, m); ) {
            if (L === 0) {
              if (S !== null && y("too many constructs in root"), m.type === 3) {
                S = {}, d && (S.$vscodeTextmateLocation = m.toLocation(h)), w(), L = 1;
                continue;
              }
              if (m.type === 2) {
                S = [], w(), L = 4;
                continue;
              }
              y("unexpected token in root");
            }
            if (L === 2) {
              if (m.type === 5) {
                C();
                continue;
              }
              if (m.type === 7) {
                L = 3;
                continue;
              }
              y("expected , or }");
            }
            if (L === 1 || L === 3) {
              if (L === 1 && m.type === 5) {
                C();
                continue;
              }
              if (m.type === 1) {
                let u = m.value;
                if (i(f, m) && m.type === 6 || y("expected colon"), i(f, m) || y("expected value"), L = 2, m.type === 1) {
                  S[u] = m.value;
                  continue;
                }
                if (m.type === 8) {
                  S[u] = null;
                  continue;
                }
                if (m.type === 9) {
                  S[u] = !0;
                  continue;
                }
                if (m.type === 10) {
                  S[u] = !1;
                  continue;
                }
                if (m.type === 11) {
                  S[u] = parseFloat(m.value);
                  continue;
                }
                if (m.type === 2) {
                  let g = [];
                  S[u] = g, w(), L = 4, S = g;
                  continue;
                }
                if (m.type === 3) {
                  let g = {};
                  d && (g.$vscodeTextmateLocation = m.toLocation(h)), S[u] = g, w(), L = 1, S = g;
                  continue;
                }
              }
              y("unexpected token in dict");
            }
            if (L === 5) {
              if (m.type === 4) {
                C();
                continue;
              }
              if (m.type === 7) {
                L = 6;
                continue;
              }
              y("expected , or ]");
            }
            if (L === 4 || L === 6) {
              if (L === 4 && m.type === 4) {
                C();
                continue;
              }
              if (L = 5, m.type === 1) {
                S.push(m.value);
                continue;
              }
              if (m.type === 8) {
                S.push(null);
                continue;
              }
              if (m.type === 9) {
                S.push(!0);
                continue;
              }
              if (m.type === 10) {
                S.push(!1);
                continue;
              }
              if (m.type === 11) {
                S.push(parseFloat(m.value));
                continue;
              }
              if (m.type === 2) {
                let u = [];
                S.push(u), w(), L = 4, S = u;
                continue;
              }
              if (m.type === 3) {
                let u = {};
                d && (u.$vscodeTextmateLocation = m.toLocation(h)), S.push(u), w(), L = 1, S = u;
                continue;
              }
              y("unexpected token in array");
            }
            y("unknown state");
          }
          return k.length !== 0 && y("unclosed constructs"), S;
        };
        class c {
          constructor(h) {
            this.source = h, this.pos = 0, this.len = h.length, this.line = 1, this.char = 0;
          }
        }
        class l {
          constructor() {
            this.value = null, this.type = 0, this.offset = -1, this.len = -1, this.line = -1, this.char = -1;
          }
          toLocation(h) {
            return { filename: h, line: this.line, char: this.char };
          }
        }
        function i(p, h) {
          h.value = null, h.type = 0, h.offset = -1, h.len = -1, h.line = -1, h.char = -1;
          let d, f = p.source, m = p.pos, L = p.len, S = p.line, b = p.char;
          for (; ; ) {
            if (m >= L)
              return !1;
            if (d = f.charCodeAt(m), d !== 32 && d !== 9 && d !== 13) {
              if (d !== 10)
                break;
              m++, S++, b = 0;
            } else
              m++, b++;
          }
          if (h.offset = m, h.line = S, h.char = b, d === 34) {
            for (h.type = 1, m++, b++; ; ) {
              if (m >= L)
                return !1;
              if (d = f.charCodeAt(m), m++, b++, d !== 92) {
                if (d === 34)
                  break;
              } else
                m++, b++;
            }
            h.value = f.substring(h.offset + 1, m - 1).replace(/\\u([0-9A-Fa-f]{4})/g, (k, w) => String.fromCodePoint(parseInt(w, 16))).replace(/\\(.)/g, (k, w) => {
              switch (w) {
                case '"':
                  return '"';
                case "\\":
                  return "\\";
                case "/":
                  return "/";
                case "b":
                  return "\b";
                case "f":
                  return "\f";
                case "n":
                  return `
`;
                case "r":
                  return "\r";
                case "t":
                  return "	";
                default:
                  a(p, "invalid escape sequence");
              }
              throw new Error("unreachable");
            });
          } else if (d === 91)
            h.type = 2, m++, b++;
          else if (d === 123)
            h.type = 3, m++, b++;
          else if (d === 93)
            h.type = 4, m++, b++;
          else if (d === 125)
            h.type = 5, m++, b++;
          else if (d === 58)
            h.type = 6, m++, b++;
          else if (d === 44)
            h.type = 7, m++, b++;
          else if (d === 110) {
            if (h.type = 8, m++, b++, d = f.charCodeAt(m), d !== 117 || (m++, b++, d = f.charCodeAt(m), d !== 108) || (m++, b++, d = f.charCodeAt(m), d !== 108))
              return !1;
            m++, b++;
          } else if (d === 116) {
            if (h.type = 9, m++, b++, d = f.charCodeAt(m), d !== 114 || (m++, b++, d = f.charCodeAt(m), d !== 117) || (m++, b++, d = f.charCodeAt(m), d !== 101))
              return !1;
            m++, b++;
          } else if (d === 102) {
            if (h.type = 10, m++, b++, d = f.charCodeAt(m), d !== 97 || (m++, b++, d = f.charCodeAt(m), d !== 108) || (m++, b++, d = f.charCodeAt(m), d !== 115) || (m++, b++, d = f.charCodeAt(m), d !== 101))
              return !1;
            m++, b++;
          } else
            for (h.type = 11; ; ) {
              if (m >= L)
                return !1;
              if (d = f.charCodeAt(m), !(d === 46 || d >= 48 && d <= 57 || d === 101 || d === 69 || d === 45 || d === 43))
                break;
              m++, b++;
            }
          return h.len = m - h.offset, h.value === null && (h.value = f.substr(h.offset, h.len)), p.pos = m, p.line = S, p.char = b, !0;
        }
      }, 787: function(r, s, a) {
        var c = this && this.__createBinding || (Object.create ? function(m, L, S, b) {
          b === void 0 && (b = S), Object.defineProperty(m, b, { enumerable: !0, get: function() {
            return L[S];
          } });
        } : function(m, L, S, b) {
          b === void 0 && (b = S), m[b] = L[S];
        }), l = this && this.__exportStar || function(m, L) {
          for (var S in m)
            S === "default" || Object.prototype.hasOwnProperty.call(L, S) || c(L, m, S);
        };
        Object.defineProperty(s, "__esModule", { value: !0 }), s.parseRawGrammar = s.INITIAL = s.Registry = void 0;
        const i = a(391), p = a(50), h = a(652), d = a(583), f = a(965);
        l(a(44), s), s.Registry = class {
          constructor(m) {
            this._options = m, this._syncRegistry = new h.SyncRegistry(d.Theme.createFromRawTheme(m.theme, m.colorMap), m.onigLib), this._ensureGrammarCache = /* @__PURE__ */ new Map();
          }
          dispose() {
            this._syncRegistry.dispose();
          }
          setTheme(m, L) {
            this._syncRegistry.setTheme(d.Theme.createFromRawTheme(m, L));
          }
          getColorMap() {
            return this._syncRegistry.getColorMap();
          }
          loadGrammarWithEmbeddedLanguages(m, L, S) {
            return this.loadGrammarWithConfiguration(m, L, { embeddedLanguages: S });
          }
          loadGrammarWithConfiguration(m, L, S) {
            return this._loadGrammar(m, L, S.embeddedLanguages, S.tokenTypes, new i.BalancedBracketSelectors(S.balancedBracketSelectors || [], S.unbalancedBracketSelectors || []));
          }
          loadGrammar(m) {
            return this._loadGrammar(m, 0, null, null, null);
          }
          async _loadGrammar(m, L, S, b, k) {
            const w = new f.ScopeDependencyProcessor(this._syncRegistry, m);
            for (; w.Q.length > 0; )
              await Promise.all(w.Q.map((C) => this._loadSingleGrammar(C.scopeName))), w.processQueue();
            return this._grammarForScopeName(m, L, S, b, k);
          }
          async _loadSingleGrammar(m) {
            return this._ensureGrammarCache.has(m) || this._ensureGrammarCache.set(m, this._doLoadSingleGrammar(m)), this._ensureGrammarCache.get(m);
          }
          async _doLoadSingleGrammar(m) {
            const L = await this._options.loadGrammar(m);
            if (L) {
              const S = typeof this._options.getInjections == "function" ? this._options.getInjections(m) : void 0;
              this._syncRegistry.addGrammar(L, S);
            }
          }
          async addGrammar(m, L = [], S = 0, b = null) {
            return this._syncRegistry.addGrammar(m, L), await this._grammarForScopeName(m.scopeName, S, b);
          }
          _grammarForScopeName(m, L = 0, S = null, b = null, k = null) {
            return this._syncRegistry.grammarForScopeName(m, L, S, b, k);
          }
        }, s.INITIAL = i.StateStack.NULL, s.parseRawGrammar = p.parseRawGrammar;
      }, 736: (r, s) => {
        function a(c) {
          return !!c && !!c.match(/[\w\.:]+/);
        }
        Object.defineProperty(s, "__esModule", { value: !0 }), s.createMatchers = void 0, s.createMatchers = function(c, l) {
          const i = [], p = function(m) {
            let L = /([LR]:|[\w\.:][\w\.:\-]*|[\,\|\-\(\)])/g, S = L.exec(m);
            return { next: () => {
              if (!S)
                return null;
              const b = S[0];
              return S = L.exec(m), b;
            } };
          }(c);
          let h = p.next();
          for (; h !== null; ) {
            let m = 0;
            if (h.length === 2 && h.charAt(1) === ":") {
              switch (h.charAt(0)) {
                case "R":
                  m = 1;
                  break;
                case "L":
                  m = -1;
                  break;
                default:
                  console.log(`Unknown priority ${h} in scope selector`);
              }
              h = p.next();
            }
            let L = f();
            if (i.push({ matcher: L, priority: m }), h !== ",")
              break;
            h = p.next();
          }
          return i;
          function d() {
            if (h === "-") {
              h = p.next();
              const m = d();
              return (L) => !!m && !m(L);
            }
            if (h === "(") {
              h = p.next();
              const m = function() {
                const L = [];
                let S = f();
                for (; S && (L.push(S), h === "|" || h === ","); ) {
                  do
                    h = p.next();
                  while (h === "|" || h === ",");
                  S = f();
                }
                return (b) => L.some((k) => k(b));
              }();
              return h === ")" && (h = p.next()), m;
            }
            if (a(h)) {
              const m = [];
              do
                m.push(h), h = p.next();
              while (a(h));
              return (L) => l(m, L);
            }
            return null;
          }
          function f() {
            const m = [];
            let L = d();
            for (; L; )
              m.push(L), L = d();
            return (S) => m.every((b) => b(S));
          }
        };
      }, 44: (r, s) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.disposeOnigString = void 0, s.disposeOnigString = function(a) {
          typeof a.dispose == "function" && a.dispose();
        };
      }, 50: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.parseRawGrammar = void 0;
        const c = a(69), l = a(350), i = a(974);
        s.parseRawGrammar = function(p, h = null) {
          return h !== null && /\.json$/.test(h) ? (d = p, f = h, l.DebugFlags.InDebugMode ? i.parseJSON(d, f, !0) : JSON.parse(d)) : function(m, L) {
            return l.DebugFlags.InDebugMode ? c.parseWithLocation(m, L, "$vscodeTextmateLocation") : c.parsePLIST(m);
          }(p, h);
          var d, f;
        };
      }, 69: (r, s) => {
        function a(c, l, i) {
          const p = c.length;
          let h = 0, d = 1, f = 0;
          function m(j) {
            if (i === null)
              h += j;
            else
              for (; j > 0; )
                c.charCodeAt(h) === 10 ? (h++, d++, f = 0) : (h++, f++), j--;
          }
          function L(j) {
            i === null ? h = j : m(j - h);
          }
          function S() {
            for (; h < p; ) {
              let j = c.charCodeAt(h);
              if (j !== 32 && j !== 9 && j !== 13 && j !== 10)
                break;
              m(1);
            }
          }
          function b(j) {
            return c.substr(h, j.length) === j && (m(j.length), !0);
          }
          function k(j) {
            let Q = c.indexOf(j, h);
            L(Q !== -1 ? Q + j.length : p);
          }
          function w(j) {
            let Q = c.indexOf(j, h);
            if (Q !== -1) {
              let U = c.substring(h, Q);
              return L(Q + j.length), U;
            }
            {
              let U = c.substr(h);
              return L(p), U;
            }
          }
          p > 0 && c.charCodeAt(0) === 65279 && (h = 1);
          let C = 0, y = null, u = [], g = [], x = null;
          function _(j, Q) {
            u.push(C), g.push(y), C = j, y = Q;
          }
          function v() {
            if (u.length === 0)
              return A("illegal state stack");
            C = u.pop(), y = g.pop();
          }
          function A(j) {
            throw new Error("Near offset " + h + ": " + j + " ~~~" + c.substr(h, 50) + "~~~");
          }
          const E = function() {
            if (x === null)
              return A("missing <key>");
            let j = {};
            i !== null && (j[i] = { filename: l, line: d, char: f }), y[x] = j, x = null, _(1, j);
          }, D = function() {
            if (x === null)
              return A("missing <key>");
            let j = [];
            y[x] = j, x = null, _(2, j);
          }, T = function() {
            let j = {};
            i !== null && (j[i] = { filename: l, line: d, char: f }), y.push(j), _(1, j);
          }, q = function() {
            let j = [];
            y.push(j), _(2, j);
          };
          function R() {
            if (C !== 1)
              return A("unexpected </dict>");
            v();
          }
          function F() {
            return C === 1 || C !== 2 ? A("unexpected </array>") : void v();
          }
          function M(j) {
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function O(j) {
            if (isNaN(j))
              return A("cannot parse float");
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function Z(j) {
            if (isNaN(j))
              return A("cannot parse integer");
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function J(j) {
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function V(j) {
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function G(j) {
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function $() {
            let j = w(">"), Q = !1;
            return j.charCodeAt(j.length - 1) === 47 && (Q = !0, j = j.substring(0, j.length - 1)), { name: j.trim(), isClosed: Q };
          }
          function z(j) {
            if (j.isClosed)
              return "";
            let Q = w("</");
            return k(">"), Q.replace(/&#([0-9]+);/g, function(U, oe) {
              return String.fromCodePoint(parseInt(oe, 10));
            }).replace(/&#x([0-9a-f]+);/g, function(U, oe) {
              return String.fromCodePoint(parseInt(oe, 16));
            }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function(U) {
              switch (U) {
                case "&amp;":
                  return "&";
                case "&lt;":
                  return "<";
                case "&gt;":
                  return ">";
                case "&quot;":
                  return '"';
                case "&apos;":
                  return "'";
              }
              return U;
            });
          }
          for (; h < p && (S(), !(h >= p)); ) {
            const j = c.charCodeAt(h);
            if (m(1), j !== 60)
              return A("expected <");
            if (h >= p)
              return A("unexpected end of input");
            const Q = c.charCodeAt(h);
            if (Q === 63) {
              m(1), k("?>");
              continue;
            }
            if (Q === 33) {
              if (m(1), b("--")) {
                k("-->");
                continue;
              }
              k(">");
              continue;
            }
            if (Q === 47) {
              if (m(1), S(), b("plist")) {
                k(">");
                continue;
              }
              if (b("dict")) {
                k(">"), R();
                continue;
              }
              if (b("array")) {
                k(">"), F();
                continue;
              }
              return A("unexpected closed tag");
            }
            let U = $();
            switch (U.name) {
              case "dict":
                C === 1 ? E() : C === 2 ? T() : (y = {}, i !== null && (y[i] = { filename: l, line: d, char: f }), _(1, y)), U.isClosed && R();
                continue;
              case "array":
                C === 1 ? D() : C === 2 ? q() : (y = [], _(2, y)), U.isClosed && F();
                continue;
              case "key":
                Y = z(U), C !== 1 ? A("unexpected <key>") : x !== null ? A("too many <key>") : x = Y;
                continue;
              case "string":
                M(z(U));
                continue;
              case "real":
                O(parseFloat(z(U)));
                continue;
              case "integer":
                Z(parseInt(z(U), 10));
                continue;
              case "date":
                J(new Date(z(U)));
                continue;
              case "data":
                V(z(U));
                continue;
              case "true":
                z(U), G(!0);
                continue;
              case "false":
                z(U), G(!1);
                continue;
            }
            if (!/^plist/.test(U.name))
              return A("unexpected opened tag " + U.name);
          }
          var Y;
          return y;
        }
        Object.defineProperty(s, "__esModule", { value: !0 }), s.parsePLIST = s.parseWithLocation = void 0, s.parseWithLocation = function(c, l, i) {
          return a(c, l, i);
        }, s.parsePLIST = function(c) {
          return a(c, null, null);
        };
      }, 652: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.SyncRegistry = void 0;
        const c = a(391);
        s.SyncRegistry = class {
          constructor(l, i) {
            this._onigLibPromise = i, this._grammars = /* @__PURE__ */ new Map(), this._rawGrammars = /* @__PURE__ */ new Map(), this._injectionGrammars = /* @__PURE__ */ new Map(), this._theme = l;
          }
          dispose() {
            for (const l of this._grammars.values())
              l.dispose();
          }
          setTheme(l) {
            this._theme = l;
          }
          getColorMap() {
            return this._theme.getColorMap();
          }
          addGrammar(l, i) {
            this._rawGrammars.set(l.scopeName, l), i && this._injectionGrammars.set(l.scopeName, i);
          }
          lookup(l) {
            return this._rawGrammars.get(l);
          }
          injections(l) {
            return this._injectionGrammars.get(l);
          }
          getDefaults() {
            return this._theme.getDefaults();
          }
          themeMatch(l) {
            return this._theme.match(l);
          }
          async grammarForScopeName(l, i, p, h, d) {
            if (!this._grammars.has(l)) {
              let f = this._rawGrammars.get(l);
              if (!f)
                return null;
              this._grammars.set(l, c.createGrammar(l, f, i, p, h, d, this, await this._onigLibPromise));
            }
            return this._grammars.get(l);
          }
        };
      }, 792: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.CompiledRule = s.RegExpSourceList = s.RegExpSource = s.RuleFactory = s.BeginWhileRule = s.BeginEndRule = s.IncludeOnlyRule = s.MatchRule = s.CaptureRule = s.Rule = s.ruleIdToNumber = s.ruleIdFromNumber = s.whileRuleId = s.endRuleId = void 0;
        const c = a(878), l = a(965), i = /\\(\d+)/, p = /\\(\d+)/g;
        s.endRuleId = -1, s.whileRuleId = -2, s.ruleIdFromNumber = function(y) {
          return y;
        }, s.ruleIdToNumber = function(y) {
          return y;
        };
        class h {
          constructor(u, g, x, _) {
            this.$location = u, this.id = g, this._name = x || null, this._nameIsCapturing = c.RegexSource.hasCaptures(this._name), this._contentName = _ || null, this._contentNameIsCapturing = c.RegexSource.hasCaptures(this._contentName);
          }
          get debugName() {
            const u = this.$location ? `${c.basename(this.$location.filename)}:${this.$location.line}` : "unknown";
            return `${this.constructor.name}#${this.id} @ ${u}`;
          }
          getName(u, g) {
            return this._nameIsCapturing && this._name !== null && u !== null && g !== null ? c.RegexSource.replaceCaptures(this._name, u, g) : this._name;
          }
          getContentName(u, g) {
            return this._contentNameIsCapturing && this._contentName !== null ? c.RegexSource.replaceCaptures(this._contentName, u, g) : this._contentName;
          }
        }
        s.Rule = h;
        class d extends h {
          constructor(u, g, x, _, v) {
            super(u, g, x, _), this.retokenizeCapturedWithRuleId = v;
          }
          dispose() {
          }
          collectPatterns(u, g) {
            throw new Error("Not supported!");
          }
          compile(u, g) {
            throw new Error("Not supported!");
          }
          compileAG(u, g, x, _) {
            throw new Error("Not supported!");
          }
        }
        s.CaptureRule = d;
        class f extends h {
          constructor(u, g, x, _, v) {
            super(u, g, x, null), this._match = new k(_, this.id), this.captures = v, this._cachedCompiledPatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }
          get debugMatchRegExp() {
            return `${this._match.source}`;
          }
          collectPatterns(u, g) {
            g.push(this._match);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u) {
            return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new w(), this.collectPatterns(u, this._cachedCompiledPatterns)), this._cachedCompiledPatterns;
          }
        }
        s.MatchRule = f;
        class m extends h {
          constructor(u, g, x, _, v) {
            super(u, g, x, _), this.patterns = v.patterns, this.hasMissingPatterns = v.hasMissingPatterns, this._cachedCompiledPatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }
          collectPatterns(u, g) {
            for (const x of this.patterns)
              u.getRule(x).collectPatterns(u, g);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u) {
            return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new w(), this.collectPatterns(u, this._cachedCompiledPatterns)), this._cachedCompiledPatterns;
          }
        }
        s.IncludeOnlyRule = m;
        class L extends h {
          constructor(u, g, x, _, v, A, E, D, T, q) {
            super(u, g, x, _), this._begin = new k(v, this.id), this.beginCaptures = A, this._end = new k(E || "￿", -1), this.endHasBackReferences = this._end.hasBackReferences, this.endCaptures = D, this.applyEndPatternLast = T || !1, this.patterns = q.patterns, this.hasMissingPatterns = q.hasMissingPatterns, this._cachedCompiledPatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }
          get debugBeginRegExp() {
            return `${this._begin.source}`;
          }
          get debugEndRegExp() {
            return `${this._end.source}`;
          }
          getEndWithResolvedBackReferences(u, g) {
            return this._end.resolveBackReferences(u, g);
          }
          collectPatterns(u, g) {
            g.push(this._begin);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u, g).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u, g).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u, g) {
            if (!this._cachedCompiledPatterns) {
              this._cachedCompiledPatterns = new w();
              for (const x of this.patterns)
                u.getRule(x).collectPatterns(u, this._cachedCompiledPatterns);
              this.applyEndPatternLast ? this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end) : this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);
            }
            return this._end.hasBackReferences && (this.applyEndPatternLast ? this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, g) : this._cachedCompiledPatterns.setSource(0, g)), this._cachedCompiledPatterns;
          }
        }
        s.BeginEndRule = L;
        class S extends h {
          constructor(u, g, x, _, v, A, E, D, T) {
            super(u, g, x, _), this._begin = new k(v, this.id), this.beginCaptures = A, this.whileCaptures = D, this._while = new k(E, s.whileRuleId), this.whileHasBackReferences = this._while.hasBackReferences, this.patterns = T.patterns, this.hasMissingPatterns = T.hasMissingPatterns, this._cachedCompiledPatterns = null, this._cachedCompiledWhilePatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null), this._cachedCompiledWhilePatterns && (this._cachedCompiledWhilePatterns.dispose(), this._cachedCompiledWhilePatterns = null);
          }
          get debugBeginRegExp() {
            return `${this._begin.source}`;
          }
          get debugWhileRegExp() {
            return `${this._while.source}`;
          }
          getWhileWithResolvedBackReferences(u, g) {
            return this._while.resolveBackReferences(u, g);
          }
          collectPatterns(u, g) {
            g.push(this._begin);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u) {
            if (!this._cachedCompiledPatterns) {
              this._cachedCompiledPatterns = new w();
              for (const g of this.patterns)
                u.getRule(g).collectPatterns(u, this._cachedCompiledPatterns);
            }
            return this._cachedCompiledPatterns;
          }
          compileWhile(u, g) {
            return this._getCachedCompiledWhilePatterns(u, g).compile(u);
          }
          compileWhileAG(u, g, x, _) {
            return this._getCachedCompiledWhilePatterns(u, g).compileAG(u, x, _);
          }
          _getCachedCompiledWhilePatterns(u, g) {
            return this._cachedCompiledWhilePatterns || (this._cachedCompiledWhilePatterns = new w(), this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while)), this._while.hasBackReferences && this._cachedCompiledWhilePatterns.setSource(0, g || "￿"), this._cachedCompiledWhilePatterns;
          }
        }
        s.BeginWhileRule = S;
        class b {
          static createCaptureRule(u, g, x, _, v) {
            return u.registerRule((A) => new d(g, A, x, _, v));
          }
          static getCompiledRuleId(u, g, x) {
            return u.id || g.registerRule((_) => {
              if (u.id = _, u.match)
                return new f(u.$vscodeTextmateLocation, u.id, u.name, u.match, b._compileCaptures(u.captures, g, x));
              if (u.begin === void 0) {
                u.repository && (x = c.mergeObjects({}, x, u.repository));
                let v = u.patterns;
                return v === void 0 && u.include && (v = [{ include: u.include }]), new m(u.$vscodeTextmateLocation, u.id, u.name, u.contentName, b._compilePatterns(v, g, x));
              }
              return u.while ? new S(u.$vscodeTextmateLocation, u.id, u.name, u.contentName, u.begin, b._compileCaptures(u.beginCaptures || u.captures, g, x), u.while, b._compileCaptures(u.whileCaptures || u.captures, g, x), b._compilePatterns(u.patterns, g, x)) : new L(u.$vscodeTextmateLocation, u.id, u.name, u.contentName, u.begin, b._compileCaptures(u.beginCaptures || u.captures, g, x), u.end, b._compileCaptures(u.endCaptures || u.captures, g, x), u.applyEndPatternLast, b._compilePatterns(u.patterns, g, x));
            }), u.id;
          }
          static _compileCaptures(u, g, x) {
            let _ = [];
            if (u) {
              let v = 0;
              for (const A in u) {
                if (A === "$vscodeTextmateLocation")
                  continue;
                const E = parseInt(A, 10);
                E > v && (v = E);
              }
              for (let A = 0; A <= v; A++)
                _[A] = null;
              for (const A in u) {
                if (A === "$vscodeTextmateLocation")
                  continue;
                const E = parseInt(A, 10);
                let D = 0;
                u[A].patterns && (D = b.getCompiledRuleId(u[A], g, x)), _[E] = b.createCaptureRule(g, u[A].$vscodeTextmateLocation, u[A].name, u[A].contentName, D);
              }
            }
            return _;
          }
          static _compilePatterns(u, g, x) {
            let _ = [];
            if (u)
              for (let v = 0, A = u.length; v < A; v++) {
                const E = u[v];
                let D = -1;
                if (E.include) {
                  const T = l.parseInclude(E.include);
                  switch (T.kind) {
                    case 0:
                    case 1:
                      D = b.getCompiledRuleId(x[E.include], g, x);
                      break;
                    case 2:
                      let q = x[T.ruleName];
                      q && (D = b.getCompiledRuleId(q, g, x));
                      break;
                    case 3:
                    case 4:
                      const R = T.scopeName, F = T.kind === 4 ? T.ruleName : null, M = g.getExternalGrammar(R, x);
                      if (M)
                        if (F) {
                          let O = M.repository[F];
                          O && (D = b.getCompiledRuleId(O, g, M.repository));
                        } else
                          D = b.getCompiledRuleId(M.repository.$self, g, M.repository);
                  }
                } else
                  D = b.getCompiledRuleId(E, g, x);
                if (D !== -1) {
                  const T = g.getRule(D);
                  let q = !1;
                  if ((T instanceof m || T instanceof L || T instanceof S) && T.hasMissingPatterns && T.patterns.length === 0 && (q = !0), q)
                    continue;
                  _.push(D);
                }
              }
            return { patterns: _, hasMissingPatterns: (u ? u.length : 0) !== _.length };
          }
        }
        s.RuleFactory = b;
        class k {
          constructor(u, g) {
            if (u) {
              const x = u.length;
              let _ = 0, v = [], A = !1;
              for (let E = 0; E < x; E++)
                if (u.charAt(E) === "\\" && E + 1 < x) {
                  const D = u.charAt(E + 1);
                  D === "z" ? (v.push(u.substring(_, E)), v.push("$(?!\\n)(?<!\\n)"), _ = E + 2) : D !== "A" && D !== "G" || (A = !0), E++;
                }
              this.hasAnchor = A, _ === 0 ? this.source = u : (v.push(u.substring(_, x)), this.source = v.join(""));
            } else
              this.hasAnchor = !1, this.source = u;
            this.hasAnchor ? this._anchorCache = this._buildAnchorCache() : this._anchorCache = null, this.ruleId = g, this.hasBackReferences = i.test(this.source);
          }
          clone() {
            return new k(this.source, this.ruleId);
          }
          setSource(u) {
            this.source !== u && (this.source = u, this.hasAnchor && (this._anchorCache = this._buildAnchorCache()));
          }
          resolveBackReferences(u, g) {
            let x = g.map((_) => u.substring(_.start, _.end));
            return p.lastIndex = 0, this.source.replace(p, (_, v) => c.escapeRegExpCharacters(x[parseInt(v, 10)] || ""));
          }
          _buildAnchorCache() {
            let u, g, x, _, v = [], A = [], E = [], D = [];
            for (u = 0, g = this.source.length; u < g; u++)
              x = this.source.charAt(u), v[u] = x, A[u] = x, E[u] = x, D[u] = x, x === "\\" && u + 1 < g && (_ = this.source.charAt(u + 1), _ === "A" ? (v[u + 1] = "￿", A[u + 1] = "￿", E[u + 1] = "A", D[u + 1] = "A") : _ === "G" ? (v[u + 1] = "￿", A[u + 1] = "G", E[u + 1] = "￿", D[u + 1] = "G") : (v[u + 1] = _, A[u + 1] = _, E[u + 1] = _, D[u + 1] = _), u++);
            return { A0_G0: v.join(""), A0_G1: A.join(""), A1_G0: E.join(""), A1_G1: D.join("") };
          }
          resolveAnchors(u, g) {
            return this.hasAnchor && this._anchorCache ? u ? g ? this._anchorCache.A1_G1 : this._anchorCache.A1_G0 : g ? this._anchorCache.A0_G1 : this._anchorCache.A0_G0 : this.source;
          }
        }
        s.RegExpSource = k;
        class w {
          constructor() {
            this._items = [], this._hasAnchors = !1, this._cached = null, this._anchorCache = { A0_G0: null, A0_G1: null, A1_G0: null, A1_G1: null };
          }
          dispose() {
            this._disposeCaches();
          }
          _disposeCaches() {
            this._cached && (this._cached.dispose(), this._cached = null), this._anchorCache.A0_G0 && (this._anchorCache.A0_G0.dispose(), this._anchorCache.A0_G0 = null), this._anchorCache.A0_G1 && (this._anchorCache.A0_G1.dispose(), this._anchorCache.A0_G1 = null), this._anchorCache.A1_G0 && (this._anchorCache.A1_G0.dispose(), this._anchorCache.A1_G0 = null), this._anchorCache.A1_G1 && (this._anchorCache.A1_G1.dispose(), this._anchorCache.A1_G1 = null);
          }
          push(u) {
            this._items.push(u), this._hasAnchors = this._hasAnchors || u.hasAnchor;
          }
          unshift(u) {
            this._items.unshift(u), this._hasAnchors = this._hasAnchors || u.hasAnchor;
          }
          length() {
            return this._items.length;
          }
          setSource(u, g) {
            this._items[u].source !== g && (this._disposeCaches(), this._items[u].setSource(g));
          }
          compile(u) {
            if (!this._cached) {
              let g = this._items.map((x) => x.source);
              this._cached = new C(u, g, this._items.map((x) => x.ruleId));
            }
            return this._cached;
          }
          compileAG(u, g, x) {
            return this._hasAnchors ? g ? x ? (this._anchorCache.A1_G1 || (this._anchorCache.A1_G1 = this._resolveAnchors(u, g, x)), this._anchorCache.A1_G1) : (this._anchorCache.A1_G0 || (this._anchorCache.A1_G0 = this._resolveAnchors(u, g, x)), this._anchorCache.A1_G0) : x ? (this._anchorCache.A0_G1 || (this._anchorCache.A0_G1 = this._resolveAnchors(u, g, x)), this._anchorCache.A0_G1) : (this._anchorCache.A0_G0 || (this._anchorCache.A0_G0 = this._resolveAnchors(u, g, x)), this._anchorCache.A0_G0) : this.compile(u);
          }
          _resolveAnchors(u, g, x) {
            let _ = this._items.map((v) => v.resolveAnchors(g, x));
            return new C(u, _, this._items.map((v) => v.ruleId));
          }
        }
        s.RegExpSourceList = w;
        class C {
          constructor(u, g, x) {
            this.regExps = g, this.rules = x, this.scanner = u.createOnigScanner(g);
          }
          dispose() {
            typeof this.scanner.dispose == "function" && this.scanner.dispose();
          }
          toString() {
            const u = [];
            for (let g = 0, x = this.rules.length; g < x; g++)
              u.push("   - " + this.rules[g] + ": " + this.regExps[g]);
            return u.join(`
`);
          }
          findNextMatchSync(u, g, x) {
            const _ = this.scanner.findNextMatchSync(u, g, x);
            return _ ? { ruleId: this.rules[_.index], captureIndices: _.captureIndices } : null;
          }
        }
        s.CompiledRule = C;
      }, 583: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.ThemeTrieElement = s.ThemeTrieElementRule = s.ColorMap = s.fontStyleToString = s.ParsedThemeRule = s.parseTheme = s.StyleAttributes = s.ScopeStack = s.Theme = void 0;
        const c = a(878);
        class l {
          constructor(k, w, C) {
            this._colorMap = k, this._defaults = w, this._root = C, this._cachedMatchRoot = new c.CachedFn((y) => this._root.match(y));
          }
          static createFromRawTheme(k, w) {
            return this.createFromParsedTheme(d(k), w);
          }
          static createFromParsedTheme(k, w) {
            return function(C, y) {
              C.sort((E, D) => {
                let T = c.strcmp(E.scope, D.scope);
                return T !== 0 ? T : (T = c.strArrCmp(E.parentScopes, D.parentScopes), T !== 0 ? T : E.index - D.index);
              });
              let u = 0, g = "#000000", x = "#ffffff";
              for (; C.length >= 1 && C[0].scope === ""; ) {
                let E = C.shift();
                E.fontStyle !== -1 && (u = E.fontStyle), E.foreground !== null && (g = E.foreground), E.background !== null && (x = E.background);
              }
              let _ = new m(y), v = new h(u, _.getId(g), _.getId(x)), A = new S(new L(0, null, -1, 0, 0), []);
              for (let E = 0, D = C.length; E < D; E++) {
                let T = C[E];
                A.insert(0, T.scope, T.parentScopes, T.fontStyle, _.getId(T.foreground), _.getId(T.background));
              }
              return new l(_, v, A);
            }(k, w);
          }
          getColorMap() {
            return this._colorMap.getColorMap();
          }
          getDefaults() {
            return this._defaults;
          }
          match(k) {
            if (k === null)
              return this._defaults;
            const w = k.scopeName, C = this._cachedMatchRoot.get(w).find((y) => function(u, g) {
              if (g === null)
                return !0;
              let x = 0, _ = g[x];
              for (; u; ) {
                if (p(u.scopeName, _)) {
                  if (x++, x === g.length)
                    return !0;
                  _ = g[x];
                }
                u = u.parent;
              }
              return !1;
            }(k.parent, y.parentScopes));
            return C ? new h(C.fontStyle, C.foreground, C.background) : null;
          }
        }
        s.Theme = l;
        class i {
          constructor(k, w) {
            this.parent = k, this.scopeName = w;
          }
          static from(...k) {
            let w = null;
            for (let C = 0; C < k.length; C++)
              w = new i(w, k[C]);
            return w;
          }
          push(k) {
            return new i(this, k);
          }
          getSegments() {
            let k = this;
            const w = [];
            for (; k; )
              w.push(k.scopeName), k = k.parent;
            return w.reverse(), w;
          }
          toString() {
            return this.getSegments().join(" ");
          }
        }
        function p(b, k) {
          return k === b || b.startsWith(k) && b[k.length] === ".";
        }
        s.ScopeStack = i;
        class h {
          constructor(k, w, C) {
            this.fontStyle = k, this.foregroundId = w, this.backgroundId = C;
          }
        }
        function d(b) {
          if (!b)
            return [];
          if (!b.settings || !Array.isArray(b.settings))
            return [];
          let k = b.settings, w = [], C = 0;
          for (let y = 0, u = k.length; y < u; y++) {
            let g, x = k[y];
            if (!x.settings)
              continue;
            if (typeof x.scope == "string") {
              let E = x.scope;
              E = E.replace(/^[,]+/, ""), E = E.replace(/[,]+$/, ""), g = E.split(",");
            } else
              g = Array.isArray(x.scope) ? x.scope : [""];
            let _ = -1;
            if (typeof x.settings.fontStyle == "string") {
              _ = 0;
              let E = x.settings.fontStyle.split(" ");
              for (let D = 0, T = E.length; D < T; D++)
                switch (E[D]) {
                  case "italic":
                    _ |= 1;
                    break;
                  case "bold":
                    _ |= 2;
                    break;
                  case "underline":
                    _ |= 4;
                    break;
                  case "strikethrough":
                    _ |= 8;
                }
            }
            let v = null;
            typeof x.settings.foreground == "string" && c.isValidHexColor(x.settings.foreground) && (v = x.settings.foreground);
            let A = null;
            typeof x.settings.background == "string" && c.isValidHexColor(x.settings.background) && (A = x.settings.background);
            for (let E = 0, D = g.length; E < D; E++) {
              let T = g[E].trim().split(" "), q = T[T.length - 1], R = null;
              T.length > 1 && (R = T.slice(0, T.length - 1), R.reverse()), w[C++] = new f(q, R, y, _, v, A);
            }
          }
          return w;
        }
        s.StyleAttributes = h, s.parseTheme = d;
        class f {
          constructor(k, w, C, y, u, g) {
            this.scope = k, this.parentScopes = w, this.index = C, this.fontStyle = y, this.foreground = u, this.background = g;
          }
        }
        s.ParsedThemeRule = f, s.fontStyleToString = function(b) {
          if (b === -1)
            return "not set";
          let k = "";
          return 1 & b && (k += "italic "), 2 & b && (k += "bold "), 4 & b && (k += "underline "), 8 & b && (k += "strikethrough "), k === "" && (k = "none"), k.trim();
        };
        class m {
          constructor(k) {
            if (this._lastColorId = 0, this._id2color = [], this._color2id = /* @__PURE__ */ Object.create(null), Array.isArray(k)) {
              this._isFrozen = !0;
              for (let w = 0, C = k.length; w < C; w++)
                this._color2id[k[w]] = w, this._id2color[w] = k[w];
            } else
              this._isFrozen = !1;
          }
          getId(k) {
            if (k === null)
              return 0;
            k = k.toUpperCase();
            let w = this._color2id[k];
            if (w)
              return w;
            if (this._isFrozen)
              throw new Error(`Missing color in color map - ${k}`);
            return w = ++this._lastColorId, this._color2id[k] = w, this._id2color[w] = k, w;
          }
          getColorMap() {
            return this._id2color.slice(0);
          }
        }
        s.ColorMap = m;
        class L {
          constructor(k, w, C, y, u) {
            this.scopeDepth = k, this.parentScopes = w, this.fontStyle = C, this.foreground = y, this.background = u;
          }
          clone() {
            return new L(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);
          }
          static cloneArr(k) {
            let w = [];
            for (let C = 0, y = k.length; C < y; C++)
              w[C] = k[C].clone();
            return w;
          }
          acceptOverwrite(k, w, C, y) {
            this.scopeDepth > k ? console.log("how did this happen?") : this.scopeDepth = k, w !== -1 && (this.fontStyle = w), C !== 0 && (this.foreground = C), y !== 0 && (this.background = y);
          }
        }
        s.ThemeTrieElementRule = L;
        class S {
          constructor(k, w = [], C = {}) {
            this._mainRule = k, this._children = C, this._rulesWithParentScopes = w;
          }
          static _sortBySpecificity(k) {
            return k.length === 1 || k.sort(this._cmpBySpecificity), k;
          }
          static _cmpBySpecificity(k, w) {
            if (k.scopeDepth === w.scopeDepth) {
              const C = k.parentScopes, y = w.parentScopes;
              let u = C === null ? 0 : C.length, g = y === null ? 0 : y.length;
              if (u === g)
                for (let x = 0; x < u; x++) {
                  const _ = C[x].length, v = y[x].length;
                  if (_ !== v)
                    return v - _;
                }
              return g - u;
            }
            return w.scopeDepth - k.scopeDepth;
          }
          match(k) {
            if (k === "")
              return S._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));
            let w, C, y = k.indexOf(".");
            return y === -1 ? (w = k, C = "") : (w = k.substring(0, y), C = k.substring(y + 1)), this._children.hasOwnProperty(w) ? this._children[w].match(C) : S._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));
          }
          insert(k, w, C, y, u, g) {
            if (w === "")
              return void this._doInsertHere(k, C, y, u, g);
            let x, _, v, A = w.indexOf(".");
            A === -1 ? (x = w, _ = "") : (x = w.substring(0, A), _ = w.substring(A + 1)), this._children.hasOwnProperty(x) ? v = this._children[x] : (v = new S(this._mainRule.clone(), L.cloneArr(this._rulesWithParentScopes)), this._children[x] = v), v.insert(k + 1, _, C, y, u, g);
          }
          _doInsertHere(k, w, C, y, u) {
            if (w !== null) {
              for (let g = 0, x = this._rulesWithParentScopes.length; g < x; g++) {
                let _ = this._rulesWithParentScopes[g];
                if (c.strArrCmp(_.parentScopes, w) === 0)
                  return void _.acceptOverwrite(k, C, y, u);
              }
              C === -1 && (C = this._mainRule.fontStyle), y === 0 && (y = this._mainRule.foreground), u === 0 && (u = this._mainRule.background), this._rulesWithParentScopes.push(new L(k, w, C, y, u));
            } else
              this._mainRule.acceptOverwrite(k, C, y, u);
          }
        }
        s.ThemeTrieElement = S;
      }, 878: (r, s) => {
        function a(i) {
          return Array.isArray(i) ? function(p) {
            let h = [];
            for (let d = 0, f = p.length; d < f; d++)
              h[d] = a(p[d]);
            return h;
          }(i) : typeof i == "object" ? function(p) {
            let h = {};
            for (let d in p)
              h[d] = a(p[d]);
            return h;
          }(i) : i;
        }
        Object.defineProperty(s, "__esModule", { value: !0 }), s.performanceNow = s.CachedFn = s.escapeRegExpCharacters = s.isValidHexColor = s.strArrCmp = s.strcmp = s.RegexSource = s.basename = s.mergeObjects = s.clone = void 0, s.clone = function(i) {
          return a(i);
        }, s.mergeObjects = function(i, ...p) {
          return p.forEach((h) => {
            for (let d in h)
              i[d] = h[d];
          }), i;
        }, s.basename = function i(p) {
          const h = ~p.lastIndexOf("/") || ~p.lastIndexOf("\\");
          return h === 0 ? p : ~h == p.length - 1 ? i(p.substring(0, p.length - 1)) : p.substr(1 + ~h);
        };
        let c = /\$(\d+)|\${(\d+):\/(downcase|upcase)}/g;
        function l(i, p) {
          return i < p ? -1 : i > p ? 1 : 0;
        }
        s.RegexSource = class {
          static hasCaptures(i) {
            return i !== null && (c.lastIndex = 0, c.test(i));
          }
          static replaceCaptures(i, p, h) {
            return i.replace(c, (d, f, m, L) => {
              let S = h[parseInt(f || m, 10)];
              if (!S)
                return d;
              {
                let b = p.substring(S.start, S.end);
                for (; b[0] === "."; )
                  b = b.substring(1);
                switch (L) {
                  case "downcase":
                    return b.toLowerCase();
                  case "upcase":
                    return b.toUpperCase();
                  default:
                    return b;
                }
              }
            });
          }
        }, s.strcmp = l, s.strArrCmp = function(i, p) {
          if (i === null && p === null)
            return 0;
          if (!i)
            return -1;
          if (!p)
            return 1;
          let h = i.length, d = p.length;
          if (h === d) {
            for (let f = 0; f < h; f++) {
              let m = l(i[f], p[f]);
              if (m !== 0)
                return m;
            }
            return 0;
          }
          return h - d;
        }, s.isValidHexColor = function(i) {
          return !!(/^#[0-9a-f]{6}$/i.test(i) || /^#[0-9a-f]{8}$/i.test(i) || /^#[0-9a-f]{3}$/i.test(i) || /^#[0-9a-f]{4}$/i.test(i));
        }, s.escapeRegExpCharacters = function(i) {
          return i.replace(/[\-\\\{\}\*\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&");
        }, s.CachedFn = class {
          constructor(i) {
            this.fn = i, this.cache = /* @__PURE__ */ new Map();
          }
          get(i) {
            if (this.cache.has(i))
              return this.cache.get(i);
            const p = this.fn(i);
            return this.cache.set(i, p), p;
          }
        }, s.performanceNow = typeof performance > "u" ? function() {
          return Date.now();
        } : function() {
          return performance.now();
        };
      } }, o = {};
      return function r(s) {
        var a = o[s];
        if (a !== void 0)
          return a.exports;
        var c = o[s] = { exports: {} };
        return t[s].call(c.exports, c, c.exports, r), c.exports;
      }(787);
    })();
  });
})(Uo);
var Ho = Uo.exports;
const An = [
  {
    id: "abap",
    scopeName: "source.abap",
    path: "abap.tmLanguage.json",
    samplePath: "abap.sample"
  },
  {
    id: "actionscript-3",
    scopeName: "source.actionscript.3",
    path: "actionscript-3.tmLanguage.json",
    samplePath: "actionscript-3.sample"
  },
  {
    id: "ada",
    scopeName: "source.ada",
    path: "ada.tmLanguage.json",
    samplePath: "ada.sample"
  },
  {
    id: "apache",
    scopeName: "source.apacheconf",
    path: "apache.tmLanguage.json"
  },
  {
    id: "apex",
    scopeName: "source.apex",
    path: "apex.tmLanguage.json",
    samplePath: "apex.sample"
  },
  {
    id: "apl",
    scopeName: "source.apl",
    path: "apl.tmLanguage.json",
    embeddedLangs: ["html", "xml", "css", "javascript", "json"]
  },
  {
    id: "applescript",
    scopeName: "source.applescript",
    path: "applescript.tmLanguage.json",
    samplePath: "applescript.sample"
  },
  {
    id: "ara",
    scopeName: "source.ara",
    path: "ara.tmLanguage.json",
    samplePath: "ara.sample"
  },
  {
    id: "asm",
    scopeName: "source.asm.x86_64",
    path: "asm.tmLanguage.json",
    samplePath: "asm.sample"
  },
  {
    id: "astro",
    scopeName: "source.astro",
    path: "astro.tmLanguage.json",
    samplePath: "astro.sample",
    embeddedLangs: ["json", "javascript", "typescript", "stylus", "sass", "css", "scss", "less", "postcss", "tsx"]
  },
  {
    id: "awk",
    scopeName: "source.awk",
    path: "awk.tmLanguage.json",
    samplePath: "awk.sample"
  },
  {
    id: "ballerina",
    scopeName: "source.ballerina",
    path: "ballerina.tmLanguage.json",
    samplePath: "ballerina.sample"
  },
  {
    id: "bat",
    scopeName: "source.batchfile",
    path: "bat.tmLanguage.json",
    samplePath: "bat.sample",
    aliases: ["batch"]
  },
  {
    id: "berry",
    scopeName: "source.berry",
    path: "berry.tmLanguage.json",
    samplePath: "berry.sample",
    aliases: ["be"]
  },
  {
    id: "bibtex",
    scopeName: "text.bibtex",
    path: "bibtex.tmLanguage.json"
  },
  {
    id: "bicep",
    scopeName: "source.bicep",
    path: "bicep.tmLanguage.json",
    samplePath: "bicep.sample"
  },
  {
    id: "blade",
    scopeName: "text.html.php.blade",
    path: "blade.tmLanguage.json",
    samplePath: "blade.sample",
    embeddedLangs: ["html", "xml", "sql", "javascript", "json", "css"]
  },
  {
    id: "c",
    scopeName: "source.c",
    path: "c.tmLanguage.json",
    samplePath: "c.sample"
  },
  {
    id: "cadence",
    scopeName: "source.cadence",
    path: "cadence.tmLanguage.json",
    samplePath: "cadence.sample",
    aliases: ["cdc"]
  },
  {
    id: "clarity",
    scopeName: "source.clar",
    path: "clarity.tmLanguage.json",
    samplePath: "clarity.sample"
  },
  {
    id: "clojure",
    scopeName: "source.clojure",
    path: "clojure.tmLanguage.json",
    samplePath: "clojure.sample",
    aliases: ["clj"]
  },
  {
    id: "cmake",
    scopeName: "source.cmake",
    path: "cmake.tmLanguage.json",
    samplePath: "cmake.sample"
  },
  {
    id: "cobol",
    scopeName: "source.cobol",
    path: "cobol.tmLanguage.json",
    samplePath: "cobol.sample",
    embeddedLangs: ["sql", "html", "java"]
  },
  {
    id: "codeql",
    scopeName: "source.ql",
    path: "codeql.tmLanguage.json",
    samplePath: "codeql.sample",
    aliases: ["ql"],
    embeddedLangs: ["markdown"]
  },
  {
    id: "coffee",
    scopeName: "source.coffee",
    path: "coffee.tmLanguage.json",
    samplePath: "coffee.sample",
    embeddedLangs: ["javascript"]
  },
  {
    id: "cpp",
    scopeName: "source.cpp",
    path: "cpp.tmLanguage.json",
    samplePath: "cpp.sample",
    embeddedLangs: ["glsl", "sql"]
  },
  {
    id: "crystal",
    scopeName: "source.crystal",
    path: "crystal.tmLanguage.json",
    samplePath: "crystal.sample",
    embeddedLangs: ["html", "sql", "css", "c", "javascript", "shellscript"]
  },
  {
    id: "csharp",
    scopeName: "source.cs",
    path: "csharp.tmLanguage.json",
    samplePath: "csharp.sample",
    aliases: ["c#", "cs"]
  },
  {
    id: "css",
    scopeName: "source.css",
    path: "css.tmLanguage.json",
    samplePath: "css.sample"
  },
  {
    id: "cue",
    scopeName: "source.cue",
    path: "cue.tmLanguage.json",
    samplePath: "cue.sample"
  },
  {
    id: "d",
    scopeName: "source.d",
    path: "d.tmLanguage.json",
    samplePath: "d.sample"
  },
  {
    id: "dart",
    scopeName: "source.dart",
    path: "dart.tmLanguage.json",
    samplePath: "dart.sample"
  },
  {
    id: "dax",
    scopeName: "source.dax",
    path: "dax.tmLanguage.json",
    samplePath: "dax.sample"
  },
  {
    id: "diff",
    scopeName: "source.diff",
    path: "diff.tmLanguage.json",
    samplePath: "diff.sample"
  },
  {
    id: "docker",
    scopeName: "source.dockerfile",
    path: "docker.tmLanguage.json",
    samplePath: "docker.sample"
  },
  {
    id: "dream-maker",
    scopeName: "source.dm",
    path: "dream-maker.tmLanguage.json"
  },
  {
    id: "elixir",
    scopeName: "source.elixir",
    path: "elixir.tmLanguage.json",
    samplePath: "elixir.sample",
    embeddedLangs: ["html"]
  },
  {
    id: "elm",
    scopeName: "source.elm",
    path: "elm.tmLanguage.json",
    samplePath: "elm.sample",
    embeddedLangs: ["glsl"]
  },
  {
    id: "erb",
    scopeName: "text.html.erb",
    path: "erb.tmLanguage.json",
    samplePath: "erb.sample",
    embeddedLangs: ["html", "ruby"]
  },
  {
    id: "erlang",
    scopeName: "source.erlang",
    path: "erlang.tmLanguage.json",
    samplePath: "erlang.sample",
    aliases: ["erl"]
  },
  {
    id: "fish",
    scopeName: "source.fish",
    path: "fish.tmLanguage.json",
    samplePath: "fish.sample"
  },
  {
    id: "fsharp",
    scopeName: "source.fsharp",
    path: "fsharp.tmLanguage.json",
    samplePath: "fsharp.sample",
    aliases: ["f#", "fs"],
    embeddedLangs: ["markdown"]
  },
  {
    id: "gherkin",
    scopeName: "text.gherkin.feature",
    path: "gherkin.tmLanguage.json"
  },
  {
    id: "git-commit",
    scopeName: "text.git-commit",
    path: "git-commit.tmLanguage.json",
    embeddedLangs: ["diff"]
  },
  {
    id: "git-rebase",
    scopeName: "text.git-rebase",
    path: "git-rebase.tmLanguage.json",
    embeddedLangs: ["shellscript"]
  },
  {
    id: "glsl",
    scopeName: "source.glsl",
    path: "glsl.tmLanguage.json",
    samplePath: "glsl.sample",
    embeddedLangs: ["c"]
  },
  {
    id: "gnuplot",
    scopeName: "source.gnuplot",
    path: "gnuplot.tmLanguage.json"
  },
  {
    id: "go",
    scopeName: "source.go",
    path: "go.tmLanguage.json",
    samplePath: "go.sample"
  },
  {
    id: "graphql",
    scopeName: "source.graphql",
    path: "graphql.tmLanguage.json",
    embeddedLangs: ["javascript", "typescript", "jsx", "tsx"]
  },
  {
    id: "groovy",
    scopeName: "source.groovy",
    path: "groovy.tmLanguage.json"
  },
  {
    id: "hack",
    scopeName: "source.hack",
    path: "hack.tmLanguage.json",
    embeddedLangs: ["html", "sql"]
  },
  {
    id: "haml",
    scopeName: "text.haml",
    path: "haml.tmLanguage.json",
    embeddedLangs: ["ruby", "javascript", "sass", "coffee", "markdown", "css"]
  },
  {
    id: "handlebars",
    scopeName: "text.html.handlebars",
    path: "handlebars.tmLanguage.json",
    aliases: ["hbs"],
    embeddedLangs: ["html", "css", "javascript", "yaml"]
  },
  {
    id: "haskell",
    scopeName: "source.haskell",
    path: "haskell.tmLanguage.json",
    aliases: ["hs"]
  },
  {
    id: "hcl",
    scopeName: "source.hcl",
    path: "hcl.tmLanguage.json",
    samplePath: "hcl.sample"
  },
  {
    id: "hlsl",
    scopeName: "source.hlsl",
    path: "hlsl.tmLanguage.json"
  },
  {
    id: "html",
    scopeName: "text.html.basic",
    path: "html.tmLanguage.json",
    samplePath: "html.sample",
    embeddedLangs: ["javascript", "css"]
  },
  {
    id: "http",
    scopeName: "source.http",
    path: "http.tmLanguage.json",
    samplePath: "http.sample",
    embeddedLangs: ["shellscript", "json", "xml", "graphql"]
  },
  {
    id: "imba",
    scopeName: "source.imba",
    path: "imba.tmLanguage.json",
    samplePath: "imba.sample"
  },
  {
    id: "ini",
    scopeName: "source.ini",
    path: "ini.tmLanguage.json",
    aliases: ["properties"]
  },
  {
    id: "java",
    scopeName: "source.java",
    path: "java.tmLanguage.json",
    samplePath: "java.sample"
  },
  {
    id: "javascript",
    scopeName: "source.js",
    path: "javascript.tmLanguage.json",
    samplePath: "javascript.sample",
    aliases: ["js"]
  },
  {
    id: "jinja-html",
    scopeName: "text.html.jinja",
    path: "jinja-html.tmLanguage.json",
    embeddedLangs: ["html"]
  },
  {
    id: "jison",
    scopeName: "source.jison",
    path: "jison.tmLanguage.json",
    samplePath: "jison.sample",
    embeddedLangs: ["javascript"]
  },
  {
    id: "json",
    scopeName: "source.json",
    path: "json.tmLanguage.json"
  },
  {
    id: "json5",
    scopeName: "source.json5",
    path: "json5.tmLanguage.json",
    samplePath: "json5.sample"
  },
  {
    id: "jsonc",
    scopeName: "source.json.comments",
    path: "jsonc.tmLanguage.json"
  },
  {
    id: "jsonnet",
    scopeName: "source.jsonnet",
    path: "jsonnet.tmLanguage.json"
  },
  {
    id: "jssm",
    scopeName: "source.jssm",
    path: "jssm.tmLanguage.json",
    samplePath: "jssm.sample",
    aliases: ["fsl"]
  },
  {
    id: "jsx",
    scopeName: "source.js.jsx",
    path: "jsx.tmLanguage.json"
  },
  {
    id: "julia",
    scopeName: "source.julia",
    path: "julia.tmLanguage.json",
    embeddedLangs: ["cpp", "python", "javascript", "r", "sql"]
  },
  {
    id: "kotlin",
    scopeName: "source.kotlin",
    path: "kotlin.tmLanguage.json"
  },
  {
    id: "latex",
    scopeName: "text.tex.latex",
    path: "latex.tmLanguage.json",
    embeddedLangs: ["tex", "css", "haskell", "html", "xml", "java", "lua", "julia", "ruby", "javascript", "typescript", "python", "yaml", "rust", "scala", "gnuplot"]
  },
  {
    id: "less",
    scopeName: "source.css.less",
    path: "less.tmLanguage.json",
    embeddedLangs: ["css"]
  },
  {
    id: "liquid",
    scopeName: "text.html.liquid",
    path: "liquid.tmLanguage.json",
    samplePath: "liquid.sample",
    embeddedLangs: ["html", "css", "json", "javascript"]
  },
  {
    id: "lisp",
    scopeName: "source.lisp",
    path: "lisp.tmLanguage.json"
  },
  {
    id: "logo",
    scopeName: "source.logo",
    path: "logo.tmLanguage.json"
  },
  {
    id: "lua",
    scopeName: "source.lua",
    path: "lua.tmLanguage.json",
    embeddedLangs: ["c"]
  },
  {
    id: "make",
    scopeName: "source.makefile",
    path: "make.tmLanguage.json",
    aliases: ["makefile"]
  },
  {
    id: "markdown",
    scopeName: "text.html.markdown",
    path: "markdown.tmLanguage.json",
    aliases: ["md"],
    embeddedLangs: ["css", "html", "ini", "java", "lua", "make", "perl", "r", "ruby", "php", "sql", "vb", "xml", "xsl", "yaml", "bat", "clojure", "coffee", "c", "cpp", "diff", "docker", "git-commit", "git-rebase", "go", "groovy", "pug", "javascript", "json", "jsonc", "less", "objective-c", "swift", "scss", "raku", "powershell", "python", "julia", "rust", "scala", "shellscript", "typescript", "tsx", "csharp", "fsharp", "dart", "handlebars", "erlang", "elixir", "latex", "bibtex"]
  },
  {
    id: "marko",
    scopeName: "text.marko",
    path: "marko.tmLanguage.json",
    embeddedLangs: ["css", "less", "scss", "typescript"]
  },
  {
    id: "matlab",
    scopeName: "source.matlab",
    path: "matlab.tmLanguage.json"
  },
  {
    id: "mdx",
    scopeName: "text.html.markdown.jsx",
    path: "mdx.tmLanguage.json",
    embeddedLangs: ["jsx", "markdown"]
  },
  {
    id: "mermaid",
    scopeName: "source.mermaid",
    path: "mermaid.tmLanguage.json"
  },
  {
    id: "nginx",
    scopeName: "source.nginx",
    path: "nginx.tmLanguage.json",
    embeddedLangs: ["lua"]
  },
  {
    id: "nim",
    scopeName: "source.nim",
    path: "nim.tmLanguage.json",
    embeddedLangs: ["c", "html", "xml", "javascript", "css", "glsl", "markdown"]
  },
  {
    id: "nix",
    scopeName: "source.nix",
    path: "nix.tmLanguage.json"
  },
  {
    id: "objective-c",
    scopeName: "source.objc",
    path: "objective-c.tmLanguage.json",
    aliases: ["objc"]
  },
  {
    id: "objective-cpp",
    scopeName: "source.objcpp",
    path: "objective-cpp.tmLanguage.json"
  },
  {
    id: "ocaml",
    scopeName: "source.ocaml",
    path: "ocaml.tmLanguage.json"
  },
  {
    id: "pascal",
    scopeName: "source.pascal",
    path: "pascal.tmLanguage.json"
  },
  {
    id: "perl",
    scopeName: "source.perl",
    path: "perl.tmLanguage.json",
    embeddedLangs: ["html", "xml", "css", "javascript", "sql"]
  },
  {
    id: "php",
    scopeName: "source.php",
    path: "php.tmLanguage.json",
    embeddedLangs: ["html", "xml", "sql", "javascript", "json", "css"]
  },
  {
    id: "plsql",
    scopeName: "source.plsql.oracle",
    path: "plsql.tmLanguage.json"
  },
  {
    id: "postcss",
    scopeName: "source.css.postcss",
    path: "postcss.tmLanguage.json"
  },
  {
    id: "powerquery",
    scopeName: "source.powerquery",
    path: "powerquery.tmLanguage.json",
    samplePath: "powerquery.sample"
  },
  {
    id: "powershell",
    scopeName: "source.powershell",
    path: "powershell.tmLanguage.json",
    aliases: ["ps", "ps1"]
  },
  {
    id: "prisma",
    scopeName: "source.prisma",
    path: "prisma.tmLanguage.json",
    samplePath: "prisma.sample"
  },
  {
    id: "prolog",
    scopeName: "source.prolog",
    path: "prolog.tmLanguage.json"
  },
  {
    id: "proto",
    scopeName: "source.proto",
    path: "proto.tmLanguage.json",
    samplePath: "proto.sample"
  },
  {
    id: "pug",
    scopeName: "text.pug",
    path: "pug.tmLanguage.json",
    aliases: ["jade"],
    embeddedLangs: ["javascript", "css", "sass", "scss", "stylus", "coffee", "html"]
  },
  {
    id: "puppet",
    scopeName: "source.puppet",
    path: "puppet.tmLanguage.json"
  },
  {
    id: "purescript",
    scopeName: "source.purescript",
    path: "purescript.tmLanguage.json"
  },
  {
    id: "python",
    scopeName: "source.python",
    path: "python.tmLanguage.json",
    samplePath: "python.sample",
    aliases: ["py"]
  },
  {
    id: "r",
    scopeName: "source.r",
    path: "r.tmLanguage.json"
  },
  {
    id: "raku",
    scopeName: "source.perl.6",
    path: "raku.tmLanguage.json",
    aliases: ["perl6"]
  },
  {
    id: "razor",
    scopeName: "text.aspnetcorerazor",
    path: "razor.tmLanguage.json",
    embeddedLangs: ["html", "csharp"]
  },
  {
    id: "rel",
    scopeName: "source.rel",
    path: "rel.tmLanguage.json",
    samplePath: "rel.sample"
  },
  {
    id: "riscv",
    scopeName: "source.riscv",
    path: "riscv.tmLanguage.json"
  },
  {
    id: "rst",
    scopeName: "source.rst",
    path: "rst.tmLanguage.json",
    embeddedLangs: ["cpp", "python", "javascript", "shellscript", "yaml", "cmake", "ruby"]
  },
  {
    id: "ruby",
    scopeName: "source.ruby",
    path: "ruby.tmLanguage.json",
    samplePath: "ruby.sample",
    aliases: ["rb"],
    embeddedLangs: ["html", "xml", "sql", "css", "c", "javascript", "shellscript", "lua"]
  },
  {
    id: "rust",
    scopeName: "source.rust",
    path: "rust.tmLanguage.json",
    aliases: ["rs"]
  },
  {
    id: "sas",
    scopeName: "source.sas",
    path: "sas.tmLanguage.json",
    embeddedLangs: ["sql"]
  },
  {
    id: "sass",
    scopeName: "source.sass",
    path: "sass.tmLanguage.json"
  },
  {
    id: "scala",
    scopeName: "source.scala",
    path: "scala.tmLanguage.json"
  },
  {
    id: "scheme",
    scopeName: "source.scheme",
    path: "scheme.tmLanguage.json"
  },
  {
    id: "scss",
    scopeName: "source.css.scss",
    path: "scss.tmLanguage.json",
    embeddedLangs: ["css"]
  },
  {
    id: "shaderlab",
    scopeName: "source.shaderlab",
    path: "shaderlab.tmLanguage.json",
    aliases: ["shader"],
    embeddedLangs: ["hlsl"]
  },
  {
    id: "shellscript",
    scopeName: "source.shell",
    path: "shellscript.tmLanguage.json",
    aliases: ["bash", "console", "sh", "shell", "zsh"]
  },
  {
    id: "smalltalk",
    scopeName: "source.smalltalk",
    path: "smalltalk.tmLanguage.json"
  },
  {
    id: "solidity",
    scopeName: "source.solidity",
    path: "solidity.tmLanguage.json"
  },
  {
    id: "sparql",
    scopeName: "source.sparql",
    path: "sparql.tmLanguage.json",
    samplePath: "sparql.sample",
    embeddedLangs: ["turtle"]
  },
  {
    id: "sql",
    scopeName: "source.sql",
    path: "sql.tmLanguage.json"
  },
  {
    id: "ssh-config",
    scopeName: "source.ssh-config",
    path: "ssh-config.tmLanguage.json"
  },
  {
    id: "stata",
    scopeName: "source.stata",
    path: "stata.tmLanguage.json",
    samplePath: "stata.sample",
    embeddedLangs: ["sql"]
  },
  {
    id: "stylus",
    scopeName: "source.stylus",
    path: "stylus.tmLanguage.json",
    aliases: ["styl"]
  },
  {
    id: "svelte",
    scopeName: "source.svelte",
    path: "svelte.tmLanguage.json",
    embeddedLangs: ["javascript", "typescript", "coffee", "stylus", "sass", "css", "scss", "less", "postcss", "pug", "markdown"]
  },
  {
    id: "swift",
    scopeName: "source.swift",
    path: "swift.tmLanguage.json"
  },
  {
    id: "system-verilog",
    scopeName: "source.systemverilog",
    path: "system-verilog.tmLanguage.json"
  },
  {
    id: "tasl",
    scopeName: "source.tasl",
    path: "tasl.tmLanguage.json",
    samplePath: "tasl.sample"
  },
  {
    id: "tcl",
    scopeName: "source.tcl",
    path: "tcl.tmLanguage.json"
  },
  {
    id: "tex",
    scopeName: "text.tex",
    path: "tex.tmLanguage.json",
    embeddedLangs: ["r"]
  },
  {
    id: "toml",
    scopeName: "source.toml",
    path: "toml.tmLanguage.json"
  },
  {
    id: "tsx",
    scopeName: "source.tsx",
    path: "tsx.tmLanguage.json",
    samplePath: "tsx.sample"
  },
  {
    id: "turtle",
    scopeName: "source.turtle",
    path: "turtle.tmLanguage.json",
    samplePath: "turtle.sample"
  },
  {
    id: "twig",
    scopeName: "text.html.twig",
    path: "twig.tmLanguage.json",
    embeddedLangs: ["css", "javascript", "php", "python", "ruby"]
  },
  {
    id: "typescript",
    scopeName: "source.ts",
    path: "typescript.tmLanguage.json",
    aliases: ["ts"]
  },
  {
    id: "v",
    scopeName: "source.v",
    path: "v.tmLanguage.json",
    samplePath: "v.sample"
  },
  {
    id: "vb",
    scopeName: "source.asp.vb.net",
    path: "vb.tmLanguage.json",
    aliases: ["cmd"]
  },
  {
    id: "verilog",
    scopeName: "source.verilog",
    path: "verilog.tmLanguage.json"
  },
  {
    id: "vhdl",
    scopeName: "source.vhdl",
    path: "vhdl.tmLanguage.json"
  },
  {
    id: "viml",
    scopeName: "source.viml",
    path: "viml.tmLanguage.json",
    aliases: ["vim", "vimscript"]
  },
  {
    id: "vue-html",
    scopeName: "text.html.vue-html",
    path: "vue-html.tmLanguage.json",
    embeddedLangs: ["vue", "javascript"]
  },
  {
    id: "vue",
    scopeName: "source.vue",
    path: "vue.tmLanguage.json",
    embeddedLangs: ["html", "markdown", "pug", "stylus", "sass", "css", "scss", "less", "javascript", "typescript", "jsx", "tsx", "json", "jsonc", "json5", "yaml", "toml", "graphql"]
  },
  {
    id: "wasm",
    scopeName: "source.wat",
    path: "wasm.tmLanguage.json"
  },
  {
    id: "wenyan",
    scopeName: "source.wenyan",
    path: "wenyan.tmLanguage.json",
    aliases: ["文言"]
  },
  {
    id: "wgsl",
    scopeName: "source.wgsl",
    path: "wgsl.tmLanguage.json",
    samplePath: "wgsl.sample"
  },
  {
    id: "xml",
    scopeName: "text.xml",
    path: "xml.tmLanguage.json",
    embeddedLangs: ["java"]
  },
  {
    id: "xsl",
    scopeName: "text.xml.xsl",
    path: "xsl.tmLanguage.json",
    embeddedLangs: ["xml"]
  },
  {
    id: "yaml",
    scopeName: "source.yaml",
    path: "yaml.tmLanguage.json",
    aliases: ["yml"]
  },
  {
    id: "zenscript",
    scopeName: "source.zenscript",
    path: "zenscript.tmLanguage.json",
    samplePath: "zenscript.sample"
  }
];
var ke = /* @__PURE__ */ ((n) => (n[n.NotSet = -1] = "NotSet", n[n.None = 0] = "None", n[n.Italic = 1] = "Italic", n[n.Bold = 2] = "Bold", n[n.Underline = 4] = "Underline", n))(ke || {});
class ne {
  static toBinaryStr(e) {
    let t = e.toString(2);
    for (; t.length < 32; )
      t = "0" + t;
    return t;
  }
  static printMetadata(e) {
    let t = ne.getLanguageId(e), o = ne.getTokenType(e), r = ne.getFontStyle(e), s = ne.getForeground(e), a = ne.getBackground(e);
    console.log({
      languageId: t,
      tokenType: o,
      fontStyle: r,
      foreground: s,
      background: a
    });
  }
  static getLanguageId(e) {
    return (e & 255) >>> 0;
  }
  static getTokenType(e) {
    return (e & 768) >>> 8;
  }
  static getFontStyle(e) {
    return (e & 14336) >>> 11;
  }
  static getForeground(e) {
    return (e & 8372224) >>> 15;
  }
  static getBackground(e) {
    return (e & 4286578688) >>> 24;
  }
  static containsBalancedBrackets(e) {
    return (e & 1024) !== 0;
  }
  static set(e, t, o, r, s, a) {
    let c = ne.getLanguageId(e), l = ne.getTokenType(e), i = ne.getFontStyle(e), p = ne.getForeground(e), h = ne.getBackground(e), d = ne.containsBalancedBrackets(
      e
    ) ? 1 : 0;
    return t !== 0 && (c = t), o !== 0 && (l = o === 8 ? 0 : o), r !== -1 && (i = r), s !== 0 && (p = s), a !== 0 && (h = a), (c << 0 | l << 8 | i << 11 | d << 10 | p << 15 | h << 24) >>> 0;
  }
}
function l_e(n) {
  return n.endsWith("/") || n.endsWith("\\") ? n.slice(0, -1) : n;
}
function u_e(n) {
  return n.startsWith("./") ? n.slice(2) : n;
}
function Vo(n) {
  const e = n.split(/[\/\\]/g);
  return e.slice(0, e.length - 1);
}
function Wo(...n) {
  return n.map(l_e).map(u_e).join("/");
}
function p_e(n, e) {
  const t = /* @__PURE__ */ new Map();
  for (const o of n) {
    const r = e(o);
    t.has(r) ? t.get(r).push(o) : t.set(r, [o]);
  }
  return t;
}
function h_e(n, e = !1) {
  const t = n.length;
  let o = 0, r = "", s = 0, a = 16, c = 0, l = 0, i = 0, p = 0, h = 0;
  function d(w, C) {
    let y = 0, u = 0;
    for (; y < w || !C; ) {
      let g = n.charCodeAt(o);
      if (g >= 48 && g <= 57)
        u = u * 16 + g - 48;
      else if (g >= 65 && g <= 70)
        u = u * 16 + g - 65 + 10;
      else if (g >= 97 && g <= 102)
        u = u * 16 + g - 97 + 10;
      else
        break;
      o++, y++;
    }
    return y < w && (u = -1), u;
  }
  function f(w) {
    o = w, r = "", s = 0, a = 16, h = 0;
  }
  function m() {
    let w = o;
    if (n.charCodeAt(o) === 48)
      o++;
    else
      for (o++; o < n.length && Oe(n.charCodeAt(o)); )
        o++;
    if (o < n.length && n.charCodeAt(o) === 46)
      if (o++, o < n.length && Oe(n.charCodeAt(o)))
        for (o++; o < n.length && Oe(n.charCodeAt(o)); )
          o++;
      else
        return h = 3, n.substring(w, o);
    let C = o;
    if (o < n.length && (n.charCodeAt(o) === 69 || n.charCodeAt(o) === 101))
      if (o++, (o < n.length && n.charCodeAt(o) === 43 || n.charCodeAt(o) === 45) && o++, o < n.length && Oe(n.charCodeAt(o))) {
        for (o++; o < n.length && Oe(n.charCodeAt(o)); )
          o++;
        C = o;
      } else
        h = 3;
    return n.substring(w, C);
  }
  function L() {
    let w = "", C = o;
    for (; ; ) {
      if (o >= t) {
        w += n.substring(C, o), h = 2;
        break;
      }
      const y = n.charCodeAt(o);
      if (y === 34) {
        w += n.substring(C, o), o++;
        break;
      }
      if (y === 92) {
        if (w += n.substring(C, o), o++, o >= t) {
          h = 2;
          break;
        }
        switch (n.charCodeAt(o++)) {
          case 34:
            w += '"';
            break;
          case 92:
            w += "\\";
            break;
          case 47:
            w += "/";
            break;
          case 98:
            w += "\b";
            break;
          case 102:
            w += "\f";
            break;
          case 110:
            w += `
`;
            break;
          case 114:
            w += "\r";
            break;
          case 116:
            w += "	";
            break;
          case 117:
            const g = d(4, !0);
            g >= 0 ? w += String.fromCharCode(g) : h = 4;
            break;
          default:
            h = 5;
        }
        C = o;
        continue;
      }
      if (y >= 0 && y <= 31)
        if (We(y)) {
          w += n.substring(C, o), h = 2;
          break;
        } else
          h = 6;
      o++;
    }
    return w;
  }
  function S() {
    if (r = "", h = 0, s = o, l = c, p = i, o >= t)
      return s = t, a = 17;
    let w = n.charCodeAt(o);
    if (Bn(w)) {
      do
        o++, r += String.fromCharCode(w), w = n.charCodeAt(o);
      while (Bn(w));
      return a = 15;
    }
    if (We(w))
      return o++, r += String.fromCharCode(w), w === 13 && n.charCodeAt(o) === 10 && (o++, r += `
`), c++, i = o, a = 14;
    switch (w) {
      case 123:
        return o++, a = 1;
      case 125:
        return o++, a = 2;
      case 91:
        return o++, a = 3;
      case 93:
        return o++, a = 4;
      case 58:
        return o++, a = 6;
      case 44:
        return o++, a = 5;
      case 34:
        return o++, r = L(), a = 10;
      case 47:
        const C = o - 1;
        if (n.charCodeAt(o + 1) === 47) {
          for (o += 2; o < t && !We(n.charCodeAt(o)); )
            o++;
          return r = n.substring(C, o), a = 12;
        }
        if (n.charCodeAt(o + 1) === 42) {
          o += 2;
          const y = t - 1;
          let u = !1;
          for (; o < y; ) {
            const g = n.charCodeAt(o);
            if (g === 42 && n.charCodeAt(o + 1) === 47) {
              o += 2, u = !0;
              break;
            }
            o++, We(g) && (g === 13 && n.charCodeAt(o) === 10 && o++, c++, i = o);
          }
          return u || (o++, h = 1), r = n.substring(C, o), a = 13;
        }
        return r += String.fromCharCode(w), o++, a = 16;
      case 45:
        if (r += String.fromCharCode(w), o++, o === t || !Oe(n.charCodeAt(o)))
          return a = 16;
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
        return r += m(), a = 11;
      default:
        for (; o < t && b(w); )
          o++, w = n.charCodeAt(o);
        if (s !== o) {
          switch (r = n.substring(s, o), r) {
            case "true":
              return a = 8;
            case "false":
              return a = 9;
            case "null":
              return a = 7;
          }
          return a = 16;
        }
        return r += String.fromCharCode(w), o++, a = 16;
    }
  }
  function b(w) {
    if (Bn(w) || We(w))
      return !1;
    switch (w) {
      case 125:
      case 93:
      case 123:
      case 91:
      case 34:
      case 58:
      case 44:
      case 47:
        return !1;
    }
    return !0;
  }
  function k() {
    let w;
    do
      w = S();
    while (w >= 12 && w <= 15);
    return w;
  }
  return {
    setPosition: f,
    getPosition: () => o,
    scan: e ? k : S,
    getToken: () => a,
    getTokenValue: () => r,
    getTokenOffset: () => s,
    getTokenLength: () => o - s,
    getTokenStartLine: () => l,
    getTokenStartCharacter: () => s - p,
    getTokenError: () => h
  };
}
function Bn(n) {
  return n === 32 || n === 9;
}
function We(n) {
  return n === 10 || n === 13;
}
function Oe(n) {
  return n >= 48 && n <= 57;
}
var oo;
(function(n) {
  n[n.lineFeed = 10] = "lineFeed", n[n.carriageReturn = 13] = "carriageReturn", n[n.space = 32] = "space", n[n._0 = 48] = "_0", n[n._1 = 49] = "_1", n[n._2 = 50] = "_2", n[n._3 = 51] = "_3", n[n._4 = 52] = "_4", n[n._5 = 53] = "_5", n[n._6 = 54] = "_6", n[n._7 = 55] = "_7", n[n._8 = 56] = "_8", n[n._9 = 57] = "_9", n[n.a = 97] = "a", n[n.b = 98] = "b", n[n.c = 99] = "c", n[n.d = 100] = "d", n[n.e = 101] = "e", n[n.f = 102] = "f", n[n.g = 103] = "g", n[n.h = 104] = "h", n[n.i = 105] = "i", n[n.j = 106] = "j", n[n.k = 107] = "k", n[n.l = 108] = "l", n[n.m = 109] = "m", n[n.n = 110] = "n", n[n.o = 111] = "o", n[n.p = 112] = "p", n[n.q = 113] = "q", n[n.r = 114] = "r", n[n.s = 115] = "s", n[n.t = 116] = "t", n[n.u = 117] = "u", n[n.v = 118] = "v", n[n.w = 119] = "w", n[n.x = 120] = "x", n[n.y = 121] = "y", n[n.z = 122] = "z", n[n.A = 65] = "A", n[n.B = 66] = "B", n[n.C = 67] = "C", n[n.D = 68] = "D", n[n.E = 69] = "E", n[n.F = 70] = "F", n[n.G = 71] = "G", n[n.H = 72] = "H", n[n.I = 73] = "I", n[n.J = 74] = "J", n[n.K = 75] = "K", n[n.L = 76] = "L", n[n.M = 77] = "M", n[n.N = 78] = "N", n[n.O = 79] = "O", n[n.P = 80] = "P", n[n.Q = 81] = "Q", n[n.R = 82] = "R", n[n.S = 83] = "S", n[n.T = 84] = "T", n[n.U = 85] = "U", n[n.V = 86] = "V", n[n.W = 87] = "W", n[n.X = 88] = "X", n[n.Y = 89] = "Y", n[n.Z = 90] = "Z", n[n.asterisk = 42] = "asterisk", n[n.backslash = 92] = "backslash", n[n.closeBrace = 125] = "closeBrace", n[n.closeBracket = 93] = "closeBracket", n[n.colon = 58] = "colon", n[n.comma = 44] = "comma", n[n.dot = 46] = "dot", n[n.doubleQuote = 34] = "doubleQuote", n[n.minus = 45] = "minus", n[n.openBrace = 123] = "openBrace", n[n.openBracket = 91] = "openBracket", n[n.plus = 43] = "plus", n[n.slash = 47] = "slash", n[n.formFeed = 12] = "formFeed", n[n.tab = 9] = "tab";
})(oo || (oo = {}));
var un;
(function(n) {
  n.DEFAULT = {
    allowTrailingComma: !1
  };
})(un || (un = {}));
function d_e(n, e = [], t = un.DEFAULT) {
  let o = null, r = [];
  const s = [];
  function a(l) {
    Array.isArray(r) ? r.push(l) : o !== null && (r[o] = l);
  }
  return f_e(n, {
    onObjectBegin: () => {
      const l = {};
      a(l), s.push(r), r = l, o = null;
    },
    onObjectProperty: (l) => {
      o = l;
    },
    onObjectEnd: () => {
      r = s.pop();
    },
    onArrayBegin: () => {
      const l = [];
      a(l), s.push(r), r = l, o = null;
    },
    onArrayEnd: () => {
      r = s.pop();
    },
    onLiteralValue: a,
    onError: (l, i, p) => {
      e.push({ error: l, offset: i, length: p });
    }
  }, t), r[0];
}
function f_e(n, e, t = un.DEFAULT) {
  const o = h_e(n, !1), r = [];
  function s(E) {
    return E ? () => E(o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter()) : () => !0;
  }
  function a(E) {
    return E ? () => E(o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter(), () => r.slice()) : () => !0;
  }
  function c(E) {
    return E ? (D) => E(D, o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter()) : () => !0;
  }
  function l(E) {
    return E ? (D) => E(D, o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter(), () => r.slice()) : () => !0;
  }
  const i = a(e.onObjectBegin), p = l(e.onObjectProperty), h = s(e.onObjectEnd), d = a(e.onArrayBegin), f = s(e.onArrayEnd), m = l(e.onLiteralValue), L = c(e.onSeparator), S = s(e.onComment), b = c(e.onError), k = t && t.disallowComments, w = t && t.allowTrailingComma;
  function C() {
    for (; ; ) {
      const E = o.scan();
      switch (o.getTokenError()) {
        case 4:
          y(
            14
            /* ParseErrorCode.InvalidUnicode */
          );
          break;
        case 5:
          y(
            15
            /* ParseErrorCode.InvalidEscapeCharacter */
          );
          break;
        case 3:
          y(
            13
            /* ParseErrorCode.UnexpectedEndOfNumber */
          );
          break;
        case 1:
          k || y(
            11
            /* ParseErrorCode.UnexpectedEndOfComment */
          );
          break;
        case 2:
          y(
            12
            /* ParseErrorCode.UnexpectedEndOfString */
          );
          break;
        case 6:
          y(
            16
            /* ParseErrorCode.InvalidCharacter */
          );
          break;
      }
      switch (E) {
        case 12:
        case 13:
          k ? y(
            10
            /* ParseErrorCode.InvalidCommentToken */
          ) : S();
          break;
        case 16:
          y(
            1
            /* ParseErrorCode.InvalidSymbol */
          );
          break;
        case 15:
        case 14:
          break;
        default:
          return E;
      }
    }
  }
  function y(E, D = [], T = []) {
    if (b(E), D.length + T.length > 0) {
      let q = o.getToken();
      for (; q !== 17; ) {
        if (D.indexOf(q) !== -1) {
          C();
          break;
        } else if (T.indexOf(q) !== -1)
          break;
        q = C();
      }
    }
  }
  function u(E) {
    const D = o.getTokenValue();
    return E ? m(D) : (p(D), r.push(D)), C(), !0;
  }
  function g() {
    switch (o.getToken()) {
      case 11:
        const E = o.getTokenValue();
        let D = Number(E);
        isNaN(D) && (y(
          2
          /* ParseErrorCode.InvalidNumberFormat */
        ), D = 0), m(D);
        break;
      case 7:
        m(null);
        break;
      case 8:
        m(!0);
        break;
      case 9:
        m(!1);
        break;
      default:
        return !1;
    }
    return C(), !0;
  }
  function x() {
    return o.getToken() !== 10 ? (y(3, [], [
      2,
      5
      /* SyntaxKind.CommaToken */
    ]), !1) : (u(!1), o.getToken() === 6 ? (L(":"), C(), A() || y(4, [], [
      2,
      5
      /* SyntaxKind.CommaToken */
    ])) : y(5, [], [
      2,
      5
      /* SyntaxKind.CommaToken */
    ]), r.pop(), !0);
  }
  function _() {
    i(), C();
    let E = !1;
    for (; o.getToken() !== 2 && o.getToken() !== 17; ) {
      if (o.getToken() === 5) {
        if (E || y(4, [], []), L(","), C(), o.getToken() === 2 && w)
          break;
      } else
        E && y(6, [], []);
      x() || y(4, [], [
        2,
        5
        /* SyntaxKind.CommaToken */
      ]), E = !0;
    }
    return h(), o.getToken() !== 2 ? y(7, [
      2
      /* SyntaxKind.CloseBraceToken */
    ], []) : C(), !0;
  }
  function v() {
    d(), C();
    let E = !0, D = !1;
    for (; o.getToken() !== 4 && o.getToken() !== 17; ) {
      if (o.getToken() === 5) {
        if (D || y(4, [], []), L(","), C(), o.getToken() === 4 && w)
          break;
      } else
        D && y(6, [], []);
      E ? (r.push(0), E = !1) : r[r.length - 1]++, A() || y(4, [], [
        4,
        5
        /* SyntaxKind.CommaToken */
      ]), D = !0;
    }
    return f(), E || r.pop(), o.getToken() !== 4 ? y(8, [
      4
      /* SyntaxKind.CloseBracketToken */
    ], []) : C(), !0;
  }
  function A() {
    switch (o.getToken()) {
      case 3:
        return v();
      case 1:
        return _();
      case 10:
        return u(!0);
      default:
        return g();
    }
  }
  return C(), o.getToken() === 17 ? t.allowEmptyContent ? !0 : (y(4, [], []), !1) : A() ? (o.getToken() !== 17 && y(9, [], []), !0) : (y(4, [], []), !1);
}
var so;
(function(n) {
  n[n.None = 0] = "None", n[n.UnexpectedEndOfComment = 1] = "UnexpectedEndOfComment", n[n.UnexpectedEndOfString = 2] = "UnexpectedEndOfString", n[n.UnexpectedEndOfNumber = 3] = "UnexpectedEndOfNumber", n[n.InvalidUnicode = 4] = "InvalidUnicode", n[n.InvalidEscapeCharacter = 5] = "InvalidEscapeCharacter", n[n.InvalidCharacter = 6] = "InvalidCharacter";
})(so || (so = {}));
var ro;
(function(n) {
  n[n.OpenBraceToken = 1] = "OpenBraceToken", n[n.CloseBraceToken = 2] = "CloseBraceToken", n[n.OpenBracketToken = 3] = "OpenBracketToken", n[n.CloseBracketToken = 4] = "CloseBracketToken", n[n.CommaToken = 5] = "CommaToken", n[n.ColonToken = 6] = "ColonToken", n[n.NullKeyword = 7] = "NullKeyword", n[n.TrueKeyword = 8] = "TrueKeyword", n[n.FalseKeyword = 9] = "FalseKeyword", n[n.StringLiteral = 10] = "StringLiteral", n[n.NumericLiteral = 11] = "NumericLiteral", n[n.LineCommentTrivia = 12] = "LineCommentTrivia", n[n.BlockCommentTrivia = 13] = "BlockCommentTrivia", n[n.LineBreakTrivia = 14] = "LineBreakTrivia", n[n.Trivia = 15] = "Trivia", n[n.Unknown = 16] = "Unknown", n[n.EOF = 17] = "EOF";
})(ro || (ro = {}));
const m_e = d_e;
var co;
(function(n) {
  n[n.InvalidSymbol = 1] = "InvalidSymbol", n[n.InvalidNumberFormat = 2] = "InvalidNumberFormat", n[n.PropertyNameExpected = 3] = "PropertyNameExpected", n[n.ValueExpected = 4] = "ValueExpected", n[n.ColonExpected = 5] = "ColonExpected", n[n.CommaExpected = 6] = "CommaExpected", n[n.CloseBraceExpected = 7] = "CloseBraceExpected", n[n.CloseBracketExpected = 8] = "CloseBracketExpected", n[n.EndOfFileExpected = 9] = "EndOfFileExpected", n[n.InvalidCommentToken = 10] = "InvalidCommentToken", n[n.UnexpectedEndOfComment = 11] = "UnexpectedEndOfComment", n[n.UnexpectedEndOfString = 12] = "UnexpectedEndOfString", n[n.UnexpectedEndOfNumber = 13] = "UnexpectedEndOfNumber", n[n.InvalidUnicode = 14] = "InvalidUnicode", n[n.InvalidEscapeCharacter = 15] = "InvalidEscapeCharacter", n[n.InvalidCharacter = 16] = "InvalidCharacter";
})(co || (co = {}));
const g_e = typeof self < "u" && typeof self.WorkerGlobalScope < "u", __e = "process" in globalThis && typeof process < "u" && typeof process.release < "u" && process.release.name === "node", pt = g_e || !__e;
let b_e = "";
const k_e = "dist/";
let $n = null;
async function y_e(n) {
  if (!$n) {
    let e;
    if (pt)
      e = on.loadWASM({
        data: await fetch(Zo(Wo(...Vo(n), "onig.wasm")))
      });
    else {
      const o = require("path").join(require.resolve("vscode-oniguruma"), "../onig.wasm"), s = require("fs").readFileSync(o).buffer;
      e = on.loadWASM(s);
    }
    $n = e.then(() => ({
      createOnigScanner(t) {
        return on.createOnigScanner(t);
      },
      createOnigString(t) {
        return on.createOnigString(t);
      }
    }));
  }
  return $n;
}
function Zo(n) {
  if (pt)
    return `${b_e}${n}`;
  {
    const e = require("path");
    return e.isAbsolute(n) ? n : e.resolve(__dirname, "..", n);
  }
}
async function w_e(n) {
  const e = Zo(n);
  return pt ? await fetch(e).then((t) => t.text()) : await require("fs").promises.readFile(e, "utf-8");
}
async function Jo(n) {
  const e = [], t = m_e(await w_e(n), e, {
    allowTrailingComma: !0
  });
  if (e.length)
    throw e[0];
  return t;
}
async function Qo(n) {
  let e = await Jo(n);
  const t = Yo(e);
  if (t.include) {
    const o = await Qo(Wo(...Vo(n), t.include));
    o.settings && (t.settings = o.settings.concat(t.settings)), o.bg && !t.bg && (t.bg = o.bg), o.colors && (t.colors = { ...o.colors, ...t.colors }), delete t.include;
  }
  return t;
}
async function v_e(n) {
  return await Jo(n);
}
function x_e(n) {
  n.settings || (n.settings = []), !(n.settings[0] && n.settings[0].settings && !n.settings[0].scope) && n.settings.unshift({
    settings: {
      foreground: n.fg,
      background: n.bg
    }
  });
}
function Yo(n) {
  const e = n.type || "dark", t = {
    name: n.name,
    type: e,
    ...n,
    ...A_e(n)
  };
  return n.include && (t.include = n.include), n.tokenColors && (t.settings = n.tokenColors, delete t.tokenColors), x_e(t), t;
}
const ao = { light: "#333333", dark: "#bbbbbb" }, io = { light: "#fffffe", dark: "#1e1e1e" };
function A_e(n) {
  var s, a, c, l;
  let e, t, o = n.settings ? n.settings : n.tokenColors;
  const r = o ? o.find((i) => !i.name && !i.scope) : void 0;
  return (s = r == null ? void 0 : r.settings) != null && s.foreground && (e = r.settings.foreground), (a = r == null ? void 0 : r.settings) != null && a.background && (t = r.settings.background), !e && ((c = n == null ? void 0 : n.colors) != null && c["editor.foreground"]) && (e = n.colors["editor.foreground"]), !t && ((l = n == null ? void 0 : n.colors) != null && l["editor.background"]) && (t = n.colors["editor.background"]), e || (e = n.type === "light" ? ao.light : ao.dark), t || (t = n.type === "light" ? io.light : io.dark), {
    fg: e,
    bg: t
  };
}
class S_e {
  constructor(e, t) {
    this.languagesPath = "languages/", this.languageMap = {}, this.scopeToLangMap = {}, this._onigLibPromise = e, this._onigLibName = t;
  }
  get onigLib() {
    return this._onigLibPromise;
  }
  getOnigLibName() {
    return this._onigLibName;
  }
  getLangRegistration(e) {
    return this.languageMap[e];
  }
  async loadGrammar(e) {
    const t = this.scopeToLangMap[e];
    if (!t)
      return null;
    if (t.grammar)
      return t.grammar;
    const o = await v_e(
      An.includes(t) ? `${this.languagesPath}${t.path}` : t.path
    );
    return t.grammar = o, o;
  }
  addLanguage(e) {
    this.languageMap[e.id] = e, e.aliases && e.aliases.forEach((t) => {
      this.languageMap[t] = e;
    }), this.scopeToLangMap[e.scopeName] = e;
  }
}
function L_e(n, e, t, o, r) {
  let s = t.split(/\r\n|\r|\n/), a = Ho.INITIAL, c = [], l = [];
  for (let i = 0, p = s.length; i < p; i++) {
    let h = s[i];
    if (h === "") {
      c = [], l.push([]);
      continue;
    }
    let d, f, m;
    r.includeExplanation && (d = o.tokenizeLine(h, a), f = d.tokens, m = 0);
    let L = o.tokenizeLine2(h, a), S = L.tokens.length / 2;
    for (let b = 0; b < S; b++) {
      let k = L.tokens[2 * b], w = b + 1 < S ? L.tokens[2 * b + 2] : h.length;
      if (k === w)
        continue;
      let C = L.tokens[2 * b + 1], y = ne.getForeground(C), u = e[y], g = ne.getFontStyle(C), x = [];
      if (r.includeExplanation) {
        let _ = 0;
        for (; k + _ < w; ) {
          let v = f[m], A = h.substring(
            v.startIndex,
            v.endIndex
          );
          _ += A.length, x.push({
            content: A,
            scopes: C_e(n, v.scopes)
          }), m++;
        }
      }
      c.push({
        content: h.substring(k, w),
        color: u,
        fontStyle: g,
        explanation: x
      });
    }
    l.push(c), c = [], a = L.ruleStack;
  }
  return l;
}
function C_e(n, e) {
  let t = [];
  for (let o = 0, r = e.length; o < r; o++) {
    let s = e.slice(0, o), a = e[o];
    t[o] = {
      scopeName: a,
      themeMatches: T_e(n, a, s)
    };
  }
  return t;
}
function lo(n, e) {
  let t = n + ".";
  return n === e || e.substring(0, t.length) === t;
}
function E_e(n, e, t, o) {
  if (!lo(n, t))
    return !1;
  let r = e.length - 1, s = o.length - 1;
  for (; r >= 0 && s >= 0; )
    lo(e[r], o[s]) && r--, s--;
  return r === -1;
}
function T_e(n, e, t) {
  let o = [], r = 0;
  for (let s = 0, a = n.settings.length; s < a; s++) {
    let c = n.settings[s], l;
    if (typeof c.scope == "string")
      l = c.scope.split(/,/).map((i) => i.trim());
    else if (Array.isArray(c.scope))
      l = c.scope;
    else
      continue;
    for (let i = 0, p = l.length; i < p; i++) {
      let d = l[i].split(/ /), f = d[d.length - 1], m = d.slice(0, d.length - 1);
      E_e(f, m, e, t) && (o[r++] = c, i = p);
    }
  }
  return o;
}
var De = [
  "black",
  "red",
  "green",
  "yellow",
  "blue",
  "magenta",
  "cyan",
  "white",
  "brightBlack",
  "brightRed",
  "brightGreen",
  "brightYellow",
  "brightBlue",
  "brightMagenta",
  "brightCyan",
  "brightWhite"
], zn = {
  1: "bold",
  2: "dim",
  3: "italic",
  4: "underline",
  7: "reverse",
  9: "strikethrough"
};
function D_e(n, e) {
  const t = n.indexOf("\x1B", e);
  if (t !== -1 && n[t + 1] === "[") {
    const o = n.indexOf("m", t);
    return {
      sequence: n.substring(t + 2, o).split(";"),
      startPosition: t,
      position: o + 1
    };
  }
  return {
    position: n.length
  };
}
function uo(n) {
  const e = n.shift();
  if (e === "2") {
    const t = n.splice(0, 3).map((o) => Number.parseInt(o));
    return t.length !== 3 || t.some((o) => Number.isNaN(o)) ? void 0 : {
      type: "rgb",
      rgb: t
    };
  } else if (e === "5") {
    const t = n.shift();
    if (t)
      return { type: "table", index: Number(t) };
  }
}
function q_e(n) {
  const e = [];
  for (; n.length > 0; ) {
    const t = n.shift();
    if (!t)
      continue;
    const o = Number.parseInt(t);
    if (!Number.isNaN(o))
      if (o === 0)
        e.push({ type: "resetAll" });
      else if (o <= 9)
        zn[o] && e.push({
          type: "setDecoration",
          value: zn[o]
        });
      else if (o <= 29) {
        const r = zn[o - 20];
        r && e.push({
          type: "resetDecoration",
          value: r
        });
      } else if (o <= 37)
        e.push({
          type: "setForegroundColor",
          value: { type: "named", name: De[o - 30] }
        });
      else if (o === 38) {
        const r = uo(n);
        r && e.push({
          type: "setForegroundColor",
          value: r
        });
      } else if (o === 39)
        e.push({
          type: "resetForegroundColor"
        });
      else if (o <= 47)
        e.push({
          type: "setBackgroundColor",
          value: { type: "named", name: De[o - 40] }
        });
      else if (o === 48) {
        const r = uo(n);
        r && e.push({
          type: "setBackgroundColor",
          value: r
        });
      } else
        o === 49 ? e.push({
          type: "resetBackgroundColor"
        }) : o >= 90 && o <= 97 ? e.push({
          type: "setForegroundColor",
          value: { type: "named", name: De[o - 90 + 8] }
        }) : o >= 100 && o <= 107 && e.push({
          type: "setBackgroundColor",
          value: { type: "named", name: De[o - 100 + 8] }
        });
  }
  return e;
}
function j_e() {
  let n = null, e = null, t = /* @__PURE__ */ new Set();
  return {
    parse(o) {
      const r = [];
      let s = 0;
      do {
        const a = D_e(o, s), c = a.sequence ? o.substring(s, a.startPosition) : o.substring(s);
        if (c.length > 0 && r.push({
          value: c,
          foreground: n,
          background: e,
          decorations: new Set(t)
        }), a.sequence) {
          const l = q_e(a.sequence);
          for (const i of l)
            i.type === "resetAll" ? (n = null, e = null, t.clear()) : i.type === "resetForegroundColor" ? n = null : i.type === "resetBackgroundColor" ? e = null : i.type === "resetDecoration" && t.delete(i.value);
          for (const i of l)
            i.type === "setForegroundColor" ? n = i.value : i.type === "setBackgroundColor" ? e = i.value : i.type === "setDecoration" && t.add(i.value);
        }
        s = a.position;
      } while (s < o.length);
      return r;
    }
  };
}
var R_e = {
  black: "#000000",
  red: "#bb0000",
  green: "#00bb00",
  yellow: "#bbbb00",
  blue: "#0000bb",
  magenta: "#ff00ff",
  cyan: "#00bbbb",
  white: "#eeeeee",
  brightBlack: "#555555",
  brightRed: "#ff5555",
  brightGreen: "#00ff00",
  brightYellow: "#ffff55",
  brightBlue: "#5555ff",
  brightMagenta: "#ff55ff",
  brightCyan: "#55ffff",
  brightWhite: "#ffffff"
};
function N_e(n = R_e) {
  function e(c) {
    return n[c];
  }
  function t(c) {
    return `#${c.map((l) => Math.max(0, Math.min(l, 255)).toString(16).padStart(2, "0")).join("")}`;
  }
  let o;
  function r() {
    if (o)
      return o;
    o = [];
    for (let i = 0; i < De.length; i++)
      o.push(e(De[i]));
    let c = [0, 95, 135, 175, 215, 255];
    for (let i = 0; i < 6; i++)
      for (let p = 0; p < 6; p++)
        for (let h = 0; h < 6; h++)
          o.push(t([c[i], c[p], c[h]]));
    let l = 8;
    for (let i = 0; i < 24; i++, l += 10)
      o.push(t([l, l, l]));
    return o;
  }
  function s(c) {
    return r()[c];
  }
  function a(c) {
    switch (c.type) {
      case "named":
        return e(c.name);
      case "rgb":
        return t(c.rgb);
      case "table":
        return s(c.index);
    }
  }
  return {
    value: a
  };
}
function P_e(n, e) {
  const t = e.split(/\r?\n/), o = N_e(
    Object.fromEntries(
      De.map((s) => [
        s,
        n.colors[`terminal.ansi${s[0].toUpperCase()}${s.substring(1)}`]
      ])
    )
  ), r = j_e();
  return t.map(
    (s) => r.parse(s).map((a) => {
      let c;
      a.decorations.has("reverse") ? c = a.background ? o.value(a.background) : n.bg : c = a.foreground ? o.value(a.foreground) : n.fg, a.decorations.has("dim") && (c = I_e(c));
      let l = ke.None;
      return a.decorations.has("bold") && (l |= ke.Bold), a.decorations.has("italic") && (l |= ke.Italic), a.decorations.has("underline") && (l |= ke.Underline), {
        content: a.value,
        color: c,
        fontStyle: l
      };
    })
  );
}
function I_e(n) {
  const e = n.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);
  if (e)
    if (e[3]) {
      const t = Math.round(Number.parseInt(e[3], 16) / 2).toString(16).padStart(2, "0");
      return `#${e[1]}${e[2]}${t}`;
    } else
      return e[2] ? `#${e[1]}${e[2]}80` : `#${Array.from(e[1]).map((t) => `${t}${t}`).join("")}80`;
  return n;
}
const O_e = {
  pre({ className: n, style: e, children: t }) {
    return `<pre class="${n}" style="${e}" tabindex="0">${t}</pre>`;
  },
  code({ children: n }) {
    return `<code>${n}</code>`;
  },
  line({ className: n, children: e }) {
    return `<span class="${n}">${e}</span>`;
  },
  token({ style: n, children: e }) {
    return `<span style="${n}">${e}</span>`;
  }
};
function po(n, e = {}) {
  const t = e.bg || "#fff", o = p_e(e.lineOptions ?? [], (a) => a.line), r = e.elements || {};
  function s(a = "", c = {}, l) {
    const i = r[a] || O_e[a];
    return i ? (l = l.filter(Boolean), i({
      ...c,
      children: a === "code" ? l.join(`
`) : l.join("")
    })) : "";
  }
  return s(
    "pre",
    { className: "shiki " + (e.themeName || ""), style: `background-color: ${t}` },
    [
      e.langId ? `<div class="language-id">${e.langId}</div>` : "",
      s(
        "code",
        {},
        n.map((a, c) => {
          const l = c + 1, i = o.get(l) ?? [], p = B_e(i).join(" ");
          return s(
            "line",
            {
              className: p,
              lines: n,
              line: a,
              index: c
            },
            a.map((h, d) => {
              const f = [`color: ${h.color || e.fg}`];
              return h.fontStyle & ke.Italic && f.push("font-style: italic"), h.fontStyle & ke.Bold && f.push("font-weight: bold"), h.fontStyle & ke.Underline && f.push("text-decoration: underline"), s(
                "token",
                {
                  style: f.join("; "),
                  tokens: a,
                  token: h,
                  index: d
                },
                [M_e(h.content)]
              );
            })
          );
        })
      )
    ]
  );
}
const F_e = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
function M_e(n) {
  return n.replace(/[&<>"']/g, (e) => F_e[e]);
}
function B_e(n) {
  const e = /* @__PURE__ */ new Set(["line"]);
  for (const t of n)
    for (const o of t.classes ?? [])
      e.add(o);
  return Array.from(e);
}
class $_e extends Ho.Registry {
  constructor(e) {
    super(e), this._resolver = e, this.themesPath = "themes/", this._resolvedThemes = {}, this._resolvedGrammars = {}, this._langGraph = /* @__PURE__ */ new Map(), this._langMap = An.reduce((t, o) => (t[o.id] = o, t), {});
  }
  getTheme(e) {
    return typeof e == "string" ? this._resolvedThemes[e] : e;
  }
  async loadTheme(e) {
    return typeof e == "string" ? (this._resolvedThemes[e] || (this._resolvedThemes[e] = await Qo(`${this.themesPath}${e}.json`)), this._resolvedThemes[e]) : (e = Yo(e), e.name && (this._resolvedThemes[e.name] = e), e);
  }
  async loadThemes(e) {
    return await Promise.all(e.map((t) => this.loadTheme(t)));
  }
  getLoadedThemes() {
    return Object.keys(this._resolvedThemes);
  }
  getGrammar(e) {
    return this._resolvedGrammars[e];
  }
  async loadLanguage(e) {
    var s;
    const o = {
      embeddedLanguages: (s = e.embeddedLangs) == null ? void 0 : s.reduce(async (a, c, l) => {
        if (!this.getLoadedLanguages().includes(c) && this._resolver.getLangRegistration(c))
          return await this._resolver.loadGrammar(this._resolver.getLangRegistration(c).scopeName), a[this._resolver.getLangRegistration(c).scopeName] = l + 2, a;
      }, {}),
      balancedBracketSelectors: e.balancedBracketSelectors || ["*"],
      unbalancedBracketSelectors: e.unbalancedBracketSelectors || []
    }, r = await this.loadGrammarWithConfiguration(e.scopeName, 1, o);
    this._resolvedGrammars[e.id] = r, e.aliases && e.aliases.forEach((a) => {
      this._resolvedGrammars[a] = r;
    });
  }
  async loadLanguages(e) {
    for (const o of e)
      this.resolveEmbeddedLanguages(o);
    const t = Array.from(this._langGraph.values());
    for (const o of t)
      this._resolver.addLanguage(o);
    for (const o of t)
      await this.loadLanguage(o);
  }
  getLoadedLanguages() {
    return Object.keys(this._resolvedGrammars);
  }
  resolveEmbeddedLanguages(e) {
    if (this._langGraph.has(e.id) || this._langGraph.set(e.id, e), e.embeddedLangs)
      for (const t of e.embeddedLangs)
        this._langGraph.set(t, this._langMap[t]);
  }
}
function Xo(n) {
  return typeof n == "string" ? An.find((e) => {
    var t;
    return e.id === n || ((t = e.aliases) == null ? void 0 : t.includes(n));
  }) : n;
}
function z_e(n) {
  var r;
  let e = An, t = n.themes || [], o = (r = n.paths) != null && r.wasm ? n.paths.wasm.endsWith("/") ? n.paths.wasm : n.paths.wasm + "/" : k_e;
  return n.langs && (e = n.langs.map(Xo)), n.theme && t.unshift(n.theme), t.length || (t = ["nord"]), { _languages: e, _themes: t, _wasmPath: o };
}
async function G_e(n) {
  var x, _;
  const { _languages: e, _themes: t, _wasmPath: o } = z_e(n), r = new S_e(y_e(o), "vscode-oniguruma"), s = new $_e(r);
  (x = n.paths) != null && x.themes && (s.themesPath = n.paths.themes.endsWith("/") ? n.paths.themes : n.paths.themes + "/"), (_ = n.paths) != null && _.languages && (r.languagesPath = n.paths.languages.endsWith("/") ? n.paths.languages : n.paths.languages + "/");
  const c = (await s.loadThemes(t))[0];
  let l;
  await s.loadLanguages(e);
  let i = {
    "#000001": "var(--shiki-color-text)",
    "#000002": "var(--shiki-color-background)",
    "#000004": "var(--shiki-token-constant)",
    "#000005": "var(--shiki-token-string)",
    "#000006": "var(--shiki-token-comment)",
    "#000007": "var(--shiki-token-keyword)",
    "#000008": "var(--shiki-token-parameter)",
    "#000009": "var(--shiki-token-function)",
    "#000010": "var(--shiki-token-string-expression)",
    "#000011": "var(--shiki-token-punctuation)",
    "#000012": "var(--shiki-token-link)"
  };
  function p(v) {
    i = v;
  }
  function h(v, A) {
    v.bg = i[v.bg] || v.bg, v.fg = i[v.fg] || v.fg, A.forEach((E, D) => {
      A[D] = i[E] || E;
    });
  }
  function d(v) {
    const A = v ? s.getTheme(v) : c;
    if (!A)
      throw Error(`No theme registration for ${v}`);
    (!l || l.name !== A.name) && (s.setTheme(A), l = A);
    const E = s.getColorMap();
    return A.type === "css" && h(A, E), { _theme: A, _colorMap: E };
  }
  function f(v) {
    const A = s.getGrammar(v);
    if (!A)
      throw Error(`No language registration for ${v}`);
    return { _grammar: A };
  }
  function m(v, A = "text", E, D = { includeExplanation: !0 }) {
    if (U_e(A))
      return [...v.split(/\r\n|\r|\n/).map((M) => [{ content: M }])];
    const { _grammar: T } = f(A), { _theme: q, _colorMap: R } = d(E);
    return L_e(q, R, v, T, D);
  }
  function L(v, A) {
    const { _theme: E } = d(A);
    return P_e(E, v);
  }
  function S(v, A = "text", E) {
    let D;
    typeof A == "object" ? D = A : D = {
      lang: A,
      theme: E
    };
    const T = m(v, D.lang, D.theme, {
      includeExplanation: !1
    }), { _theme: q } = d(D.theme);
    return po(T, {
      fg: q.fg,
      bg: q.bg,
      lineOptions: D == null ? void 0 : D.lineOptions,
      themeName: q.name
    });
  }
  function b(v, A) {
    const E = L(v, A == null ? void 0 : A.theme), { _theme: D } = d(A == null ? void 0 : A.theme);
    return po(E, {
      fg: D.fg,
      bg: D.bg,
      lineOptions: A == null ? void 0 : A.lineOptions,
      themeName: D.name
    });
  }
  async function k(v) {
    await s.loadTheme(v);
  }
  async function w(v) {
    const A = Xo(v);
    r.addLanguage(A), await s.loadLanguage(A);
  }
  function C() {
    return s.getLoadedThemes();
  }
  function y() {
    return s.getLoadedLanguages();
  }
  function u(v) {
    const { _theme: A } = d(v);
    return A.bg;
  }
  function g(v) {
    const { _theme: A } = d(v);
    return A.fg;
  }
  return {
    codeToThemedTokens: m,
    codeToHtml: S,
    ansiToThemedTokens: L,
    ansiToHtml: b,
    getTheme: (v) => d(v)._theme,
    loadTheme: k,
    loadLanguage: w,
    getBackgroundColor: u,
    getForegroundColor: g,
    getLoadedThemes: C,
    getLoadedLanguages: y,
    setColorReplacements: p
  };
}
function U_e(n) {
  return !n || ["plaintext", "txt", "text"].includes(n);
}
async function H_e(n = {}) {
  const e = await G_e(n), t = n.processors ?? [];
  return {
    ...e,
    codeToHtml: (o, r) => {
      const s = typeof r == "object" ? r.lang : r, a = typeof r == "object" ? r.lineOptions ?? [] : [], c = typeof r == "object" ? r.theme : void 0, { code: l, lineOptions: i } = a_e(t, o, s), p = e.codeToHtml(l, {
        lang: s,
        theme: c,
        lineOptions: [
          ...i,
          ...a
        ]
      });
      return i_e(t, p, s);
    }
  };
}
const V_e = Yge("abcdefghijklmnopqrstuvwxyz", 10), W_e = (n) => {
  n = n.replace(/^(?:\[.*?\])?.*?([\d,-]+).*/, "$1").trim();
  const e = [];
  return n ? (n.split(",").map((t) => t.split("-").map((o) => parseInt(o, 10))).forEach(([t, o]) => {
    t && o ? e.push(...Array.from({ length: o - t + 1 }, (r, s) => t + s)) : e.push(t);
  }), e.map((t) => ({
    line: t,
    classes: ["highlighted"]
  }))) : [];
}, Z_e = {
  name: "error-level",
  handler: xn({
    error: ["highlighted", "error"],
    warning: ["highlighted", "warning"]
  })
};
async function J_e(n = "material-theme-palenight", e = [], t = "", o = console) {
  const r = typeof n == "string" || "name" in n, s = (L) => typeof L == "string" ? L : L.name, a = [
    r_e(),
    c_e({ hasHighlightClass: "highlighted" }),
    s_e(),
    Z_e
  ], c = await H_e({
    themes: r ? [n] : [n.dark, n.light],
    // something wrong with shiki, cannot dynamic load css
    langs: ["css", ...e],
    processors: a
  }), l = async (L) => {
    L && !c.getLoadedLanguages().includes(L) && await c.loadLanguage(L);
  };
  await l(t);
  const i = /<pre[^>]*(style=".*?")/, p = /^<pre(.*?)>/, h = /-vue$/, d = /:(no-)?line-numbers$/, f = /\{\{.*?\}\}/g;
  return { plugin: (L, S, b) => {
    const k = h.test(S) ? "" : "v-pre";
    S = S.replace(d, "").replace(h, "").toLowerCase() || t, S && !c.getLoadedLanguages().includes(S) && S !== "ansi" && S !== "txt" && o.warn(
      // c.yellow(
      `
The language '${S}' is not loaded, falling back to '${t || "txt"}' for syntax highlighting.`
      // )
    );
    const w = W_e(b), C = (E) => E.replace(p, (D, T) => `<pre ${k}${T.replace(' tabindex="0"', "")}>`).replace(i, (D, T) => D.replace(T, "")), y = /* @__PURE__ */ new Map(), u = (E) => k ? E : E.replace(f, (D) => {
      let T = y.get(D);
      return T || (T = V_e(), y.set(D, T)), T;
    }), g = (E) => (y.forEach((D, T) => {
      E = E.replace(new RegExp(D, "gi"), T);
    }), E), x = (E) => E.replace(/(<span class="line highlighted">)(<\/span>)/g, "$1<wbr>$2");
    L = u(L);
    const _ = (E) => {
      let D;
      try {
        D = S === "ansi" ? c.ansiToHtml(L, {
          lineOptions: w,
          theme: s(E)
        }) : c.codeToHtml(L, {
          lang: S,
          lineOptions: w,
          theme: s(E)
        });
      } catch {
        D = c.ansiToHtml(L, {
          lineOptions: w,
          theme: s(E)
        });
      }
      return x(C(g(D)));
    };
    if (r)
      return _(n);
    const v = Qe(_(n.dark), "vp-code-dark", "pre"), A = Qe(_(n.light), "vp-code-light", "pre");
    return v + A;
  }, highlighter: c, loadLang: l };
}
const Gn = /{([\d,-]+)}/, Q_e = (n) => {
  const e = n.renderer.rules.fence;
  n.renderer.rules.fence = (...t) => {
    const [o, r] = t, s = o[r], a = s.attrs && s.attrs[0];
    let c = null;
    if (!a) {
      const l = s.info;
      if (!l || !Gn.test(l))
        return e(...t);
      const i = l.replace(Gn, "").trim();
      s.info = i, c = Gn.exec(l)[1];
    }
    return !c && (c = a[0], !c || !/[\d,-]+/.test(c)) ? e(...t) : (s.info += " " + c, e(...t));
  };
}, Y_e = (n) => {
  const e = n.renderer.rules.image;
  n.renderer.rules.image = (t, o, r, s, a) => {
    const c = t[o];
    let l = c.attrGet("src");
    return l && !Xn.test(l) && (/^\.?\//.test(l) || (l = "./" + l), c.attrSet("src", decodeURIComponent(l))), e(t, o, r, s, a);
  };
}, X_e = (n, e = !1) => {
  const t = n.renderer.rules.fence;
  n.renderer.rules.fence = (...o) => {
    const r = t(...o), [s, a] = o, c = s[a].info;
    if (!e && !/:line-numbers($| )/.test(c) || e && /:no-line-numbers($| )/.test(c))
      return r;
    const i = r.slice(
      r.indexOf("<code>"),
      r.indexOf("</code>")
    ).split(`
`), h = `<div class="line-numbers-wrapper" aria-hidden="true">${[
      ...Array(
        i.length - (i[i.length - 1] === '<span class="line"></span>' ? 1 : 0)
      )
    ].map((f, m) => `<span class="line-number">${m + 1}</span><br>`).join("")}</div>`;
    return r.replace(/<\/div>$/, `${h}</div>`).replace(/"(language-[^"]*?)"/, '"$1 line-numbers-mode"');
  };
}, K_e = /(^|.*\/)index.md(#?.*)$/i, ebe = (n, e, t) => {
  n.renderer.rules.link_open = (s, a, c, l, i) => {
    const p = s[a], h = p.attrIndex("href");
    if (h >= 0) {
      const d = p.attrs[h], f = d[1];
      Xn.test(f) ? (Object.entries(e).forEach(([L, S]) => {
        p.attrSet(L, S);
      }), f.replace(Xn, "").startsWith("//localhost:") && r(f, l), d[1] = f.replace(Xge, "")) : (// internal anchor links
      !f.startsWith("#") && // mail links
      !f.startsWith("mailto:") && // links to files (other than html/md)
      !/\.(?!html|md)\w+($|\?)/i.test(f) ? o(d, l) : f.startsWith("#") && (d[1] = decodeURI(d[1])), d[1].startsWith("/") && (d[1] = `${t}${d[1]}`.replace(/\/+/g, "/"))), d[1] = d[1].replace(/\bimport\.meta/g, "import%2Emeta").replace(/\bprocess\.env/g, "process%2Eenv");
    }
    return i.renderToken(s, a, c);
  };
  function o(s, a) {
    let c = s[1];
    const l = c.match(K_e);
    if (l) {
      const [, i, p] = l;
      c = i + p;
    } else {
      let i = c.replace(/[?#].*$/, "");
      i.endsWith(".md") && (i = i.replace(/\.md$/, a.cleanUrls ? "" : ".html")), !a.cleanUrls && !i.endsWith(".html") && !i.endsWith("/") && (i += ".html");
      const p = new URL(c, "http://a.com");
      c = i + p.search + p.hash;
    }
    !c.startsWith("/") && !/^\.\//.test(c) && (c = "./" + c), r(c.replace(/\.html$/, ""), a), s[1] = decodeURI(c);
  }
  function r(s, a) {
    (a.links || (a.links = [])).push(s);
  }
}, Ko = async (n = {}, e = "/", t = console) => {
  var c;
  const { plugin: o, highlighter: r, loadLang: s } = await J_e(n.theme, n.languages, n.defaultHighlightLang, t), a = Tz({
    html: !0,
    linkify: !0,
    highlight: n.highlight || o,
    ...n
  });
  return a.linkify.set({ fuzzyLink: !1 }), a.use(Q_e).use(e_e).use(t_e).use(Y_e).use(ebe, { target: "_blank", rel: "noreferrer", ...n.externalLinks }, e).use(X_e, n.lineNumbers), (c = n.attrs) != null && c.disable || a.use(Gz, n.attrs), a.use(Wge), a.use(Te, {
    slugify: sn,
    permalink: Te.permalink.linkInsideHeader({
      symbol: "&ZeroWidthSpace;",
      renderAttrs: (l, i) => {
        const p = i.tokens.findIndex((d) => {
          const f = d.attrs, m = f == null ? void 0 : f.find((L) => L[0] === "id");
          return m && l === m[1];
        });
        return {
          "aria-label": `Permalink to "${i.tokens[p + 1].content}"`
        };
      }
    }),
    ...n.anchor
  }), n.headers && a.use(ms, {
    level: [2, 3, 4, 5, 6],
    slugify: sn,
    ...typeof n.headers == "boolean" ? void 0 : n.headers
  }), a.use(gs).use(ks, {
    ...n.toc
  }), n.config && n.config(a), { md: a, highlighter: r, loadLang: s };
}, nbe = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
}, tbe = /* @__PURE__ */ le("path", {
  fill: "none",
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2",
  d: "M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2M7 11l5 5l5-5m-5-7v12"
}, null, -1), obe = [
  tbe
];
function sbe(n, e) {
  return re(), ie("svg", nbe, obe);
}
const rbe = { name: "tabler-download", render: sbe }, cbe = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
}, abe = /* @__PURE__ */ le("path", {
  fill: "none",
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2",
  d: "m5 12l5 5L20 7"
}, null, -1), ibe = [
  abe
];
function lbe(n, e) {
  return re(), ie("svg", cbe, ibe);
}
const ube = { name: "tabler-check", render: lbe }, pbe = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
}, hbe = /* @__PURE__ */ le("g", {
  fill: "none",
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2"
}, [
  /* @__PURE__ */ le("path", { d: "M8 10a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2z" }),
  /* @__PURE__ */ le("path", { d: "M16 8V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2" })
], -1), dbe = [
  hbe
];
function fbe(n, e) {
  return re(), ie("svg", pbe, dbe);
}
const mbe = { name: "tabler-copy", render: fbe };
async function gbe(n) {
  try {
    return navigator.clipboard.writeText(n);
  } catch {
    const e = document.createElement("textarea"), t = document.activeElement;
    e.value = n, e.setAttribute("readonly", ""), e.style.contain = "strict", e.style.position = "absolute", e.style.left = "-9999px", e.style.fontSize = "12pt";
    const o = document.getSelection(), r = o ? o.rangeCount > 0 && o.getRangeAt(0) : null;
    document.body.appendChild(e), e.select(), e.selectionStart = 0, e.selectionEnd = n.length, document.execCommand("copy"), document.body.removeChild(e), r && (o.removeAllRanges(), o.addRange(r)), t && t.focus();
  }
}
const _be = (n, e = !1) => {
  const t = "ABCDEFGHJKLMNPQRSTUVWXY3456789";
  let o = "";
  for (let r = 0; r < n.valueOf(); r++)
    o += t.charAt(Math.floor(Math.random() * t.length));
  return e ? o.toLowerCase() : o;
}, bbe = {
  javascript: ".js",
  python: ".py",
  java: ".java",
  c: ".c",
  cpp: ".cpp",
  "c++": ".cpp",
  "c#": ".cs",
  ruby: ".rb",
  php: ".php",
  swift: ".swift",
  "objective-c": ".m",
  kotlin: ".kt",
  typescript: ".ts",
  go: ".go",
  perl: ".pl",
  rust: ".rs",
  scala: ".scala",
  haskell: ".hs",
  lua: ".lua",
  shell: ".sh",
  sql: ".sql",
  html: ".html",
  css: ".css"
  // add more file extensions here, make sure the key is same as language prop in CodeBlock.tsx component
}, kbe = (n, e, t = "Enter file name") => {
  const o = bbe[n] || ".file", r = `file-${_be(3, !0)}${o}`, s = window.prompt(t || "", r);
  if (!s)
    return;
  const a = new Blob([e], { type: "text/plain" }), c = URL.createObjectURL(a), l = document.createElement("a");
  l.download = s, l.href = c, l.style.display = "none", document.body.appendChild(l), l.click(), document.body.removeChild(l), URL.revokeObjectURL(c);
}, ybe = { class: "vp-header" }, wbe = { class: "ctrl" }, Kn = /* @__PURE__ */ pn({
  __name: "VueMarkDownHeader",
  props: {
    lang: {
      type: String,
      default: "txt"
    },
    copyTxt: {
      type: String,
      default: "Copy"
    },
    copiedTxt: {
      type: String,
      default: "Copied"
    },
    item: {
      type: String,
      default: ""
    },
    downloadTxt: {
      type: String,
      default: "Enter file name"
    }
  },
  setup(n) {
    const e = n, t = Me(!1), o = Me(null), r = Un(() => t.value ? e.copiedTxt : e.copyTxt);
    function s() {
      const c = /* @__PURE__ */ new Map();
      gbe(e.item).then(() => {
        t.value = !0, clearTimeout(c.get(o.value));
        const l = setTimeout(() => {
          t.value = !1, c.delete(o.value);
        }, 2e3);
        c.set(o.value, l);
      });
    }
    function a() {
      kbe(e.lang, e.item, e.downloadTxt);
    }
    return (c, l) => {
      const i = mbe, p = ube, h = rbe;
      return re(), ie("div", ybe, [
        ho(c.$slots, "default", {}, () => [
          le("div", null, Hn(n.lang), 1)
        ]),
        le("div", wbe, [
          le("div", {
            class: "copyRef ctrl",
            onClick: s,
            ref_key: "copyRef",
            ref: o
          }, [
            t.value ? (re(), dt(p, { key: 1 })) : (re(), dt(i, { key: 0 })),
            le("span", null, Hn(es(r)), 1)
          ], 512),
          _e(h, {
            class: "copyRef",
            onClick: a
          })
        ])
      ]);
    };
  }
}), vbe = { class: "tabs" }, xbe = ["onClick"], Abe = ["innerHTML"], Sbe = /* @__PURE__ */ pn({
  __name: "VueGroupCode",
  props: {
    names: {
      type: Object,
      required: !0
    },
    blocks: {
      type: Object,
      required: !0
    }
  },
  setup(n) {
    const e = Me(0);
    function t(o) {
      e.value = o;
    }
    return (o, r) => (re(), ie(Sn, null, [
      _e(Kn, null, {
        default: ns(() => [
          le("div", vbe, [
            (re(!0), ie(Sn, null, ft(n.names, (s, a) => (re(), ie("span", {
              key: a,
              onClick: () => t(a),
              class: Vn({ active: e.value === a })
            }, Hn(s), 11, xbe))), 128))
          ])
        ]),
        _: 1
      }),
      (re(!0), ie(Sn, null, ft(n.blocks, (s, a) => ts((re(), ie("div", {
        innerHTML: s.innerHTML,
        class: Vn(s.className),
        key: a
      }, null, 10, Abe)), [
        [os, e.value === a]
      ])), 128))
    ], 64));
  }
});
function Lbe(n) {
  let e = n;
  const t = /以下是(.+)续写的代码：\n\n/, o = e.match(t);
  if (o) {
    const s = o[1];
    e = e.replace(t, `以下是${s}续写的代码：

\`\`\`${s.toLocaleLowerCase()}

`);
  }
  const r = /\n```\n/g;
  return e = e.replace(r, "\n``` \n"), e;
}
const Ebe = /* @__PURE__ */ pn({
  components: {
    VueMarkDownHeader: Kn
  },
  props: {
    content: {
      type: String,
      required: !0
    },
    style: {
      type: Object,
      default: () => {
      }
    },
    class: {
      type: String,
      default: ""
    },
    stream: {
      type: Boolean,
      default: !1
    }
  },
  setup(n, {
    expose: e
  }) {
    const t = Me(""), o = Me(), r = Me();
    e({
      render: t,
      md: o,
      loadLangFn: r
    });
    const s = new RegExp("(?<=```)\\S+", "g"), {
      stream: a,
      class: c,
      style: l
    } = ss(n), i = Un(() => ["vp-doc", c.value]);
    function p(L, S = "") {
      let b = "";
      const w = new DOMParser().parseFromString(L, "text/html"), C = /shellscript|shell|bash|sh|zsh/.test(S);
      return w.querySelectorAll("span.line:not(.diff.remove)").forEach((y) => b += (y.textContent || "") + `
`), C && (b = b.replace(/^ *(\$|>) /gm, "").trim()), b.slice(0, -1);
    }
    const h = Un(() => Lbe(n.content || ""));
    function d(L) {
      if (L.nodeType === Node.TEXT_NODE)
        return L.textContent;
      if (L.nodeType === Node.ELEMENT_NODE) {
        const S = L, b = /^language-/, k = Array.from(S.classList).some((y) => b.test(y)), w = /vp-code-group/;
        if (Array.from(S.classList).some((y) => w.test(y))) {
          const u = Array.from(S.querySelectorAll(".tabs label")).map((x) => x.innerText), g = S.querySelectorAll(".blocks div");
          return _e(Sbe, {
            names: u,
            blocks: g
          }, null);
        } else if (k) {
          const y = S.className.match(/language-(\w+)/), u = y ? y[1] : "plain", g = p(S.innerHTML, u), x = S.innerHTML;
          return _e("div", {
            class: i.value,
            style: {
              ...l
            }
          }, [_e("slot", {
            name: "code",
            item: g,
            html: g,
            lang: u
          }, [_e(Kn, {
            lang: u,
            item: g
          }, null)]), _e("div", {
            class: S.className,
            innerHTML: x
          }, null)]);
        } else {
          const y = Array.from(S.childNodes).map(d).flat(), u = {};
          for (let g = 0; g < S.attributes.length; g++) {
            const x = S.attributes[g];
            u[x.name] = x.value;
          }
          return is(S.tagName, {
            ...u
          }, y);
        }
      }
    }
    async function f() {
      var S;
      const L = Array.from(h.value.matchAll(s)).map((b) => b[0]);
      if (L && r.value)
        for (let b = 0; b < L.length; b++) {
          const k = L[b];
          try {
            const w = $o[k.toLocaleUpperCase()] || k;
            await r.value(w);
          } catch {
            continue;
          }
        }
      t.value = ((S = o.value) == null ? void 0 : S.render(h.value)) || "";
    }
    rs(h, async () => await f()), cs(async () => {
      const {
        md: L,
        loadLang: S
      } = await as(ut);
      o.value = L, r.value = S, await f();
    });
    function m() {
      const S = new DOMParser().parseFromString(t.value, "text/html"), b = d(S.body);
      return _e("div", {
        class: [i.value, {
          "result-streaming": a.value
        }],
        style: {
          ...l.value
        }
      }, [b]);
    }
    return () => m();
  }
}), Tbe = /* @__PURE__ */ pn({
  __name: "VueMarkdownItProvider",
  props: {
    options: {
      type: Object,
      default: {
        theme: "dracula-soft",
        defaultHighlightLang: "javascript"
      }
    },
    class: {
      type: String,
      default: ""
    }
  },
  setup(n) {
    const t = Ko({
      ...n.options
    });
    return ls(ut, t), (o, r) => (re(), ie("div", {
      class: Vn(n.class)
    }, [
      ho(o.$slots, "default")
    ], 2));
  }
}), Dbe = {
  install(n, e = {
    theme: "dracula-soft",
    defaultHighlightLang: "javascript"
  }) {
    const t = Ko({
      ...e
    });
    n.provide(ut, t);
  }
};
export {
  Kn as VueMarkDownHeader,
  Ebe as VueMarkdownIt,
  Tbe as VueMarkdownItProvider,
  Dbe as default
};
