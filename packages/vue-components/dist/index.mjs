import { openBlock as ce, createElementBlock as fe, createElementVNode as ie, defineComponent as Xn, ref as Me, computed as Gn, renderSlot as Xo, toDisplayString as Un, createBlock as pt, unref as Ko, createVNode as _e, Fragment as An, withCtx as es, renderList as ht, normalizeClass as dt, withDirectives as ns, vShow as ts, toRefs as os, watch as ss, onBeforeMount as rs, inject as cs, h as as } from "vue";
const is = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  "'": "&#39;",
  '"': "&quot;"
}, ls = /[&<>'"]/g, Fe = (n) => n.replace(
  ls,
  (e) => is[e]
), po = (n, { shouldAllowHtml: e, shouldEscapeText: t }) => {
  const o = n.children ?? [], r = ["text", "emoji", "code_inline"];
  return e && r.push("html_inline"), o.filter(
    (a) => {
      var c;
      return r.includes(a.type) && // filter permalink symbol that generated by markdown-it-anchor
      !((c = a.meta) != null && c.isPermalinkSymbol);
    }
  ).reduce((a, c) => t && (c.type === "code_inline" || c.type === "text") ? `${a}${Fe(c.content)}` : `${a}${c.content}`, "").trim();
}, ho = (n, {
  level: e,
  shouldAllowHtml: t,
  shouldAllowNested: o,
  shouldEscapeText: r,
  slugify: s,
  format: a
}) => {
  const c = [], l = [], i = (p) => {
    for (; l.length !== 0 && p.level <= l[0].level; )
      l.shift();
    l.length === 0 ? (c.push(p), l.push(p)) : (l[0].children.push(p), l.unshift(p));
  };
  for (let p = 0; p < n.length; p += 1) {
    const h = n[p];
    if ((h == null ? void 0 : h.type) !== "heading_open" || (h == null ? void 0 : h.level) !== 0 && !o)
      continue;
    const d = Number.parseInt(h.tag.slice(1), 10);
    if (!e.includes(d))
      continue;
    const f = n[p + 1];
    if (!f)
      continue;
    const m = po(f, {
      shouldAllowHtml: t,
      shouldEscapeText: r
    }), L = h.attrGet("id") ?? s(m);
    i({
      level: d,
      title: (a == null ? void 0 : a(m)) ?? m,
      slug: L,
      link: `#${L}`,
      children: []
    });
  }
  return c;
}, us = /[\u0000-\u001f]/g, ps = /[\s~`!@#$%^&*()\-_+=[\]{}|\\;:"'“”‘’<>,.?/]+/g, hs = /[\u0300-\u036F]/g, sn = (n) => n.normalize("NFKD").replace(hs, "").replace(us, "").replace(ps, "-").replace(/-{2,}/g, "-").replace(/^-+|-+$/g, "").replace(/^(\d)/, "_$1").toLowerCase(), ds = (n, {
  level: e = [2, 3],
  shouldAllowNested: t = !1,
  slugify: o = sn,
  format: r
} = {}) => {
  const s = n.renderer.render.bind(n.renderer);
  n.renderer.render = (a, c, l) => (l.headers = ho(a, {
    level: e,
    shouldAllowHtml: !1,
    shouldAllowNested: t,
    shouldEscapeText: !1,
    slugify: o,
    format: r
  }), s(a, c, l));
}, fs = (n) => {
  const e = n.renderer.render.bind(n.renderer);
  n.renderer.render = (t, o, r) => {
    const s = t.findIndex((a) => a.tag === "h1");
    return r.title = s > -1 ? po(t[s + 1], {
      shouldAllowHtml: !1,
      shouldEscapeText: !1
    }) : "", e(t, o, r);
  };
}, ms = ({
  listTag: n,
  listClass: e,
  itemClass: t,
  linkTag: o,
  linkClass: r
}) => {
  const s = Fe(n), a = e ? ` class="${Fe(e)}"` : "", c = "li", l = t ? ` class="${Fe(t)}"` : "", i = Fe(o), p = r ? ` class="${Fe(r)}"` : "", h = (f) => o === "router-link" ? ` to="${f}"` : ` href="${f}"`, d = (f) => `<${s}${a}>${f.map(
    (m) => `<${c}${l}${l}><${i}${p}${h(m.link)}>${m.title}</${i}>${m.children.length > 0 ? d(m.children) : ""}</${c}>`
  ).join("")}</${s}>`;
  return d;
}, gs = ({
  pattern: n,
  containerTag: e,
  containerClass: t
}) => (o, r, s, a) => {
  if (o.sCount[r] - o.blkIndent >= 4)
    return !1;
  const c = o.bMarks[r] + o.tShift[r], l = o.eMarks[r], i = o.src.slice(c, l).split(" ")[0];
  if (!n.test(i))
    return !1;
  if (a)
    return !0;
  o.line = r + 1;
  const p = o.push("toc_open", e, 1);
  p.markup = "", p.map = [r, o.line], t && p.attrSet("class", t);
  const h = o.push("toc_body", "", 0);
  h.markup = i, h.map = [r, o.line], h.hidden = !0;
  const d = o.push("toc_close", e, -1);
  return d.markup = "", h.map = [r, o.line], !0;
}, _s = (n, {
  pattern: e = /^\[\[toc\]\]$/i,
  slugify: t = sn,
  format: o,
  level: r = [2, 3],
  shouldAllowNested: s = !1,
  containerTag: a = "nav",
  containerClass: c = "table-of-contents",
  listTag: l = "ul",
  listClass: i = "",
  itemClass: p = "",
  linkTag: h = "a",
  linkClass: d = ""
} = {}) => {
  n.block.ruler.before(
    "heading",
    "toc",
    gs({
      pattern: e,
      containerTag: a,
      containerClass: c
    }),
    {
      alt: ["paragraph", "reference", "blockquote"]
    }
  );
  const f = ms({
    listTag: l,
    listClass: i,
    itemClass: p,
    linkTag: h,
    linkClass: d
  });
  n.renderer.rules.toc_body = (m) => f(
    ho(m, {
      level: r,
      shouldAllowHtml: !0,
      shouldAllowNested: s,
      shouldEscapeText: !0,
      slugify: t,
      format: o
    })
  );
};
var fo = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function pn(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
function bs(n) {
  if (n.__esModule)
    return n;
  var e = n.default;
  if (typeof e == "function") {
    var t = function o() {
      if (this instanceof o) {
        var r = [null];
        r.push.apply(r, arguments);
        var s = Function.bind.apply(e, r);
        return new s();
      }
      return e.apply(this, arguments);
    };
    t.prototype = e.prototype;
  } else
    t = {};
  return Object.defineProperty(t, "__esModule", { value: !0 }), Object.keys(n).forEach(function(o) {
    var r = Object.getOwnPropertyDescriptor(n, o);
    Object.defineProperty(t, o, r.get ? r : {
      enumerable: !0,
      get: function() {
        return n[o];
      }
    });
  }), t;
}
var B = {};
const ks = "Á", ys = "á", ws = "Ă", vs = "ă", xs = "∾", As = "∿", Ss = "∾̳", Ls = "Â", Cs = "â", Es = "´", Ts = "А", Ds = "а", qs = "Æ", js = "æ", Rs = "⁡", Ns = "𝔄", Ps = "𝔞", Is = "À", Os = "à", Fs = "ℵ", Ms = "ℵ", Bs = "Α", zs = "α", $s = "Ā", Gs = "ā", Us = "⨿", Hs = "&", Vs = "&", Ws = "⩕", Zs = "⩓", Js = "∧", Qs = "⩜", Ys = "⩘", Xs = "⩚", Ks = "∠", er = "⦤", nr = "∠", tr = "⦨", or = "⦩", sr = "⦪", rr = "⦫", cr = "⦬", ar = "⦭", ir = "⦮", lr = "⦯", ur = "∡", pr = "∟", hr = "⊾", dr = "⦝", fr = "∢", mr = "Å", gr = "⍼", _r = "Ą", br = "ą", kr = "𝔸", yr = "𝕒", wr = "⩯", vr = "≈", xr = "⩰", Ar = "≊", Sr = "≋", Lr = "'", Cr = "⁡", Er = "≈", Tr = "≊", Dr = "Å", qr = "å", jr = "𝒜", Rr = "𝒶", Nr = "≔", Pr = "*", Ir = "≈", Or = "≍", Fr = "Ã", Mr = "ã", Br = "Ä", zr = "ä", $r = "∳", Gr = "⨑", Ur = "≌", Hr = "϶", Vr = "‵", Wr = "∽", Zr = "⋍", Jr = "∖", Qr = "⫧", Yr = "⊽", Xr = "⌅", Kr = "⌆", ec = "⌅", nc = "⎵", tc = "⎶", oc = "≌", sc = "Б", rc = "б", cc = "„", ac = "∵", ic = "∵", lc = "∵", uc = "⦰", pc = "϶", hc = "ℬ", dc = "ℬ", fc = "Β", mc = "β", gc = "ℶ", _c = "≬", bc = "𝔅", kc = "𝔟", yc = "⋂", wc = "◯", vc = "⋃", xc = "⨀", Ac = "⨁", Sc = "⨂", Lc = "⨆", Cc = "★", Ec = "▽", Tc = "△", Dc = "⨄", qc = "⋁", jc = "⋀", Rc = "⤍", Nc = "⧫", Pc = "▪", Ic = "▴", Oc = "▾", Fc = "◂", Mc = "▸", Bc = "␣", zc = "▒", $c = "░", Gc = "▓", Uc = "█", Hc = "=⃥", Vc = "≡⃥", Wc = "⫭", Zc = "⌐", Jc = "𝔹", Qc = "𝕓", Yc = "⊥", Xc = "⊥", Kc = "⋈", ea = "⧉", na = "┐", ta = "╕", oa = "╖", sa = "╗", ra = "┌", ca = "╒", aa = "╓", ia = "╔", la = "─", ua = "═", pa = "┬", ha = "╤", da = "╥", fa = "╦", ma = "┴", ga = "╧", _a = "╨", ba = "╩", ka = "⊟", ya = "⊞", wa = "⊠", va = "┘", xa = "╛", Aa = "╜", Sa = "╝", La = "└", Ca = "╘", Ea = "╙", Ta = "╚", Da = "│", qa = "║", ja = "┼", Ra = "╪", Na = "╫", Pa = "╬", Ia = "┤", Oa = "╡", Fa = "╢", Ma = "╣", Ba = "├", za = "╞", $a = "╟", Ga = "╠", Ua = "‵", Ha = "˘", Va = "˘", Wa = "¦", Za = "𝒷", Ja = "ℬ", Qa = "⁏", Ya = "∽", Xa = "⋍", Ka = "⧅", ei = "\\", ni = "⟈", ti = "•", oi = "•", si = "≎", ri = "⪮", ci = "≏", ai = "≎", ii = "≏", li = "Ć", ui = "ć", pi = "⩄", hi = "⩉", di = "⩋", fi = "∩", mi = "⋒", gi = "⩇", _i = "⩀", bi = "ⅅ", ki = "∩︀", yi = "⁁", wi = "ˇ", vi = "ℭ", xi = "⩍", Ai = "Č", Si = "č", Li = "Ç", Ci = "ç", Ei = "Ĉ", Ti = "ĉ", Di = "∰", qi = "⩌", ji = "⩐", Ri = "Ċ", Ni = "ċ", Pi = "¸", Ii = "¸", Oi = "⦲", Fi = "¢", Mi = "·", Bi = "·", zi = "𝔠", $i = "ℭ", Gi = "Ч", Ui = "ч", Hi = "✓", Vi = "✓", Wi = "Χ", Zi = "χ", Ji = "ˆ", Qi = "≗", Yi = "↺", Xi = "↻", Ki = "⊛", el = "⊚", nl = "⊝", tl = "⊙", ol = "®", sl = "Ⓢ", rl = "⊖", cl = "⊕", al = "⊗", il = "○", ll = "⧃", ul = "≗", pl = "⨐", hl = "⫯", dl = "⧂", fl = "∲", ml = "”", gl = "’", _l = "♣", bl = "♣", kl = ":", yl = "∷", wl = "⩴", vl = "≔", xl = "≔", Al = ",", Sl = "@", Ll = "∁", Cl = "∘", El = "∁", Tl = "ℂ", Dl = "≅", ql = "⩭", jl = "≡", Rl = "∮", Nl = "∯", Pl = "∮", Il = "𝕔", Ol = "ℂ", Fl = "∐", Ml = "∐", Bl = "©", zl = "©", $l = "℗", Gl = "∳", Ul = "↵", Hl = "✗", Vl = "⨯", Wl = "𝒞", Zl = "𝒸", Jl = "⫏", Ql = "⫑", Yl = "⫐", Xl = "⫒", Kl = "⋯", eu = "⤸", nu = "⤵", tu = "⋞", ou = "⋟", su = "↶", ru = "⤽", cu = "⩈", au = "⩆", iu = "≍", lu = "∪", uu = "⋓", pu = "⩊", hu = "⊍", du = "⩅", fu = "∪︀", mu = "↷", gu = "⤼", _u = "⋞", bu = "⋟", ku = "⋎", yu = "⋏", wu = "¤", vu = "↶", xu = "↷", Au = "⋎", Su = "⋏", Lu = "∲", Cu = "∱", Eu = "⌭", Tu = "†", Du = "‡", qu = "ℸ", ju = "↓", Ru = "↡", Nu = "⇓", Pu = "‐", Iu = "⫤", Ou = "⊣", Fu = "⤏", Mu = "˝", Bu = "Ď", zu = "ď", $u = "Д", Gu = "д", Uu = "‡", Hu = "⇊", Vu = "ⅅ", Wu = "ⅆ", Zu = "⤑", Ju = "⩷", Qu = "°", Yu = "∇", Xu = "Δ", Ku = "δ", ep = "⦱", np = "⥿", tp = "𝔇", op = "𝔡", sp = "⥥", rp = "⇃", cp = "⇂", ap = "´", ip = "˙", lp = "˝", up = "`", pp = "˜", hp = "⋄", dp = "⋄", fp = "⋄", mp = "♦", gp = "♦", _p = "¨", bp = "ⅆ", kp = "ϝ", yp = "⋲", wp = "÷", vp = "÷", xp = "⋇", Ap = "⋇", Sp = "Ђ", Lp = "ђ", Cp = "⌞", Ep = "⌍", Tp = "$", Dp = "𝔻", qp = "𝕕", jp = "¨", Rp = "˙", Np = "⃜", Pp = "≐", Ip = "≑", Op = "≐", Fp = "∸", Mp = "∔", Bp = "⊡", zp = "⌆", $p = "∯", Gp = "¨", Up = "⇓", Hp = "⇐", Vp = "⇔", Wp = "⫤", Zp = "⟸", Jp = "⟺", Qp = "⟹", Yp = "⇒", Xp = "⊨", Kp = "⇑", eh = "⇕", nh = "∥", th = "⤓", oh = "↓", sh = "↓", rh = "⇓", ch = "⇵", ah = "̑", ih = "⇊", lh = "⇃", uh = "⇂", ph = "⥐", hh = "⥞", dh = "⥖", fh = "↽", mh = "⥟", gh = "⥗", _h = "⇁", bh = "↧", kh = "⊤", yh = "⤐", wh = "⌟", vh = "⌌", xh = "𝒟", Ah = "𝒹", Sh = "Ѕ", Lh = "ѕ", Ch = "⧶", Eh = "Đ", Th = "đ", Dh = "⋱", qh = "▿", jh = "▾", Rh = "⇵", Nh = "⥯", Ph = "⦦", Ih = "Џ", Oh = "џ", Fh = "⟿", Mh = "É", Bh = "é", zh = "⩮", $h = "Ě", Gh = "ě", Uh = "Ê", Hh = "ê", Vh = "≖", Wh = "≕", Zh = "Э", Jh = "э", Qh = "⩷", Yh = "Ė", Xh = "ė", Kh = "≑", ed = "ⅇ", nd = "≒", td = "𝔈", od = "𝔢", sd = "⪚", rd = "È", cd = "è", ad = "⪖", id = "⪘", ld = "⪙", ud = "∈", pd = "⏧", hd = "ℓ", dd = "⪕", fd = "⪗", md = "Ē", gd = "ē", _d = "∅", bd = "∅", kd = "◻", yd = "∅", wd = "▫", vd = " ", xd = " ", Ad = " ", Sd = "Ŋ", Ld = "ŋ", Cd = " ", Ed = "Ę", Td = "ę", Dd = "𝔼", qd = "𝕖", jd = "⋕", Rd = "⧣", Nd = "⩱", Pd = "ε", Id = "Ε", Od = "ε", Fd = "ϵ", Md = "≖", Bd = "≕", zd = "≂", $d = "⪖", Gd = "⪕", Ud = "⩵", Hd = "=", Vd = "≂", Wd = "≟", Zd = "⇌", Jd = "≡", Qd = "⩸", Yd = "⧥", Xd = "⥱", Kd = "≓", ef = "ℯ", nf = "ℰ", tf = "≐", of = "⩳", sf = "≂", rf = "Η", cf = "η", af = "Ð", lf = "ð", uf = "Ë", pf = "ë", hf = "€", df = "!", ff = "∃", mf = "∃", gf = "ℰ", _f = "ⅇ", bf = "ⅇ", kf = "≒", yf = "Ф", wf = "ф", vf = "♀", xf = "ﬃ", Af = "ﬀ", Sf = "ﬄ", Lf = "𝔉", Cf = "𝔣", Ef = "ﬁ", Tf = "◼", Df = "▪", qf = "fj", jf = "♭", Rf = "ﬂ", Nf = "▱", Pf = "ƒ", If = "𝔽", Of = "𝕗", Ff = "∀", Mf = "∀", Bf = "⋔", zf = "⫙", $f = "ℱ", Gf = "⨍", Uf = "½", Hf = "⅓", Vf = "¼", Wf = "⅕", Zf = "⅙", Jf = "⅛", Qf = "⅔", Yf = "⅖", Xf = "¾", Kf = "⅗", em = "⅜", nm = "⅘", tm = "⅚", om = "⅝", sm = "⅞", rm = "⁄", cm = "⌢", am = "𝒻", im = "ℱ", lm = "ǵ", um = "Γ", pm = "γ", hm = "Ϝ", dm = "ϝ", fm = "⪆", mm = "Ğ", gm = "ğ", _m = "Ģ", bm = "Ĝ", km = "ĝ", ym = "Г", wm = "г", vm = "Ġ", xm = "ġ", Am = "≥", Sm = "≧", Lm = "⪌", Cm = "⋛", Em = "≥", Tm = "≧", Dm = "⩾", qm = "⪩", jm = "⩾", Rm = "⪀", Nm = "⪂", Pm = "⪄", Im = "⋛︀", Om = "⪔", Fm = "𝔊", Mm = "𝔤", Bm = "≫", zm = "⋙", $m = "⋙", Gm = "ℷ", Um = "Ѓ", Hm = "ѓ", Vm = "⪥", Wm = "≷", Zm = "⪒", Jm = "⪤", Qm = "⪊", Ym = "⪊", Xm = "⪈", Km = "≩", eg = "⪈", ng = "≩", tg = "⋧", og = "𝔾", sg = "𝕘", rg = "`", cg = "≥", ag = "⋛", ig = "≧", lg = "⪢", ug = "≷", pg = "⩾", hg = "≳", dg = "𝒢", fg = "ℊ", mg = "≳", gg = "⪎", _g = "⪐", bg = "⪧", kg = "⩺", yg = ">", wg = ">", vg = "≫", xg = "⋗", Ag = "⦕", Sg = "⩼", Lg = "⪆", Cg = "⥸", Eg = "⋗", Tg = "⋛", Dg = "⪌", qg = "≷", jg = "≳", Rg = "≩︀", Ng = "≩︀", Pg = "ˇ", Ig = " ", Og = "½", Fg = "ℋ", Mg = "Ъ", Bg = "ъ", zg = "⥈", $g = "↔", Gg = "⇔", Ug = "↭", Hg = "^", Vg = "ℏ", Wg = "Ĥ", Zg = "ĥ", Jg = "♥", Qg = "♥", Yg = "…", Xg = "⊹", Kg = "𝔥", e_ = "ℌ", n_ = "ℋ", t_ = "⤥", o_ = "⤦", s_ = "⇿", r_ = "∻", c_ = "↩", a_ = "↪", i_ = "𝕙", l_ = "ℍ", u_ = "―", p_ = "─", h_ = "𝒽", d_ = "ℋ", f_ = "ℏ", m_ = "Ħ", g_ = "ħ", __ = "≎", b_ = "≏", k_ = "⁃", y_ = "‐", w_ = "Í", v_ = "í", x_ = "⁣", A_ = "Î", S_ = "î", L_ = "И", C_ = "и", E_ = "İ", T_ = "Е", D_ = "е", q_ = "¡", j_ = "⇔", R_ = "𝔦", N_ = "ℑ", P_ = "Ì", I_ = "ì", O_ = "ⅈ", F_ = "⨌", M_ = "∭", B_ = "⧜", z_ = "℩", $_ = "Ĳ", G_ = "ĳ", U_ = "Ī", H_ = "ī", V_ = "ℑ", W_ = "ⅈ", Z_ = "ℐ", J_ = "ℑ", Q_ = "ı", Y_ = "ℑ", X_ = "⊷", K_ = "Ƶ", eb = "⇒", nb = "℅", tb = "∞", ob = "⧝", sb = "ı", rb = "⊺", cb = "∫", ab = "∬", ib = "ℤ", lb = "∫", ub = "⊺", pb = "⋂", hb = "⨗", db = "⨼", fb = "⁣", mb = "⁢", gb = "Ё", _b = "ё", bb = "Į", kb = "į", yb = "𝕀", wb = "𝕚", vb = "Ι", xb = "ι", Ab = "⨼", Sb = "¿", Lb = "𝒾", Cb = "ℐ", Eb = "∈", Tb = "⋵", Db = "⋹", qb = "⋴", jb = "⋳", Rb = "∈", Nb = "⁢", Pb = "Ĩ", Ib = "ĩ", Ob = "І", Fb = "і", Mb = "Ï", Bb = "ï", zb = "Ĵ", $b = "ĵ", Gb = "Й", Ub = "й", Hb = "𝔍", Vb = "𝔧", Wb = "ȷ", Zb = "𝕁", Jb = "𝕛", Qb = "𝒥", Yb = "𝒿", Xb = "Ј", Kb = "ј", ek = "Є", nk = "є", tk = "Κ", ok = "κ", sk = "ϰ", rk = "Ķ", ck = "ķ", ak = "К", ik = "к", lk = "𝔎", uk = "𝔨", pk = "ĸ", hk = "Х", dk = "х", fk = "Ќ", mk = "ќ", gk = "𝕂", _k = "𝕜", bk = "𝒦", kk = "𝓀", yk = "⇚", wk = "Ĺ", vk = "ĺ", xk = "⦴", Ak = "ℒ", Sk = "Λ", Lk = "λ", Ck = "⟨", Ek = "⟪", Tk = "⦑", Dk = "⟨", qk = "⪅", jk = "ℒ", Rk = "«", Nk = "⇤", Pk = "⤟", Ik = "←", Ok = "↞", Fk = "⇐", Mk = "⤝", Bk = "↩", zk = "↫", $k = "⤹", Gk = "⥳", Uk = "↢", Hk = "⤙", Vk = "⤛", Wk = "⪫", Zk = "⪭", Jk = "⪭︀", Qk = "⤌", Yk = "⤎", Xk = "❲", Kk = "{", ey = "[", ny = "⦋", ty = "⦏", oy = "⦍", sy = "Ľ", ry = "ľ", cy = "Ļ", ay = "ļ", iy = "⌈", ly = "{", uy = "Л", py = "л", hy = "⤶", dy = "“", fy = "„", my = "⥧", gy = "⥋", _y = "↲", by = "≤", ky = "≦", yy = "⟨", wy = "⇤", vy = "←", xy = "←", Ay = "⇐", Sy = "⇆", Ly = "↢", Cy = "⌈", Ey = "⟦", Ty = "⥡", Dy = "⥙", qy = "⇃", jy = "⌊", Ry = "↽", Ny = "↼", Py = "⇇", Iy = "↔", Oy = "↔", Fy = "⇔", My = "⇆", By = "⇋", zy = "↭", $y = "⥎", Gy = "↤", Uy = "⊣", Hy = "⥚", Vy = "⋋", Wy = "⧏", Zy = "⊲", Jy = "⊴", Qy = "⥑", Yy = "⥠", Xy = "⥘", Ky = "↿", ew = "⥒", nw = "↼", tw = "⪋", ow = "⋚", sw = "≤", rw = "≦", cw = "⩽", aw = "⪨", iw = "⩽", lw = "⩿", uw = "⪁", pw = "⪃", hw = "⋚︀", dw = "⪓", fw = "⪅", mw = "⋖", gw = "⋚", _w = "⪋", bw = "⋚", kw = "≦", yw = "≶", ww = "≶", vw = "⪡", xw = "≲", Aw = "⩽", Sw = "≲", Lw = "⥼", Cw = "⌊", Ew = "𝔏", Tw = "𝔩", Dw = "≶", qw = "⪑", jw = "⥢", Rw = "↽", Nw = "↼", Pw = "⥪", Iw = "▄", Ow = "Љ", Fw = "љ", Mw = "⇇", Bw = "≪", zw = "⋘", $w = "⌞", Gw = "⇚", Uw = "⥫", Hw = "◺", Vw = "Ŀ", Ww = "ŀ", Zw = "⎰", Jw = "⎰", Qw = "⪉", Yw = "⪉", Xw = "⪇", Kw = "≨", e0 = "⪇", n0 = "≨", t0 = "⋦", o0 = "⟬", s0 = "⇽", r0 = "⟦", c0 = "⟵", a0 = "⟵", i0 = "⟸", l0 = "⟷", u0 = "⟷", p0 = "⟺", h0 = "⟼", d0 = "⟶", f0 = "⟶", m0 = "⟹", g0 = "↫", _0 = "↬", b0 = "⦅", k0 = "𝕃", y0 = "𝕝", w0 = "⨭", v0 = "⨴", x0 = "∗", A0 = "_", S0 = "↙", L0 = "↘", C0 = "◊", E0 = "◊", T0 = "⧫", D0 = "(", q0 = "⦓", j0 = "⇆", R0 = "⌟", N0 = "⇋", P0 = "⥭", I0 = "‎", O0 = "⊿", F0 = "‹", M0 = "𝓁", B0 = "ℒ", z0 = "↰", $0 = "↰", G0 = "≲", U0 = "⪍", H0 = "⪏", V0 = "[", W0 = "‘", Z0 = "‚", J0 = "Ł", Q0 = "ł", Y0 = "⪦", X0 = "⩹", K0 = "<", ev = "<", nv = "≪", tv = "⋖", ov = "⋋", sv = "⋉", rv = "⥶", cv = "⩻", av = "◃", iv = "⊴", lv = "◂", uv = "⦖", pv = "⥊", hv = "⥦", dv = "≨︀", fv = "≨︀", mv = "¯", gv = "♂", _v = "✠", bv = "✠", kv = "↦", yv = "↦", wv = "↧", vv = "↤", xv = "↥", Av = "▮", Sv = "⨩", Lv = "М", Cv = "м", Ev = "—", Tv = "∺", Dv = "∡", qv = " ", jv = "ℳ", Rv = "𝔐", Nv = "𝔪", Pv = "℧", Iv = "µ", Ov = "*", Fv = "⫰", Mv = "∣", Bv = "·", zv = "⊟", $v = "−", Gv = "∸", Uv = "⨪", Hv = "∓", Vv = "⫛", Wv = "…", Zv = "∓", Jv = "⊧", Qv = "𝕄", Yv = "𝕞", Xv = "∓", Kv = "𝓂", e1 = "ℳ", n1 = "∾", t1 = "Μ", o1 = "μ", s1 = "⊸", r1 = "⊸", c1 = "∇", a1 = "Ń", i1 = "ń", l1 = "∠⃒", u1 = "≉", p1 = "⩰̸", h1 = "≋̸", d1 = "ŉ", f1 = "≉", m1 = "♮", g1 = "ℕ", _1 = "♮", b1 = " ", k1 = "≎̸", y1 = "≏̸", w1 = "⩃", v1 = "Ň", x1 = "ň", A1 = "Ņ", S1 = "ņ", L1 = "≇", C1 = "⩭̸", E1 = "⩂", T1 = "Н", D1 = "н", q1 = "–", j1 = "⤤", R1 = "↗", N1 = "⇗", P1 = "↗", I1 = "≠", O1 = "≐̸", F1 = "​", M1 = "​", B1 = "​", z1 = "​", $1 = "≢", G1 = "⤨", U1 = "≂̸", H1 = "≫", V1 = "≪", W1 = `
`, Z1 = "∄", J1 = "∄", Q1 = "𝔑", Y1 = "𝔫", X1 = "≧̸", K1 = "≱", ex = "≱", nx = "≧̸", tx = "⩾̸", ox = "⩾̸", sx = "⋙̸", rx = "≵", cx = "≫⃒", ax = "≯", ix = "≯", lx = "≫̸", ux = "↮", px = "⇎", hx = "⫲", dx = "∋", fx = "⋼", mx = "⋺", gx = "∋", _x = "Њ", bx = "њ", kx = "↚", yx = "⇍", wx = "‥", vx = "≦̸", xx = "≰", Ax = "↚", Sx = "⇍", Lx = "↮", Cx = "⇎", Ex = "≰", Tx = "≦̸", Dx = "⩽̸", qx = "⩽̸", jx = "≮", Rx = "⋘̸", Nx = "≴", Px = "≪⃒", Ix = "≮", Ox = "⋪", Fx = "⋬", Mx = "≪̸", Bx = "∤", zx = "⁠", $x = " ", Gx = "𝕟", Ux = "ℕ", Hx = "⫬", Vx = "¬", Wx = "≢", Zx = "≭", Jx = "∦", Qx = "∉", Yx = "≠", Xx = "≂̸", Kx = "∄", eA = "≯", nA = "≱", tA = "≧̸", oA = "≫̸", sA = "≹", rA = "⩾̸", cA = "≵", aA = "≎̸", iA = "≏̸", lA = "∉", uA = "⋵̸", pA = "⋹̸", hA = "∉", dA = "⋷", fA = "⋶", mA = "⧏̸", gA = "⋪", _A = "⋬", bA = "≮", kA = "≰", yA = "≸", wA = "≪̸", vA = "⩽̸", xA = "≴", AA = "⪢̸", SA = "⪡̸", LA = "∌", CA = "∌", EA = "⋾", TA = "⋽", DA = "⊀", qA = "⪯̸", jA = "⋠", RA = "∌", NA = "⧐̸", PA = "⋫", IA = "⋭", OA = "⊏̸", FA = "⋢", MA = "⊐̸", BA = "⋣", zA = "⊂⃒", $A = "⊈", GA = "⊁", UA = "⪰̸", HA = "⋡", VA = "≿̸", WA = "⊃⃒", ZA = "⊉", JA = "≁", QA = "≄", YA = "≇", XA = "≉", KA = "∤", eS = "∦", nS = "∦", tS = "⫽⃥", oS = "∂̸", sS = "⨔", rS = "⊀", cS = "⋠", aS = "⊀", iS = "⪯̸", lS = "⪯̸", uS = "⤳̸", pS = "↛", hS = "⇏", dS = "↝̸", fS = "↛", mS = "⇏", gS = "⋫", _S = "⋭", bS = "⊁", kS = "⋡", yS = "⪰̸", wS = "𝒩", vS = "𝓃", xS = "∤", AS = "∦", SS = "≁", LS = "≄", CS = "≄", ES = "∤", TS = "∦", DS = "⋢", qS = "⋣", jS = "⊄", RS = "⫅̸", NS = "⊈", PS = "⊂⃒", IS = "⊈", OS = "⫅̸", FS = "⊁", MS = "⪰̸", BS = "⊅", zS = "⫆̸", $S = "⊉", GS = "⊃⃒", US = "⊉", HS = "⫆̸", VS = "≹", WS = "Ñ", ZS = "ñ", JS = "≸", QS = "⋪", YS = "⋬", XS = "⋫", KS = "⋭", eL = "Ν", nL = "ν", tL = "#", oL = "№", sL = " ", rL = "≍⃒", cL = "⊬", aL = "⊭", iL = "⊮", lL = "⊯", uL = "≥⃒", pL = ">⃒", hL = "⤄", dL = "⧞", fL = "⤂", mL = "≤⃒", gL = "<⃒", _L = "⊴⃒", bL = "⤃", kL = "⊵⃒", yL = "∼⃒", wL = "⤣", vL = "↖", xL = "⇖", AL = "↖", SL = "⤧", LL = "Ó", CL = "ó", EL = "⊛", TL = "Ô", DL = "ô", qL = "⊚", jL = "О", RL = "о", NL = "⊝", PL = "Ő", IL = "ő", OL = "⨸", FL = "⊙", ML = "⦼", BL = "Œ", zL = "œ", $L = "⦿", GL = "𝔒", UL = "𝔬", HL = "˛", VL = "Ò", WL = "ò", ZL = "⧁", JL = "⦵", QL = "Ω", YL = "∮", XL = "↺", KL = "⦾", eC = "⦻", nC = "‾", tC = "⧀", oC = "Ō", sC = "ō", rC = "Ω", cC = "ω", aC = "Ο", iC = "ο", lC = "⦶", uC = "⊖", pC = "𝕆", hC = "𝕠", dC = "⦷", fC = "“", mC = "‘", gC = "⦹", _C = "⊕", bC = "↻", kC = "⩔", yC = "∨", wC = "⩝", vC = "ℴ", xC = "ℴ", AC = "ª", SC = "º", LC = "⊶", CC = "⩖", EC = "⩗", TC = "⩛", DC = "Ⓢ", qC = "𝒪", jC = "ℴ", RC = "Ø", NC = "ø", PC = "⊘", IC = "Õ", OC = "õ", FC = "⨶", MC = "⨷", BC = "⊗", zC = "Ö", $C = "ö", GC = "⌽", UC = "‾", HC = "⏞", VC = "⎴", WC = "⏜", ZC = "¶", JC = "∥", QC = "∥", YC = "⫳", XC = "⫽", KC = "∂", eE = "∂", nE = "П", tE = "п", oE = "%", sE = ".", rE = "‰", cE = "⊥", aE = "‱", iE = "𝔓", lE = "𝔭", uE = "Φ", pE = "φ", hE = "ϕ", dE = "ℳ", fE = "☎", mE = "Π", gE = "π", _E = "⋔", bE = "ϖ", kE = "ℏ", yE = "ℎ", wE = "ℏ", vE = "⨣", xE = "⊞", AE = "⨢", SE = "+", LE = "∔", CE = "⨥", EE = "⩲", TE = "±", DE = "±", qE = "⨦", jE = "⨧", RE = "±", NE = "ℌ", PE = "⨕", IE = "𝕡", OE = "ℙ", FE = "£", ME = "⪷", BE = "⪻", zE = "≺", $E = "≼", GE = "⪷", UE = "≺", HE = "≼", VE = "≺", WE = "⪯", ZE = "≼", JE = "≾", QE = "⪯", YE = "⪹", XE = "⪵", KE = "⋨", eT = "⪯", nT = "⪳", tT = "≾", oT = "′", sT = "″", rT = "ℙ", cT = "⪹", aT = "⪵", iT = "⋨", lT = "∏", uT = "∏", pT = "⌮", hT = "⌒", dT = "⌓", fT = "∝", mT = "∝", gT = "∷", _T = "∝", bT = "≾", kT = "⊰", yT = "𝒫", wT = "𝓅", vT = "Ψ", xT = "ψ", AT = " ", ST = "𝔔", LT = "𝔮", CT = "⨌", ET = "𝕢", TT = "ℚ", DT = "⁗", qT = "𝒬", jT = "𝓆", RT = "ℍ", NT = "⨖", PT = "?", IT = "≟", OT = '"', FT = '"', MT = "⇛", BT = "∽̱", zT = "Ŕ", $T = "ŕ", GT = "√", UT = "⦳", HT = "⟩", VT = "⟫", WT = "⦒", ZT = "⦥", JT = "⟩", QT = "»", YT = "⥵", XT = "⇥", KT = "⤠", eD = "⤳", nD = "→", tD = "↠", oD = "⇒", sD = "⤞", rD = "↪", cD = "↬", aD = "⥅", iD = "⥴", lD = "⤖", uD = "↣", pD = "↝", hD = "⤚", dD = "⤜", fD = "∶", mD = "ℚ", gD = "⤍", _D = "⤏", bD = "⤐", kD = "❳", yD = "}", wD = "]", vD = "⦌", xD = "⦎", AD = "⦐", SD = "Ř", LD = "ř", CD = "Ŗ", ED = "ŗ", TD = "⌉", DD = "}", qD = "Р", jD = "р", RD = "⤷", ND = "⥩", PD = "”", ID = "”", OD = "↳", FD = "ℜ", MD = "ℛ", BD = "ℜ", zD = "ℝ", $D = "ℜ", GD = "▭", UD = "®", HD = "®", VD = "∋", WD = "⇋", ZD = "⥯", JD = "⥽", QD = "⌋", YD = "𝔯", XD = "ℜ", KD = "⥤", eq = "⇁", nq = "⇀", tq = "⥬", oq = "Ρ", sq = "ρ", rq = "ϱ", cq = "⟩", aq = "⇥", iq = "→", lq = "→", uq = "⇒", pq = "⇄", hq = "↣", dq = "⌉", fq = "⟧", mq = "⥝", gq = "⥕", _q = "⇂", bq = "⌋", kq = "⇁", yq = "⇀", wq = "⇄", vq = "⇌", xq = "⇉", Aq = "↝", Sq = "↦", Lq = "⊢", Cq = "⥛", Eq = "⋌", Tq = "⧐", Dq = "⊳", qq = "⊵", jq = "⥏", Rq = "⥜", Nq = "⥔", Pq = "↾", Iq = "⥓", Oq = "⇀", Fq = "˚", Mq = "≓", Bq = "⇄", zq = "⇌", $q = "‏", Gq = "⎱", Uq = "⎱", Hq = "⫮", Vq = "⟭", Wq = "⇾", Zq = "⟧", Jq = "⦆", Qq = "𝕣", Yq = "ℝ", Xq = "⨮", Kq = "⨵", ej = "⥰", nj = ")", tj = "⦔", oj = "⨒", sj = "⇉", rj = "⇛", cj = "›", aj = "𝓇", ij = "ℛ", lj = "↱", uj = "↱", pj = "]", hj = "’", dj = "’", fj = "⋌", mj = "⋊", gj = "▹", _j = "⊵", bj = "▸", kj = "⧎", yj = "⧴", wj = "⥨", vj = "℞", xj = "Ś", Aj = "ś", Sj = "‚", Lj = "⪸", Cj = "Š", Ej = "š", Tj = "⪼", Dj = "≻", qj = "≽", jj = "⪰", Rj = "⪴", Nj = "Ş", Pj = "ş", Ij = "Ŝ", Oj = "ŝ", Fj = "⪺", Mj = "⪶", Bj = "⋩", zj = "⨓", $j = "≿", Gj = "С", Uj = "с", Hj = "⊡", Vj = "⋅", Wj = "⩦", Zj = "⤥", Jj = "↘", Qj = "⇘", Yj = "↘", Xj = "§", Kj = ";", e2 = "⤩", n2 = "∖", t2 = "∖", o2 = "✶", s2 = "𝔖", r2 = "𝔰", c2 = "⌢", a2 = "♯", i2 = "Щ", l2 = "щ", u2 = "Ш", p2 = "ш", h2 = "↓", d2 = "←", f2 = "∣", m2 = "∥", g2 = "→", _2 = "↑", b2 = "­", k2 = "Σ", y2 = "σ", w2 = "ς", v2 = "ς", x2 = "∼", A2 = "⩪", S2 = "≃", L2 = "≃", C2 = "⪞", E2 = "⪠", T2 = "⪝", D2 = "⪟", q2 = "≆", j2 = "⨤", R2 = "⥲", N2 = "←", P2 = "∘", I2 = "∖", O2 = "⨳", F2 = "⧤", M2 = "∣", B2 = "⌣", z2 = "⪪", $2 = "⪬", G2 = "⪬︀", U2 = "Ь", H2 = "ь", V2 = "⌿", W2 = "⧄", Z2 = "/", J2 = "𝕊", Q2 = "𝕤", Y2 = "♠", X2 = "♠", K2 = "∥", eR = "⊓", nR = "⊓︀", tR = "⊔", oR = "⊔︀", sR = "√", rR = "⊏", cR = "⊑", aR = "⊏", iR = "⊑", lR = "⊐", uR = "⊒", pR = "⊐", hR = "⊒", dR = "□", fR = "□", mR = "⊓", gR = "⊏", _R = "⊑", bR = "⊐", kR = "⊒", yR = "⊔", wR = "▪", vR = "□", xR = "▪", AR = "→", SR = "𝒮", LR = "𝓈", CR = "∖", ER = "⌣", TR = "⋆", DR = "⋆", qR = "☆", jR = "★", RR = "ϵ", NR = "ϕ", PR = "¯", IR = "⊂", OR = "⋐", FR = "⪽", MR = "⫅", BR = "⊆", zR = "⫃", $R = "⫁", GR = "⫋", UR = "⊊", HR = "⪿", VR = "⥹", WR = "⊂", ZR = "⋐", JR = "⊆", QR = "⫅", YR = "⊆", XR = "⊊", KR = "⫋", eN = "⫇", nN = "⫕", tN = "⫓", oN = "⪸", sN = "≻", rN = "≽", cN = "≻", aN = "⪰", iN = "≽", lN = "≿", uN = "⪰", pN = "⪺", hN = "⪶", dN = "⋩", fN = "≿", mN = "∋", gN = "∑", _N = "∑", bN = "♪", kN = "¹", yN = "²", wN = "³", vN = "⊃", xN = "⋑", AN = "⪾", SN = "⫘", LN = "⫆", CN = "⊇", EN = "⫄", TN = "⊃", DN = "⊇", qN = "⟉", jN = "⫗", RN = "⥻", NN = "⫂", PN = "⫌", IN = "⊋", ON = "⫀", FN = "⊃", MN = "⋑", BN = "⊇", zN = "⫆", $N = "⊋", GN = "⫌", UN = "⫈", HN = "⫔", VN = "⫖", WN = "⤦", ZN = "↙", JN = "⇙", QN = "↙", YN = "⤪", XN = "ß", KN = "	", eP = "⌖", nP = "Τ", tP = "τ", oP = "⎴", sP = "Ť", rP = "ť", cP = "Ţ", aP = "ţ", iP = "Т", lP = "т", uP = "⃛", pP = "⌕", hP = "𝔗", dP = "𝔱", fP = "∴", mP = "∴", gP = "∴", _P = "Θ", bP = "θ", kP = "ϑ", yP = "ϑ", wP = "≈", vP = "∼", xP = "  ", AP = " ", SP = " ", LP = "≈", CP = "∼", EP = "Þ", TP = "þ", DP = "˜", qP = "∼", jP = "≃", RP = "≅", NP = "≈", PP = "⨱", IP = "⊠", OP = "×", FP = "⨰", MP = "∭", BP = "⤨", zP = "⌶", $P = "⫱", GP = "⊤", UP = "𝕋", HP = "𝕥", VP = "⫚", WP = "⤩", ZP = "‴", JP = "™", QP = "™", YP = "▵", XP = "▿", KP = "◃", eI = "⊴", nI = "≜", tI = "▹", oI = "⊵", sI = "◬", rI = "≜", cI = "⨺", aI = "⃛", iI = "⨹", lI = "⧍", uI = "⨻", pI = "⏢", hI = "𝒯", dI = "𝓉", fI = "Ц", mI = "ц", gI = "Ћ", _I = "ћ", bI = "Ŧ", kI = "ŧ", yI = "≬", wI = "↞", vI = "↠", xI = "Ú", AI = "ú", SI = "↑", LI = "↟", CI = "⇑", EI = "⥉", TI = "Ў", DI = "ў", qI = "Ŭ", jI = "ŭ", RI = "Û", NI = "û", PI = "У", II = "у", OI = "⇅", FI = "Ű", MI = "ű", BI = "⥮", zI = "⥾", $I = "𝔘", GI = "𝔲", UI = "Ù", HI = "ù", VI = "⥣", WI = "↿", ZI = "↾", JI = "▀", QI = "⌜", YI = "⌜", XI = "⌏", KI = "◸", eO = "Ū", nO = "ū", tO = "¨", oO = "_", sO = "⏟", rO = "⎵", cO = "⏝", aO = "⋃", iO = "⊎", lO = "Ų", uO = "ų", pO = "𝕌", hO = "𝕦", dO = "⤒", fO = "↑", mO = "↑", gO = "⇑", _O = "⇅", bO = "↕", kO = "↕", yO = "⇕", wO = "⥮", vO = "↿", xO = "↾", AO = "⊎", SO = "↖", LO = "↗", CO = "υ", EO = "ϒ", TO = "ϒ", DO = "Υ", qO = "υ", jO = "↥", RO = "⊥", NO = "⇈", PO = "⌝", IO = "⌝", OO = "⌎", FO = "Ů", MO = "ů", BO = "◹", zO = "𝒰", $O = "𝓊", GO = "⋰", UO = "Ũ", HO = "ũ", VO = "▵", WO = "▴", ZO = "⇈", JO = "Ü", QO = "ü", YO = "⦧", XO = "⦜", KO = "ϵ", eF = "ϰ", nF = "∅", tF = "ϕ", oF = "ϖ", sF = "∝", rF = "↕", cF = "⇕", aF = "ϱ", iF = "ς", lF = "⊊︀", uF = "⫋︀", pF = "⊋︀", hF = "⫌︀", dF = "ϑ", fF = "⊲", mF = "⊳", gF = "⫨", _F = "⫫", bF = "⫩", kF = "В", yF = "в", wF = "⊢", vF = "⊨", xF = "⊩", AF = "⊫", SF = "⫦", LF = "⊻", CF = "∨", EF = "⋁", TF = "≚", DF = "⋮", qF = "|", jF = "‖", RF = "|", NF = "‖", PF = "∣", IF = "|", OF = "❘", FF = "≀", MF = " ", BF = "𝔙", zF = "𝔳", $F = "⊲", GF = "⊂⃒", UF = "⊃⃒", HF = "𝕍", VF = "𝕧", WF = "∝", ZF = "⊳", JF = "𝒱", QF = "𝓋", YF = "⫋︀", XF = "⊊︀", KF = "⫌︀", e3 = "⊋︀", n3 = "⊪", t3 = "⦚", o3 = "Ŵ", s3 = "ŵ", r3 = "⩟", c3 = "∧", a3 = "⋀", i3 = "≙", l3 = "℘", u3 = "𝔚", p3 = "𝔴", h3 = "𝕎", d3 = "𝕨", f3 = "℘", m3 = "≀", g3 = "≀", _3 = "𝒲", b3 = "𝓌", k3 = "⋂", y3 = "◯", w3 = "⋃", v3 = "▽", x3 = "𝔛", A3 = "𝔵", S3 = "⟷", L3 = "⟺", C3 = "Ξ", E3 = "ξ", T3 = "⟵", D3 = "⟸", q3 = "⟼", j3 = "⋻", R3 = "⨀", N3 = "𝕏", P3 = "𝕩", I3 = "⨁", O3 = "⨂", F3 = "⟶", M3 = "⟹", B3 = "𝒳", z3 = "𝓍", $3 = "⨆", G3 = "⨄", U3 = "△", H3 = "⋁", V3 = "⋀", W3 = "Ý", Z3 = "ý", J3 = "Я", Q3 = "я", Y3 = "Ŷ", X3 = "ŷ", K3 = "Ы", eM = "ы", nM = "¥", tM = "𝔜", oM = "𝔶", sM = "Ї", rM = "ї", cM = "𝕐", aM = "𝕪", iM = "𝒴", lM = "𝓎", uM = "Ю", pM = "ю", hM = "ÿ", dM = "Ÿ", fM = "Ź", mM = "ź", gM = "Ž", _M = "ž", bM = "З", kM = "з", yM = "Ż", wM = "ż", vM = "ℨ", xM = "​", AM = "Ζ", SM = "ζ", LM = "𝔷", CM = "ℨ", EM = "Ж", TM = "ж", DM = "⇝", qM = "𝕫", jM = "ℤ", RM = "𝒵", NM = "𝓏", PM = "‍", IM = "‌", OM = {
  Aacute: ks,
  aacute: ys,
  Abreve: ws,
  abreve: vs,
  ac: xs,
  acd: As,
  acE: Ss,
  Acirc: Ls,
  acirc: Cs,
  acute: Es,
  Acy: Ts,
  acy: Ds,
  AElig: qs,
  aelig: js,
  af: Rs,
  Afr: Ns,
  afr: Ps,
  Agrave: Is,
  agrave: Os,
  alefsym: Fs,
  aleph: Ms,
  Alpha: Bs,
  alpha: zs,
  Amacr: $s,
  amacr: Gs,
  amalg: Us,
  amp: Hs,
  AMP: Vs,
  andand: Ws,
  And: Zs,
  and: Js,
  andd: Qs,
  andslope: Ys,
  andv: Xs,
  ang: Ks,
  ange: er,
  angle: nr,
  angmsdaa: tr,
  angmsdab: or,
  angmsdac: sr,
  angmsdad: rr,
  angmsdae: cr,
  angmsdaf: ar,
  angmsdag: ir,
  angmsdah: lr,
  angmsd: ur,
  angrt: pr,
  angrtvb: hr,
  angrtvbd: dr,
  angsph: fr,
  angst: mr,
  angzarr: gr,
  Aogon: _r,
  aogon: br,
  Aopf: kr,
  aopf: yr,
  apacir: wr,
  ap: vr,
  apE: xr,
  ape: Ar,
  apid: Sr,
  apos: Lr,
  ApplyFunction: Cr,
  approx: Er,
  approxeq: Tr,
  Aring: Dr,
  aring: qr,
  Ascr: jr,
  ascr: Rr,
  Assign: Nr,
  ast: Pr,
  asymp: Ir,
  asympeq: Or,
  Atilde: Fr,
  atilde: Mr,
  Auml: Br,
  auml: zr,
  awconint: $r,
  awint: Gr,
  backcong: Ur,
  backepsilon: Hr,
  backprime: Vr,
  backsim: Wr,
  backsimeq: Zr,
  Backslash: Jr,
  Barv: Qr,
  barvee: Yr,
  barwed: Xr,
  Barwed: Kr,
  barwedge: ec,
  bbrk: nc,
  bbrktbrk: tc,
  bcong: oc,
  Bcy: sc,
  bcy: rc,
  bdquo: cc,
  becaus: ac,
  because: ic,
  Because: lc,
  bemptyv: uc,
  bepsi: pc,
  bernou: hc,
  Bernoullis: dc,
  Beta: fc,
  beta: mc,
  beth: gc,
  between: _c,
  Bfr: bc,
  bfr: kc,
  bigcap: yc,
  bigcirc: wc,
  bigcup: vc,
  bigodot: xc,
  bigoplus: Ac,
  bigotimes: Sc,
  bigsqcup: Lc,
  bigstar: Cc,
  bigtriangledown: Ec,
  bigtriangleup: Tc,
  biguplus: Dc,
  bigvee: qc,
  bigwedge: jc,
  bkarow: Rc,
  blacklozenge: Nc,
  blacksquare: Pc,
  blacktriangle: Ic,
  blacktriangledown: Oc,
  blacktriangleleft: Fc,
  blacktriangleright: Mc,
  blank: Bc,
  blk12: zc,
  blk14: $c,
  blk34: Gc,
  block: Uc,
  bne: Hc,
  bnequiv: Vc,
  bNot: Wc,
  bnot: Zc,
  Bopf: Jc,
  bopf: Qc,
  bot: Yc,
  bottom: Xc,
  bowtie: Kc,
  boxbox: ea,
  boxdl: na,
  boxdL: ta,
  boxDl: oa,
  boxDL: sa,
  boxdr: ra,
  boxdR: ca,
  boxDr: aa,
  boxDR: ia,
  boxh: la,
  boxH: ua,
  boxhd: pa,
  boxHd: ha,
  boxhD: da,
  boxHD: fa,
  boxhu: ma,
  boxHu: ga,
  boxhU: _a,
  boxHU: ba,
  boxminus: ka,
  boxplus: ya,
  boxtimes: wa,
  boxul: va,
  boxuL: xa,
  boxUl: Aa,
  boxUL: Sa,
  boxur: La,
  boxuR: Ca,
  boxUr: Ea,
  boxUR: Ta,
  boxv: Da,
  boxV: qa,
  boxvh: ja,
  boxvH: Ra,
  boxVh: Na,
  boxVH: Pa,
  boxvl: Ia,
  boxvL: Oa,
  boxVl: Fa,
  boxVL: Ma,
  boxvr: Ba,
  boxvR: za,
  boxVr: $a,
  boxVR: Ga,
  bprime: Ua,
  breve: Ha,
  Breve: Va,
  brvbar: Wa,
  bscr: Za,
  Bscr: Ja,
  bsemi: Qa,
  bsim: Ya,
  bsime: Xa,
  bsolb: Ka,
  bsol: ei,
  bsolhsub: ni,
  bull: ti,
  bullet: oi,
  bump: si,
  bumpE: ri,
  bumpe: ci,
  Bumpeq: ai,
  bumpeq: ii,
  Cacute: li,
  cacute: ui,
  capand: pi,
  capbrcup: hi,
  capcap: di,
  cap: fi,
  Cap: mi,
  capcup: gi,
  capdot: _i,
  CapitalDifferentialD: bi,
  caps: ki,
  caret: yi,
  caron: wi,
  Cayleys: vi,
  ccaps: xi,
  Ccaron: Ai,
  ccaron: Si,
  Ccedil: Li,
  ccedil: Ci,
  Ccirc: Ei,
  ccirc: Ti,
  Cconint: Di,
  ccups: qi,
  ccupssm: ji,
  Cdot: Ri,
  cdot: Ni,
  cedil: Pi,
  Cedilla: Ii,
  cemptyv: Oi,
  cent: Fi,
  centerdot: Mi,
  CenterDot: Bi,
  cfr: zi,
  Cfr: $i,
  CHcy: Gi,
  chcy: Ui,
  check: Hi,
  checkmark: Vi,
  Chi: Wi,
  chi: Zi,
  circ: Ji,
  circeq: Qi,
  circlearrowleft: Yi,
  circlearrowright: Xi,
  circledast: Ki,
  circledcirc: el,
  circleddash: nl,
  CircleDot: tl,
  circledR: ol,
  circledS: sl,
  CircleMinus: rl,
  CirclePlus: cl,
  CircleTimes: al,
  cir: il,
  cirE: ll,
  cire: ul,
  cirfnint: pl,
  cirmid: hl,
  cirscir: dl,
  ClockwiseContourIntegral: fl,
  CloseCurlyDoubleQuote: ml,
  CloseCurlyQuote: gl,
  clubs: _l,
  clubsuit: bl,
  colon: kl,
  Colon: yl,
  Colone: wl,
  colone: vl,
  coloneq: xl,
  comma: Al,
  commat: Sl,
  comp: Ll,
  compfn: Cl,
  complement: El,
  complexes: Tl,
  cong: Dl,
  congdot: ql,
  Congruent: jl,
  conint: Rl,
  Conint: Nl,
  ContourIntegral: Pl,
  copf: Il,
  Copf: Ol,
  coprod: Fl,
  Coproduct: Ml,
  copy: Bl,
  COPY: zl,
  copysr: $l,
  CounterClockwiseContourIntegral: Gl,
  crarr: Ul,
  cross: Hl,
  Cross: Vl,
  Cscr: Wl,
  cscr: Zl,
  csub: Jl,
  csube: Ql,
  csup: Yl,
  csupe: Xl,
  ctdot: Kl,
  cudarrl: eu,
  cudarrr: nu,
  cuepr: tu,
  cuesc: ou,
  cularr: su,
  cularrp: ru,
  cupbrcap: cu,
  cupcap: au,
  CupCap: iu,
  cup: lu,
  Cup: uu,
  cupcup: pu,
  cupdot: hu,
  cupor: du,
  cups: fu,
  curarr: mu,
  curarrm: gu,
  curlyeqprec: _u,
  curlyeqsucc: bu,
  curlyvee: ku,
  curlywedge: yu,
  curren: wu,
  curvearrowleft: vu,
  curvearrowright: xu,
  cuvee: Au,
  cuwed: Su,
  cwconint: Lu,
  cwint: Cu,
  cylcty: Eu,
  dagger: Tu,
  Dagger: Du,
  daleth: qu,
  darr: ju,
  Darr: Ru,
  dArr: Nu,
  dash: Pu,
  Dashv: Iu,
  dashv: Ou,
  dbkarow: Fu,
  dblac: Mu,
  Dcaron: Bu,
  dcaron: zu,
  Dcy: $u,
  dcy: Gu,
  ddagger: Uu,
  ddarr: Hu,
  DD: Vu,
  dd: Wu,
  DDotrahd: Zu,
  ddotseq: Ju,
  deg: Qu,
  Del: Yu,
  Delta: Xu,
  delta: Ku,
  demptyv: ep,
  dfisht: np,
  Dfr: tp,
  dfr: op,
  dHar: sp,
  dharl: rp,
  dharr: cp,
  DiacriticalAcute: ap,
  DiacriticalDot: ip,
  DiacriticalDoubleAcute: lp,
  DiacriticalGrave: up,
  DiacriticalTilde: pp,
  diam: hp,
  diamond: dp,
  Diamond: fp,
  diamondsuit: mp,
  diams: gp,
  die: _p,
  DifferentialD: bp,
  digamma: kp,
  disin: yp,
  div: wp,
  divide: vp,
  divideontimes: xp,
  divonx: Ap,
  DJcy: Sp,
  djcy: Lp,
  dlcorn: Cp,
  dlcrop: Ep,
  dollar: Tp,
  Dopf: Dp,
  dopf: qp,
  Dot: jp,
  dot: Rp,
  DotDot: Np,
  doteq: Pp,
  doteqdot: Ip,
  DotEqual: Op,
  dotminus: Fp,
  dotplus: Mp,
  dotsquare: Bp,
  doublebarwedge: zp,
  DoubleContourIntegral: $p,
  DoubleDot: Gp,
  DoubleDownArrow: Up,
  DoubleLeftArrow: Hp,
  DoubleLeftRightArrow: Vp,
  DoubleLeftTee: Wp,
  DoubleLongLeftArrow: Zp,
  DoubleLongLeftRightArrow: Jp,
  DoubleLongRightArrow: Qp,
  DoubleRightArrow: Yp,
  DoubleRightTee: Xp,
  DoubleUpArrow: Kp,
  DoubleUpDownArrow: eh,
  DoubleVerticalBar: nh,
  DownArrowBar: th,
  downarrow: oh,
  DownArrow: sh,
  Downarrow: rh,
  DownArrowUpArrow: ch,
  DownBreve: ah,
  downdownarrows: ih,
  downharpoonleft: lh,
  downharpoonright: uh,
  DownLeftRightVector: ph,
  DownLeftTeeVector: hh,
  DownLeftVectorBar: dh,
  DownLeftVector: fh,
  DownRightTeeVector: mh,
  DownRightVectorBar: gh,
  DownRightVector: _h,
  DownTeeArrow: bh,
  DownTee: kh,
  drbkarow: yh,
  drcorn: wh,
  drcrop: vh,
  Dscr: xh,
  dscr: Ah,
  DScy: Sh,
  dscy: Lh,
  dsol: Ch,
  Dstrok: Eh,
  dstrok: Th,
  dtdot: Dh,
  dtri: qh,
  dtrif: jh,
  duarr: Rh,
  duhar: Nh,
  dwangle: Ph,
  DZcy: Ih,
  dzcy: Oh,
  dzigrarr: Fh,
  Eacute: Mh,
  eacute: Bh,
  easter: zh,
  Ecaron: $h,
  ecaron: Gh,
  Ecirc: Uh,
  ecirc: Hh,
  ecir: Vh,
  ecolon: Wh,
  Ecy: Zh,
  ecy: Jh,
  eDDot: Qh,
  Edot: Yh,
  edot: Xh,
  eDot: Kh,
  ee: ed,
  efDot: nd,
  Efr: td,
  efr: od,
  eg: sd,
  Egrave: rd,
  egrave: cd,
  egs: ad,
  egsdot: id,
  el: ld,
  Element: ud,
  elinters: pd,
  ell: hd,
  els: dd,
  elsdot: fd,
  Emacr: md,
  emacr: gd,
  empty: _d,
  emptyset: bd,
  EmptySmallSquare: kd,
  emptyv: yd,
  EmptyVerySmallSquare: wd,
  emsp13: vd,
  emsp14: xd,
  emsp: Ad,
  ENG: Sd,
  eng: Ld,
  ensp: Cd,
  Eogon: Ed,
  eogon: Td,
  Eopf: Dd,
  eopf: qd,
  epar: jd,
  eparsl: Rd,
  eplus: Nd,
  epsi: Pd,
  Epsilon: Id,
  epsilon: Od,
  epsiv: Fd,
  eqcirc: Md,
  eqcolon: Bd,
  eqsim: zd,
  eqslantgtr: $d,
  eqslantless: Gd,
  Equal: Ud,
  equals: Hd,
  EqualTilde: Vd,
  equest: Wd,
  Equilibrium: Zd,
  equiv: Jd,
  equivDD: Qd,
  eqvparsl: Yd,
  erarr: Xd,
  erDot: Kd,
  escr: ef,
  Escr: nf,
  esdot: tf,
  Esim: of,
  esim: sf,
  Eta: rf,
  eta: cf,
  ETH: af,
  eth: lf,
  Euml: uf,
  euml: pf,
  euro: hf,
  excl: df,
  exist: ff,
  Exists: mf,
  expectation: gf,
  exponentiale: _f,
  ExponentialE: bf,
  fallingdotseq: kf,
  Fcy: yf,
  fcy: wf,
  female: vf,
  ffilig: xf,
  fflig: Af,
  ffllig: Sf,
  Ffr: Lf,
  ffr: Cf,
  filig: Ef,
  FilledSmallSquare: Tf,
  FilledVerySmallSquare: Df,
  fjlig: qf,
  flat: jf,
  fllig: Rf,
  fltns: Nf,
  fnof: Pf,
  Fopf: If,
  fopf: Of,
  forall: Ff,
  ForAll: Mf,
  fork: Bf,
  forkv: zf,
  Fouriertrf: $f,
  fpartint: Gf,
  frac12: Uf,
  frac13: Hf,
  frac14: Vf,
  frac15: Wf,
  frac16: Zf,
  frac18: Jf,
  frac23: Qf,
  frac25: Yf,
  frac34: Xf,
  frac35: Kf,
  frac38: em,
  frac45: nm,
  frac56: tm,
  frac58: om,
  frac78: sm,
  frasl: rm,
  frown: cm,
  fscr: am,
  Fscr: im,
  gacute: lm,
  Gamma: um,
  gamma: pm,
  Gammad: hm,
  gammad: dm,
  gap: fm,
  Gbreve: mm,
  gbreve: gm,
  Gcedil: _m,
  Gcirc: bm,
  gcirc: km,
  Gcy: ym,
  gcy: wm,
  Gdot: vm,
  gdot: xm,
  ge: Am,
  gE: Sm,
  gEl: Lm,
  gel: Cm,
  geq: Em,
  geqq: Tm,
  geqslant: Dm,
  gescc: qm,
  ges: jm,
  gesdot: Rm,
  gesdoto: Nm,
  gesdotol: Pm,
  gesl: Im,
  gesles: Om,
  Gfr: Fm,
  gfr: Mm,
  gg: Bm,
  Gg: zm,
  ggg: $m,
  gimel: Gm,
  GJcy: Um,
  gjcy: Hm,
  gla: Vm,
  gl: Wm,
  glE: Zm,
  glj: Jm,
  gnap: Qm,
  gnapprox: Ym,
  gne: Xm,
  gnE: Km,
  gneq: eg,
  gneqq: ng,
  gnsim: tg,
  Gopf: og,
  gopf: sg,
  grave: rg,
  GreaterEqual: cg,
  GreaterEqualLess: ag,
  GreaterFullEqual: ig,
  GreaterGreater: lg,
  GreaterLess: ug,
  GreaterSlantEqual: pg,
  GreaterTilde: hg,
  Gscr: dg,
  gscr: fg,
  gsim: mg,
  gsime: gg,
  gsiml: _g,
  gtcc: bg,
  gtcir: kg,
  gt: yg,
  GT: wg,
  Gt: vg,
  gtdot: xg,
  gtlPar: Ag,
  gtquest: Sg,
  gtrapprox: Lg,
  gtrarr: Cg,
  gtrdot: Eg,
  gtreqless: Tg,
  gtreqqless: Dg,
  gtrless: qg,
  gtrsim: jg,
  gvertneqq: Rg,
  gvnE: Ng,
  Hacek: Pg,
  hairsp: Ig,
  half: Og,
  hamilt: Fg,
  HARDcy: Mg,
  hardcy: Bg,
  harrcir: zg,
  harr: $g,
  hArr: Gg,
  harrw: Ug,
  Hat: Hg,
  hbar: Vg,
  Hcirc: Wg,
  hcirc: Zg,
  hearts: Jg,
  heartsuit: Qg,
  hellip: Yg,
  hercon: Xg,
  hfr: Kg,
  Hfr: e_,
  HilbertSpace: n_,
  hksearow: t_,
  hkswarow: o_,
  hoarr: s_,
  homtht: r_,
  hookleftarrow: c_,
  hookrightarrow: a_,
  hopf: i_,
  Hopf: l_,
  horbar: u_,
  HorizontalLine: p_,
  hscr: h_,
  Hscr: d_,
  hslash: f_,
  Hstrok: m_,
  hstrok: g_,
  HumpDownHump: __,
  HumpEqual: b_,
  hybull: k_,
  hyphen: y_,
  Iacute: w_,
  iacute: v_,
  ic: x_,
  Icirc: A_,
  icirc: S_,
  Icy: L_,
  icy: C_,
  Idot: E_,
  IEcy: T_,
  iecy: D_,
  iexcl: q_,
  iff: j_,
  ifr: R_,
  Ifr: N_,
  Igrave: P_,
  igrave: I_,
  ii: O_,
  iiiint: F_,
  iiint: M_,
  iinfin: B_,
  iiota: z_,
  IJlig: $_,
  ijlig: G_,
  Imacr: U_,
  imacr: H_,
  image: V_,
  ImaginaryI: W_,
  imagline: Z_,
  imagpart: J_,
  imath: Q_,
  Im: Y_,
  imof: X_,
  imped: K_,
  Implies: eb,
  incare: nb,
  in: "∈",
  infin: tb,
  infintie: ob,
  inodot: sb,
  intcal: rb,
  int: cb,
  Int: ab,
  integers: ib,
  Integral: lb,
  intercal: ub,
  Intersection: pb,
  intlarhk: hb,
  intprod: db,
  InvisibleComma: fb,
  InvisibleTimes: mb,
  IOcy: gb,
  iocy: _b,
  Iogon: bb,
  iogon: kb,
  Iopf: yb,
  iopf: wb,
  Iota: vb,
  iota: xb,
  iprod: Ab,
  iquest: Sb,
  iscr: Lb,
  Iscr: Cb,
  isin: Eb,
  isindot: Tb,
  isinE: Db,
  isins: qb,
  isinsv: jb,
  isinv: Rb,
  it: Nb,
  Itilde: Pb,
  itilde: Ib,
  Iukcy: Ob,
  iukcy: Fb,
  Iuml: Mb,
  iuml: Bb,
  Jcirc: zb,
  jcirc: $b,
  Jcy: Gb,
  jcy: Ub,
  Jfr: Hb,
  jfr: Vb,
  jmath: Wb,
  Jopf: Zb,
  jopf: Jb,
  Jscr: Qb,
  jscr: Yb,
  Jsercy: Xb,
  jsercy: Kb,
  Jukcy: ek,
  jukcy: nk,
  Kappa: tk,
  kappa: ok,
  kappav: sk,
  Kcedil: rk,
  kcedil: ck,
  Kcy: ak,
  kcy: ik,
  Kfr: lk,
  kfr: uk,
  kgreen: pk,
  KHcy: hk,
  khcy: dk,
  KJcy: fk,
  kjcy: mk,
  Kopf: gk,
  kopf: _k,
  Kscr: bk,
  kscr: kk,
  lAarr: yk,
  Lacute: wk,
  lacute: vk,
  laemptyv: xk,
  lagran: Ak,
  Lambda: Sk,
  lambda: Lk,
  lang: Ck,
  Lang: Ek,
  langd: Tk,
  langle: Dk,
  lap: qk,
  Laplacetrf: jk,
  laquo: Rk,
  larrb: Nk,
  larrbfs: Pk,
  larr: Ik,
  Larr: Ok,
  lArr: Fk,
  larrfs: Mk,
  larrhk: Bk,
  larrlp: zk,
  larrpl: $k,
  larrsim: Gk,
  larrtl: Uk,
  latail: Hk,
  lAtail: Vk,
  lat: Wk,
  late: Zk,
  lates: Jk,
  lbarr: Qk,
  lBarr: Yk,
  lbbrk: Xk,
  lbrace: Kk,
  lbrack: ey,
  lbrke: ny,
  lbrksld: ty,
  lbrkslu: oy,
  Lcaron: sy,
  lcaron: ry,
  Lcedil: cy,
  lcedil: ay,
  lceil: iy,
  lcub: ly,
  Lcy: uy,
  lcy: py,
  ldca: hy,
  ldquo: dy,
  ldquor: fy,
  ldrdhar: my,
  ldrushar: gy,
  ldsh: _y,
  le: by,
  lE: ky,
  LeftAngleBracket: yy,
  LeftArrowBar: wy,
  leftarrow: vy,
  LeftArrow: xy,
  Leftarrow: Ay,
  LeftArrowRightArrow: Sy,
  leftarrowtail: Ly,
  LeftCeiling: Cy,
  LeftDoubleBracket: Ey,
  LeftDownTeeVector: Ty,
  LeftDownVectorBar: Dy,
  LeftDownVector: qy,
  LeftFloor: jy,
  leftharpoondown: Ry,
  leftharpoonup: Ny,
  leftleftarrows: Py,
  leftrightarrow: Iy,
  LeftRightArrow: Oy,
  Leftrightarrow: Fy,
  leftrightarrows: My,
  leftrightharpoons: By,
  leftrightsquigarrow: zy,
  LeftRightVector: $y,
  LeftTeeArrow: Gy,
  LeftTee: Uy,
  LeftTeeVector: Hy,
  leftthreetimes: Vy,
  LeftTriangleBar: Wy,
  LeftTriangle: Zy,
  LeftTriangleEqual: Jy,
  LeftUpDownVector: Qy,
  LeftUpTeeVector: Yy,
  LeftUpVectorBar: Xy,
  LeftUpVector: Ky,
  LeftVectorBar: ew,
  LeftVector: nw,
  lEg: tw,
  leg: ow,
  leq: sw,
  leqq: rw,
  leqslant: cw,
  lescc: aw,
  les: iw,
  lesdot: lw,
  lesdoto: uw,
  lesdotor: pw,
  lesg: hw,
  lesges: dw,
  lessapprox: fw,
  lessdot: mw,
  lesseqgtr: gw,
  lesseqqgtr: _w,
  LessEqualGreater: bw,
  LessFullEqual: kw,
  LessGreater: yw,
  lessgtr: ww,
  LessLess: vw,
  lesssim: xw,
  LessSlantEqual: Aw,
  LessTilde: Sw,
  lfisht: Lw,
  lfloor: Cw,
  Lfr: Ew,
  lfr: Tw,
  lg: Dw,
  lgE: qw,
  lHar: jw,
  lhard: Rw,
  lharu: Nw,
  lharul: Pw,
  lhblk: Iw,
  LJcy: Ow,
  ljcy: Fw,
  llarr: Mw,
  ll: Bw,
  Ll: zw,
  llcorner: $w,
  Lleftarrow: Gw,
  llhard: Uw,
  lltri: Hw,
  Lmidot: Vw,
  lmidot: Ww,
  lmoustache: Zw,
  lmoust: Jw,
  lnap: Qw,
  lnapprox: Yw,
  lne: Xw,
  lnE: Kw,
  lneq: e0,
  lneqq: n0,
  lnsim: t0,
  loang: o0,
  loarr: s0,
  lobrk: r0,
  longleftarrow: c0,
  LongLeftArrow: a0,
  Longleftarrow: i0,
  longleftrightarrow: l0,
  LongLeftRightArrow: u0,
  Longleftrightarrow: p0,
  longmapsto: h0,
  longrightarrow: d0,
  LongRightArrow: f0,
  Longrightarrow: m0,
  looparrowleft: g0,
  looparrowright: _0,
  lopar: b0,
  Lopf: k0,
  lopf: y0,
  loplus: w0,
  lotimes: v0,
  lowast: x0,
  lowbar: A0,
  LowerLeftArrow: S0,
  LowerRightArrow: L0,
  loz: C0,
  lozenge: E0,
  lozf: T0,
  lpar: D0,
  lparlt: q0,
  lrarr: j0,
  lrcorner: R0,
  lrhar: N0,
  lrhard: P0,
  lrm: I0,
  lrtri: O0,
  lsaquo: F0,
  lscr: M0,
  Lscr: B0,
  lsh: z0,
  Lsh: $0,
  lsim: G0,
  lsime: U0,
  lsimg: H0,
  lsqb: V0,
  lsquo: W0,
  lsquor: Z0,
  Lstrok: J0,
  lstrok: Q0,
  ltcc: Y0,
  ltcir: X0,
  lt: K0,
  LT: ev,
  Lt: nv,
  ltdot: tv,
  lthree: ov,
  ltimes: sv,
  ltlarr: rv,
  ltquest: cv,
  ltri: av,
  ltrie: iv,
  ltrif: lv,
  ltrPar: uv,
  lurdshar: pv,
  luruhar: hv,
  lvertneqq: dv,
  lvnE: fv,
  macr: mv,
  male: gv,
  malt: _v,
  maltese: bv,
  Map: "⤅",
  map: kv,
  mapsto: yv,
  mapstodown: wv,
  mapstoleft: vv,
  mapstoup: xv,
  marker: Av,
  mcomma: Sv,
  Mcy: Lv,
  mcy: Cv,
  mdash: Ev,
  mDDot: Tv,
  measuredangle: Dv,
  MediumSpace: qv,
  Mellintrf: jv,
  Mfr: Rv,
  mfr: Nv,
  mho: Pv,
  micro: Iv,
  midast: Ov,
  midcir: Fv,
  mid: Mv,
  middot: Bv,
  minusb: zv,
  minus: $v,
  minusd: Gv,
  minusdu: Uv,
  MinusPlus: Hv,
  mlcp: Vv,
  mldr: Wv,
  mnplus: Zv,
  models: Jv,
  Mopf: Qv,
  mopf: Yv,
  mp: Xv,
  mscr: Kv,
  Mscr: e1,
  mstpos: n1,
  Mu: t1,
  mu: o1,
  multimap: s1,
  mumap: r1,
  nabla: c1,
  Nacute: a1,
  nacute: i1,
  nang: l1,
  nap: u1,
  napE: p1,
  napid: h1,
  napos: d1,
  napprox: f1,
  natural: m1,
  naturals: g1,
  natur: _1,
  nbsp: b1,
  nbump: k1,
  nbumpe: y1,
  ncap: w1,
  Ncaron: v1,
  ncaron: x1,
  Ncedil: A1,
  ncedil: S1,
  ncong: L1,
  ncongdot: C1,
  ncup: E1,
  Ncy: T1,
  ncy: D1,
  ndash: q1,
  nearhk: j1,
  nearr: R1,
  neArr: N1,
  nearrow: P1,
  ne: I1,
  nedot: O1,
  NegativeMediumSpace: F1,
  NegativeThickSpace: M1,
  NegativeThinSpace: B1,
  NegativeVeryThinSpace: z1,
  nequiv: $1,
  nesear: G1,
  nesim: U1,
  NestedGreaterGreater: H1,
  NestedLessLess: V1,
  NewLine: W1,
  nexist: Z1,
  nexists: J1,
  Nfr: Q1,
  nfr: Y1,
  ngE: X1,
  nge: K1,
  ngeq: ex,
  ngeqq: nx,
  ngeqslant: tx,
  nges: ox,
  nGg: sx,
  ngsim: rx,
  nGt: cx,
  ngt: ax,
  ngtr: ix,
  nGtv: lx,
  nharr: ux,
  nhArr: px,
  nhpar: hx,
  ni: dx,
  nis: fx,
  nisd: mx,
  niv: gx,
  NJcy: _x,
  njcy: bx,
  nlarr: kx,
  nlArr: yx,
  nldr: wx,
  nlE: vx,
  nle: xx,
  nleftarrow: Ax,
  nLeftarrow: Sx,
  nleftrightarrow: Lx,
  nLeftrightarrow: Cx,
  nleq: Ex,
  nleqq: Tx,
  nleqslant: Dx,
  nles: qx,
  nless: jx,
  nLl: Rx,
  nlsim: Nx,
  nLt: Px,
  nlt: Ix,
  nltri: Ox,
  nltrie: Fx,
  nLtv: Mx,
  nmid: Bx,
  NoBreak: zx,
  NonBreakingSpace: $x,
  nopf: Gx,
  Nopf: Ux,
  Not: Hx,
  not: Vx,
  NotCongruent: Wx,
  NotCupCap: Zx,
  NotDoubleVerticalBar: Jx,
  NotElement: Qx,
  NotEqual: Yx,
  NotEqualTilde: Xx,
  NotExists: Kx,
  NotGreater: eA,
  NotGreaterEqual: nA,
  NotGreaterFullEqual: tA,
  NotGreaterGreater: oA,
  NotGreaterLess: sA,
  NotGreaterSlantEqual: rA,
  NotGreaterTilde: cA,
  NotHumpDownHump: aA,
  NotHumpEqual: iA,
  notin: lA,
  notindot: uA,
  notinE: pA,
  notinva: hA,
  notinvb: dA,
  notinvc: fA,
  NotLeftTriangleBar: mA,
  NotLeftTriangle: gA,
  NotLeftTriangleEqual: _A,
  NotLess: bA,
  NotLessEqual: kA,
  NotLessGreater: yA,
  NotLessLess: wA,
  NotLessSlantEqual: vA,
  NotLessTilde: xA,
  NotNestedGreaterGreater: AA,
  NotNestedLessLess: SA,
  notni: LA,
  notniva: CA,
  notnivb: EA,
  notnivc: TA,
  NotPrecedes: DA,
  NotPrecedesEqual: qA,
  NotPrecedesSlantEqual: jA,
  NotReverseElement: RA,
  NotRightTriangleBar: NA,
  NotRightTriangle: PA,
  NotRightTriangleEqual: IA,
  NotSquareSubset: OA,
  NotSquareSubsetEqual: FA,
  NotSquareSuperset: MA,
  NotSquareSupersetEqual: BA,
  NotSubset: zA,
  NotSubsetEqual: $A,
  NotSucceeds: GA,
  NotSucceedsEqual: UA,
  NotSucceedsSlantEqual: HA,
  NotSucceedsTilde: VA,
  NotSuperset: WA,
  NotSupersetEqual: ZA,
  NotTilde: JA,
  NotTildeEqual: QA,
  NotTildeFullEqual: YA,
  NotTildeTilde: XA,
  NotVerticalBar: KA,
  nparallel: eS,
  npar: nS,
  nparsl: tS,
  npart: oS,
  npolint: sS,
  npr: rS,
  nprcue: cS,
  nprec: aS,
  npreceq: iS,
  npre: lS,
  nrarrc: uS,
  nrarr: pS,
  nrArr: hS,
  nrarrw: dS,
  nrightarrow: fS,
  nRightarrow: mS,
  nrtri: gS,
  nrtrie: _S,
  nsc: bS,
  nsccue: kS,
  nsce: yS,
  Nscr: wS,
  nscr: vS,
  nshortmid: xS,
  nshortparallel: AS,
  nsim: SS,
  nsime: LS,
  nsimeq: CS,
  nsmid: ES,
  nspar: TS,
  nsqsube: DS,
  nsqsupe: qS,
  nsub: jS,
  nsubE: RS,
  nsube: NS,
  nsubset: PS,
  nsubseteq: IS,
  nsubseteqq: OS,
  nsucc: FS,
  nsucceq: MS,
  nsup: BS,
  nsupE: zS,
  nsupe: $S,
  nsupset: GS,
  nsupseteq: US,
  nsupseteqq: HS,
  ntgl: VS,
  Ntilde: WS,
  ntilde: ZS,
  ntlg: JS,
  ntriangleleft: QS,
  ntrianglelefteq: YS,
  ntriangleright: XS,
  ntrianglerighteq: KS,
  Nu: eL,
  nu: nL,
  num: tL,
  numero: oL,
  numsp: sL,
  nvap: rL,
  nvdash: cL,
  nvDash: aL,
  nVdash: iL,
  nVDash: lL,
  nvge: uL,
  nvgt: pL,
  nvHarr: hL,
  nvinfin: dL,
  nvlArr: fL,
  nvle: mL,
  nvlt: gL,
  nvltrie: _L,
  nvrArr: bL,
  nvrtrie: kL,
  nvsim: yL,
  nwarhk: wL,
  nwarr: vL,
  nwArr: xL,
  nwarrow: AL,
  nwnear: SL,
  Oacute: LL,
  oacute: CL,
  oast: EL,
  Ocirc: TL,
  ocirc: DL,
  ocir: qL,
  Ocy: jL,
  ocy: RL,
  odash: NL,
  Odblac: PL,
  odblac: IL,
  odiv: OL,
  odot: FL,
  odsold: ML,
  OElig: BL,
  oelig: zL,
  ofcir: $L,
  Ofr: GL,
  ofr: UL,
  ogon: HL,
  Ograve: VL,
  ograve: WL,
  ogt: ZL,
  ohbar: JL,
  ohm: QL,
  oint: YL,
  olarr: XL,
  olcir: KL,
  olcross: eC,
  oline: nC,
  olt: tC,
  Omacr: oC,
  omacr: sC,
  Omega: rC,
  omega: cC,
  Omicron: aC,
  omicron: iC,
  omid: lC,
  ominus: uC,
  Oopf: pC,
  oopf: hC,
  opar: dC,
  OpenCurlyDoubleQuote: fC,
  OpenCurlyQuote: mC,
  operp: gC,
  oplus: _C,
  orarr: bC,
  Or: kC,
  or: yC,
  ord: wC,
  order: vC,
  orderof: xC,
  ordf: AC,
  ordm: SC,
  origof: LC,
  oror: CC,
  orslope: EC,
  orv: TC,
  oS: DC,
  Oscr: qC,
  oscr: jC,
  Oslash: RC,
  oslash: NC,
  osol: PC,
  Otilde: IC,
  otilde: OC,
  otimesas: FC,
  Otimes: MC,
  otimes: BC,
  Ouml: zC,
  ouml: $C,
  ovbar: GC,
  OverBar: UC,
  OverBrace: HC,
  OverBracket: VC,
  OverParenthesis: WC,
  para: ZC,
  parallel: JC,
  par: QC,
  parsim: YC,
  parsl: XC,
  part: KC,
  PartialD: eE,
  Pcy: nE,
  pcy: tE,
  percnt: oE,
  period: sE,
  permil: rE,
  perp: cE,
  pertenk: aE,
  Pfr: iE,
  pfr: lE,
  Phi: uE,
  phi: pE,
  phiv: hE,
  phmmat: dE,
  phone: fE,
  Pi: mE,
  pi: gE,
  pitchfork: _E,
  piv: bE,
  planck: kE,
  planckh: yE,
  plankv: wE,
  plusacir: vE,
  plusb: xE,
  pluscir: AE,
  plus: SE,
  plusdo: LE,
  plusdu: CE,
  pluse: EE,
  PlusMinus: TE,
  plusmn: DE,
  plussim: qE,
  plustwo: jE,
  pm: RE,
  Poincareplane: NE,
  pointint: PE,
  popf: IE,
  Popf: OE,
  pound: FE,
  prap: ME,
  Pr: BE,
  pr: zE,
  prcue: $E,
  precapprox: GE,
  prec: UE,
  preccurlyeq: HE,
  Precedes: VE,
  PrecedesEqual: WE,
  PrecedesSlantEqual: ZE,
  PrecedesTilde: JE,
  preceq: QE,
  precnapprox: YE,
  precneqq: XE,
  precnsim: KE,
  pre: eT,
  prE: nT,
  precsim: tT,
  prime: oT,
  Prime: sT,
  primes: rT,
  prnap: cT,
  prnE: aT,
  prnsim: iT,
  prod: lT,
  Product: uT,
  profalar: pT,
  profline: hT,
  profsurf: dT,
  prop: fT,
  Proportional: mT,
  Proportion: gT,
  propto: _T,
  prsim: bT,
  prurel: kT,
  Pscr: yT,
  pscr: wT,
  Psi: vT,
  psi: xT,
  puncsp: AT,
  Qfr: ST,
  qfr: LT,
  qint: CT,
  qopf: ET,
  Qopf: TT,
  qprime: DT,
  Qscr: qT,
  qscr: jT,
  quaternions: RT,
  quatint: NT,
  quest: PT,
  questeq: IT,
  quot: OT,
  QUOT: FT,
  rAarr: MT,
  race: BT,
  Racute: zT,
  racute: $T,
  radic: GT,
  raemptyv: UT,
  rang: HT,
  Rang: VT,
  rangd: WT,
  range: ZT,
  rangle: JT,
  raquo: QT,
  rarrap: YT,
  rarrb: XT,
  rarrbfs: KT,
  rarrc: eD,
  rarr: nD,
  Rarr: tD,
  rArr: oD,
  rarrfs: sD,
  rarrhk: rD,
  rarrlp: cD,
  rarrpl: aD,
  rarrsim: iD,
  Rarrtl: lD,
  rarrtl: uD,
  rarrw: pD,
  ratail: hD,
  rAtail: dD,
  ratio: fD,
  rationals: mD,
  rbarr: gD,
  rBarr: _D,
  RBarr: bD,
  rbbrk: kD,
  rbrace: yD,
  rbrack: wD,
  rbrke: vD,
  rbrksld: xD,
  rbrkslu: AD,
  Rcaron: SD,
  rcaron: LD,
  Rcedil: CD,
  rcedil: ED,
  rceil: TD,
  rcub: DD,
  Rcy: qD,
  rcy: jD,
  rdca: RD,
  rdldhar: ND,
  rdquo: PD,
  rdquor: ID,
  rdsh: OD,
  real: FD,
  realine: MD,
  realpart: BD,
  reals: zD,
  Re: $D,
  rect: GD,
  reg: UD,
  REG: HD,
  ReverseElement: VD,
  ReverseEquilibrium: WD,
  ReverseUpEquilibrium: ZD,
  rfisht: JD,
  rfloor: QD,
  rfr: YD,
  Rfr: XD,
  rHar: KD,
  rhard: eq,
  rharu: nq,
  rharul: tq,
  Rho: oq,
  rho: sq,
  rhov: rq,
  RightAngleBracket: cq,
  RightArrowBar: aq,
  rightarrow: iq,
  RightArrow: lq,
  Rightarrow: uq,
  RightArrowLeftArrow: pq,
  rightarrowtail: hq,
  RightCeiling: dq,
  RightDoubleBracket: fq,
  RightDownTeeVector: mq,
  RightDownVectorBar: gq,
  RightDownVector: _q,
  RightFloor: bq,
  rightharpoondown: kq,
  rightharpoonup: yq,
  rightleftarrows: wq,
  rightleftharpoons: vq,
  rightrightarrows: xq,
  rightsquigarrow: Aq,
  RightTeeArrow: Sq,
  RightTee: Lq,
  RightTeeVector: Cq,
  rightthreetimes: Eq,
  RightTriangleBar: Tq,
  RightTriangle: Dq,
  RightTriangleEqual: qq,
  RightUpDownVector: jq,
  RightUpTeeVector: Rq,
  RightUpVectorBar: Nq,
  RightUpVector: Pq,
  RightVectorBar: Iq,
  RightVector: Oq,
  ring: Fq,
  risingdotseq: Mq,
  rlarr: Bq,
  rlhar: zq,
  rlm: $q,
  rmoustache: Gq,
  rmoust: Uq,
  rnmid: Hq,
  roang: Vq,
  roarr: Wq,
  robrk: Zq,
  ropar: Jq,
  ropf: Qq,
  Ropf: Yq,
  roplus: Xq,
  rotimes: Kq,
  RoundImplies: ej,
  rpar: nj,
  rpargt: tj,
  rppolint: oj,
  rrarr: sj,
  Rrightarrow: rj,
  rsaquo: cj,
  rscr: aj,
  Rscr: ij,
  rsh: lj,
  Rsh: uj,
  rsqb: pj,
  rsquo: hj,
  rsquor: dj,
  rthree: fj,
  rtimes: mj,
  rtri: gj,
  rtrie: _j,
  rtrif: bj,
  rtriltri: kj,
  RuleDelayed: yj,
  ruluhar: wj,
  rx: vj,
  Sacute: xj,
  sacute: Aj,
  sbquo: Sj,
  scap: Lj,
  Scaron: Cj,
  scaron: Ej,
  Sc: Tj,
  sc: Dj,
  sccue: qj,
  sce: jj,
  scE: Rj,
  Scedil: Nj,
  scedil: Pj,
  Scirc: Ij,
  scirc: Oj,
  scnap: Fj,
  scnE: Mj,
  scnsim: Bj,
  scpolint: zj,
  scsim: $j,
  Scy: Gj,
  scy: Uj,
  sdotb: Hj,
  sdot: Vj,
  sdote: Wj,
  searhk: Zj,
  searr: Jj,
  seArr: Qj,
  searrow: Yj,
  sect: Xj,
  semi: Kj,
  seswar: e2,
  setminus: n2,
  setmn: t2,
  sext: o2,
  Sfr: s2,
  sfr: r2,
  sfrown: c2,
  sharp: a2,
  SHCHcy: i2,
  shchcy: l2,
  SHcy: u2,
  shcy: p2,
  ShortDownArrow: h2,
  ShortLeftArrow: d2,
  shortmid: f2,
  shortparallel: m2,
  ShortRightArrow: g2,
  ShortUpArrow: _2,
  shy: b2,
  Sigma: k2,
  sigma: y2,
  sigmaf: w2,
  sigmav: v2,
  sim: x2,
  simdot: A2,
  sime: S2,
  simeq: L2,
  simg: C2,
  simgE: E2,
  siml: T2,
  simlE: D2,
  simne: q2,
  simplus: j2,
  simrarr: R2,
  slarr: N2,
  SmallCircle: P2,
  smallsetminus: I2,
  smashp: O2,
  smeparsl: F2,
  smid: M2,
  smile: B2,
  smt: z2,
  smte: $2,
  smtes: G2,
  SOFTcy: U2,
  softcy: H2,
  solbar: V2,
  solb: W2,
  sol: Z2,
  Sopf: J2,
  sopf: Q2,
  spades: Y2,
  spadesuit: X2,
  spar: K2,
  sqcap: eR,
  sqcaps: nR,
  sqcup: tR,
  sqcups: oR,
  Sqrt: sR,
  sqsub: rR,
  sqsube: cR,
  sqsubset: aR,
  sqsubseteq: iR,
  sqsup: lR,
  sqsupe: uR,
  sqsupset: pR,
  sqsupseteq: hR,
  square: dR,
  Square: fR,
  SquareIntersection: mR,
  SquareSubset: gR,
  SquareSubsetEqual: _R,
  SquareSuperset: bR,
  SquareSupersetEqual: kR,
  SquareUnion: yR,
  squarf: wR,
  squ: vR,
  squf: xR,
  srarr: AR,
  Sscr: SR,
  sscr: LR,
  ssetmn: CR,
  ssmile: ER,
  sstarf: TR,
  Star: DR,
  star: qR,
  starf: jR,
  straightepsilon: RR,
  straightphi: NR,
  strns: PR,
  sub: IR,
  Sub: OR,
  subdot: FR,
  subE: MR,
  sube: BR,
  subedot: zR,
  submult: $R,
  subnE: GR,
  subne: UR,
  subplus: HR,
  subrarr: VR,
  subset: WR,
  Subset: ZR,
  subseteq: JR,
  subseteqq: QR,
  SubsetEqual: YR,
  subsetneq: XR,
  subsetneqq: KR,
  subsim: eN,
  subsub: nN,
  subsup: tN,
  succapprox: oN,
  succ: sN,
  succcurlyeq: rN,
  Succeeds: cN,
  SucceedsEqual: aN,
  SucceedsSlantEqual: iN,
  SucceedsTilde: lN,
  succeq: uN,
  succnapprox: pN,
  succneqq: hN,
  succnsim: dN,
  succsim: fN,
  SuchThat: mN,
  sum: gN,
  Sum: _N,
  sung: bN,
  sup1: kN,
  sup2: yN,
  sup3: wN,
  sup: vN,
  Sup: xN,
  supdot: AN,
  supdsub: SN,
  supE: LN,
  supe: CN,
  supedot: EN,
  Superset: TN,
  SupersetEqual: DN,
  suphsol: qN,
  suphsub: jN,
  suplarr: RN,
  supmult: NN,
  supnE: PN,
  supne: IN,
  supplus: ON,
  supset: FN,
  Supset: MN,
  supseteq: BN,
  supseteqq: zN,
  supsetneq: $N,
  supsetneqq: GN,
  supsim: UN,
  supsub: HN,
  supsup: VN,
  swarhk: WN,
  swarr: ZN,
  swArr: JN,
  swarrow: QN,
  swnwar: YN,
  szlig: XN,
  Tab: KN,
  target: eP,
  Tau: nP,
  tau: tP,
  tbrk: oP,
  Tcaron: sP,
  tcaron: rP,
  Tcedil: cP,
  tcedil: aP,
  Tcy: iP,
  tcy: lP,
  tdot: uP,
  telrec: pP,
  Tfr: hP,
  tfr: dP,
  there4: fP,
  therefore: mP,
  Therefore: gP,
  Theta: _P,
  theta: bP,
  thetasym: kP,
  thetav: yP,
  thickapprox: wP,
  thicksim: vP,
  ThickSpace: xP,
  ThinSpace: AP,
  thinsp: SP,
  thkap: LP,
  thksim: CP,
  THORN: EP,
  thorn: TP,
  tilde: DP,
  Tilde: qP,
  TildeEqual: jP,
  TildeFullEqual: RP,
  TildeTilde: NP,
  timesbar: PP,
  timesb: IP,
  times: OP,
  timesd: FP,
  tint: MP,
  toea: BP,
  topbot: zP,
  topcir: $P,
  top: GP,
  Topf: UP,
  topf: HP,
  topfork: VP,
  tosa: WP,
  tprime: ZP,
  trade: JP,
  TRADE: QP,
  triangle: YP,
  triangledown: XP,
  triangleleft: KP,
  trianglelefteq: eI,
  triangleq: nI,
  triangleright: tI,
  trianglerighteq: oI,
  tridot: sI,
  trie: rI,
  triminus: cI,
  TripleDot: aI,
  triplus: iI,
  trisb: lI,
  tritime: uI,
  trpezium: pI,
  Tscr: hI,
  tscr: dI,
  TScy: fI,
  tscy: mI,
  TSHcy: gI,
  tshcy: _I,
  Tstrok: bI,
  tstrok: kI,
  twixt: yI,
  twoheadleftarrow: wI,
  twoheadrightarrow: vI,
  Uacute: xI,
  uacute: AI,
  uarr: SI,
  Uarr: LI,
  uArr: CI,
  Uarrocir: EI,
  Ubrcy: TI,
  ubrcy: DI,
  Ubreve: qI,
  ubreve: jI,
  Ucirc: RI,
  ucirc: NI,
  Ucy: PI,
  ucy: II,
  udarr: OI,
  Udblac: FI,
  udblac: MI,
  udhar: BI,
  ufisht: zI,
  Ufr: $I,
  ufr: GI,
  Ugrave: UI,
  ugrave: HI,
  uHar: VI,
  uharl: WI,
  uharr: ZI,
  uhblk: JI,
  ulcorn: QI,
  ulcorner: YI,
  ulcrop: XI,
  ultri: KI,
  Umacr: eO,
  umacr: nO,
  uml: tO,
  UnderBar: oO,
  UnderBrace: sO,
  UnderBracket: rO,
  UnderParenthesis: cO,
  Union: aO,
  UnionPlus: iO,
  Uogon: lO,
  uogon: uO,
  Uopf: pO,
  uopf: hO,
  UpArrowBar: dO,
  uparrow: fO,
  UpArrow: mO,
  Uparrow: gO,
  UpArrowDownArrow: _O,
  updownarrow: bO,
  UpDownArrow: kO,
  Updownarrow: yO,
  UpEquilibrium: wO,
  upharpoonleft: vO,
  upharpoonright: xO,
  uplus: AO,
  UpperLeftArrow: SO,
  UpperRightArrow: LO,
  upsi: CO,
  Upsi: EO,
  upsih: TO,
  Upsilon: DO,
  upsilon: qO,
  UpTeeArrow: jO,
  UpTee: RO,
  upuparrows: NO,
  urcorn: PO,
  urcorner: IO,
  urcrop: OO,
  Uring: FO,
  uring: MO,
  urtri: BO,
  Uscr: zO,
  uscr: $O,
  utdot: GO,
  Utilde: UO,
  utilde: HO,
  utri: VO,
  utrif: WO,
  uuarr: ZO,
  Uuml: JO,
  uuml: QO,
  uwangle: YO,
  vangrt: XO,
  varepsilon: KO,
  varkappa: eF,
  varnothing: nF,
  varphi: tF,
  varpi: oF,
  varpropto: sF,
  varr: rF,
  vArr: cF,
  varrho: aF,
  varsigma: iF,
  varsubsetneq: lF,
  varsubsetneqq: uF,
  varsupsetneq: pF,
  varsupsetneqq: hF,
  vartheta: dF,
  vartriangleleft: fF,
  vartriangleright: mF,
  vBar: gF,
  Vbar: _F,
  vBarv: bF,
  Vcy: kF,
  vcy: yF,
  vdash: wF,
  vDash: vF,
  Vdash: xF,
  VDash: AF,
  Vdashl: SF,
  veebar: LF,
  vee: CF,
  Vee: EF,
  veeeq: TF,
  vellip: DF,
  verbar: qF,
  Verbar: jF,
  vert: RF,
  Vert: NF,
  VerticalBar: PF,
  VerticalLine: IF,
  VerticalSeparator: OF,
  VerticalTilde: FF,
  VeryThinSpace: MF,
  Vfr: BF,
  vfr: zF,
  vltri: $F,
  vnsub: GF,
  vnsup: UF,
  Vopf: HF,
  vopf: VF,
  vprop: WF,
  vrtri: ZF,
  Vscr: JF,
  vscr: QF,
  vsubnE: YF,
  vsubne: XF,
  vsupnE: KF,
  vsupne: e3,
  Vvdash: n3,
  vzigzag: t3,
  Wcirc: o3,
  wcirc: s3,
  wedbar: r3,
  wedge: c3,
  Wedge: a3,
  wedgeq: i3,
  weierp: l3,
  Wfr: u3,
  wfr: p3,
  Wopf: h3,
  wopf: d3,
  wp: f3,
  wr: m3,
  wreath: g3,
  Wscr: _3,
  wscr: b3,
  xcap: k3,
  xcirc: y3,
  xcup: w3,
  xdtri: v3,
  Xfr: x3,
  xfr: A3,
  xharr: S3,
  xhArr: L3,
  Xi: C3,
  xi: E3,
  xlarr: T3,
  xlArr: D3,
  xmap: q3,
  xnis: j3,
  xodot: R3,
  Xopf: N3,
  xopf: P3,
  xoplus: I3,
  xotime: O3,
  xrarr: F3,
  xrArr: M3,
  Xscr: B3,
  xscr: z3,
  xsqcup: $3,
  xuplus: G3,
  xutri: U3,
  xvee: H3,
  xwedge: V3,
  Yacute: W3,
  yacute: Z3,
  YAcy: J3,
  yacy: Q3,
  Ycirc: Y3,
  ycirc: X3,
  Ycy: K3,
  ycy: eM,
  yen: nM,
  Yfr: tM,
  yfr: oM,
  YIcy: sM,
  yicy: rM,
  Yopf: cM,
  yopf: aM,
  Yscr: iM,
  yscr: lM,
  YUcy: uM,
  yucy: pM,
  yuml: hM,
  Yuml: dM,
  Zacute: fM,
  zacute: mM,
  Zcaron: gM,
  zcaron: _M,
  Zcy: bM,
  zcy: kM,
  Zdot: yM,
  zdot: wM,
  zeetrf: vM,
  ZeroWidthSpace: xM,
  Zeta: AM,
  zeta: SM,
  zfr: LM,
  Zfr: CM,
  ZHcy: EM,
  zhcy: TM,
  zigrarr: DM,
  zopf: qM,
  Zopf: jM,
  Zscr: RM,
  zscr: NM,
  zwj: PM,
  zwnj: IM
};
var mo = OM, Kn = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/, $e = {}, ft = {};
function FM(n) {
  var e, t, o = ft[n];
  if (o)
    return o;
  for (o = ft[n] = [], e = 0; e < 128; e++)
    t = String.fromCharCode(e), /^[0-9a-z]$/i.test(t) ? o.push(t) : o.push("%" + ("0" + e.toString(16).toUpperCase()).slice(-2));
  for (e = 0; e < n.length; e++)
    o[n.charCodeAt(e)] = n[e];
  return o;
}
function hn(n, e, t) {
  var o, r, s, a, c, l = "";
  for (typeof e != "string" && (t = e, e = hn.defaultChars), typeof t > "u" && (t = !0), c = FM(e), o = 0, r = n.length; o < r; o++) {
    if (s = n.charCodeAt(o), t && s === 37 && o + 2 < r && /^[0-9a-f]{2}$/i.test(n.slice(o + 1, o + 3))) {
      l += n.slice(o, o + 3), o += 2;
      continue;
    }
    if (s < 128) {
      l += c[s];
      continue;
    }
    if (s >= 55296 && s <= 57343) {
      if (s >= 55296 && s <= 56319 && o + 1 < r && (a = n.charCodeAt(o + 1), a >= 56320 && a <= 57343)) {
        l += encodeURIComponent(n[o] + n[o + 1]), o++;
        continue;
      }
      l += "%EF%BF%BD";
      continue;
    }
    l += encodeURIComponent(n[o]);
  }
  return l;
}
hn.defaultChars = ";/?:@&=+$,-_.!~*'()#";
hn.componentChars = "-_.!~*'()";
var MM = hn, mt = {};
function BM(n) {
  var e, t, o = mt[n];
  if (o)
    return o;
  for (o = mt[n] = [], e = 0; e < 128; e++)
    t = String.fromCharCode(e), o.push(t);
  for (e = 0; e < n.length; e++)
    t = n.charCodeAt(e), o[t] = "%" + ("0" + t.toString(16).toUpperCase()).slice(-2);
  return o;
}
function dn(n, e) {
  var t;
  return typeof e != "string" && (e = dn.defaultChars), t = BM(e), n.replace(/(%[a-f0-9]{2})+/gi, function(o) {
    var r, s, a, c, l, i, p, h = "";
    for (r = 0, s = o.length; r < s; r += 3) {
      if (a = parseInt(o.slice(r + 1, r + 3), 16), a < 128) {
        h += t[a];
        continue;
      }
      if ((a & 224) === 192 && r + 3 < s && (c = parseInt(o.slice(r + 4, r + 6), 16), (c & 192) === 128)) {
        p = a << 6 & 1984 | c & 63, p < 128 ? h += "��" : h += String.fromCharCode(p), r += 3;
        continue;
      }
      if ((a & 240) === 224 && r + 6 < s && (c = parseInt(o.slice(r + 4, r + 6), 16), l = parseInt(o.slice(r + 7, r + 9), 16), (c & 192) === 128 && (l & 192) === 128)) {
        p = a << 12 & 61440 | c << 6 & 4032 | l & 63, p < 2048 || p >= 55296 && p <= 57343 ? h += "���" : h += String.fromCharCode(p), r += 6;
        continue;
      }
      if ((a & 248) === 240 && r + 9 < s && (c = parseInt(o.slice(r + 4, r + 6), 16), l = parseInt(o.slice(r + 7, r + 9), 16), i = parseInt(o.slice(r + 10, r + 12), 16), (c & 192) === 128 && (l & 192) === 128 && (i & 192) === 128)) {
        p = a << 18 & 1835008 | c << 12 & 258048 | l << 6 & 4032 | i & 63, p < 65536 || p > 1114111 ? h += "����" : (p -= 65536, h += String.fromCharCode(55296 + (p >> 10), 56320 + (p & 1023))), r += 9;
        continue;
      }
      h += "�";
    }
    return h;
  });
}
dn.defaultChars = ";/?:@&=+$,#";
dn.componentChars = "";
var zM = dn, $M = function(e) {
  var t = "";
  return t += e.protocol || "", t += e.slashes ? "//" : "", t += e.auth ? e.auth + "@" : "", e.hostname && e.hostname.indexOf(":") !== -1 ? t += "[" + e.hostname + "]" : t += e.hostname || "", t += e.port ? ":" + e.port : "", t += e.pathname || "", t += e.search || "", t += e.hash || "", t;
};
function rn() {
  this.protocol = null, this.slashes = null, this.auth = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.pathname = null;
}
var GM = /^([a-z0-9.+-]+:)/i, UM = /:[0-9]*$/, HM = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, VM = ["<", ">", '"', "`", " ", "\r", `
`, "	"], WM = ["{", "}", "|", "\\", "^", "`"].concat(VM), ZM = ["'"].concat(WM), gt = ["%", "/", "?", ";", "#"].concat(ZM), _t = ["/", "?", "#"], JM = 255, bt = /^[+a-z0-9A-Z_-]{0,63}$/, QM = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, kt = {
  javascript: !0,
  "javascript:": !0
}, yt = {
  http: !0,
  https: !0,
  ftp: !0,
  gopher: !0,
  file: !0,
  "http:": !0,
  "https:": !0,
  "ftp:": !0,
  "gopher:": !0,
  "file:": !0
};
function YM(n, e) {
  if (n && n instanceof rn)
    return n;
  var t = new rn();
  return t.parse(n, e), t;
}
rn.prototype.parse = function(n, e) {
  var t, o, r, s, a, c = n;
  if (c = c.trim(), !e && n.split("#").length === 1) {
    var l = HM.exec(c);
    if (l)
      return this.pathname = l[1], l[2] && (this.search = l[2]), this;
  }
  var i = GM.exec(c);
  if (i && (i = i[0], r = i.toLowerCase(), this.protocol = i, c = c.substr(i.length)), (e || i || c.match(/^\/\/[^@\/]+@[^@\/]+/)) && (a = c.substr(0, 2) === "//", a && !(i && kt[i]) && (c = c.substr(2), this.slashes = !0)), !kt[i] && (a || i && !yt[i])) {
    var p = -1;
    for (t = 0; t < _t.length; t++)
      s = c.indexOf(_t[t]), s !== -1 && (p === -1 || s < p) && (p = s);
    var h, d;
    for (p === -1 ? d = c.lastIndexOf("@") : d = c.lastIndexOf("@", p), d !== -1 && (h = c.slice(0, d), c = c.slice(d + 1), this.auth = h), p = -1, t = 0; t < gt.length; t++)
      s = c.indexOf(gt[t]), s !== -1 && (p === -1 || s < p) && (p = s);
    p === -1 && (p = c.length), c[p - 1] === ":" && p--;
    var f = c.slice(0, p);
    c = c.slice(p), this.parseHost(f), this.hostname = this.hostname || "";
    var m = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
    if (!m) {
      var L = this.hostname.split(/\./);
      for (t = 0, o = L.length; t < o; t++) {
        var S = L[t];
        if (S && !S.match(bt)) {
          for (var b = "", k = 0, w = S.length; k < w; k++)
            S.charCodeAt(k) > 127 ? b += "x" : b += S[k];
          if (!b.match(bt)) {
            var C = L.slice(0, t), y = L.slice(t + 1), u = S.match(QM);
            u && (C.push(u[1]), y.unshift(u[2])), y.length && (c = y.join(".") + c), this.hostname = C.join(".");
            break;
          }
        }
      }
    }
    this.hostname.length > JM && (this.hostname = ""), m && (this.hostname = this.hostname.substr(1, this.hostname.length - 2));
  }
  var g = c.indexOf("#");
  g !== -1 && (this.hash = c.substr(g), c = c.slice(0, g));
  var x = c.indexOf("?");
  return x !== -1 && (this.search = c.substr(x), c = c.slice(0, x)), c && (this.pathname = c), yt[r] && this.hostname && !this.pathname && (this.pathname = ""), this;
};
rn.prototype.parseHost = function(n) {
  var e = UM.exec(n);
  e && (e = e[0], e !== ":" && (this.port = e.substr(1)), n = n.substr(0, n.length - e.length)), n && (this.hostname = n);
};
var XM = YM;
$e.encode = MM;
$e.decode = zM;
$e.format = $M;
$e.parse = XM;
var Le = {}, Sn, wt;
function go() {
  return wt || (wt = 1, Sn = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/), Sn;
}
var Ln, vt;
function _o() {
  return vt || (vt = 1, Ln = /[\0-\x1F\x7F-\x9F]/), Ln;
}
var Cn, xt;
function KM() {
  return xt || (xt = 1, Cn = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/), Cn;
}
var En, At;
function bo() {
  return At || (At = 1, En = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/), En;
}
var St;
function eB() {
  return St || (St = 1, Le.Any = go(), Le.Cc = _o(), Le.Cf = KM(), Le.P = Kn, Le.Z = bo()), Le;
}
(function(n) {
  function e(T) {
    return Object.prototype.toString.call(T);
  }
  function t(T) {
    return e(T) === "[object String]";
  }
  var o = Object.prototype.hasOwnProperty;
  function r(T, q) {
    return o.call(T, q);
  }
  function s(T) {
    var q = Array.prototype.slice.call(arguments, 1);
    return q.forEach(function(R) {
      if (R) {
        if (typeof R != "object")
          throw new TypeError(R + "must be object");
        Object.keys(R).forEach(function(F) {
          T[F] = R[F];
        });
      }
    }), T;
  }
  function a(T, q, R) {
    return [].concat(T.slice(0, q), R, T.slice(q + 1));
  }
  function c(T) {
    return !(T >= 55296 && T <= 57343 || T >= 64976 && T <= 65007 || (T & 65535) === 65535 || (T & 65535) === 65534 || T >= 0 && T <= 8 || T === 11 || T >= 14 && T <= 31 || T >= 127 && T <= 159 || T > 1114111);
  }
  function l(T) {
    if (T > 65535) {
      T -= 65536;
      var q = 55296 + (T >> 10), R = 56320 + (T & 1023);
      return String.fromCharCode(q, R);
    }
    return String.fromCharCode(T);
  }
  var i = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g, p = /&([a-z#][a-z0-9]{1,31});/gi, h = new RegExp(i.source + "|" + p.source, "gi"), d = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i, f = mo;
  function m(T, q) {
    var R = 0;
    return r(f, q) ? f[q] : q.charCodeAt(0) === 35 && d.test(q) && (R = q[1].toLowerCase() === "x" ? parseInt(q.slice(2), 16) : parseInt(q.slice(1), 10), c(R)) ? l(R) : T;
  }
  function L(T) {
    return T.indexOf("\\") < 0 ? T : T.replace(i, "$1");
  }
  function S(T) {
    return T.indexOf("\\") < 0 && T.indexOf("&") < 0 ? T : T.replace(h, function(q, R, F) {
      return R || m(q, F);
    });
  }
  var b = /[&<>"]/, k = /[&<>"]/g, w = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;"
  };
  function C(T) {
    return w[T];
  }
  function y(T) {
    return b.test(T) ? T.replace(k, C) : T;
  }
  var u = /[.?*+^$[\]\\(){}|-]/g;
  function g(T) {
    return T.replace(u, "\\$&");
  }
  function x(T) {
    switch (T) {
      case 9:
      case 32:
        return !0;
    }
    return !1;
  }
  function _(T) {
    if (T >= 8192 && T <= 8202)
      return !0;
    switch (T) {
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
      case 160:
      case 5760:
      case 8239:
      case 8287:
      case 12288:
        return !0;
    }
    return !1;
  }
  var v = Kn;
  function A(T) {
    return v.test(T);
  }
  function E(T) {
    switch (T) {
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 123:
      case 124:
      case 125:
      case 126:
        return !0;
      default:
        return !1;
    }
  }
  function D(T) {
    return T = T.trim().replace(/\s+/g, " "), "ẞ".toLowerCase() === "Ṿ" && (T = T.replace(/ẞ/g, "ß")), T.toLowerCase().toUpperCase();
  }
  n.lib = {}, n.lib.mdurl = $e, n.lib.ucmicro = eB(), n.assign = s, n.isString = t, n.has = r, n.unescapeMd = L, n.unescapeAll = S, n.isValidEntityCode = c, n.fromCodePoint = l, n.escapeHtml = y, n.arrayReplaceAt = a, n.isSpace = x, n.isWhiteSpace = _, n.isMdAsciiPunct = E, n.isPunctChar = A, n.escapeRE = g, n.normalizeReference = D;
})(B);
var fn = {}, nB = function(e, t, o) {
  var r, s, a, c, l = -1, i = e.posMax, p = e.pos;
  for (e.pos = t + 1, r = 1; e.pos < i; ) {
    if (a = e.src.charCodeAt(e.pos), a === 93 && (r--, r === 0)) {
      s = !0;
      break;
    }
    if (c = e.pos, e.md.inline.skipToken(e), a === 91) {
      if (c === e.pos - 1)
        r++;
      else if (o)
        return e.pos = p, -1;
    }
  }
  return s && (l = e.pos), e.pos = p, l;
}, Lt = B.unescapeAll, tB = function(e, t, o) {
  var r, s, a = 0, c = t, l = {
    ok: !1,
    pos: 0,
    lines: 0,
    str: ""
  };
  if (e.charCodeAt(t) === 60) {
    for (t++; t < o; ) {
      if (r = e.charCodeAt(t), r === 10 || r === 60)
        return l;
      if (r === 62)
        return l.pos = t + 1, l.str = Lt(e.slice(c + 1, t)), l.ok = !0, l;
      if (r === 92 && t + 1 < o) {
        t += 2;
        continue;
      }
      t++;
    }
    return l;
  }
  for (s = 0; t < o && (r = e.charCodeAt(t), !(r === 32 || r < 32 || r === 127)); ) {
    if (r === 92 && t + 1 < o) {
      if (e.charCodeAt(t + 1) === 32)
        break;
      t += 2;
      continue;
    }
    if (r === 40 && (s++, s > 32))
      return l;
    if (r === 41) {
      if (s === 0)
        break;
      s--;
    }
    t++;
  }
  return c === t || s !== 0 || (l.str = Lt(e.slice(c, t)), l.lines = a, l.pos = t, l.ok = !0), l;
}, oB = B.unescapeAll, sB = function(e, t, o) {
  var r, s, a = 0, c = t, l = {
    ok: !1,
    pos: 0,
    lines: 0,
    str: ""
  };
  if (t >= o || (s = e.charCodeAt(t), s !== 34 && s !== 39 && s !== 40))
    return l;
  for (t++, s === 40 && (s = 41); t < o; ) {
    if (r = e.charCodeAt(t), r === s)
      return l.pos = t + 1, l.lines = a, l.str = oB(e.slice(c + 1, t)), l.ok = !0, l;
    if (r === 40 && s === 41)
      return l;
    r === 10 ? a++ : r === 92 && t + 1 < o && (t++, e.charCodeAt(t) === 10 && a++), t++;
  }
  return l;
};
fn.parseLinkLabel = nB;
fn.parseLinkDestination = tB;
fn.parseLinkTitle = sB;
var rB = B.assign, cB = B.unescapeAll, qe = B.escapeHtml, pe = {};
pe.code_inline = function(n, e, t, o, r) {
  var s = n[e];
  return "<code" + r.renderAttrs(s) + ">" + qe(n[e].content) + "</code>";
};
pe.code_block = function(n, e, t, o, r) {
  var s = n[e];
  return "<pre" + r.renderAttrs(s) + "><code>" + qe(n[e].content) + `</code></pre>
`;
};
pe.fence = function(n, e, t, o, r) {
  var s = n[e], a = s.info ? cB(s.info).trim() : "", c = "", l = "", i, p, h, d, f;
  return a && (h = a.split(/(\s+)/g), c = h[0], l = h.slice(2).join("")), t.highlight ? i = t.highlight(s.content, c, l) || qe(s.content) : i = qe(s.content), i.indexOf("<pre") === 0 ? i + `
` : a ? (p = s.attrIndex("class"), d = s.attrs ? s.attrs.slice() : [], p < 0 ? d.push(["class", t.langPrefix + c]) : (d[p] = d[p].slice(), d[p][1] += " " + t.langPrefix + c), f = {
    attrs: d
  }, "<pre><code" + r.renderAttrs(f) + ">" + i + `</code></pre>
`) : "<pre><code" + r.renderAttrs(s) + ">" + i + `</code></pre>
`;
};
pe.image = function(n, e, t, o, r) {
  var s = n[e];
  return s.attrs[s.attrIndex("alt")][1] = r.renderInlineAsText(s.children, t, o), r.renderToken(n, e, t);
};
pe.hardbreak = function(n, e, t) {
  return t.xhtmlOut ? `<br />
` : `<br>
`;
};
pe.softbreak = function(n, e, t) {
  return t.breaks ? t.xhtmlOut ? `<br />
` : `<br>
` : `
`;
};
pe.text = function(n, e) {
  return qe(n[e].content);
};
pe.html_block = function(n, e) {
  return n[e].content;
};
pe.html_inline = function(n, e) {
  return n[e].content;
};
function Ge() {
  this.rules = rB({}, pe);
}
Ge.prototype.renderAttrs = function(e) {
  var t, o, r;
  if (!e.attrs)
    return "";
  for (r = "", t = 0, o = e.attrs.length; t < o; t++)
    r += " " + qe(e.attrs[t][0]) + '="' + qe(e.attrs[t][1]) + '"';
  return r;
};
Ge.prototype.renderToken = function(e, t, o) {
  var r, s = "", a = !1, c = e[t];
  return c.hidden ? "" : (c.block && c.nesting !== -1 && t && e[t - 1].hidden && (s += `
`), s += (c.nesting === -1 ? "</" : "<") + c.tag, s += this.renderAttrs(c), c.nesting === 0 && o.xhtmlOut && (s += " /"), c.block && (a = !0, c.nesting === 1 && t + 1 < e.length && (r = e[t + 1], (r.type === "inline" || r.hidden || r.nesting === -1 && r.tag === c.tag) && (a = !1))), s += a ? `>
` : ">", s);
};
Ge.prototype.renderInline = function(n, e, t) {
  for (var o, r = "", s = this.rules, a = 0, c = n.length; a < c; a++)
    o = n[a].type, typeof s[o] < "u" ? r += s[o](n, a, e, t, this) : r += this.renderToken(n, a, e);
  return r;
};
Ge.prototype.renderInlineAsText = function(n, e, t) {
  for (var o = "", r = 0, s = n.length; r < s; r++)
    n[r].type === "text" ? o += n[r].content : n[r].type === "image" ? o += this.renderInlineAsText(n[r].children, e, t) : n[r].type === "softbreak" && (o += `
`);
  return o;
};
Ge.prototype.render = function(n, e, t) {
  var o, r, s, a = "", c = this.rules;
  for (o = 0, r = n.length; o < r; o++)
    s = n[o].type, s === "inline" ? a += this.renderInline(n[o].children, e, t) : typeof c[s] < "u" ? a += c[n[o].type](n, o, e, t, this) : a += this.renderToken(n, o, e, t);
  return a;
};
var aB = Ge;
function ae() {
  this.__rules__ = [], this.__cache__ = null;
}
ae.prototype.__find__ = function(n) {
  for (var e = 0; e < this.__rules__.length; e++)
    if (this.__rules__[e].name === n)
      return e;
  return -1;
};
ae.prototype.__compile__ = function() {
  var n = this, e = [""];
  n.__rules__.forEach(function(t) {
    t.enabled && t.alt.forEach(function(o) {
      e.indexOf(o) < 0 && e.push(o);
    });
  }), n.__cache__ = {}, e.forEach(function(t) {
    n.__cache__[t] = [], n.__rules__.forEach(function(o) {
      o.enabled && (t && o.alt.indexOf(t) < 0 || n.__cache__[t].push(o.fn));
    });
  });
};
ae.prototype.at = function(n, e, t) {
  var o = this.__find__(n), r = t || {};
  if (o === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__[o].fn = e, this.__rules__[o].alt = r.alt || [], this.__cache__ = null;
};
ae.prototype.before = function(n, e, t, o) {
  var r = this.__find__(n), s = o || {};
  if (r === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__.splice(r, 0, {
    name: e,
    enabled: !0,
    fn: t,
    alt: s.alt || []
  }), this.__cache__ = null;
};
ae.prototype.after = function(n, e, t, o) {
  var r = this.__find__(n), s = o || {};
  if (r === -1)
    throw new Error("Parser rule not found: " + n);
  this.__rules__.splice(r + 1, 0, {
    name: e,
    enabled: !0,
    fn: t,
    alt: s.alt || []
  }), this.__cache__ = null;
};
ae.prototype.push = function(n, e, t) {
  var o = t || {};
  this.__rules__.push({
    name: n,
    enabled: !0,
    fn: e,
    alt: o.alt || []
  }), this.__cache__ = null;
};
ae.prototype.enable = function(n, e) {
  Array.isArray(n) || (n = [n]);
  var t = [];
  return n.forEach(function(o) {
    var r = this.__find__(o);
    if (r < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + o);
    }
    this.__rules__[r].enabled = !0, t.push(o);
  }, this), this.__cache__ = null, t;
};
ae.prototype.enableOnly = function(n, e) {
  Array.isArray(n) || (n = [n]), this.__rules__.forEach(function(t) {
    t.enabled = !1;
  }), this.enable(n, e);
};
ae.prototype.disable = function(n, e) {
  Array.isArray(n) || (n = [n]);
  var t = [];
  return n.forEach(function(o) {
    var r = this.__find__(o);
    if (r < 0) {
      if (e)
        return;
      throw new Error("Rules manager: invalid rule name " + o);
    }
    this.__rules__[r].enabled = !1, t.push(o);
  }, this), this.__cache__ = null, t;
};
ae.prototype.getRules = function(n) {
  return this.__cache__ === null && this.__compile__(), this.__cache__[n] || [];
};
var et = ae, iB = /\r\n?|\n/g, lB = /\0/g, uB = function(e) {
  var t;
  t = e.src.replace(iB, `
`), t = t.replace(lB, "�"), e.src = t;
}, pB = function(e) {
  var t;
  e.inlineMode ? (t = new e.Token("inline", "", 0), t.content = e.src, t.map = [0, 1], t.children = [], e.tokens.push(t)) : e.md.block.parse(e.src, e.md, e.env, e.tokens);
}, hB = function(e) {
  var t = e.tokens, o, r, s;
  for (r = 0, s = t.length; r < s; r++)
    o = t[r], o.type === "inline" && e.md.inline.parse(o.content, e.md, e.env, o.children);
}, dB = B.arrayReplaceAt;
function fB(n) {
  return /^<a[>\s]/i.test(n);
}
function mB(n) {
  return /^<\/a\s*>/i.test(n);
}
var gB = function(e) {
  var t, o, r, s, a, c, l, i, p, h, d, f, m, L, S, b, k = e.tokens, w;
  if (e.md.options.linkify) {
    for (o = 0, r = k.length; o < r; o++)
      if (!(k[o].type !== "inline" || !e.md.linkify.pretest(k[o].content)))
        for (s = k[o].children, m = 0, t = s.length - 1; t >= 0; t--) {
          if (c = s[t], c.type === "link_close") {
            for (t--; s[t].level !== c.level && s[t].type !== "link_open"; )
              t--;
            continue;
          }
          if (c.type === "html_inline" && (fB(c.content) && m > 0 && m--, mB(c.content) && m++), !(m > 0) && c.type === "text" && e.md.linkify.test(c.content)) {
            for (p = c.content, w = e.md.linkify.match(p), l = [], f = c.level, d = 0, w.length > 0 && w[0].index === 0 && t > 0 && s[t - 1].type === "text_special" && (w = w.slice(1)), i = 0; i < w.length; i++)
              L = w[i].url, S = e.md.normalizeLink(L), e.md.validateLink(S) && (b = w[i].text, w[i].schema ? w[i].schema === "mailto:" && !/^mailto:/i.test(b) ? b = e.md.normalizeLinkText("mailto:" + b).replace(/^mailto:/, "") : b = e.md.normalizeLinkText(b) : b = e.md.normalizeLinkText("http://" + b).replace(/^http:\/\//, ""), h = w[i].index, h > d && (a = new e.Token("text", "", 0), a.content = p.slice(d, h), a.level = f, l.push(a)), a = new e.Token("link_open", "a", 1), a.attrs = [["href", S]], a.level = f++, a.markup = "linkify", a.info = "auto", l.push(a), a = new e.Token("text", "", 0), a.content = b, a.level = f, l.push(a), a = new e.Token("link_close", "a", -1), a.level = --f, a.markup = "linkify", a.info = "auto", l.push(a), d = w[i].lastIndex);
            d < p.length && (a = new e.Token("text", "", 0), a.content = p.slice(d), a.level = f, l.push(a)), k[o].children = s = dB(s, t, l);
          }
        }
  }
}, ko = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/, _B = /\((c|tm|r)\)/i, bB = /\((c|tm|r)\)/ig, kB = {
  c: "©",
  r: "®",
  tm: "™"
};
function yB(n, e) {
  return kB[e.toLowerCase()];
}
function wB(n) {
  var e, t, o = 0;
  for (e = n.length - 1; e >= 0; e--)
    t = n[e], t.type === "text" && !o && (t.content = t.content.replace(bB, yB)), t.type === "link_open" && t.info === "auto" && o--, t.type === "link_close" && t.info === "auto" && o++;
}
function vB(n) {
  var e, t, o = 0;
  for (e = n.length - 1; e >= 0; e--)
    t = n[e], t.type === "text" && !o && ko.test(t.content) && (t.content = t.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/mg, "$1—").replace(/(^|\s)--(?=\s|$)/mg, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg, "$1–")), t.type === "link_open" && t.info === "auto" && o--, t.type === "link_close" && t.info === "auto" && o++;
}
var xB = function(e) {
  var t;
  if (e.md.options.typographer)
    for (t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type === "inline" && (_B.test(e.tokens[t].content) && wB(e.tokens[t].children), ko.test(e.tokens[t].content) && vB(e.tokens[t].children));
}, Ct = B.isWhiteSpace, Et = B.isPunctChar, Tt = B.isMdAsciiPunct, AB = /['"]/, Dt = /['"]/g, qt = "’";
function en(n, e, t) {
  return n.slice(0, e) + t + n.slice(e + 1);
}
function SB(n, e) {
  var t, o, r, s, a, c, l, i, p, h, d, f, m, L, S, b, k, w, C, y, u;
  for (C = [], t = 0; t < n.length; t++) {
    for (o = n[t], l = n[t].level, k = C.length - 1; k >= 0 && !(C[k].level <= l); k--)
      ;
    if (C.length = k + 1, o.type === "text") {
      r = o.content, a = 0, c = r.length;
      e:
        for (; a < c && (Dt.lastIndex = a, s = Dt.exec(r), !!s); ) {
          if (S = b = !0, a = s.index + 1, w = s[0] === "'", p = 32, s.index - 1 >= 0)
            p = r.charCodeAt(s.index - 1);
          else
            for (k = t - 1; k >= 0 && !(n[k].type === "softbreak" || n[k].type === "hardbreak"); k--)
              if (n[k].content) {
                p = n[k].content.charCodeAt(n[k].content.length - 1);
                break;
              }
          if (h = 32, a < c)
            h = r.charCodeAt(a);
          else
            for (k = t + 1; k < n.length && !(n[k].type === "softbreak" || n[k].type === "hardbreak"); k++)
              if (n[k].content) {
                h = n[k].content.charCodeAt(0);
                break;
              }
          if (d = Tt(p) || Et(String.fromCharCode(p)), f = Tt(h) || Et(String.fromCharCode(h)), m = Ct(p), L = Ct(h), L ? S = !1 : f && (m || d || (S = !1)), m ? b = !1 : d && (L || f || (b = !1)), h === 34 && s[0] === '"' && p >= 48 && p <= 57 && (b = S = !1), S && b && (S = d, b = f), !S && !b) {
            w && (o.content = en(o.content, s.index, qt));
            continue;
          }
          if (b) {
            for (k = C.length - 1; k >= 0 && (i = C[k], !(C[k].level < l)); k--)
              if (i.single === w && C[k].level === l) {
                i = C[k], w ? (y = e.md.options.quotes[2], u = e.md.options.quotes[3]) : (y = e.md.options.quotes[0], u = e.md.options.quotes[1]), o.content = en(o.content, s.index, u), n[i.token].content = en(
                  n[i.token].content,
                  i.pos,
                  y
                ), a += u.length - 1, i.token === t && (a += y.length - 1), r = o.content, c = r.length, C.length = k;
                continue e;
              }
          }
          S ? C.push({
            token: t,
            pos: s.index,
            single: w,
            level: l
          }) : b && w && (o.content = en(o.content, s.index, qt));
        }
    }
  }
}
var LB = function(e) {
  var t;
  if (e.md.options.typographer)
    for (t = e.tokens.length - 1; t >= 0; t--)
      e.tokens[t].type !== "inline" || !AB.test(e.tokens[t].content) || SB(e.tokens[t].children, e);
}, CB = function(e) {
  var t, o, r, s, a, c, l = e.tokens;
  for (t = 0, o = l.length; t < o; t++)
    if (l[t].type === "inline") {
      for (r = l[t].children, a = r.length, s = 0; s < a; s++)
        r[s].type === "text_special" && (r[s].type = "text");
      for (s = c = 0; s < a; s++)
        r[s].type === "text" && s + 1 < a && r[s + 1].type === "text" ? r[s + 1].content = r[s].content + r[s + 1].content : (s !== c && (r[c] = r[s]), c++);
      s !== c && (r.length = c);
    }
};
function Ue(n, e, t) {
  this.type = n, this.tag = e, this.attrs = null, this.map = null, this.nesting = t, this.level = 0, this.children = null, this.content = "", this.markup = "", this.info = "", this.meta = null, this.block = !1, this.hidden = !1;
}
Ue.prototype.attrIndex = function(e) {
  var t, o, r;
  if (!this.attrs)
    return -1;
  for (t = this.attrs, o = 0, r = t.length; o < r; o++)
    if (t[o][0] === e)
      return o;
  return -1;
};
Ue.prototype.attrPush = function(e) {
  this.attrs ? this.attrs.push(e) : this.attrs = [e];
};
Ue.prototype.attrSet = function(e, t) {
  var o = this.attrIndex(e), r = [e, t];
  o < 0 ? this.attrPush(r) : this.attrs[o] = r;
};
Ue.prototype.attrGet = function(e) {
  var t = this.attrIndex(e), o = null;
  return t >= 0 && (o = this.attrs[t][1]), o;
};
Ue.prototype.attrJoin = function(e, t) {
  var o = this.attrIndex(e);
  o < 0 ? this.attrPush([e, t]) : this.attrs[o][1] = this.attrs[o][1] + " " + t;
};
var nt = Ue, EB = nt;
function yo(n, e, t) {
  this.src = n, this.env = t, this.tokens = [], this.inlineMode = !1, this.md = e;
}
yo.prototype.Token = EB;
var TB = yo, DB = et, Tn = [
  ["normalize", uB],
  ["block", pB],
  ["inline", hB],
  ["linkify", gB],
  ["replacements", xB],
  ["smartquotes", LB],
  // `text_join` finds `text_special` tokens (for escape sequences)
  // and joins them with the rest of the text
  ["text_join", CB]
];
function tt() {
  this.ruler = new DB();
  for (var n = 0; n < Tn.length; n++)
    this.ruler.push(Tn[n][0], Tn[n][1]);
}
tt.prototype.process = function(n) {
  var e, t, o;
  for (o = this.ruler.getRules(""), e = 0, t = o.length; e < t; e++)
    o[e](n);
};
tt.prototype.State = TB;
var qB = tt, Dn = B.isSpace;
function qn(n, e) {
  var t = n.bMarks[e] + n.tShift[e], o = n.eMarks[e];
  return n.src.slice(t, o);
}
function jt(n) {
  var e = [], t = 0, o = n.length, r, s = !1, a = 0, c = "";
  for (r = n.charCodeAt(t); t < o; )
    r === 124 && (s ? (c += n.substring(a, t - 1), a = t) : (e.push(c + n.substring(a, t)), c = "", a = t + 1)), s = r === 92, t++, r = n.charCodeAt(t);
  return e.push(c + n.substring(a)), e;
}
var jB = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d, f, m, L, S, b, k, w, C, y, u;
  if (t + 2 > o || (p = t + 1, e.sCount[p] < e.blkIndent) || e.sCount[p] - e.blkIndent >= 4 || (c = e.bMarks[p] + e.tShift[p], c >= e.eMarks[p]) || (y = e.src.charCodeAt(c++), y !== 124 && y !== 45 && y !== 58) || c >= e.eMarks[p] || (u = e.src.charCodeAt(c++), u !== 124 && u !== 45 && u !== 58 && !Dn(u)) || y === 45 && Dn(u))
    return !1;
  for (; c < e.eMarks[p]; ) {
    if (s = e.src.charCodeAt(c), s !== 124 && s !== 45 && s !== 58 && !Dn(s))
      return !1;
    c++;
  }
  for (a = qn(e, t + 1), h = a.split("|"), m = [], l = 0; l < h.length; l++) {
    if (L = h[l].trim(), !L) {
      if (l === 0 || l === h.length - 1)
        continue;
      return !1;
    }
    if (!/^:?-+:?$/.test(L))
      return !1;
    L.charCodeAt(L.length - 1) === 58 ? m.push(L.charCodeAt(0) === 58 ? "center" : "right") : L.charCodeAt(0) === 58 ? m.push("left") : m.push("");
  }
  if (a = qn(e, t).trim(), a.indexOf("|") === -1 || e.sCount[t] - e.blkIndent >= 4 || (h = jt(a), h.length && h[0] === "" && h.shift(), h.length && h[h.length - 1] === "" && h.pop(), d = h.length, d === 0 || d !== m.length))
    return !1;
  if (r)
    return !0;
  for (k = e.parentType, e.parentType = "table", C = e.md.block.ruler.getRules("blockquote"), f = e.push("table_open", "table", 1), f.map = S = [t, 0], f = e.push("thead_open", "thead", 1), f.map = [t, t + 1], f = e.push("tr_open", "tr", 1), f.map = [t, t + 1], l = 0; l < h.length; l++)
    f = e.push("th_open", "th", 1), m[l] && (f.attrs = [["style", "text-align:" + m[l]]]), f = e.push("inline", "", 0), f.content = h[l].trim(), f.children = [], f = e.push("th_close", "th", -1);
  for (f = e.push("tr_close", "tr", -1), f = e.push("thead_close", "thead", -1), p = t + 2; p < o && !(e.sCount[p] < e.blkIndent); p++) {
    for (w = !1, l = 0, i = C.length; l < i; l++)
      if (C[l](e, p, o, !0)) {
        w = !0;
        break;
      }
    if (w || (a = qn(e, p).trim(), !a) || e.sCount[p] - e.blkIndent >= 4)
      break;
    for (h = jt(a), h.length && h[0] === "" && h.shift(), h.length && h[h.length - 1] === "" && h.pop(), p === t + 2 && (f = e.push("tbody_open", "tbody", 1), f.map = b = [t + 2, 0]), f = e.push("tr_open", "tr", 1), f.map = [p, p + 1], l = 0; l < d; l++)
      f = e.push("td_open", "td", 1), m[l] && (f.attrs = [["style", "text-align:" + m[l]]]), f = e.push("inline", "", 0), f.content = h[l] ? h[l].trim() : "", f.children = [], f = e.push("td_close", "td", -1);
    f = e.push("tr_close", "tr", -1);
  }
  return b && (f = e.push("tbody_close", "tbody", -1), b[1] = p), f = e.push("table_close", "table", -1), S[1] = p, e.parentType = k, e.line = p, !0;
}, RB = function(e, t, o) {
  var r, s, a;
  if (e.sCount[t] - e.blkIndent < 4)
    return !1;
  for (s = r = t + 1; r < o; ) {
    if (e.isEmpty(r)) {
      r++;
      continue;
    }
    if (e.sCount[r] - e.blkIndent >= 4) {
      r++, s = r;
      continue;
    }
    break;
  }
  return e.line = s, a = e.push("code_block", "code", 0), a.content = e.getLines(t, s, 4 + e.blkIndent, !1) + `
`, a.map = [t, e.line], !0;
}, NB = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d = !1, f = e.bMarks[t] + e.tShift[t], m = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || f + 3 > m || (s = e.src.charCodeAt(f), s !== 126 && s !== 96) || (i = f, f = e.skipChars(f, s), a = f - i, a < 3) || (h = e.src.slice(i, f), c = e.src.slice(f, m), s === 96 && c.indexOf(String.fromCharCode(s)) >= 0))
    return !1;
  if (r)
    return !0;
  for (l = t; l++, !(l >= o || (f = i = e.bMarks[l] + e.tShift[l], m = e.eMarks[l], f < m && e.sCount[l] < e.blkIndent)); )
    if (e.src.charCodeAt(f) === s && !(e.sCount[l] - e.blkIndent >= 4) && (f = e.skipChars(f, s), !(f - i < a) && (f = e.skipSpaces(f), !(f < m)))) {
      d = !0;
      break;
    }
  return a = e.sCount[t], e.line = l + (d ? 1 : 0), p = e.push("fence", "code", 0), p.info = c, p.content = e.getLines(t + 1, l, a, !0), p.markup = h, p.map = [t, e.line], !0;
}, Rt = B.isSpace, PB = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d, f, m, L, S, b, k, w, C, y, u, g, x, _ = e.lineMax, v = e.bMarks[t] + e.tShift[t], A = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(v++) !== 62)
    return !1;
  if (r)
    return !0;
  for (l = f = e.sCount[t] + 1, e.src.charCodeAt(v) === 32 ? (v++, l++, f++, s = !1, C = !0) : e.src.charCodeAt(v) === 9 ? (C = !0, (e.bsCount[t] + f) % 4 === 3 ? (v++, l++, f++, s = !1) : s = !0) : C = !1, m = [e.bMarks[t]], e.bMarks[t] = v; v < A && (a = e.src.charCodeAt(v), Rt(a)); ) {
    a === 9 ? f += 4 - (f + e.bsCount[t] + (s ? 1 : 0)) % 4 : f++;
    v++;
  }
  for (L = [e.bsCount[t]], e.bsCount[t] = e.sCount[t] + 1 + (C ? 1 : 0), p = v >= A, k = [e.sCount[t]], e.sCount[t] = f - l, w = [e.tShift[t]], e.tShift[t] = v - e.bMarks[t], u = e.md.block.ruler.getRules("blockquote"), b = e.parentType, e.parentType = "blockquote", d = t + 1; d < o && (x = e.sCount[d] < e.blkIndent, v = e.bMarks[d] + e.tShift[d], A = e.eMarks[d], !(v >= A)); d++) {
    if (e.src.charCodeAt(v++) === 62 && !x) {
      for (l = f = e.sCount[d] + 1, e.src.charCodeAt(v) === 32 ? (v++, l++, f++, s = !1, C = !0) : e.src.charCodeAt(v) === 9 ? (C = !0, (e.bsCount[d] + f) % 4 === 3 ? (v++, l++, f++, s = !1) : s = !0) : C = !1, m.push(e.bMarks[d]), e.bMarks[d] = v; v < A && (a = e.src.charCodeAt(v), Rt(a)); ) {
        a === 9 ? f += 4 - (f + e.bsCount[d] + (s ? 1 : 0)) % 4 : f++;
        v++;
      }
      p = v >= A, L.push(e.bsCount[d]), e.bsCount[d] = e.sCount[d] + 1 + (C ? 1 : 0), k.push(e.sCount[d]), e.sCount[d] = f - l, w.push(e.tShift[d]), e.tShift[d] = v - e.bMarks[d];
      continue;
    }
    if (p)
      break;
    for (y = !1, c = 0, i = u.length; c < i; c++)
      if (u[c](e, d, o, !0)) {
        y = !0;
        break;
      }
    if (y) {
      e.lineMax = d, e.blkIndent !== 0 && (m.push(e.bMarks[d]), L.push(e.bsCount[d]), w.push(e.tShift[d]), k.push(e.sCount[d]), e.sCount[d] -= e.blkIndent);
      break;
    }
    m.push(e.bMarks[d]), L.push(e.bsCount[d]), w.push(e.tShift[d]), k.push(e.sCount[d]), e.sCount[d] = -1;
  }
  for (S = e.blkIndent, e.blkIndent = 0, g = e.push("blockquote_open", "blockquote", 1), g.markup = ">", g.map = h = [t, 0], e.md.block.tokenize(e, t, d), g = e.push("blockquote_close", "blockquote", -1), g.markup = ">", e.lineMax = _, e.parentType = b, h[1] = e.line, c = 0; c < w.length; c++)
    e.bMarks[c + t] = m[c], e.tShift[c + t] = w[c], e.sCount[c + t] = k[c], e.bsCount[c + t] = L[c];
  return e.blkIndent = S, !0;
}, IB = B.isSpace, OB = function(e, t, o, r) {
  var s, a, c, l, i = e.bMarks[t] + e.tShift[t], p = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || (s = e.src.charCodeAt(i++), s !== 42 && s !== 45 && s !== 95))
    return !1;
  for (a = 1; i < p; ) {
    if (c = e.src.charCodeAt(i++), c !== s && !IB(c))
      return !1;
    c === s && a++;
  }
  return a < 3 ? !1 : (r || (e.line = t + 1, l = e.push("hr", "hr", 0), l.map = [t, e.line], l.markup = Array(a + 1).join(String.fromCharCode(s))), !0);
}, wo = B.isSpace;
function Nt(n, e) {
  var t, o, r, s;
  return o = n.bMarks[e] + n.tShift[e], r = n.eMarks[e], t = n.src.charCodeAt(o++), t !== 42 && t !== 45 && t !== 43 || o < r && (s = n.src.charCodeAt(o), !wo(s)) ? -1 : o;
}
function Pt(n, e) {
  var t, o = n.bMarks[e] + n.tShift[e], r = o, s = n.eMarks[e];
  if (r + 1 >= s || (t = n.src.charCodeAt(r++), t < 48 || t > 57))
    return -1;
  for (; ; ) {
    if (r >= s)
      return -1;
    if (t = n.src.charCodeAt(r++), t >= 48 && t <= 57) {
      if (r - o >= 10)
        return -1;
      continue;
    }
    if (t === 41 || t === 46)
      break;
    return -1;
  }
  return r < s && (t = n.src.charCodeAt(r), !wo(t)) ? -1 : r;
}
function FB(n, e) {
  var t, o, r = n.level + 2;
  for (t = e + 2, o = n.tokens.length - 2; t < o; t++)
    n.tokens[t].level === r && n.tokens[t].type === "paragraph_open" && (n.tokens[t + 2].hidden = !0, n.tokens[t].hidden = !0, t += 2);
}
var MB = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d, f, m, L, S, b, k, w, C, y, u, g, x, _, v, A, E, D, T, q, R, F = !1, M = !0;
  if (e.sCount[t] - e.blkIndent >= 4 || e.listIndent >= 0 && e.sCount[t] - e.listIndent >= 4 && e.sCount[t] < e.blkIndent)
    return !1;
  if (r && e.parentType === "paragraph" && e.sCount[t] >= e.blkIndent && (F = !0), (A = Pt(e, t)) >= 0) {
    if (h = !0, D = e.bMarks[t] + e.tShift[t], b = Number(e.src.slice(D, A - 1)), F && b !== 1)
      return !1;
  } else if ((A = Nt(e, t)) >= 0)
    h = !1;
  else
    return !1;
  if (F && e.skipSpaces(A) >= e.eMarks[t])
    return !1;
  if (S = e.src.charCodeAt(A - 1), r)
    return !0;
  for (L = e.tokens.length, h ? (R = e.push("ordered_list_open", "ol", 1), b !== 1 && (R.attrs = [["start", b]])) : R = e.push("bullet_list_open", "ul", 1), R.map = m = [t, 0], R.markup = String.fromCharCode(S), w = t, E = !1, q = e.md.block.ruler.getRules("list"), u = e.parentType, e.parentType = "list"; w < o; ) {
    for (v = A, k = e.eMarks[w], p = C = e.sCount[w] + A - (e.bMarks[t] + e.tShift[t]); v < k; ) {
      if (s = e.src.charCodeAt(v), s === 9)
        C += 4 - (C + e.bsCount[w]) % 4;
      else if (s === 32)
        C++;
      else
        break;
      v++;
    }
    if (a = v, a >= k ? i = 1 : i = C - p, i > 4 && (i = 1), l = p + i, R = e.push("list_item_open", "li", 1), R.markup = String.fromCharCode(S), R.map = d = [t, 0], h && (R.info = e.src.slice(D, A - 1)), _ = e.tight, x = e.tShift[t], g = e.sCount[t], y = e.listIndent, e.listIndent = e.blkIndent, e.blkIndent = l, e.tight = !0, e.tShift[t] = a - e.bMarks[t], e.sCount[t] = C, a >= k && e.isEmpty(t + 1) ? e.line = Math.min(e.line + 2, o) : e.md.block.tokenize(e, t, o, !0), (!e.tight || E) && (M = !1), E = e.line - t > 1 && e.isEmpty(e.line - 1), e.blkIndent = e.listIndent, e.listIndent = y, e.tShift[t] = x, e.sCount[t] = g, e.tight = _, R = e.push("list_item_close", "li", -1), R.markup = String.fromCharCode(S), w = t = e.line, d[1] = w, a = e.bMarks[t], w >= o || e.sCount[w] < e.blkIndent || e.sCount[t] - e.blkIndent >= 4)
      break;
    for (T = !1, c = 0, f = q.length; c < f; c++)
      if (q[c](e, w, o, !0)) {
        T = !0;
        break;
      }
    if (T)
      break;
    if (h) {
      if (A = Pt(e, w), A < 0)
        break;
      D = e.bMarks[w] + e.tShift[w];
    } else if (A = Nt(e, w), A < 0)
      break;
    if (S !== e.src.charCodeAt(A - 1))
      break;
  }
  return h ? R = e.push("ordered_list_close", "ol", -1) : R = e.push("bullet_list_close", "ul", -1), R.markup = String.fromCharCode(S), m[1] = w, e.line = w, e.parentType = u, M && FB(e, L), !0;
}, BB = B.normalizeReference, nn = B.isSpace, zB = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d, f, m, L, S, b, k, w, C, y = 0, u = e.bMarks[t] + e.tShift[t], g = e.eMarks[t], x = t + 1;
  if (e.sCount[t] - e.blkIndent >= 4 || e.src.charCodeAt(u) !== 91)
    return !1;
  for (; ++u < g; )
    if (e.src.charCodeAt(u) === 93 && e.src.charCodeAt(u - 1) !== 92) {
      if (u + 1 === g || e.src.charCodeAt(u + 1) !== 58)
        return !1;
      break;
    }
  for (l = e.lineMax, w = e.md.block.ruler.getRules("reference"), m = e.parentType, e.parentType = "reference"; x < l && !e.isEmpty(x); x++)
    if (!(e.sCount[x] - e.blkIndent > 3) && !(e.sCount[x] < 0)) {
      for (k = !1, p = 0, h = w.length; p < h; p++)
        if (w[p](e, x, l, !0)) {
          k = !0;
          break;
        }
      if (k)
        break;
    }
  for (b = e.getLines(t, x, e.blkIndent, !1).trim(), g = b.length, u = 1; u < g; u++) {
    if (s = b.charCodeAt(u), s === 91)
      return !1;
    if (s === 93) {
      f = u;
      break;
    } else
      s === 10 ? y++ : s === 92 && (u++, u < g && b.charCodeAt(u) === 10 && y++);
  }
  if (f < 0 || b.charCodeAt(f + 1) !== 58)
    return !1;
  for (u = f + 2; u < g; u++)
    if (s = b.charCodeAt(u), s === 10)
      y++;
    else if (!nn(s))
      break;
  if (L = e.md.helpers.parseLinkDestination(b, u, g), !L.ok || (i = e.md.normalizeLink(L.str), !e.md.validateLink(i)))
    return !1;
  for (u = L.pos, y += L.lines, a = u, c = y, S = u; u < g; u++)
    if (s = b.charCodeAt(u), s === 10)
      y++;
    else if (!nn(s))
      break;
  for (L = e.md.helpers.parseLinkTitle(b, u, g), u < g && S !== u && L.ok ? (C = L.str, u = L.pos, y += L.lines) : (C = "", u = a, y = c); u < g && (s = b.charCodeAt(u), !!nn(s)); )
    u++;
  if (u < g && b.charCodeAt(u) !== 10 && C)
    for (C = "", u = a, y = c; u < g && (s = b.charCodeAt(u), !!nn(s)); )
      u++;
  return u < g && b.charCodeAt(u) !== 10 || (d = BB(b.slice(1, f)), !d) ? !1 : (r || (typeof e.env.references > "u" && (e.env.references = {}), typeof e.env.references[d] > "u" && (e.env.references[d] = { title: C, href: i }), e.parentType = m, e.line = t + y + 1), !0);
}, $B = [
  "address",
  "article",
  "aside",
  "base",
  "basefont",
  "blockquote",
  "body",
  "caption",
  "center",
  "col",
  "colgroup",
  "dd",
  "details",
  "dialog",
  "dir",
  "div",
  "dl",
  "dt",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "frame",
  "frameset",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hr",
  "html",
  "iframe",
  "legend",
  "li",
  "link",
  "main",
  "menu",
  "menuitem",
  "nav",
  "noframes",
  "ol",
  "optgroup",
  "option",
  "p",
  "param",
  "section",
  "source",
  "summary",
  "table",
  "tbody",
  "td",
  "tfoot",
  "th",
  "thead",
  "title",
  "tr",
  "track",
  "ul"
], mn = {}, GB = "[a-zA-Z_:][a-zA-Z0-9:._-]*", UB = "[^\"'=<>`\\x00-\\x20]+", HB = "'[^']*'", VB = '"[^"]*"', WB = "(?:" + UB + "|" + HB + "|" + VB + ")", ZB = "(?:\\s+" + GB + "(?:\\s*=\\s*" + WB + ")?)", vo = "<[A-Za-z][A-Za-z0-9\\-]*" + ZB + "*\\s*\\/?>", xo = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>", JB = "<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->", QB = "<[?][\\s\\S]*?[?]>", YB = "<![A-Z]+\\s+[^>]*>", XB = "<!\\[CDATA\\[[\\s\\S]*?\\]\\]>", KB = new RegExp("^(?:" + vo + "|" + xo + "|" + JB + "|" + QB + "|" + YB + "|" + XB + ")"), ez = new RegExp("^(?:" + vo + "|" + xo + ")");
mn.HTML_TAG_RE = KB;
mn.HTML_OPEN_CLOSE_TAG_RE = ez;
var nz = $B, tz = mn.HTML_OPEN_CLOSE_TAG_RE, Ie = [
  [/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, !0],
  [/^<!--/, /-->/, !0],
  [/^<\?/, /\?>/, !0],
  [/^<![A-Z]/, />/, !0],
  [/^<!\[CDATA\[/, /\]\]>/, !0],
  [new RegExp("^</?(" + nz.join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, !0],
  [new RegExp(tz.source + "\\s*$"), /^$/, !1]
], oz = function(e, t, o, r) {
  var s, a, c, l, i = e.bMarks[t] + e.tShift[t], p = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || !e.md.options.html || e.src.charCodeAt(i) !== 60)
    return !1;
  for (l = e.src.slice(i, p), s = 0; s < Ie.length && !Ie[s][0].test(l); s++)
    ;
  if (s === Ie.length)
    return !1;
  if (r)
    return Ie[s][2];
  if (a = t + 1, !Ie[s][1].test(l)) {
    for (; a < o && !(e.sCount[a] < e.blkIndent); a++)
      if (i = e.bMarks[a] + e.tShift[a], p = e.eMarks[a], l = e.src.slice(i, p), Ie[s][1].test(l)) {
        l.length !== 0 && a++;
        break;
      }
  }
  return e.line = a, c = e.push("html_block", "", 0), c.map = [t, a], c.content = e.getLines(t, a, e.blkIndent, !0), !0;
}, It = B.isSpace, sz = function(e, t, o, r) {
  var s, a, c, l, i = e.bMarks[t] + e.tShift[t], p = e.eMarks[t];
  if (e.sCount[t] - e.blkIndent >= 4 || (s = e.src.charCodeAt(i), s !== 35 || i >= p))
    return !1;
  for (a = 1, s = e.src.charCodeAt(++i); s === 35 && i < p && a <= 6; )
    a++, s = e.src.charCodeAt(++i);
  return a > 6 || i < p && !It(s) ? !1 : (r || (p = e.skipSpacesBack(p, i), c = e.skipCharsBack(p, 35, i), c > i && It(e.src.charCodeAt(c - 1)) && (p = c), e.line = t + 1, l = e.push("heading_open", "h" + String(a), 1), l.markup = "########".slice(0, a), l.map = [t, e.line], l = e.push("inline", "", 0), l.content = e.src.slice(i, p).trim(), l.map = [t, e.line], l.children = [], l = e.push("heading_close", "h" + String(a), -1), l.markup = "########".slice(0, a)), !0);
}, rz = function(e, t, o) {
  var r, s, a, c, l, i, p, h, d, f = t + 1, m, L = e.md.block.ruler.getRules("paragraph");
  if (e.sCount[t] - e.blkIndent >= 4)
    return !1;
  for (m = e.parentType, e.parentType = "paragraph"; f < o && !e.isEmpty(f); f++)
    if (!(e.sCount[f] - e.blkIndent > 3)) {
      if (e.sCount[f] >= e.blkIndent && (i = e.bMarks[f] + e.tShift[f], p = e.eMarks[f], i < p && (d = e.src.charCodeAt(i), (d === 45 || d === 61) && (i = e.skipChars(i, d), i = e.skipSpaces(i), i >= p)))) {
        h = d === 61 ? 1 : 2;
        break;
      }
      if (!(e.sCount[f] < 0)) {
        for (s = !1, a = 0, c = L.length; a < c; a++)
          if (L[a](e, f, o, !0)) {
            s = !0;
            break;
          }
        if (s)
          break;
      }
    }
  return h ? (r = e.getLines(t, f, e.blkIndent, !1).trim(), e.line = f + 1, l = e.push("heading_open", "h" + String(h), 1), l.markup = String.fromCharCode(d), l.map = [t, e.line], l = e.push("inline", "", 0), l.content = r, l.map = [t, e.line - 1], l.children = [], l = e.push("heading_close", "h" + String(h), -1), l.markup = String.fromCharCode(d), e.parentType = m, !0) : !1;
}, cz = function(e, t) {
  var o, r, s, a, c, l, i = t + 1, p = e.md.block.ruler.getRules("paragraph"), h = e.lineMax;
  for (l = e.parentType, e.parentType = "paragraph"; i < h && !e.isEmpty(i); i++)
    if (!(e.sCount[i] - e.blkIndent > 3) && !(e.sCount[i] < 0)) {
      for (r = !1, s = 0, a = p.length; s < a; s++)
        if (p[s](e, i, h, !0)) {
          r = !0;
          break;
        }
      if (r)
        break;
    }
  return o = e.getLines(t, i, e.blkIndent, !1).trim(), e.line = i, c = e.push("paragraph_open", "p", 1), c.map = [t, e.line], c = e.push("inline", "", 0), c.content = o, c.map = [t, e.line], c.children = [], c = e.push("paragraph_close", "p", -1), e.parentType = l, !0;
}, Ao = nt, gn = B.isSpace;
function he(n, e, t, o) {
  var r, s, a, c, l, i, p, h;
  for (this.src = n, this.md = e, this.env = t, this.tokens = o, this.bMarks = [], this.eMarks = [], this.tShift = [], this.sCount = [], this.bsCount = [], this.blkIndent = 0, this.line = 0, this.lineMax = 0, this.tight = !1, this.ddIndent = -1, this.listIndent = -1, this.parentType = "root", this.level = 0, this.result = "", s = this.src, h = !1, a = c = i = p = 0, l = s.length; c < l; c++) {
    if (r = s.charCodeAt(c), !h)
      if (gn(r)) {
        i++, r === 9 ? p += 4 - p % 4 : p++;
        continue;
      } else
        h = !0;
    (r === 10 || c === l - 1) && (r !== 10 && c++, this.bMarks.push(a), this.eMarks.push(c), this.tShift.push(i), this.sCount.push(p), this.bsCount.push(0), h = !1, i = 0, p = 0, a = c + 1);
  }
  this.bMarks.push(s.length), this.eMarks.push(s.length), this.tShift.push(0), this.sCount.push(0), this.bsCount.push(0), this.lineMax = this.bMarks.length - 1;
}
he.prototype.push = function(n, e, t) {
  var o = new Ao(n, e, t);
  return o.block = !0, t < 0 && this.level--, o.level = this.level, t > 0 && this.level++, this.tokens.push(o), o;
};
he.prototype.isEmpty = function(e) {
  return this.bMarks[e] + this.tShift[e] >= this.eMarks[e];
};
he.prototype.skipEmptyLines = function(e) {
  for (var t = this.lineMax; e < t && !(this.bMarks[e] + this.tShift[e] < this.eMarks[e]); e++)
    ;
  return e;
};
he.prototype.skipSpaces = function(e) {
  for (var t, o = this.src.length; e < o && (t = this.src.charCodeAt(e), !!gn(t)); e++)
    ;
  return e;
};
he.prototype.skipSpacesBack = function(e, t) {
  if (e <= t)
    return e;
  for (; e > t; )
    if (!gn(this.src.charCodeAt(--e)))
      return e + 1;
  return e;
};
he.prototype.skipChars = function(e, t) {
  for (var o = this.src.length; e < o && this.src.charCodeAt(e) === t; e++)
    ;
  return e;
};
he.prototype.skipCharsBack = function(e, t, o) {
  if (e <= o)
    return e;
  for (; e > o; )
    if (t !== this.src.charCodeAt(--e))
      return e + 1;
  return e;
};
he.prototype.getLines = function(e, t, o, r) {
  var s, a, c, l, i, p, h, d = e;
  if (e >= t)
    return "";
  for (p = new Array(t - e), s = 0; d < t; d++, s++) {
    for (a = 0, h = l = this.bMarks[d], d + 1 < t || r ? i = this.eMarks[d] + 1 : i = this.eMarks[d]; l < i && a < o; ) {
      if (c = this.src.charCodeAt(l), gn(c))
        c === 9 ? a += 4 - (a + this.bsCount[d]) % 4 : a++;
      else if (l - h < this.tShift[d])
        a++;
      else
        break;
      l++;
    }
    a > o ? p[s] = new Array(a - o + 1).join(" ") + this.src.slice(l, i) : p[s] = this.src.slice(l, i);
  }
  return p.join("");
};
he.prototype.Token = Ao;
var az = he, iz = et, tn = [
  // First 2 params - rule name & source. Secondary array - list of rules,
  // which can be terminated by this one.
  ["table", jB, ["paragraph", "reference"]],
  ["code", RB],
  ["fence", NB, ["paragraph", "reference", "blockquote", "list"]],
  ["blockquote", PB, ["paragraph", "reference", "blockquote", "list"]],
  ["hr", OB, ["paragraph", "reference", "blockquote", "list"]],
  ["list", MB, ["paragraph", "reference", "blockquote"]],
  ["reference", zB],
  ["html_block", oz, ["paragraph", "reference", "blockquote"]],
  ["heading", sz, ["paragraph", "reference", "blockquote"]],
  ["lheading", rz],
  ["paragraph", cz]
];
function _n() {
  this.ruler = new iz();
  for (var n = 0; n < tn.length; n++)
    this.ruler.push(tn[n][0], tn[n][1], { alt: (tn[n][2] || []).slice() });
}
_n.prototype.tokenize = function(n, e, t) {
  for (var o, r, s = this.ruler.getRules(""), a = s.length, c = e, l = !1, i = n.md.options.maxNesting; c < t && (n.line = c = n.skipEmptyLines(c), !(c >= t || n.sCount[c] < n.blkIndent)); ) {
    if (n.level >= i) {
      n.line = t;
      break;
    }
    for (r = 0; r < a && (o = s[r](n, c, t, !1), !o); r++)
      ;
    n.tight = !l, n.isEmpty(n.line - 1) && (l = !0), c = n.line, c < t && n.isEmpty(c) && (l = !0, c++, n.line = c);
  }
};
_n.prototype.parse = function(n, e, t, o) {
  var r;
  n && (r = new this.State(n, e, t, o), this.tokenize(r, r.line, r.lineMax));
};
_n.prototype.State = az;
var lz = _n;
function uz(n) {
  switch (n) {
    case 10:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 42:
    case 43:
    case 45:
    case 58:
    case 60:
    case 61:
    case 62:
    case 64:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 123:
    case 125:
    case 126:
      return !0;
    default:
      return !1;
  }
}
var pz = function(e, t) {
  for (var o = e.pos; o < e.posMax && !uz(e.src.charCodeAt(o)); )
    o++;
  return o === e.pos ? !1 : (t || (e.pending += e.src.slice(e.pos, o)), e.pos = o, !0);
}, hz = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i, dz = function(e, t) {
  var o, r, s, a, c, l, i, p;
  return !e.md.options.linkify || e.linkLevel > 0 || (o = e.pos, r = e.posMax, o + 3 > r) || e.src.charCodeAt(o) !== 58 || e.src.charCodeAt(o + 1) !== 47 || e.src.charCodeAt(o + 2) !== 47 || (s = e.pending.match(hz), !s) || (a = s[1], c = e.md.linkify.matchAtStart(e.src.slice(o - a.length)), !c) || (l = c.url, l = l.replace(/\*+$/, ""), i = e.md.normalizeLink(l), !e.md.validateLink(i)) ? !1 : (t || (e.pending = e.pending.slice(0, -a.length), p = e.push("link_open", "a", 1), p.attrs = [["href", i]], p.markup = "linkify", p.info = "auto", p = e.push("text", "", 0), p.content = e.md.normalizeLinkText(l), p = e.push("link_close", "a", -1), p.markup = "linkify", p.info = "auto"), e.pos += l.length - a.length, !0);
}, fz = B.isSpace, mz = function(e, t) {
  var o, r, s, a = e.pos;
  if (e.src.charCodeAt(a) !== 10)
    return !1;
  if (o = e.pending.length - 1, r = e.posMax, !t)
    if (o >= 0 && e.pending.charCodeAt(o) === 32)
      if (o >= 1 && e.pending.charCodeAt(o - 1) === 32) {
        for (s = o - 1; s >= 1 && e.pending.charCodeAt(s - 1) === 32; )
          s--;
        e.pending = e.pending.slice(0, s), e.push("hardbreak", "br", 0);
      } else
        e.pending = e.pending.slice(0, -1), e.push("softbreak", "br", 0);
    else
      e.push("softbreak", "br", 0);
  for (a++; a < r && fz(e.src.charCodeAt(a)); )
    a++;
  return e.pos = a, !0;
}, gz = B.isSpace, ot = [];
for (var Ot = 0; Ot < 256; Ot++)
  ot.push(0);
"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(n) {
  ot[n.charCodeAt(0)] = 1;
});
var _z = function(e, t) {
  var o, r, s, a, c, l = e.pos, i = e.posMax;
  if (e.src.charCodeAt(l) !== 92 || (l++, l >= i))
    return !1;
  if (o = e.src.charCodeAt(l), o === 10) {
    for (t || e.push("hardbreak", "br", 0), l++; l < i && (o = e.src.charCodeAt(l), !!gz(o)); )
      l++;
    return e.pos = l, !0;
  }
  return a = e.src[l], o >= 55296 && o <= 56319 && l + 1 < i && (r = e.src.charCodeAt(l + 1), r >= 56320 && r <= 57343 && (a += e.src[l + 1], l++)), s = "\\" + a, t || (c = e.push("text_special", "", 0), o < 256 && ot[o] !== 0 ? c.content = a : c.content = s, c.markup = s, c.info = "escape"), e.pos = l + 1, !0;
}, bz = function(e, t) {
  var o, r, s, a, c, l, i, p, h = e.pos, d = e.src.charCodeAt(h);
  if (d !== 96)
    return !1;
  for (o = h, h++, r = e.posMax; h < r && e.src.charCodeAt(h) === 96; )
    h++;
  if (s = e.src.slice(o, h), i = s.length, e.backticksScanned && (e.backticks[i] || 0) <= o)
    return t || (e.pending += s), e.pos += i, !0;
  for (c = l = h; (c = e.src.indexOf("`", l)) !== -1; ) {
    for (l = c + 1; l < r && e.src.charCodeAt(l) === 96; )
      l++;
    if (p = l - c, p === i)
      return t || (a = e.push("code_inline", "code", 0), a.markup = s, a.content = e.src.slice(h, c).replace(/\n/g, " ").replace(/^ (.+) $/, "$1")), e.pos = l, !0;
    e.backticks[p] = c;
  }
  return e.backticksScanned = !0, t || (e.pending += s), e.pos += i, !0;
}, bn = {};
bn.tokenize = function(e, t) {
  var o, r, s, a, c, l = e.pos, i = e.src.charCodeAt(l);
  if (t || i !== 126 || (r = e.scanDelims(e.pos, !0), a = r.length, c = String.fromCharCode(i), a < 2))
    return !1;
  for (a % 2 && (s = e.push("text", "", 0), s.content = c, a--), o = 0; o < a; o += 2)
    s = e.push("text", "", 0), s.content = c + c, e.delimiters.push({
      marker: i,
      length: 0,
      // disable "rule of 3" length checks meant for emphasis
      token: e.tokens.length - 1,
      end: -1,
      open: r.can_open,
      close: r.can_close
    });
  return e.pos += r.length, !0;
};
function Ft(n, e) {
  var t, o, r, s, a, c = [], l = e.length;
  for (t = 0; t < l; t++)
    r = e[t], r.marker === 126 && r.end !== -1 && (s = e[r.end], a = n.tokens[r.token], a.type = "s_open", a.tag = "s", a.nesting = 1, a.markup = "~~", a.content = "", a = n.tokens[s.token], a.type = "s_close", a.tag = "s", a.nesting = -1, a.markup = "~~", a.content = "", n.tokens[s.token - 1].type === "text" && n.tokens[s.token - 1].content === "~" && c.push(s.token - 1));
  for (; c.length; ) {
    for (t = c.pop(), o = t + 1; o < n.tokens.length && n.tokens[o].type === "s_close"; )
      o++;
    o--, t !== o && (a = n.tokens[o], n.tokens[o] = n.tokens[t], n.tokens[t] = a);
  }
}
bn.postProcess = function(e) {
  var t, o = e.tokens_meta, r = e.tokens_meta.length;
  for (Ft(e, e.delimiters), t = 0; t < r; t++)
    o[t] && o[t].delimiters && Ft(e, o[t].delimiters);
};
var kn = {};
kn.tokenize = function(e, t) {
  var o, r, s, a = e.pos, c = e.src.charCodeAt(a);
  if (t || c !== 95 && c !== 42)
    return !1;
  for (r = e.scanDelims(e.pos, c === 42), o = 0; o < r.length; o++)
    s = e.push("text", "", 0), s.content = String.fromCharCode(c), e.delimiters.push({
      // Char code of the starting marker (number).
      //
      marker: c,
      // Total length of these series of delimiters.
      //
      length: r.length,
      // A position of the token this delimiter corresponds to.
      //
      token: e.tokens.length - 1,
      // If this delimiter is matched as a valid opener, `end` will be
      // equal to its position, otherwise it's `-1`.
      //
      end: -1,
      // Boolean flags that determine if this delimiter could open or close
      // an emphasis.
      //
      open: r.can_open,
      close: r.can_close
    });
  return e.pos += r.length, !0;
};
function Mt(n, e) {
  var t, o, r, s, a, c, l = e.length;
  for (t = l - 1; t >= 0; t--)
    o = e[t], !(o.marker !== 95 && o.marker !== 42) && o.end !== -1 && (r = e[o.end], c = t > 0 && e[t - 1].end === o.end + 1 && // check that first two markers match and adjacent
    e[t - 1].marker === o.marker && e[t - 1].token === o.token - 1 && // check that last two markers are adjacent (we can safely assume they match)
    e[o.end + 1].token === r.token + 1, a = String.fromCharCode(o.marker), s = n.tokens[o.token], s.type = c ? "strong_open" : "em_open", s.tag = c ? "strong" : "em", s.nesting = 1, s.markup = c ? a + a : a, s.content = "", s = n.tokens[r.token], s.type = c ? "strong_close" : "em_close", s.tag = c ? "strong" : "em", s.nesting = -1, s.markup = c ? a + a : a, s.content = "", c && (n.tokens[e[t - 1].token].content = "", n.tokens[e[o.end + 1].token].content = "", t--));
}
kn.postProcess = function(e) {
  var t, o = e.tokens_meta, r = e.tokens_meta.length;
  for (Mt(e, e.delimiters), t = 0; t < r; t++)
    o[t] && o[t].delimiters && Mt(e, o[t].delimiters);
};
var kz = B.normalizeReference, jn = B.isSpace, yz = function(e, t) {
  var o, r, s, a, c, l, i, p, h, d = "", f = "", m = e.pos, L = e.posMax, S = e.pos, b = !0;
  if (e.src.charCodeAt(e.pos) !== 91 || (c = e.pos + 1, a = e.md.helpers.parseLinkLabel(e, e.pos, !0), a < 0))
    return !1;
  if (l = a + 1, l < L && e.src.charCodeAt(l) === 40) {
    for (b = !1, l++; l < L && (r = e.src.charCodeAt(l), !(!jn(r) && r !== 10)); l++)
      ;
    if (l >= L)
      return !1;
    if (S = l, i = e.md.helpers.parseLinkDestination(e.src, l, e.posMax), i.ok) {
      for (d = e.md.normalizeLink(i.str), e.md.validateLink(d) ? l = i.pos : d = "", S = l; l < L && (r = e.src.charCodeAt(l), !(!jn(r) && r !== 10)); l++)
        ;
      if (i = e.md.helpers.parseLinkTitle(e.src, l, e.posMax), l < L && S !== l && i.ok)
        for (f = i.str, l = i.pos; l < L && (r = e.src.charCodeAt(l), !(!jn(r) && r !== 10)); l++)
          ;
    }
    (l >= L || e.src.charCodeAt(l) !== 41) && (b = !0), l++;
  }
  if (b) {
    if (typeof e.env.references > "u")
      return !1;
    if (l < L && e.src.charCodeAt(l) === 91 ? (S = l + 1, l = e.md.helpers.parseLinkLabel(e, l), l >= 0 ? s = e.src.slice(S, l++) : l = a + 1) : l = a + 1, s || (s = e.src.slice(c, a)), p = e.env.references[kz(s)], !p)
      return e.pos = m, !1;
    d = p.href, f = p.title;
  }
  return t || (e.pos = c, e.posMax = a, h = e.push("link_open", "a", 1), h.attrs = o = [["href", d]], f && o.push(["title", f]), e.linkLevel++, e.md.inline.tokenize(e), e.linkLevel--, h = e.push("link_close", "a", -1)), e.pos = l, e.posMax = L, !0;
}, wz = B.normalizeReference, Rn = B.isSpace, vz = function(e, t) {
  var o, r, s, a, c, l, i, p, h, d, f, m, L, S = "", b = e.pos, k = e.posMax;
  if (e.src.charCodeAt(e.pos) !== 33 || e.src.charCodeAt(e.pos + 1) !== 91 || (l = e.pos + 2, c = e.md.helpers.parseLinkLabel(e, e.pos + 1, !1), c < 0))
    return !1;
  if (i = c + 1, i < k && e.src.charCodeAt(i) === 40) {
    for (i++; i < k && (r = e.src.charCodeAt(i), !(!Rn(r) && r !== 10)); i++)
      ;
    if (i >= k)
      return !1;
    for (L = i, h = e.md.helpers.parseLinkDestination(e.src, i, e.posMax), h.ok && (S = e.md.normalizeLink(h.str), e.md.validateLink(S) ? i = h.pos : S = ""), L = i; i < k && (r = e.src.charCodeAt(i), !(!Rn(r) && r !== 10)); i++)
      ;
    if (h = e.md.helpers.parseLinkTitle(e.src, i, e.posMax), i < k && L !== i && h.ok)
      for (d = h.str, i = h.pos; i < k && (r = e.src.charCodeAt(i), !(!Rn(r) && r !== 10)); i++)
        ;
    else
      d = "";
    if (i >= k || e.src.charCodeAt(i) !== 41)
      return e.pos = b, !1;
    i++;
  } else {
    if (typeof e.env.references > "u")
      return !1;
    if (i < k && e.src.charCodeAt(i) === 91 ? (L = i + 1, i = e.md.helpers.parseLinkLabel(e, i), i >= 0 ? a = e.src.slice(L, i++) : i = c + 1) : i = c + 1, a || (a = e.src.slice(l, c)), p = e.env.references[wz(a)], !p)
      return e.pos = b, !1;
    S = p.href, d = p.title;
  }
  return t || (s = e.src.slice(l, c), e.md.inline.parse(
    s,
    e.md,
    e.env,
    m = []
  ), f = e.push("image", "img", 0), f.attrs = o = [["src", S], ["alt", ""]], f.children = m, f.content = s, d && o.push(["title", d])), e.pos = i, e.posMax = k, !0;
}, xz = /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/, Az = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/, Sz = function(e, t) {
  var o, r, s, a, c, l, i = e.pos;
  if (e.src.charCodeAt(i) !== 60)
    return !1;
  for (c = e.pos, l = e.posMax; ; ) {
    if (++i >= l || (a = e.src.charCodeAt(i), a === 60))
      return !1;
    if (a === 62)
      break;
  }
  return o = e.src.slice(c + 1, i), Az.test(o) ? (r = e.md.normalizeLink(o), e.md.validateLink(r) ? (t || (s = e.push("link_open", "a", 1), s.attrs = [["href", r]], s.markup = "autolink", s.info = "auto", s = e.push("text", "", 0), s.content = e.md.normalizeLinkText(o), s = e.push("link_close", "a", -1), s.markup = "autolink", s.info = "auto"), e.pos += o.length + 2, !0) : !1) : xz.test(o) ? (r = e.md.normalizeLink("mailto:" + o), e.md.validateLink(r) ? (t || (s = e.push("link_open", "a", 1), s.attrs = [["href", r]], s.markup = "autolink", s.info = "auto", s = e.push("text", "", 0), s.content = e.md.normalizeLinkText(o), s = e.push("link_close", "a", -1), s.markup = "autolink", s.info = "auto"), e.pos += o.length + 2, !0) : !1) : !1;
}, Lz = mn.HTML_TAG_RE;
function Cz(n) {
  return /^<a[>\s]/i.test(n);
}
function Ez(n) {
  return /^<\/a\s*>/i.test(n);
}
function Tz(n) {
  var e = n | 32;
  return e >= 97 && e <= 122;
}
var Dz = function(e, t) {
  var o, r, s, a, c = e.pos;
  return !e.md.options.html || (s = e.posMax, e.src.charCodeAt(c) !== 60 || c + 2 >= s) || (o = e.src.charCodeAt(c + 1), o !== 33 && o !== 63 && o !== 47 && !Tz(o)) || (r = e.src.slice(c).match(Lz), !r) ? !1 : (t || (a = e.push("html_inline", "", 0), a.content = e.src.slice(c, c + r[0].length), Cz(a.content) && e.linkLevel++, Ez(a.content) && e.linkLevel--), e.pos += r[0].length, !0);
}, Bt = mo, qz = B.has, jz = B.isValidEntityCode, zt = B.fromCodePoint, Rz = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i, Nz = /^&([a-z][a-z0-9]{1,31});/i, Pz = function(e, t) {
  var o, r, s, a, c = e.pos, l = e.posMax;
  if (e.src.charCodeAt(c) !== 38 || c + 1 >= l)
    return !1;
  if (o = e.src.charCodeAt(c + 1), o === 35) {
    if (s = e.src.slice(c).match(Rz), s)
      return t || (r = s[1][0].toLowerCase() === "x" ? parseInt(s[1].slice(1), 16) : parseInt(s[1], 10), a = e.push("text_special", "", 0), a.content = jz(r) ? zt(r) : zt(65533), a.markup = s[0], a.info = "entity"), e.pos += s[0].length, !0;
  } else if (s = e.src.slice(c).match(Nz), s && qz(Bt, s[1]))
    return t || (a = e.push("text_special", "", 0), a.content = Bt[s[1]], a.markup = s[0], a.info = "entity"), e.pos += s[0].length, !0;
  return !1;
};
function $t(n, e) {
  var t, o, r, s, a, c, l, i, p = {}, h = e.length;
  if (h) {
    var d = 0, f = -2, m = [];
    for (t = 0; t < h; t++)
      if (r = e[t], m.push(0), (e[d].marker !== r.marker || f !== r.token - 1) && (d = t), f = r.token, r.length = r.length || 0, !!r.close) {
        for (p.hasOwnProperty(r.marker) || (p[r.marker] = [-1, -1, -1, -1, -1, -1]), a = p[r.marker][(r.open ? 3 : 0) + r.length % 3], o = d - m[d] - 1, c = o; o > a; o -= m[o] + 1)
          if (s = e[o], s.marker === r.marker && s.open && s.end < 0 && (l = !1, (s.close || r.open) && (s.length + r.length) % 3 === 0 && (s.length % 3 !== 0 || r.length % 3 !== 0) && (l = !0), !l)) {
            i = o > 0 && !e[o - 1].open ? m[o - 1] + 1 : 0, m[t] = t - o + i, m[o] = i, r.open = !1, s.end = t, s.close = !1, c = -1, f = -2;
            break;
          }
        c !== -1 && (p[r.marker][(r.open ? 3 : 0) + (r.length || 0) % 3] = c);
      }
  }
}
var Iz = function(e) {
  var t, o = e.tokens_meta, r = e.tokens_meta.length;
  for ($t(e, e.delimiters), t = 0; t < r; t++)
    o[t] && o[t].delimiters && $t(e, o[t].delimiters);
}, Oz = function(e) {
  var t, o, r = 0, s = e.tokens, a = e.tokens.length;
  for (t = o = 0; t < a; t++)
    s[t].nesting < 0 && r--, s[t].level = r, s[t].nesting > 0 && r++, s[t].type === "text" && t + 1 < a && s[t + 1].type === "text" ? s[t + 1].content = s[t].content + s[t + 1].content : (t !== o && (s[o] = s[t]), o++);
  t !== o && (s.length = o);
}, st = nt, Gt = B.isWhiteSpace, Ut = B.isPunctChar, Ht = B.isMdAsciiPunct;
function Ye(n, e, t, o) {
  this.src = n, this.env = t, this.md = e, this.tokens = o, this.tokens_meta = Array(o.length), this.pos = 0, this.posMax = this.src.length, this.level = 0, this.pending = "", this.pendingLevel = 0, this.cache = {}, this.delimiters = [], this._prev_delimiters = [], this.backticks = {}, this.backticksScanned = !1, this.linkLevel = 0;
}
Ye.prototype.pushPending = function() {
  var n = new st("text", "", 0);
  return n.content = this.pending, n.level = this.pendingLevel, this.tokens.push(n), this.pending = "", n;
};
Ye.prototype.push = function(n, e, t) {
  this.pending && this.pushPending();
  var o = new st(n, e, t), r = null;
  return t < 0 && (this.level--, this.delimiters = this._prev_delimiters.pop()), o.level = this.level, t > 0 && (this.level++, this._prev_delimiters.push(this.delimiters), this.delimiters = [], r = { delimiters: this.delimiters }), this.pendingLevel = this.level, this.tokens.push(o), this.tokens_meta.push(r), o;
};
Ye.prototype.scanDelims = function(n, e) {
  var t = n, o, r, s, a, c, l, i, p, h, d = !0, f = !0, m = this.posMax, L = this.src.charCodeAt(n);
  for (o = n > 0 ? this.src.charCodeAt(n - 1) : 32; t < m && this.src.charCodeAt(t) === L; )
    t++;
  return s = t - n, r = t < m ? this.src.charCodeAt(t) : 32, i = Ht(o) || Ut(String.fromCharCode(o)), h = Ht(r) || Ut(String.fromCharCode(r)), l = Gt(o), p = Gt(r), p ? d = !1 : h && (l || i || (d = !1)), l ? f = !1 : i && (p || h || (f = !1)), e ? (a = d, c = f) : (a = d && (!f || i), c = f && (!d || h)), {
    can_open: a,
    can_close: c,
    length: s
  };
};
Ye.prototype.Token = st;
var Fz = Ye, Vt = et, Nn = [
  ["text", pz],
  ["linkify", dz],
  ["newline", mz],
  ["escape", _z],
  ["backticks", bz],
  ["strikethrough", bn.tokenize],
  ["emphasis", kn.tokenize],
  ["link", yz],
  ["image", vz],
  ["autolink", Sz],
  ["html_inline", Dz],
  ["entity", Pz]
], Pn = [
  ["balance_pairs", Iz],
  ["strikethrough", bn.postProcess],
  ["emphasis", kn.postProcess],
  // rules for pairs separate '**' into its own text tokens, which may be left unused,
  // rule below merges unused segments back with the rest of the text
  ["fragments_join", Oz]
];
function Xe() {
  var n;
  for (this.ruler = new Vt(), n = 0; n < Nn.length; n++)
    this.ruler.push(Nn[n][0], Nn[n][1]);
  for (this.ruler2 = new Vt(), n = 0; n < Pn.length; n++)
    this.ruler2.push(Pn[n][0], Pn[n][1]);
}
Xe.prototype.skipToken = function(n) {
  var e, t, o = n.pos, r = this.ruler.getRules(""), s = r.length, a = n.md.options.maxNesting, c = n.cache;
  if (typeof c[o] < "u") {
    n.pos = c[o];
    return;
  }
  if (n.level < a)
    for (t = 0; t < s && (n.level++, e = r[t](n, !0), n.level--, !e); t++)
      ;
  else
    n.pos = n.posMax;
  e || n.pos++, c[o] = n.pos;
};
Xe.prototype.tokenize = function(n) {
  for (var e, t, o = this.ruler.getRules(""), r = o.length, s = n.posMax, a = n.md.options.maxNesting; n.pos < s; ) {
    if (n.level < a)
      for (t = 0; t < r && (e = o[t](n, !1), !e); t++)
        ;
    if (e) {
      if (n.pos >= s)
        break;
      continue;
    }
    n.pending += n.src[n.pos++];
  }
  n.pending && n.pushPending();
};
Xe.prototype.parse = function(n, e, t, o) {
  var r, s, a, c = new this.State(n, e, t, o);
  for (this.tokenize(c), s = this.ruler2.getRules(""), a = s.length, r = 0; r < a; r++)
    s[r](c);
};
Xe.prototype.State = Fz;
var Mz = Xe, In, Wt;
function Bz() {
  return Wt || (Wt = 1, In = function(n) {
    var e = {};
    n = n || {}, e.src_Any = go().source, e.src_Cc = _o().source, e.src_Z = bo().source, e.src_P = Kn.source, e.src_ZPCc = [e.src_Z, e.src_P, e.src_Cc].join("|"), e.src_ZCc = [e.src_Z, e.src_Cc].join("|");
    var t = "[><｜]";
    return e.src_pseudo_letter = "(?:(?!" + t + "|" + e.src_ZPCc + ")" + e.src_Any + ")", e.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)", e.src_auth = "(?:(?:(?!" + e.src_ZCc + "|[@/\\[\\]()]).)+@)?", e.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?", e.src_host_terminator = "(?=$|" + t + "|" + e.src_ZPCc + ")(?!" + (n["---"] ? "-(?!--)|" : "-|") + "_|:\\d|\\.-|\\.(?!$|" + e.src_ZPCc + "))", e.src_path = "(?:[/?#](?:(?!" + e.src_ZCc + "|" + t + `|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!` + e.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + e.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + e.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + e.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + e.src_ZCc + "|[']).)+\\'|\\'(?=" + e.src_pseudo_letter + "|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + e.src_ZCc + "|[.]|$)|" + (n["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + ",(?!" + e.src_ZCc + "|$)|;(?!" + e.src_ZCc + "|$)|\\!+(?!" + e.src_ZCc + "|[!]|$)|\\?(?!" + e.src_ZCc + "|[?]|$))+|\\/)?", e.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*', e.src_xn = "xn--[a-z0-9\\-]{1,59}", e.src_domain_root = // Allow letters & digits (http://test1)
    "(?:" + e.src_xn + "|" + e.src_pseudo_letter + "{1,63})", e.src_domain = "(?:" + e.src_xn + "|(?:" + e.src_pseudo_letter + ")|(?:" + e.src_pseudo_letter + "(?:-|" + e.src_pseudo_letter + "){0,61}" + e.src_pseudo_letter + "))", e.src_host = "(?:(?:(?:(?:" + e.src_domain + ")\\.)*" + e.src_domain + "))", e.tpl_host_fuzzy = "(?:" + e.src_ip4 + "|(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%)))", e.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + e.src_domain + ")\\.)+(?:%TLDS%))", e.src_host_strict = e.src_host + e.src_host_terminator, e.tpl_host_fuzzy_strict = e.tpl_host_fuzzy + e.src_host_terminator, e.src_host_port_strict = e.src_host + e.src_port + e.src_host_terminator, e.tpl_host_port_fuzzy_strict = e.tpl_host_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_port_no_ip_fuzzy_strict = e.tpl_host_no_ip_fuzzy + e.src_port + e.src_host_terminator, e.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + e.src_ZPCc + "|>|$))", e.tpl_email_fuzzy = "(^|" + t + '|"|\\(|' + e.src_ZCc + ")(" + e.src_email_name + "@" + e.tpl_host_fuzzy_strict + ")", e.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
    // but can start with > (markdown blockquote)
    "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_fuzzy_strict + e.src_path + ")", e.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
    // but can start with > (markdown blockquote)
    "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + e.src_ZPCc + "))((?![$+<=>^`|｜])" + e.tpl_host_port_no_ip_fuzzy_strict + e.src_path + ")", e;
  }), In;
}
function Hn(n) {
  var e = Array.prototype.slice.call(arguments, 1);
  return e.forEach(function(t) {
    t && Object.keys(t).forEach(function(o) {
      n[o] = t[o];
    });
  }), n;
}
function yn(n) {
  return Object.prototype.toString.call(n);
}
function zz(n) {
  return yn(n) === "[object String]";
}
function $z(n) {
  return yn(n) === "[object Object]";
}
function Gz(n) {
  return yn(n) === "[object RegExp]";
}
function Zt(n) {
  return yn(n) === "[object Function]";
}
function Uz(n) {
  return n.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
}
var So = {
  fuzzyLink: !0,
  fuzzyEmail: !0,
  fuzzyIP: !1
};
function Hz(n) {
  return Object.keys(n || {}).reduce(function(e, t) {
    return e || So.hasOwnProperty(t);
  }, !1);
}
var Vz = {
  "http:": {
    validate: function(n, e, t) {
      var o = n.slice(e);
      return t.re.http || (t.re.http = new RegExp(
        "^\\/\\/" + t.re.src_auth + t.re.src_host_port_strict + t.re.src_path,
        "i"
      )), t.re.http.test(o) ? o.match(t.re.http)[0].length : 0;
    }
  },
  "https:": "http:",
  "ftp:": "http:",
  "//": {
    validate: function(n, e, t) {
      var o = n.slice(e);
      return t.re.no_http || (t.re.no_http = new RegExp(
        "^" + t.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'
        // with code comments
        "(?:localhost|(?:(?:" + t.re.src_domain + ")\\.)+" + t.re.src_domain_root + ")" + t.re.src_port + t.re.src_host_terminator + t.re.src_path,
        "i"
      )), t.re.no_http.test(o) ? e >= 3 && n[e - 3] === ":" || e >= 3 && n[e - 3] === "/" ? 0 : o.match(t.re.no_http)[0].length : 0;
    }
  },
  "mailto:": {
    validate: function(n, e, t) {
      var o = n.slice(e);
      return t.re.mailto || (t.re.mailto = new RegExp(
        "^" + t.re.src_email_name + "@" + t.re.src_host_strict,
        "i"
      )), t.re.mailto.test(o) ? o.match(t.re.mailto)[0].length : 0;
    }
  }
}, Wz = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]", Zz = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
function Jz(n) {
  n.__index__ = -1, n.__text_cache__ = "";
}
function Qz(n) {
  return function(e, t) {
    var o = e.slice(t);
    return n.test(o) ? o.match(n)[0].length : 0;
  };
}
function Jt() {
  return function(n, e) {
    e.normalize(n);
  };
}
function cn(n) {
  var e = n.re = Bz()(n.__opts__), t = n.__tlds__.slice();
  n.onCompile(), n.__tlds_replaced__ || t.push(Wz), t.push(e.src_xn), e.src_tlds = t.join("|");
  function o(c) {
    return c.replace("%TLDS%", e.src_tlds);
  }
  e.email_fuzzy = RegExp(o(e.tpl_email_fuzzy), "i"), e.link_fuzzy = RegExp(o(e.tpl_link_fuzzy), "i"), e.link_no_ip_fuzzy = RegExp(o(e.tpl_link_no_ip_fuzzy), "i"), e.host_fuzzy_test = RegExp(o(e.tpl_host_fuzzy_test), "i");
  var r = [];
  n.__compiled__ = {};
  function s(c, l) {
    throw new Error('(LinkifyIt) Invalid schema "' + c + '": ' + l);
  }
  Object.keys(n.__schemas__).forEach(function(c) {
    var l = n.__schemas__[c];
    if (l !== null) {
      var i = { validate: null, link: null };
      if (n.__compiled__[c] = i, $z(l)) {
        Gz(l.validate) ? i.validate = Qz(l.validate) : Zt(l.validate) ? i.validate = l.validate : s(c, l), Zt(l.normalize) ? i.normalize = l.normalize : l.normalize ? s(c, l) : i.normalize = Jt();
        return;
      }
      if (zz(l)) {
        r.push(c);
        return;
      }
      s(c, l);
    }
  }), r.forEach(function(c) {
    n.__compiled__[n.__schemas__[c]] && (n.__compiled__[c].validate = n.__compiled__[n.__schemas__[c]].validate, n.__compiled__[c].normalize = n.__compiled__[n.__schemas__[c]].normalize);
  }), n.__compiled__[""] = { validate: null, normalize: Jt() };
  var a = Object.keys(n.__compiled__).filter(function(c) {
    return c.length > 0 && n.__compiled__[c];
  }).map(Uz).join("|");
  n.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + a + ")", "i"), n.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + e.src_ZPCc + "))(" + a + ")", "ig"), n.re.schema_at_start = RegExp("^" + n.re.schema_search.source, "i"), n.re.pretest = RegExp(
    "(" + n.re.schema_test.source + ")|(" + n.re.host_fuzzy_test.source + ")|@",
    "i"
  ), Jz(n);
}
function Yz(n, e) {
  var t = n.__index__, o = n.__last_index__, r = n.__text_cache__.slice(t, o);
  this.schema = n.__schema__.toLowerCase(), this.index = t + e, this.lastIndex = o + e, this.raw = r, this.text = r, this.url = r;
}
function Vn(n, e) {
  var t = new Yz(n, e);
  return n.__compiled__[t.schema].normalize(t, n), t;
}
function te(n, e) {
  if (!(this instanceof te))
    return new te(n, e);
  e || Hz(n) && (e = n, n = {}), this.__opts__ = Hn({}, So, e), this.__index__ = -1, this.__last_index__ = -1, this.__schema__ = "", this.__text_cache__ = "", this.__schemas__ = Hn({}, Vz, n), this.__compiled__ = {}, this.__tlds__ = Zz, this.__tlds_replaced__ = !1, this.re = {}, cn(this);
}
te.prototype.add = function(e, t) {
  return this.__schemas__[e] = t, cn(this), this;
};
te.prototype.set = function(e) {
  return this.__opts__ = Hn(this.__opts__, e), this;
};
te.prototype.test = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length)
    return !1;
  var t, o, r, s, a, c, l, i, p;
  if (this.re.schema_test.test(e)) {
    for (l = this.re.schema_search, l.lastIndex = 0; (t = l.exec(e)) !== null; )
      if (s = this.testSchemaAt(e, t[2], l.lastIndex), s) {
        this.__schema__ = t[2], this.__index__ = t.index + t[1].length, this.__last_index__ = t.index + t[0].length + s;
        break;
      }
  }
  return this.__opts__.fuzzyLink && this.__compiled__["http:"] && (i = e.search(this.re.host_fuzzy_test), i >= 0 && (this.__index__ < 0 || i < this.__index__) && (o = e.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null && (a = o.index + o[1].length, (this.__index__ < 0 || a < this.__index__) && (this.__schema__ = "", this.__index__ = a, this.__last_index__ = o.index + o[0].length))), this.__opts__.fuzzyEmail && this.__compiled__["mailto:"] && (p = e.indexOf("@"), p >= 0 && (r = e.match(this.re.email_fuzzy)) !== null && (a = r.index + r[1].length, c = r.index + r[0].length, (this.__index__ < 0 || a < this.__index__ || a === this.__index__ && c > this.__last_index__) && (this.__schema__ = "mailto:", this.__index__ = a, this.__last_index__ = c))), this.__index__ >= 0;
};
te.prototype.pretest = function(e) {
  return this.re.pretest.test(e);
};
te.prototype.testSchemaAt = function(e, t, o) {
  return this.__compiled__[t.toLowerCase()] ? this.__compiled__[t.toLowerCase()].validate(e, o, this) : 0;
};
te.prototype.match = function(e) {
  var t = 0, o = [];
  this.__index__ >= 0 && this.__text_cache__ === e && (o.push(Vn(this, t)), t = this.__last_index__);
  for (var r = t ? e.slice(t) : e; this.test(r); )
    o.push(Vn(this, t)), r = r.slice(this.__last_index__), t += this.__last_index__;
  return o.length ? o : null;
};
te.prototype.matchAtStart = function(e) {
  if (this.__text_cache__ = e, this.__index__ = -1, !e.length)
    return null;
  var t = this.re.schema_at_start.exec(e);
  if (!t)
    return null;
  var o = this.testSchemaAt(e, t[2], t[0].length);
  return o ? (this.__schema__ = t[2], this.__index__ = t.index + t[1].length, this.__last_index__ = t.index + t[0].length + o, Vn(this, 0)) : null;
};
te.prototype.tlds = function(e, t) {
  return e = Array.isArray(e) ? e : [e], t ? (this.__tlds__ = this.__tlds__.concat(e).sort().filter(function(o, r, s) {
    return o !== s[r - 1];
  }).reverse(), cn(this), this) : (this.__tlds__ = e.slice(), this.__tlds_replaced__ = !0, cn(this), this);
};
te.prototype.normalize = function(e) {
  e.schema || (e.url = "http://" + e.url), e.schema === "mailto:" && !/^mailto:/i.test(e.url) && (e.url = "mailto:" + e.url);
};
te.prototype.onCompile = function() {
};
var Xz = te;
const Be = 2147483647, le = 36, rt = 1, Je = 26, Kz = 38, e$ = 700, Lo = 72, Co = 128, Eo = "-", n$ = /^xn--/, t$ = /[^\0-\x7F]/, o$ = /[\x2E\u3002\uFF0E\uFF61]/g, s$ = {
  overflow: "Overflow: input needs wider integers to process",
  "not-basic": "Illegal input >= 0x80 (not a basic code point)",
  "invalid-input": "Invalid input"
}, On = le - rt, ue = Math.floor, Fn = String.fromCharCode;
function be(n) {
  throw new RangeError(s$[n]);
}
function r$(n, e) {
  const t = [];
  let o = n.length;
  for (; o--; )
    t[o] = e(n[o]);
  return t;
}
function To(n, e) {
  const t = n.split("@");
  let o = "";
  t.length > 1 && (o = t[0] + "@", n = t[1]), n = n.replace(o$, ".");
  const r = n.split("."), s = r$(r, e).join(".");
  return o + s;
}
function ct(n) {
  const e = [];
  let t = 0;
  const o = n.length;
  for (; t < o; ) {
    const r = n.charCodeAt(t++);
    if (r >= 55296 && r <= 56319 && t < o) {
      const s = n.charCodeAt(t++);
      (s & 64512) == 56320 ? e.push(((r & 1023) << 10) + (s & 1023) + 65536) : (e.push(r), t--);
    } else
      e.push(r);
  }
  return e;
}
const Do = (n) => String.fromCodePoint(...n), c$ = function(n) {
  return n >= 48 && n < 58 ? 26 + (n - 48) : n >= 65 && n < 91 ? n - 65 : n >= 97 && n < 123 ? n - 97 : le;
}, Qt = function(n, e) {
  return n + 22 + 75 * (n < 26) - ((e != 0) << 5);
}, qo = function(n, e, t) {
  let o = 0;
  for (n = t ? ue(n / e$) : n >> 1, n += ue(n / e); n > On * Je >> 1; o += le)
    n = ue(n / On);
  return ue(o + (On + 1) * n / (n + Kz));
}, at = function(n) {
  const e = [], t = n.length;
  let o = 0, r = Co, s = Lo, a = n.lastIndexOf(Eo);
  a < 0 && (a = 0);
  for (let c = 0; c < a; ++c)
    n.charCodeAt(c) >= 128 && be("not-basic"), e.push(n.charCodeAt(c));
  for (let c = a > 0 ? a + 1 : 0; c < t; ) {
    const l = o;
    for (let p = 1, h = le; ; h += le) {
      c >= t && be("invalid-input");
      const d = c$(n.charCodeAt(c++));
      d >= le && be("invalid-input"), d > ue((Be - o) / p) && be("overflow"), o += d * p;
      const f = h <= s ? rt : h >= s + Je ? Je : h - s;
      if (d < f)
        break;
      const m = le - f;
      p > ue(Be / m) && be("overflow"), p *= m;
    }
    const i = e.length + 1;
    s = qo(o - l, i, l == 0), ue(o / i) > Be - r && be("overflow"), r += ue(o / i), o %= i, e.splice(o++, 0, r);
  }
  return String.fromCodePoint(...e);
}, it = function(n) {
  const e = [];
  n = ct(n);
  const t = n.length;
  let o = Co, r = 0, s = Lo;
  for (const l of n)
    l < 128 && e.push(Fn(l));
  const a = e.length;
  let c = a;
  for (a && e.push(Eo); c < t; ) {
    let l = Be;
    for (const p of n)
      p >= o && p < l && (l = p);
    const i = c + 1;
    l - o > ue((Be - r) / i) && be("overflow"), r += (l - o) * i, o = l;
    for (const p of n)
      if (p < o && ++r > Be && be("overflow"), p === o) {
        let h = r;
        for (let d = le; ; d += le) {
          const f = d <= s ? rt : d >= s + Je ? Je : d - s;
          if (h < f)
            break;
          const m = h - f, L = le - f;
          e.push(
            Fn(Qt(f + m % L, 0))
          ), h = ue(m / L);
        }
        e.push(Fn(Qt(h, 0))), s = qo(r, i, c === a), r = 0, ++c;
      }
    ++r, ++o;
  }
  return e.join("");
}, jo = function(n) {
  return To(n, function(e) {
    return n$.test(e) ? at(e.slice(4).toLowerCase()) : e;
  });
}, Ro = function(n) {
  return To(n, function(e) {
    return t$.test(e) ? "xn--" + it(e) : e;
  });
}, a$ = {
  /**
   * A string representing the current Punycode.js version number.
   * @memberOf punycode
   * @type String
   */
  version: "2.1.0",
  /**
   * An object of methods to convert from JavaScript's internal character
   * representation (UCS-2) to Unicode code points, and back.
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode
   * @type Object
   */
  ucs2: {
    decode: ct,
    encode: Do
  },
  decode: at,
  encode: it,
  toASCII: Ro,
  toUnicode: jo
}, i$ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decode: at,
  default: a$,
  encode: it,
  toASCII: Ro,
  toUnicode: jo,
  ucs2decode: ct,
  ucs2encode: Do
}, Symbol.toStringTag, { value: "Module" })), l$ = /* @__PURE__ */ bs(i$);
var u$ = {
  options: {
    html: !1,
    // Enable HTML tags in source
    xhtmlOut: !1,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 100
    // Internal protection, recursion limit
  },
  components: {
    core: {},
    block: {},
    inline: {}
  }
}, p$ = {
  options: {
    html: !1,
    // Enable HTML tags in source
    xhtmlOut: !1,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20
    // Internal protection, recursion limit
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "text"
      ],
      rules2: [
        "balance_pairs",
        "fragments_join"
      ]
    }
  }
}, h$ = {
  options: {
    html: !0,
    // Enable HTML tags in source
    xhtmlOut: !0,
    // Use '/' to close single tags (<br />)
    breaks: !1,
    // Convert '\n' in paragraphs into <br>
    langPrefix: "language-",
    // CSS language prefix for fenced blocks
    linkify: !1,
    // autoconvert URL-like texts to links
    // Enable some language-neutral replacements + quotes beautification
    typographer: !1,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Could be either a String or an Array.
    //
    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
    quotes: "“”‘’",
    /* “”‘’ */
    // Highlighter function. Should return escaped HTML,
    // or '' if the source string is not changed and should be escaped externaly.
    // If result starts with <pre... internal wrapper is skipped.
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20
    // Internal protection, recursion limit
  },
  components: {
    core: {
      rules: [
        "normalize",
        "block",
        "inline",
        "text_join"
      ]
    },
    block: {
      rules: [
        "blockquote",
        "code",
        "fence",
        "heading",
        "hr",
        "html_block",
        "lheading",
        "list",
        "reference",
        "paragraph"
      ]
    },
    inline: {
      rules: [
        "autolink",
        "backticks",
        "emphasis",
        "entity",
        "escape",
        "html_inline",
        "image",
        "link",
        "newline",
        "text"
      ],
      rules2: [
        "balance_pairs",
        "emphasis",
        "fragments_join"
      ]
    }
  }
}, Ze = B, d$ = fn, f$ = aB, m$ = qB, g$ = lz, _$ = Mz, b$ = Xz, Ee = $e, No = l$, k$ = {
  default: u$,
  zero: p$,
  commonmark: h$
}, y$ = /^(vbscript|javascript|file|data):/, w$ = /^data:image\/(gif|png|jpeg|webp);/;
function v$(n) {
  var e = n.trim().toLowerCase();
  return y$.test(e) ? !!w$.test(e) : !0;
}
var Po = ["http:", "https:", "mailto:"];
function x$(n) {
  var e = Ee.parse(n, !0);
  if (e.hostname && (!e.protocol || Po.indexOf(e.protocol) >= 0))
    try {
      e.hostname = No.toASCII(e.hostname);
    } catch {
    }
  return Ee.encode(Ee.format(e));
}
function A$(n) {
  var e = Ee.parse(n, !0);
  if (e.hostname && (!e.protocol || Po.indexOf(e.protocol) >= 0))
    try {
      e.hostname = No.toUnicode(e.hostname);
    } catch {
    }
  return Ee.decode(Ee.format(e), Ee.decode.defaultChars + "%");
}
function re(n, e) {
  if (!(this instanceof re))
    return new re(n, e);
  e || Ze.isString(n) || (e = n || {}, n = "default"), this.inline = new _$(), this.block = new g$(), this.core = new m$(), this.renderer = new f$(), this.linkify = new b$(), this.validateLink = v$, this.normalizeLink = x$, this.normalizeLinkText = A$, this.utils = Ze, this.helpers = Ze.assign({}, d$), this.options = {}, this.configure(n), e && this.set(e);
}
re.prototype.set = function(n) {
  return Ze.assign(this.options, n), this;
};
re.prototype.configure = function(n) {
  var e = this, t;
  if (Ze.isString(n) && (t = n, n = k$[t], !n))
    throw new Error('Wrong `markdown-it` preset "' + t + '", check name');
  if (!n)
    throw new Error("Wrong `markdown-it` preset, can't be empty");
  return n.options && e.set(n.options), n.components && Object.keys(n.components).forEach(function(o) {
    n.components[o].rules && e[o].ruler.enableOnly(n.components[o].rules), n.components[o].rules2 && e[o].ruler2.enableOnly(n.components[o].rules2);
  }), this;
};
re.prototype.enable = function(n, e) {
  var t = [];
  Array.isArray(n) || (n = [n]), ["core", "block", "inline"].forEach(function(r) {
    t = t.concat(this[r].ruler.enable(n, !0));
  }, this), t = t.concat(this.inline.ruler2.enable(n, !0));
  var o = n.filter(function(r) {
    return t.indexOf(r) < 0;
  });
  if (o.length && !e)
    throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + o);
  return this;
};
re.prototype.disable = function(n, e) {
  var t = [];
  Array.isArray(n) || (n = [n]), ["core", "block", "inline"].forEach(function(r) {
    t = t.concat(this[r].ruler.disable(n, !0));
  }, this), t = t.concat(this.inline.ruler2.disable(n, !0));
  var o = n.filter(function(r) {
    return t.indexOf(r) < 0;
  });
  if (o.length && !e)
    throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + o);
  return this;
};
re.prototype.use = function(n) {
  var e = [this].concat(Array.prototype.slice.call(arguments, 1));
  return n.apply(n, e), this;
};
re.prototype.parse = function(n, e) {
  if (typeof n != "string")
    throw new Error("Input data should be a String");
  var t = new this.core.State(n, this, e);
  return this.core.process(t), t.tokens;
};
re.prototype.render = function(n, e) {
  return e = e || {}, this.renderer.render(this.parse(n, e), this.options, e);
};
re.prototype.parseInline = function(n, e) {
  var t = new this.core.State(n, this, e);
  return t.inlineMode = !0, this.core.process(t), t.tokens;
};
re.prototype.renderInline = function(n, e) {
  return e = e || {}, this.renderer.render(this.parseInline(n, e), this.options, e);
};
var S$ = re, L$ = S$;
const C$ = /* @__PURE__ */ pn(L$);
var Yt = !1, ze = { false: "push", true: "unshift", after: "push", before: "unshift" }, an = { isPermalinkSymbol: !0 };
function Wn(n, e, t, o) {
  var r;
  if (!Yt) {
    var s = "Using deprecated markdown-it-anchor permalink option, see https://github.com/valeriangalliat/markdown-it-anchor#permalinks";
    typeof process == "object" && process && process.emitWarning ? process.emitWarning(s) : console.warn(s), Yt = !0;
  }
  var a = [Object.assign(new t.Token("link_open", "a", 1), { attrs: [].concat(e.permalinkClass ? [["class", e.permalinkClass]] : [], [["href", e.permalinkHref(n, t)]], Object.entries(e.permalinkAttrs(n, t))) }), Object.assign(new t.Token("html_block", "", 0), { content: e.permalinkSymbol, meta: an }), new t.Token("link_close", "a", -1)];
  e.permalinkSpace && t.tokens[o + 1].children[ze[e.permalinkBefore]](Object.assign(new t.Token("text", "", 0), { content: " " })), (r = t.tokens[o + 1].children)[ze[e.permalinkBefore]].apply(r, a);
}
function Io(n) {
  return "#" + n;
}
function Oo(n) {
  return {};
}
var E$ = { class: "header-anchor", symbol: "#", renderHref: Io, renderAttrs: Oo };
function Ke(n) {
  function e(t) {
    return t = Object.assign({}, e.defaults, t), function(o, r, s, a) {
      return n(o, t, r, s, a);
    };
  }
  return e.defaults = Object.assign({}, E$), e.renderPermalinkImpl = n, e;
}
var wn = Ke(function(n, e, t, o, r) {
  var s, a = [Object.assign(new o.Token("link_open", "a", 1), { attrs: [].concat(e.class ? [["class", e.class]] : [], [["href", e.renderHref(n, o)]], e.ariaHidden ? [["aria-hidden", "true"]] : [], Object.entries(e.renderAttrs(n, o))) }), Object.assign(new o.Token("html_inline", "", 0), { content: e.symbol, meta: an }), new o.Token("link_close", "a", -1)];
  if (e.space) {
    var c = typeof e.space == "string" ? e.space : " ";
    o.tokens[r + 1].children[ze[e.placement]](Object.assign(new o.Token(typeof e.space == "string" ? "html_inline" : "text", "", 0), { content: c }));
  }
  (s = o.tokens[r + 1].children)[ze[e.placement]].apply(s, a);
});
Object.assign(wn.defaults, { space: !0, placement: "after", ariaHidden: !1 });
var Ce = Ke(wn.renderPermalinkImpl);
Ce.defaults = Object.assign({}, wn.defaults, { ariaHidden: !0 });
var Fo = Ke(function(n, e, t, o, r) {
  var s = [Object.assign(new o.Token("link_open", "a", 1), { attrs: [].concat(e.class ? [["class", e.class]] : [], [["href", e.renderHref(n, o)]], Object.entries(e.renderAttrs(n, o))) })].concat(e.safariReaderFix ? [new o.Token("span_open", "span", 1)] : [], o.tokens[r + 1].children, e.safariReaderFix ? [new o.Token("span_close", "span", -1)] : [], [new o.Token("link_close", "a", -1)]);
  o.tokens[r + 1] = Object.assign(new o.Token("inline", "", 0), { children: s });
});
Object.assign(Fo.defaults, { safariReaderFix: !1 });
var Xt = Ke(function(n, e, t, o, r) {
  var s;
  if (!["visually-hidden", "aria-label", "aria-describedby", "aria-labelledby"].includes(e.style))
    throw new Error("`permalink.linkAfterHeader` called with unknown style option `" + e.style + "`");
  if (!["aria-describedby", "aria-labelledby"].includes(e.style) && !e.assistiveText)
    throw new Error("`permalink.linkAfterHeader` called without the `assistiveText` option in `" + e.style + "` style");
  if (e.style === "visually-hidden" && !e.visuallyHiddenClass)
    throw new Error("`permalink.linkAfterHeader` called without the `visuallyHiddenClass` option in `visually-hidden` style");
  var a = o.tokens[r + 1].children.filter(function(h) {
    return h.type === "text" || h.type === "code_inline";
  }).reduce(function(h, d) {
    return h + d.content;
  }, ""), c = [], l = [];
  if (e.class && l.push(["class", e.class]), l.push(["href", e.renderHref(n, o)]), l.push.apply(l, Object.entries(e.renderAttrs(n, o))), e.style === "visually-hidden") {
    if (c.push(Object.assign(new o.Token("span_open", "span", 1), { attrs: [["class", e.visuallyHiddenClass]] }), Object.assign(new o.Token("text", "", 0), { content: e.assistiveText(a) }), new o.Token("span_close", "span", -1)), e.space) {
      var i = typeof e.space == "string" ? e.space : " ";
      c[ze[e.placement]](Object.assign(new o.Token(typeof e.space == "string" ? "html_inline" : "text", "", 0), { content: i }));
    }
    c[ze[e.placement]](Object.assign(new o.Token("span_open", "span", 1), { attrs: [["aria-hidden", "true"]] }), Object.assign(new o.Token("html_inline", "", 0), { content: e.symbol, meta: an }), new o.Token("span_close", "span", -1));
  } else
    c.push(Object.assign(new o.Token("html_inline", "", 0), { content: e.symbol, meta: an }));
  e.style === "aria-label" ? l.push(["aria-label", e.assistiveText(a)]) : ["aria-describedby", "aria-labelledby"].includes(e.style) && l.push([e.style, n]);
  var p = [Object.assign(new o.Token("link_open", "a", 1), { attrs: l })].concat(c, [new o.Token("link_close", "a", -1)]);
  (s = o.tokens).splice.apply(s, [r + 3, 0].concat(p)), e.wrapper && (o.tokens.splice(r, 0, Object.assign(new o.Token("html_block", "", 0), { content: e.wrapper[0] + `
` })), o.tokens.splice(r + 3 + p.length + 1, 0, Object.assign(new o.Token("html_block", "", 0), { content: e.wrapper[1] + `
` })));
});
function Kt(n, e, t, o) {
  var r = n, s = o;
  if (t && Object.prototype.hasOwnProperty.call(e, r))
    throw new Error("User defined `id` attribute `" + n + "` is not unique. Please fix it in your Markdown to continue.");
  for (; Object.prototype.hasOwnProperty.call(e, r); )
    r = n + "-" + s, s += 1;
  return e[r] = !0, r;
}
function Te(n, e) {
  e = Object.assign({}, Te.defaults, e), n.core.ruler.push("anchor", function(t) {
    for (var o, r = {}, s = t.tokens, a = Array.isArray(e.level) ? (o = e.level, function(h) {
      return o.includes(h);
    }) : function(h) {
      return function(d) {
        return d >= h;
      };
    }(e.level), c = 0; c < s.length; c++) {
      var l = s[c];
      if (l.type === "heading_open" && a(Number(l.tag.substr(1)))) {
        var i = e.getTokensText(s[c + 1].children), p = l.attrGet("id");
        p = p == null ? Kt(e.slugify(i), r, !1, e.uniqueSlugStartIndex) : Kt(p, r, !0, e.uniqueSlugStartIndex), l.attrSet("id", p), e.tabIndex !== !1 && l.attrSet("tabindex", "" + e.tabIndex), typeof e.permalink == "function" ? e.permalink(p, e, t, c) : (e.permalink || e.renderPermalink && e.renderPermalink !== Wn) && e.renderPermalink(p, e, t, c), c = s.indexOf(l), e.callback && e.callback(l, { slug: p, title: i });
      }
    }
  });
}
Object.assign(Xt.defaults, { style: "visually-hidden", space: !0, placement: "after", wrapper: null }), Te.permalink = { __proto__: null, legacy: Wn, renderHref: Io, renderAttrs: Oo, makePermalink: Ke, linkInsideHeader: wn, ariaHidden: Ce, headerLink: Fo, linkAfterHeader: Xt }, Te.defaults = { level: 1, slugify: function(n) {
  return encodeURIComponent(String(n).trim().toLowerCase().replace(/\s+/g, "-"));
}, uniqueSlugStartIndex: 1, tabIndex: "-1", getTokensText: function(n) {
  return n.filter(function(e) {
    return ["text", "code_inline"].includes(e.type);
  }).map(function(e) {
    return e.content;
  }).join("");
}, permalink: !1, renderPermalink: Wn, permalinkClass: Ce.defaults.class, permalinkSpace: Ce.defaults.space, permalinkSymbol: "¶", permalinkBefore: Ce.defaults.placement === "before", permalinkHref: Ce.defaults.renderHref, permalinkAttrs: Ce.defaults.renderAttrs }, Te.default = Te;
var ye = {};
ye.getAttrs = function(n, e, t) {
  const o = /[^\t\n\f />"'=]/, r = " ", s = "=", a = ".", c = "#", l = [];
  let i = "", p = "", h = !0, d = !1;
  for (let f = e + t.leftDelimiter.length; f < n.length; f++) {
    if (n.slice(f, f + t.rightDelimiter.length) === t.rightDelimiter) {
      i !== "" && l.push([i, p]);
      break;
    }
    const m = n.charAt(f);
    if (m === s && h) {
      h = !1;
      continue;
    }
    if (m === a && i === "") {
      n.charAt(f + 1) === a ? (i = "css-module", f += 1) : i = "class", h = !1;
      continue;
    }
    if (m === c && i === "") {
      i = "id", h = !1;
      continue;
    }
    if (m === '"' && p === "" && !d) {
      d = !0;
      continue;
    }
    if (m === '"' && d) {
      d = !1;
      continue;
    }
    if (m === r && !d) {
      if (i === "")
        continue;
      l.push([i, p]), i = "", p = "", h = !0;
      continue;
    }
    if (!(h && m.search(o) === -1)) {
      if (h) {
        i += m;
        continue;
      }
      p += m;
    }
  }
  if (t.allowedAttributes && t.allowedAttributes.length) {
    const f = t.allowedAttributes;
    return l.filter(function(m) {
      const L = m[0];
      function S(b) {
        return L === b || b instanceof RegExp && b.test(L);
      }
      return f.some(S);
    });
  }
  return l;
};
ye.addAttrs = function(n, e) {
  for (let t = 0, o = n.length; t < o; ++t) {
    const r = n[t][0];
    r === "class" ? e.attrJoin("class", n[t][1]) : r === "css-module" ? e.attrJoin("css-module", n[t][1]) : e.attrPush(n[t]);
  }
  return e;
};
ye.hasDelimiters = function(n, e) {
  if (!n)
    throw new Error('Parameter `where` not passed. Should be "start", "end" or "only".');
  return function(t) {
    const o = e.leftDelimiter.length + 1 + e.rightDelimiter.length;
    if (!t || typeof t != "string" || t.length < o)
      return !1;
    function r(p) {
      const h = p.charAt(e.leftDelimiter.length) === ".", d = p.charAt(e.leftDelimiter.length) === "#";
      return h || d ? p.length >= o + 1 : p.length >= o;
    }
    let s, a, c, l;
    const i = o - e.rightDelimiter.length;
    switch (n) {
      case "start":
        c = t.slice(0, e.leftDelimiter.length), s = c === e.leftDelimiter ? 0 : -1, a = s === -1 ? -1 : t.indexOf(e.rightDelimiter, i), l = t.charAt(a + e.rightDelimiter.length), l && e.rightDelimiter.indexOf(l) !== -1 && (a = -1);
        break;
      case "end":
        s = t.lastIndexOf(e.leftDelimiter), a = s === -1 ? -1 : t.indexOf(e.rightDelimiter, s + i), a = a === t.length - e.rightDelimiter.length ? a : -1;
        break;
      case "only":
        c = t.slice(0, e.leftDelimiter.length), s = c === e.leftDelimiter ? 0 : -1, c = t.slice(t.length - e.rightDelimiter.length), a = c === e.rightDelimiter ? t.length - e.rightDelimiter.length : -1;
        break;
      default:
        throw new Error(`Unexpected case ${n}, expected 'start', 'end' or 'only'`);
    }
    return s !== -1 && a !== -1 && r(t.substring(s, a + e.rightDelimiter.length));
  };
};
ye.removeDelimiter = function(n, e) {
  const t = Zn(e.leftDelimiter), o = Zn(e.rightDelimiter), r = new RegExp(
    "[ \\n]?" + t + "[^" + t + o + "]+" + o + "$"
  ), s = n.search(r);
  return s !== -1 ? n.slice(0, s) : n;
};
function Zn(n) {
  return n.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
}
ye.escapeRegExp = Zn;
ye.getMatchingOpeningToken = function(n, e) {
  if (n[e].type === "softbreak")
    return !1;
  if (n[e].nesting === 0)
    return n[e];
  const t = n[e].level, o = n[e].type.replace("_close", "_open");
  for (; e >= 0; --e)
    if (n[e].type === o && n[e].level === t)
      return n[e];
  return !1;
};
const T$ = /[&<>"]/, D$ = /[&<>"]/g, q$ = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;"
};
function j$(n) {
  return q$[n];
}
ye.escapeHtml = function(n) {
  return T$.test(n) ? n.replace(D$, j$) : n;
};
const I = ye;
var R$ = (n) => {
  const e = new RegExp("^ {0,3}[-*_]{3,} ?" + I.escapeRegExp(n.leftDelimiter) + "[^" + I.escapeRegExp(n.rightDelimiter) + "]");
  return [
    {
      /**
       * ```python {.cls}
       * for i in range(10):
       *     print(i)
       * ```
       */
      name: "fenced code blocks",
      tests: [
        {
          shift: 0,
          block: !0,
          info: I.hasDelimiters("end", n)
        }
      ],
      transform: (t, o) => {
        const r = t[o], s = r.info.lastIndexOf(n.leftDelimiter), a = I.getAttrs(r.info, s, n);
        I.addAttrs(a, r), r.info = I.removeDelimiter(r.info, n);
      }
    },
    {
      /**
       * bla `click()`{.c} ![](img.png){.d}
       *
       * differs from 'inline attributes' as it does
       * not have a closing tag (nesting: -1)
       */
      name: "inline nesting 0",
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              shift: -1,
              type: (t) => t === "image" || t === "code_inline"
            },
            {
              shift: 0,
              type: "text",
              content: I.hasDelimiters("start", n)
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const s = t[o].children[r], a = s.content.indexOf(n.rightDelimiter), c = t[o].children[r - 1], l = I.getAttrs(s.content, 0, n);
        I.addAttrs(l, c), s.content.length === a + n.rightDelimiter.length ? t[o].children.splice(r, 1) : s.content = s.content.slice(a + n.rightDelimiter.length);
      }
    },
    {
      /**
       * | h1 |
       * | -- |
       * | c1 |
       *
       * {.c}
       */
      name: "tables",
      tests: [
        {
          // let this token be i, such that for-loop continues at
          // next token after tokens.splice
          shift: 0,
          type: "table_close"
        },
        {
          shift: 1,
          type: "paragraph_open"
        },
        {
          shift: 2,
          type: "inline",
          content: I.hasDelimiters("only", n)
        }
      ],
      transform: (t, o) => {
        const r = t[o + 2], s = I.getMatchingOpeningToken(t, o), a = I.getAttrs(r.content, 0, n);
        I.addAttrs(a, s), t.splice(o + 1, 3);
      }
    },
    {
      /**
       * *emphasis*{.with attrs=1}
       */
      name: "inline attributes",
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              shift: -1,
              nesting: -1
              // closing inline tag, </em>{.a}
            },
            {
              shift: 0,
              type: "text",
              content: I.hasDelimiters("start", n)
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const s = t[o].children[r], a = s.content, c = I.getAttrs(a, 0, n), l = I.getMatchingOpeningToken(t[o].children, r - 1);
        I.addAttrs(c, l), s.content = a.slice(a.indexOf(n.rightDelimiter) + n.rightDelimiter.length);
      }
    },
    {
      /**
       * - item
       * {.a}
       */
      name: "list softbreak",
      tests: [
        {
          shift: -2,
          type: "list_item_open"
        },
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -2,
              type: "softbreak"
            },
            {
              position: -1,
              type: "text",
              content: I.hasDelimiters("only", n)
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const a = t[o].children[r].content, c = I.getAttrs(a, 0, n);
        let l = o - 2;
        for (; t[l - 1] && t[l - 1].type !== "ordered_list_open" && t[l - 1].type !== "bullet_list_open"; )
          l--;
        I.addAttrs(c, t[l - 1]), t[o].children = t[o].children.slice(0, -2);
      }
    },
    {
      /**
       * - nested list
       *   - with double \n
       *   {.a} <-- apply to nested ul
       *
       * {.b} <-- apply to root <ul>
       */
      name: "list double softbreak",
      tests: [
        {
          // let this token be i = 0 so that we can erase
          // the <p>{.a}</p> tokens below
          shift: 0,
          type: (t) => t === "bullet_list_close" || t === "ordered_list_close"
        },
        {
          shift: 1,
          type: "paragraph_open"
        },
        {
          shift: 2,
          type: "inline",
          content: I.hasDelimiters("only", n),
          children: (t) => t.length === 1
        },
        {
          shift: 3,
          type: "paragraph_close"
        }
      ],
      transform: (t, o) => {
        const s = t[o + 2].content, a = I.getAttrs(s, 0, n), c = I.getMatchingOpeningToken(t, o);
        I.addAttrs(a, c), t.splice(o + 1, 3);
      }
    },
    {
      /**
       * - end of {.list-item}
       */
      name: "list item end",
      tests: [
        {
          shift: -2,
          type: "list_item_open"
        },
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -1,
              type: "text",
              content: I.hasDelimiters("end", n)
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const s = t[o].children[r], a = s.content, c = I.getAttrs(a, a.lastIndexOf(n.leftDelimiter), n);
        I.addAttrs(c, t[o - 2]);
        const l = a.slice(0, a.lastIndexOf(n.leftDelimiter));
        s.content = eo(l) !== " " ? l : l.slice(0, -1);
      }
    },
    {
      /**
       * something with softbreak
       * {.cls}
       */
      name: `
{.a} softbreak then curly in start`,
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -2,
              type: "softbreak"
            },
            {
              position: -1,
              type: "text",
              content: I.hasDelimiters("only", n)
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const s = t[o].children[r], a = I.getAttrs(s.content, 0, n);
        let c = o + 1;
        for (; t[c + 1] && t[c + 1].nesting === -1; )
          c++;
        const l = I.getMatchingOpeningToken(t, c);
        I.addAttrs(a, l), t[o].children = t[o].children.slice(0, -2);
      }
    },
    {
      /**
       * horizontal rule --- {#id}
       */
      name: "horizontal rule",
      tests: [
        {
          shift: 0,
          type: "paragraph_open"
        },
        {
          shift: 1,
          type: "inline",
          children: (t) => t.length === 1,
          content: (t) => t.match(e) !== null
        },
        {
          shift: 2,
          type: "paragraph_close"
        }
      ],
      transform: (t, o) => {
        const r = t[o];
        r.type = "hr", r.tag = "hr", r.nesting = 0;
        const s = t[o + 1].content, a = s.lastIndexOf(n.leftDelimiter), c = I.getAttrs(s, a, n);
        I.addAttrs(c, r), r.markup = s, t.splice(o + 1, 2);
      }
    },
    {
      /**
       * end of {.block}
       */
      name: "end of block",
      tests: [
        {
          shift: 0,
          type: "inline",
          children: [
            {
              position: -1,
              content: I.hasDelimiters("end", n),
              type: (t) => t !== "code_inline" && t !== "math_inline"
            }
          ]
        }
      ],
      transform: (t, o, r) => {
        const s = t[o].children[r], a = s.content, c = I.getAttrs(a, a.lastIndexOf(n.leftDelimiter), n);
        let l = o + 1;
        for (; t[l + 1] && t[l + 1].nesting === -1; )
          l++;
        const i = I.getMatchingOpeningToken(t, l);
        I.addAttrs(c, i);
        const p = a.slice(0, a.lastIndexOf(n.leftDelimiter));
        s.content = eo(p) !== " " ? p : p.slice(0, -1);
      }
    }
  ];
};
function eo(n) {
  return n.slice(-1)[0];
}
const N$ = R$, P$ = {
  leftDelimiter: "{",
  rightDelimiter: "}",
  allowedAttributes: []
};
var I$ = function(e, t) {
  let o = Object.assign({}, P$);
  o = Object.assign(o, t);
  const r = N$(o);
  function s(a) {
    const c = a.tokens;
    for (let l = 0; l < c.length; l++)
      for (let i = 0; i < r.length; i++) {
        const p = r[i];
        let h = null;
        p.tests.every((f) => {
          const m = Jn(c, l, f);
          return m.j !== null && (h = m.j), m.match;
        }) && (p.transform(c, l, h), (p.name === "inline attributes" || p.name === "inline nesting 0") && i--);
      }
  }
  e.core.ruler.before("linkify", "curly_attributes", s);
};
function Jn(n, e, t) {
  const o = {
    match: !1,
    j: null
    // position of child
  }, r = t.shift !== void 0 ? e + t.shift : t.position;
  if (t.shift !== void 0 && r < 0)
    return o;
  const s = M$(n, r);
  if (s === void 0)
    return o;
  for (const a of Object.keys(t))
    if (!(a === "shift" || a === "position")) {
      if (s[a] === void 0)
        return o;
      if (a === "children" && O$(t.children)) {
        if (s.children.length === 0)
          return o;
        let c;
        const l = t.children, i = s.children;
        if (l.every((p) => p.position !== void 0)) {
          if (c = l.every((p) => Jn(i, p.position, p).match), c) {
            const p = B$(l).position;
            o.j = p >= 0 ? p : i.length + p;
          }
        } else
          for (let p = 0; p < i.length; p++)
            if (c = l.every((h) => Jn(i, p, h).match), c) {
              o.j = p;
              break;
            }
        if (c === !1)
          return o;
        continue;
      }
      switch (typeof t[a]) {
        case "boolean":
        case "number":
        case "string":
          if (s[a] !== t[a])
            return o;
          break;
        case "function":
          if (!t[a](s[a]))
            return o;
          break;
        case "object":
          if (F$(t[a])) {
            if (t[a].every((l) => l(s[a])) === !1)
              return o;
            break;
          }
        default:
          throw new Error(`Unknown type of pattern test (key: ${a}). Test should be of type boolean, number, string, function or array of functions.`);
      }
    }
  return o.match = !0, o;
}
function O$(n) {
  return Array.isArray(n) && n.length && n.every((e) => typeof e == "object");
}
function F$(n) {
  return Array.isArray(n) && n.length && n.every((e) => typeof e == "function");
}
function M$(n, e) {
  return e >= 0 ? n[e] : n[n.length + e];
}
function B$(n) {
  return n.slice(-1)[0] || {};
}
const z$ = /* @__PURE__ */ pn(I$), $$ = "😀", G$ = "😃", U$ = "😄", H$ = "😁", V$ = "😆", W$ = "😆", Z$ = "😅", J$ = "🤣", Q$ = "😂", Y$ = "🙂", X$ = "🙃", K$ = "😉", e5 = "😊", n5 = "😇", t5 = "🥰", o5 = "😍", s5 = "🤩", r5 = "😘", c5 = "😗", a5 = "☺️", i5 = "😚", l5 = "😙", u5 = "🥲", p5 = "😋", h5 = "😛", d5 = "😜", f5 = "🤪", m5 = "😝", g5 = "🤑", _5 = "🤗", b5 = "🤭", k5 = "🤫", y5 = "🤔", w5 = "🤐", v5 = "🤨", x5 = "😐", A5 = "😑", S5 = "😶", L5 = "😏", C5 = "😒", E5 = "🙄", T5 = "😬", D5 = "🤥", q5 = "😌", j5 = "😔", R5 = "😪", N5 = "🤤", P5 = "😴", I5 = "😷", O5 = "🤒", F5 = "🤕", M5 = "🤢", B5 = "🤮", z5 = "🤧", $5 = "🥵", G5 = "🥶", U5 = "🥴", H5 = "😵", V5 = "🤯", W5 = "🤠", Z5 = "🥳", J5 = "🥸", Q5 = "😎", Y5 = "🤓", X5 = "🧐", K5 = "😕", e6 = "😟", n6 = "🙁", t6 = "☹️", o6 = "😮", s6 = "😯", r6 = "😲", c6 = "😳", a6 = "🥺", i6 = "😦", l6 = "😧", u6 = "😨", p6 = "😰", h6 = "😥", d6 = "😢", f6 = "😭", m6 = "😱", g6 = "😖", _6 = "😣", b6 = "😞", k6 = "😓", y6 = "😩", w6 = "😫", v6 = "🥱", x6 = "😤", A6 = "😡", S6 = "😡", L6 = "😠", C6 = "🤬", E6 = "😈", T6 = "👿", D6 = "💀", q6 = "☠️", j6 = "💩", R6 = "💩", N6 = "💩", P6 = "🤡", I6 = "👹", O6 = "👺", F6 = "👻", M6 = "👽", B6 = "👾", z6 = "🤖", $6 = "😺", G6 = "😸", U6 = "😹", H6 = "😻", V6 = "😼", W6 = "😽", Z6 = "🙀", J6 = "😿", Q6 = "😾", Y6 = "🙈", X6 = "🙉", K6 = "🙊", e4 = "💋", n4 = "💌", t4 = "💘", o4 = "💝", s4 = "💖", r4 = "💗", c4 = "💓", a4 = "💞", i4 = "💕", l4 = "💟", u4 = "❣️", p4 = "💔", h4 = "❤️", d4 = "🧡", f4 = "💛", m4 = "💚", g4 = "💙", _4 = "💜", b4 = "🤎", k4 = "🖤", y4 = "🤍", w4 = "💢", v4 = "💥", x4 = "💥", A4 = "💫", S4 = "💦", L4 = "💨", C4 = "🕳️", E4 = "💣", T4 = "💬", D4 = "👁️‍🗨️", q4 = "🗨️", j4 = "🗯️", R4 = "💭", N4 = "💤", P4 = "👋", I4 = "🤚", O4 = "🖐️", F4 = "✋", M4 = "✋", B4 = "🖖", z4 = "👌", $4 = "🤌", G4 = "🤏", U4 = "✌️", H4 = "🤞", V4 = "🤟", W4 = "🤘", Z4 = "🤙", J4 = "👈", Q4 = "👉", Y4 = "👆", X4 = "🖕", K4 = "🖕", e8 = "👇", n8 = "☝️", t8 = "👍", o8 = "👎", s8 = "✊", r8 = "✊", c8 = "👊", a8 = "👊", i8 = "👊", l8 = "🤛", u8 = "🤜", p8 = "👏", h8 = "🙌", d8 = "👐", f8 = "🤲", m8 = "🤝", g8 = "🙏", _8 = "✍️", b8 = "💅", k8 = "🤳", y8 = "💪", w8 = "🦾", v8 = "🦿", x8 = "🦵", A8 = "🦶", S8 = "👂", L8 = "🦻", C8 = "👃", E8 = "🧠", T8 = "🫀", D8 = "🫁", q8 = "🦷", j8 = "🦴", R8 = "👀", N8 = "👁️", P8 = "👅", I8 = "👄", O8 = "👶", F8 = "🧒", M8 = "👦", B8 = "👧", z8 = "🧑", $8 = "👱", G8 = "👨", U8 = "🧔", H8 = "👨‍🦰", V8 = "👨‍🦱", W8 = "👨‍🦳", Z8 = "👨‍🦲", J8 = "👩", Q8 = "👩‍🦰", Y8 = "🧑‍🦰", X8 = "👩‍🦱", K8 = "🧑‍🦱", eG = "👩‍🦳", nG = "🧑‍🦳", tG = "👩‍🦲", oG = "🧑‍🦲", sG = "👱‍♀️", rG = "👱‍♀️", cG = "👱‍♂️", aG = "🧓", iG = "👴", lG = "👵", uG = "🙍", pG = "🙍‍♂️", hG = "🙍‍♀️", dG = "🙎", fG = "🙎‍♂️", mG = "🙎‍♀️", gG = "🙅", _G = "🙅‍♂️", bG = "🙅‍♂️", kG = "🙅‍♀️", yG = "🙅‍♀️", wG = "🙆", vG = "🙆‍♂️", xG = "🙆‍♀️", AG = "💁", SG = "💁", LG = "💁‍♂️", CG = "💁‍♂️", EG = "💁‍♀️", TG = "💁‍♀️", DG = "🙋", qG = "🙋‍♂️", jG = "🙋‍♀️", RG = "🧏", NG = "🧏‍♂️", PG = "🧏‍♀️", IG = "🙇", OG = "🙇‍♂️", FG = "🙇‍♀️", MG = "🤦", BG = "🤦‍♂️", zG = "🤦‍♀️", $G = "🤷", GG = "🤷‍♂️", UG = "🤷‍♀️", HG = "🧑‍⚕️", VG = "👨‍⚕️", WG = "👩‍⚕️", ZG = "🧑‍🎓", JG = "👨‍🎓", QG = "👩‍🎓", YG = "🧑‍🏫", XG = "👨‍🏫", KG = "👩‍🏫", eU = "🧑‍⚖️", nU = "👨‍⚖️", tU = "👩‍⚖️", oU = "🧑‍🌾", sU = "👨‍🌾", rU = "👩‍🌾", cU = "🧑‍🍳", aU = "👨‍🍳", iU = "👩‍🍳", lU = "🧑‍🔧", uU = "👨‍🔧", pU = "👩‍🔧", hU = "🧑‍🏭", dU = "👨‍🏭", fU = "👩‍🏭", mU = "🧑‍💼", gU = "👨‍💼", _U = "👩‍💼", bU = "🧑‍🔬", kU = "👨‍🔬", yU = "👩‍🔬", wU = "🧑‍💻", vU = "👨‍💻", xU = "👩‍💻", AU = "🧑‍🎤", SU = "👨‍🎤", LU = "👩‍🎤", CU = "🧑‍🎨", EU = "👨‍🎨", TU = "👩‍🎨", DU = "🧑‍✈️", qU = "👨‍✈️", jU = "👩‍✈️", RU = "🧑‍🚀", NU = "👨‍🚀", PU = "👩‍🚀", IU = "🧑‍🚒", OU = "👨‍🚒", FU = "👩‍🚒", MU = "👮", BU = "👮", zU = "👮‍♂️", $U = "👮‍♀️", GU = "🕵️", UU = "🕵️‍♂️", HU = "🕵️‍♀️", VU = "💂", WU = "💂‍♂️", ZU = "💂‍♀️", JU = "🥷", QU = "👷", YU = "👷‍♂️", XU = "👷‍♀️", KU = "🤴", e9 = "👸", n9 = "👳", t9 = "👳‍♂️", o9 = "👳‍♀️", s9 = "👲", r9 = "🧕", c9 = "🤵", a9 = "🤵‍♂️", i9 = "🤵‍♀️", l9 = "👰", u9 = "👰‍♂️", p9 = "👰‍♀️", h9 = "👰‍♀️", d9 = "🤰", f9 = "🤱", m9 = "👩‍🍼", g9 = "👨‍🍼", _9 = "🧑‍🍼", b9 = "👼", k9 = "🎅", y9 = "🤶", w9 = "🧑‍🎄", v9 = "🦸", x9 = "🦸‍♂️", A9 = "🦸‍♀️", S9 = "🦹", L9 = "🦹‍♂️", C9 = "🦹‍♀️", E9 = "🧙", T9 = "🧙‍♂️", D9 = "🧙‍♀️", q9 = "🧚", j9 = "🧚‍♂️", R9 = "🧚‍♀️", N9 = "🧛", P9 = "🧛‍♂️", I9 = "🧛‍♀️", O9 = "🧜", F9 = "🧜‍♂️", M9 = "🧜‍♀️", B9 = "🧝", z9 = "🧝‍♂️", $9 = "🧝‍♀️", G9 = "🧞", U9 = "🧞‍♂️", H9 = "🧞‍♀️", V9 = "🧟", W9 = "🧟‍♂️", Z9 = "🧟‍♀️", J9 = "💆", Q9 = "💆‍♂️", Y9 = "💆‍♀️", X9 = "💇", K9 = "💇‍♂️", e7 = "💇‍♀️", n7 = "🚶", t7 = "🚶‍♂️", o7 = "🚶‍♀️", s7 = "🧍", r7 = "🧍‍♂️", c7 = "🧍‍♀️", a7 = "🧎", i7 = "🧎‍♂️", l7 = "🧎‍♀️", u7 = "🧑‍🦯", p7 = "👨‍🦯", h7 = "👩‍🦯", d7 = "🧑‍🦼", f7 = "👨‍🦼", m7 = "👩‍🦼", g7 = "🧑‍🦽", _7 = "👨‍🦽", b7 = "👩‍🦽", k7 = "🏃", y7 = "🏃", w7 = "🏃‍♂️", v7 = "🏃‍♀️", x7 = "💃", A7 = "💃", S7 = "🕺", L7 = "🕴️", C7 = "👯", E7 = "👯‍♂️", T7 = "👯‍♀️", D7 = "🧖", q7 = "🧖‍♂️", j7 = "🧖‍♀️", R7 = "🧗", N7 = "🧗‍♂️", P7 = "🧗‍♀️", I7 = "🤺", O7 = "🏇", F7 = "⛷️", M7 = "🏂", B7 = "🏌️", z7 = "🏌️‍♂️", $7 = "🏌️‍♀️", G7 = "🏄", U7 = "🏄‍♂️", H7 = "🏄‍♀️", V7 = "🚣", W7 = "🚣‍♂️", Z7 = "🚣‍♀️", J7 = "🏊", Q7 = "🏊‍♂️", Y7 = "🏊‍♀️", X7 = "⛹️", K7 = "⛹️‍♂️", eH = "⛹️‍♂️", nH = "⛹️‍♀️", tH = "⛹️‍♀️", oH = "🏋️", sH = "🏋️‍♂️", rH = "🏋️‍♀️", cH = "🚴", aH = "🚴‍♂️", iH = "🚴‍♀️", lH = "🚵", uH = "🚵‍♂️", pH = "🚵‍♀️", hH = "🤸", dH = "🤸‍♂️", fH = "🤸‍♀️", mH = "🤼", gH = "🤼‍♂️", _H = "🤼‍♀️", bH = "🤽", kH = "🤽‍♂️", yH = "🤽‍♀️", wH = "🤾", vH = "🤾‍♂️", xH = "🤾‍♀️", AH = "🤹", SH = "🤹‍♂️", LH = "🤹‍♀️", CH = "🧘", EH = "🧘‍♂️", TH = "🧘‍♀️", DH = "🛀", qH = "🛌", jH = "🧑‍🤝‍🧑", RH = "👭", NH = "👫", PH = "👬", IH = "💏", OH = "👩‍❤️‍💋‍👨", FH = "👨‍❤️‍💋‍👨", MH = "👩‍❤️‍💋‍👩", BH = "💑", zH = "👩‍❤️‍👨", $H = "👨‍❤️‍👨", GH = "👩‍❤️‍👩", UH = "👪", HH = "👨‍👩‍👦", VH = "👨‍👩‍👧", WH = "👨‍👩‍👧‍👦", ZH = "👨‍👩‍👦‍👦", JH = "👨‍👩‍👧‍👧", QH = "👨‍👨‍👦", YH = "👨‍👨‍👧", XH = "👨‍👨‍👧‍👦", KH = "👨‍👨‍👦‍👦", eV = "👨‍👨‍👧‍👧", nV = "👩‍👩‍👦", tV = "👩‍👩‍👧", oV = "👩‍👩‍👧‍👦", sV = "👩‍👩‍👦‍👦", rV = "👩‍👩‍👧‍👧", cV = "👨‍👦", aV = "👨‍👦‍👦", iV = "👨‍👧", lV = "👨‍👧‍👦", uV = "👨‍👧‍👧", pV = "👩‍👦", hV = "👩‍👦‍👦", dV = "👩‍👧", fV = "👩‍👧‍👦", mV = "👩‍👧‍👧", gV = "🗣️", _V = "👤", bV = "👥", kV = "🫂", yV = "👣", wV = "🐵", vV = "🐒", xV = "🦍", AV = "🦧", SV = "🐶", LV = "🐕", CV = "🦮", EV = "🐕‍🦺", TV = "🐩", DV = "🐺", qV = "🦊", jV = "🦝", RV = "🐱", NV = "🐈", PV = "🐈‍⬛", IV = "🦁", OV = "🐯", FV = "🐅", MV = "🐆", BV = "🐴", zV = "🐎", $V = "🦄", GV = "🦓", UV = "🦌", HV = "🦬", VV = "🐮", WV = "🐂", ZV = "🐃", JV = "🐄", QV = "🐷", YV = "🐖", XV = "🐗", KV = "🐽", eW = "🐏", nW = "🐑", tW = "🐐", oW = "🐪", sW = "🐫", rW = "🦙", cW = "🦒", aW = "🐘", iW = "🦣", lW = "🦏", uW = "🦛", pW = "🐭", hW = "🐁", dW = "🐀", fW = "🐹", mW = "🐰", gW = "🐇", _W = "🐿️", bW = "🦫", kW = "🦔", yW = "🦇", wW = "🐻", vW = "🐻‍❄️", xW = "🐨", AW = "🐼", SW = "🦥", LW = "🦦", CW = "🦨", EW = "🦘", TW = "🦡", DW = "🐾", qW = "🐾", jW = "🦃", RW = "🐔", NW = "🐓", PW = "🐣", IW = "🐤", OW = "🐥", FW = "🐦", MW = "🐧", BW = "🕊️", zW = "🦅", $W = "🦆", GW = "🦢", UW = "🦉", HW = "🦤", VW = "🪶", WW = "🦩", ZW = "🦚", JW = "🦜", QW = "🐸", YW = "🐊", XW = "🐢", KW = "🦎", eZ = "🐍", nZ = "🐲", tZ = "🐉", oZ = "🦕", sZ = "🐳", rZ = "🐋", cZ = "🐬", aZ = "🐬", iZ = "🦭", lZ = "🐟", uZ = "🐠", pZ = "🐡", hZ = "🦈", dZ = "🐙", fZ = "🐚", mZ = "🐌", gZ = "🦋", _Z = "🐛", bZ = "🐜", kZ = "🐝", yZ = "🐝", wZ = "🪲", vZ = "🐞", xZ = "🦗", AZ = "🪳", SZ = "🕷️", LZ = "🕸️", CZ = "🦂", EZ = "🦟", TZ = "🪰", DZ = "🪱", qZ = "🦠", jZ = "💐", RZ = "🌸", NZ = "💮", PZ = "🏵️", IZ = "🌹", OZ = "🥀", FZ = "🌺", MZ = "🌻", BZ = "🌼", zZ = "🌷", $Z = "🌱", GZ = "🪴", UZ = "🌲", HZ = "🌳", VZ = "🌴", WZ = "🌵", ZZ = "🌾", JZ = "🌿", QZ = "☘️", YZ = "🍀", XZ = "🍁", KZ = "🍂", eJ = "🍃", nJ = "🍇", tJ = "🍈", oJ = "🍉", sJ = "🍊", rJ = "🍊", cJ = "🍊", aJ = "🍋", iJ = "🍌", lJ = "🍍", uJ = "🥭", pJ = "🍎", hJ = "🍏", dJ = "🍐", fJ = "🍑", mJ = "🍒", gJ = "🍓", _J = "🫐", bJ = "🥝", kJ = "🍅", yJ = "🫒", wJ = "🥥", vJ = "🥑", xJ = "🍆", AJ = "🥔", SJ = "🥕", LJ = "🌽", CJ = "🌶️", EJ = "🫑", TJ = "🥒", DJ = "🥬", qJ = "🥦", jJ = "🧄", RJ = "🧅", NJ = "🍄", PJ = "🥜", IJ = "🌰", OJ = "🍞", FJ = "🥐", MJ = "🥖", BJ = "🫓", zJ = "🥨", $J = "🥯", GJ = "🥞", UJ = "🧇", HJ = "🧀", VJ = "🍖", WJ = "🍗", ZJ = "🥩", JJ = "🥓", QJ = "🍔", YJ = "🍟", XJ = "🍕", KJ = "🌭", eQ = "🥪", nQ = "🌮", tQ = "🌯", oQ = "🫔", sQ = "🥙", rQ = "🧆", cQ = "🥚", aQ = "🍳", iQ = "🥘", lQ = "🍲", uQ = "🫕", pQ = "🥣", hQ = "🥗", dQ = "🍿", fQ = "🧈", mQ = "🧂", gQ = "🥫", _Q = "🍱", bQ = "🍘", kQ = "🍙", yQ = "🍚", wQ = "🍛", vQ = "🍜", xQ = "🍝", AQ = "🍠", SQ = "🍢", LQ = "🍣", CQ = "🍤", EQ = "🍥", TQ = "🥮", DQ = "🍡", qQ = "🥟", jQ = "🥠", RQ = "🥡", NQ = "🦀", PQ = "🦞", IQ = "🦐", OQ = "🦑", FQ = "🦪", MQ = "🍦", BQ = "🍧", zQ = "🍨", $Q = "🍩", GQ = "🍪", UQ = "🎂", HQ = "🍰", VQ = "🧁", WQ = "🥧", ZQ = "🍫", JQ = "🍬", QQ = "🍭", YQ = "🍮", XQ = "🍯", KQ = "🍼", eY = "🥛", nY = "☕", tY = "🫖", oY = "🍵", sY = "🍶", rY = "🍾", cY = "🍷", aY = "🍸", iY = "🍹", lY = "🍺", uY = "🍻", pY = "🥂", hY = "🥃", dY = "🥤", fY = "🧋", mY = "🧃", gY = "🧉", _Y = "🧊", bY = "🥢", kY = "🍽️", yY = "🍴", wY = "🥄", vY = "🔪", xY = "🔪", AY = "🏺", SY = "🌍", LY = "🌎", CY = "🌏", EY = "🌐", TY = "🗺️", DY = "🗾", qY = "🧭", jY = "🏔️", RY = "⛰️", NY = "🌋", PY = "🗻", IY = "🏕️", OY = "🏖️", FY = "🏜️", MY = "🏝️", BY = "🏞️", zY = "🏟️", $Y = "🏛️", GY = "🏗️", UY = "🧱", HY = "🪨", VY = "🪵", WY = "🛖", ZY = "🏘️", JY = "🏚️", QY = "🏠", YY = "🏡", XY = "🏢", KY = "🏣", eX = "🏤", nX = "🏥", tX = "🏦", oX = "🏨", sX = "🏩", rX = "🏪", cX = "🏫", aX = "🏬", iX = "🏭", lX = "🏯", uX = "🏰", pX = "💒", hX = "🗼", dX = "🗽", fX = "⛪", mX = "🕌", gX = "🛕", _X = "🕍", bX = "⛩️", kX = "🕋", yX = "⛲", wX = "⛺", vX = "🌁", xX = "🌃", AX = "🏙️", SX = "🌄", LX = "🌅", CX = "🌆", EX = "🌇", TX = "🌉", DX = "♨️", qX = "🎠", jX = "🎡", RX = "🎢", NX = "💈", PX = "🎪", IX = "🚂", OX = "🚃", FX = "🚄", MX = "🚅", BX = "🚆", zX = "🚇", $X = "🚈", GX = "🚉", UX = "🚊", HX = "🚝", VX = "🚞", WX = "🚋", ZX = "🚌", JX = "🚍", QX = "🚎", YX = "🚐", XX = "🚑", KX = "🚒", eK = "🚓", nK = "🚔", tK = "🚕", oK = "🚖", sK = "🚗", rK = "🚗", cK = "🚘", aK = "🚙", iK = "🛻", lK = "🚚", uK = "🚛", pK = "🚜", hK = "🏎️", dK = "🏍️", fK = "🛵", mK = "🦽", gK = "🦼", _K = "🛺", bK = "🚲", kK = "🛴", yK = "🛹", wK = "🛼", vK = "🚏", xK = "🛣️", AK = "🛤️", SK = "🛢️", LK = "⛽", CK = "🚨", EK = "🚥", TK = "🚦", DK = "🛑", qK = "🚧", jK = "⚓", RK = "⛵", NK = "⛵", PK = "🛶", IK = "🚤", OK = "🛳️", FK = "⛴️", MK = "🛥️", BK = "🚢", zK = "✈️", $K = "🛩️", GK = "🛫", UK = "🛬", HK = "🪂", VK = "💺", WK = "🚁", ZK = "🚟", JK = "🚠", QK = "🚡", YK = "🛰️", XK = "🚀", KK = "🛸", eee = "🛎️", nee = "🧳", tee = "⌛", oee = "⏳", see = "⌚", ree = "⏰", cee = "⏱️", aee = "⏲️", iee = "🕰️", lee = "🕛", uee = "🕧", pee = "🕐", hee = "🕜", dee = "🕑", fee = "🕝", mee = "🕒", gee = "🕞", _ee = "🕓", bee = "🕟", kee = "🕔", yee = "🕠", wee = "🕕", vee = "🕡", xee = "🕖", Aee = "🕢", See = "🕗", Lee = "🕣", Cee = "🕘", Eee = "🕤", Tee = "🕙", Dee = "🕥", qee = "🕚", jee = "🕦", Ree = "🌑", Nee = "🌒", Pee = "🌓", Iee = "🌔", Oee = "🌔", Fee = "🌕", Mee = "🌖", Bee = "🌗", zee = "🌘", $ee = "🌙", Gee = "🌚", Uee = "🌛", Hee = "🌜", Vee = "🌡️", Wee = "☀️", Zee = "🌝", Jee = "🌞", Qee = "🪐", Yee = "⭐", Xee = "🌟", Kee = "🌠", ene = "🌌", nne = "☁️", tne = "⛅", one = "⛈️", sne = "🌤️", rne = "🌥️", cne = "🌦️", ane = "🌧️", ine = "🌨️", lne = "🌩️", une = "🌪️", pne = "🌫️", hne = "🌬️", dne = "🌀", fne = "🌈", mne = "🌂", gne = "☂️", _ne = "☔", bne = "⛱️", kne = "⚡", yne = "❄️", wne = "☃️", vne = "⛄", xne = "☄️", Ane = "🔥", Sne = "💧", Lne = "🌊", Cne = "🎃", Ene = "🎄", Tne = "🎆", Dne = "🎇", qne = "🧨", jne = "✨", Rne = "🎈", Nne = "🎉", Pne = "🎊", Ine = "🎋", One = "🎍", Fne = "🎎", Mne = "🎏", Bne = "🎐", zne = "🎑", $ne = "🧧", Gne = "🎀", Une = "🎁", Hne = "🎗️", Vne = "🎟️", Wne = "🎫", Zne = "🎖️", Jne = "🏆", Qne = "🏅", Yne = "⚽", Xne = "⚾", Kne = "🥎", ete = "🏀", nte = "🏐", tte = "🏈", ote = "🏉", ste = "🎾", rte = "🥏", cte = "🎳", ate = "🏏", ite = "🏑", lte = "🏒", ute = "🥍", pte = "🏓", hte = "🏸", dte = "🥊", fte = "🥋", mte = "🥅", gte = "⛳", _te = "⛸️", bte = "🎣", kte = "🤿", yte = "🎽", wte = "🎿", vte = "🛷", xte = "🥌", Ate = "🎯", Ste = "🪀", Lte = "🪁", Cte = "🔮", Ete = "🪄", Tte = "🧿", Dte = "🎮", qte = "🕹️", jte = "🎰", Rte = "🎲", Nte = "🧩", Pte = "🧸", Ite = "🪅", Ote = "🪆", Fte = "♠️", Mte = "♥️", Bte = "♦️", zte = "♣️", $te = "♟️", Gte = "🃏", Ute = "🀄", Hte = "🎴", Vte = "🎭", Wte = "🖼️", Zte = "🎨", Jte = "🧵", Qte = "🪡", Yte = "🧶", Xte = "🪢", Kte = "👓", eoe = "🕶️", noe = "🥽", toe = "🥼", ooe = "🦺", soe = "👔", roe = "👕", coe = "👕", aoe = "👖", ioe = "🧣", loe = "🧤", uoe = "🧥", poe = "🧦", hoe = "👗", doe = "👘", foe = "🥻", moe = "🩱", goe = "🩲", _oe = "🩳", boe = "👙", koe = "👚", yoe = "👛", woe = "👜", voe = "👝", xoe = "🛍️", Aoe = "🎒", Soe = "🩴", Loe = "👞", Coe = "👞", Eoe = "👟", Toe = "🥾", Doe = "🥿", qoe = "👠", joe = "👡", Roe = "🩰", Noe = "👢", Poe = "👑", Ioe = "👒", Ooe = "🎩", Foe = "🎓", Moe = "🧢", Boe = "🪖", zoe = "⛑️", $oe = "📿", Goe = "💄", Uoe = "💍", Hoe = "💎", Voe = "🔇", Woe = "🔈", Zoe = "🔉", Joe = "🔊", Qoe = "📢", Yoe = "📣", Xoe = "📯", Koe = "🔔", ese = "🔕", nse = "🎼", tse = "🎵", ose = "🎶", sse = "🎙️", rse = "🎚️", cse = "🎛️", ase = "🎤", ise = "🎧", lse = "📻", use = "🎷", pse = "🪗", hse = "🎸", dse = "🎹", fse = "🎺", mse = "🎻", gse = "🪕", _se = "🥁", bse = "🪘", kse = "📱", yse = "📲", wse = "☎️", vse = "☎️", xse = "📞", Ase = "📟", Sse = "📠", Lse = "🔋", Cse = "🔌", Ese = "💻", Tse = "🖥️", Dse = "🖨️", qse = "⌨️", jse = "🖱️", Rse = "🖲️", Nse = "💽", Pse = "💾", Ise = "💿", Ose = "📀", Fse = "🧮", Mse = "🎥", Bse = "🎞️", zse = "📽️", $se = "🎬", Gse = "📺", Use = "📷", Hse = "📸", Vse = "📹", Wse = "📼", Zse = "🔍", Jse = "🔎", Qse = "🕯️", Yse = "💡", Xse = "🔦", Kse = "🏮", ere = "🏮", nre = "🪔", tre = "📔", ore = "📕", sre = "📖", rre = "📖", cre = "📗", are = "📘", ire = "📙", lre = "📚", ure = "📓", pre = "📒", hre = "📃", dre = "📜", fre = "📄", mre = "📰", gre = "🗞️", _re = "📑", bre = "🔖", kre = "🏷️", yre = "💰", wre = "🪙", vre = "💴", xre = "💵", Are = "💶", Sre = "💷", Lre = "💸", Cre = "💳", Ere = "🧾", Tre = "💹", Dre = "✉️", qre = "📧", jre = "📨", Rre = "📩", Nre = "📤", Pre = "📥", Ire = "📫", Ore = "📪", Fre = "📬", Mre = "📭", Bre = "📮", zre = "🗳️", $re = "✏️", Gre = "✒️", Ure = "🖋️", Hre = "🖊️", Vre = "🖌️", Wre = "🖍️", Zre = "📝", Jre = "📝", Qre = "💼", Yre = "📁", Xre = "📂", Kre = "🗂️", ece = "📅", nce = "📆", tce = "🗒️", oce = "🗓️", sce = "📇", rce = "📈", cce = "📉", ace = "📊", ice = "📋", lce = "📌", uce = "📍", pce = "📎", hce = "🖇️", dce = "📏", fce = "📐", mce = "✂️", gce = "🗃️", _ce = "🗄️", bce = "🗑️", kce = "🔒", yce = "🔓", wce = "🔏", vce = "🔐", xce = "🔑", Ace = "🗝️", Sce = "🔨", Lce = "🪓", Cce = "⛏️", Ece = "⚒️", Tce = "🛠️", Dce = "🗡️", qce = "⚔️", jce = "🔫", Rce = "🪃", Nce = "🏹", Pce = "🛡️", Ice = "🪚", Oce = "🔧", Fce = "🪛", Mce = "🔩", Bce = "⚙️", zce = "🗜️", $ce = "⚖️", Gce = "🦯", Uce = "🔗", Hce = "⛓️", Vce = "🪝", Wce = "🧰", Zce = "🧲", Jce = "🪜", Qce = "⚗️", Yce = "🧪", Xce = "🧫", Kce = "🧬", eae = "🔬", nae = "🔭", tae = "📡", oae = "💉", sae = "🩸", rae = "💊", cae = "🩹", aae = "🩺", iae = "🚪", lae = "🛗", uae = "🪞", pae = "🪟", hae = "🛏️", dae = "🛋️", fae = "🪑", mae = "🚽", gae = "🪠", _ae = "🚿", bae = "🛁", kae = "🪤", yae = "🪒", wae = "🧴", vae = "🧷", xae = "🧹", Aae = "🧺", Sae = "🧻", Lae = "🪣", Cae = "🧼", Eae = "🪥", Tae = "🧽", Dae = "🧯", qae = "🛒", jae = "🚬", Rae = "⚰️", Nae = "🪦", Pae = "⚱️", Iae = "🗿", Oae = "🪧", Fae = "🏧", Mae = "🚮", Bae = "🚰", zae = "♿", $ae = "🚹", Gae = "🚺", Uae = "🚻", Hae = "🚼", Vae = "🚾", Wae = "🛂", Zae = "🛃", Jae = "🛄", Qae = "🛅", Yae = "⚠️", Xae = "🚸", Kae = "⛔", eie = "🚫", nie = "🚳", tie = "🚭", oie = "🚯", sie = "🚷", rie = "📵", cie = "🔞", aie = "☢️", iie = "☣️", lie = "⬆️", uie = "↗️", pie = "➡️", hie = "↘️", die = "⬇️", fie = "↙️", mie = "⬅️", gie = "↖️", _ie = "↕️", bie = "↔️", kie = "↩️", yie = "↪️", wie = "⤴️", vie = "⤵️", xie = "🔃", Aie = "🔄", Sie = "🔙", Lie = "🔚", Cie = "🔛", Eie = "🔜", Tie = "🔝", Die = "🛐", qie = "⚛️", jie = "🕉️", Rie = "✡️", Nie = "☸️", Pie = "☯️", Iie = "✝️", Oie = "☦️", Fie = "☪️", Mie = "☮️", Bie = "🕎", zie = "🔯", $ie = "♈", Gie = "♉", Uie = "♊", Hie = "♋", Vie = "♌", Wie = "♍", Zie = "♎", Jie = "♏", Qie = "♐", Yie = "♑", Xie = "♒", Kie = "♓", ele = "⛎", nle = "🔀", tle = "🔁", ole = "🔂", sle = "▶️", rle = "⏩", cle = "⏭️", ale = "⏯️", ile = "◀️", lle = "⏪", ule = "⏮️", ple = "🔼", hle = "⏫", dle = "🔽", fle = "⏬", mle = "⏸️", gle = "⏹️", _le = "⏺️", ble = "⏏️", kle = "🎦", yle = "🔅", wle = "🔆", vle = "📶", xle = "📳", Ale = "📴", Sle = "♀️", Lle = "♂️", Cle = "⚧️", Ele = "✖️", Tle = "➕", Dle = "➖", qle = "➗", jle = "♾️", Rle = "‼️", Nle = "⁉️", Ple = "❓", Ile = "❔", Ole = "❕", Fle = "❗", Mle = "❗", Ble = "〰️", zle = "💱", $le = "💲", Gle = "⚕️", Ule = "♻️", Hle = "⚜️", Vle = "🔱", Wle = "📛", Zle = "🔰", Jle = "⭕", Qle = "✅", Yle = "☑️", Xle = "✔️", Kle = "❌", eue = "❎", nue = "➰", tue = "➿", oue = "〽️", sue = "✳️", rue = "✴️", cue = "❇️", aue = "©️", iue = "®️", lue = "™️", uue = "#️⃣", pue = "*️⃣", hue = "0️⃣", due = "1️⃣", fue = "2️⃣", mue = "3️⃣", gue = "4️⃣", _ue = "5️⃣", bue = "6️⃣", kue = "7️⃣", yue = "8️⃣", wue = "9️⃣", vue = "🔟", xue = "🔠", Aue = "🔡", Sue = "🔣", Lue = "🔤", Cue = "🅰️", Eue = "🆎", Tue = "🅱️", Due = "🆑", que = "🆒", jue = "🆓", Rue = "ℹ️", Nue = "🆔", Pue = "Ⓜ️", Iue = "🆖", Oue = "🅾️", Fue = "🆗", Mue = "🅿️", Bue = "🆘", zue = "🆙", $ue = "🆚", Gue = "🈁", Uue = "🈂️", Hue = "🉐", Vue = "🉑", Wue = "㊗️", Zue = "㊙️", Jue = "🈵", Que = "🔴", Yue = "🟠", Xue = "🟡", Kue = "🟢", epe = "🔵", npe = "🟣", tpe = "🟤", ope = "⚫", spe = "⚪", rpe = "🟥", cpe = "🟧", ape = "🟨", ipe = "🟩", lpe = "🟦", upe = "🟪", ppe = "🟫", hpe = "⬛", dpe = "⬜", fpe = "◼️", mpe = "◻️", gpe = "◾", _pe = "◽", bpe = "▪️", kpe = "▫️", ype = "🔶", wpe = "🔷", vpe = "🔸", xpe = "🔹", Ape = "🔺", Spe = "🔻", Lpe = "💠", Cpe = "🔘", Epe = "🔳", Tpe = "🔲", Dpe = "🏁", qpe = "🚩", jpe = "🎌", Rpe = "🏴", Npe = "🏳️", Ppe = "🏳️‍🌈", Ipe = "🏳️‍⚧️", Ope = "🏴‍☠️", Fpe = "🇦🇨", Mpe = "🇦🇩", Bpe = "🇦🇪", zpe = "🇦🇫", $pe = "🇦🇬", Gpe = "🇦🇮", Upe = "🇦🇱", Hpe = "🇦🇲", Vpe = "🇦🇴", Wpe = "🇦🇶", Zpe = "🇦🇷", Jpe = "🇦🇸", Qpe = "🇦🇹", Ype = "🇦🇺", Xpe = "🇦🇼", Kpe = "🇦🇽", ehe = "🇦🇿", nhe = "🇧🇦", the = "🇧🇧", ohe = "🇧🇩", she = "🇧🇪", rhe = "🇧🇫", che = "🇧🇬", ahe = "🇧🇭", ihe = "🇧🇮", lhe = "🇧🇯", uhe = "🇧🇱", phe = "🇧🇲", hhe = "🇧🇳", dhe = "🇧🇴", fhe = "🇧🇶", mhe = "🇧🇷", ghe = "🇧🇸", _he = "🇧🇹", bhe = "🇧🇻", khe = "🇧🇼", yhe = "🇧🇾", whe = "🇧🇿", vhe = "🇨🇦", xhe = "🇨🇨", Ahe = "🇨🇩", She = "🇨🇫", Lhe = "🇨🇬", Che = "🇨🇭", Ehe = "🇨🇮", The = "🇨🇰", Dhe = "🇨🇱", qhe = "🇨🇲", jhe = "🇨🇳", Rhe = "🇨🇴", Nhe = "🇨🇵", Phe = "🇨🇷", Ihe = "🇨🇺", Ohe = "🇨🇻", Fhe = "🇨🇼", Mhe = "🇨🇽", Bhe = "🇨🇾", zhe = "🇨🇿", $he = "🇩🇪", Ghe = "🇩🇬", Uhe = "🇩🇯", Hhe = "🇩🇰", Vhe = "🇩🇲", Whe = "🇩🇴", Zhe = "🇩🇿", Jhe = "🇪🇦", Qhe = "🇪🇨", Yhe = "🇪🇪", Xhe = "🇪🇬", Khe = "🇪🇭", ede = "🇪🇷", nde = "🇪🇸", tde = "🇪🇹", ode = "🇪🇺", sde = "🇪🇺", rde = "🇫🇮", cde = "🇫🇯", ade = "🇫🇰", ide = "🇫🇲", lde = "🇫🇴", ude = "🇫🇷", pde = "🇬🇦", hde = "🇬🇧", dde = "🇬🇧", fde = "🇬🇩", mde = "🇬🇪", gde = "🇬🇫", _de = "🇬🇬", bde = "🇬🇭", kde = "🇬🇮", yde = "🇬🇱", wde = "🇬🇲", vde = "🇬🇳", xde = "🇬🇵", Ade = "🇬🇶", Sde = "🇬🇷", Lde = "🇬🇸", Cde = "🇬🇹", Ede = "🇬🇺", Tde = "🇬🇼", Dde = "🇬🇾", qde = "🇭🇰", jde = "🇭🇲", Rde = "🇭🇳", Nde = "🇭🇷", Pde = "🇭🇹", Ide = "🇭🇺", Ode = "🇮🇨", Fde = "🇮🇩", Mde = "🇮🇪", Bde = "🇮🇱", zde = "🇮🇲", $de = "🇮🇳", Gde = "🇮🇴", Ude = "🇮🇶", Hde = "🇮🇷", Vde = "🇮🇸", Wde = "🇮🇹", Zde = "🇯🇪", Jde = "🇯🇲", Qde = "🇯🇴", Yde = "🇯🇵", Xde = "🇰🇪", Kde = "🇰🇬", efe = "🇰🇭", nfe = "🇰🇮", tfe = "🇰🇲", ofe = "🇰🇳", sfe = "🇰🇵", rfe = "🇰🇷", cfe = "🇰🇼", afe = "🇰🇾", ife = "🇰🇿", lfe = "🇱🇦", ufe = "🇱🇧", pfe = "🇱🇨", hfe = "🇱🇮", dfe = "🇱🇰", ffe = "🇱🇷", mfe = "🇱🇸", gfe = "🇱🇹", _fe = "🇱🇺", bfe = "🇱🇻", kfe = "🇱🇾", yfe = "🇲🇦", wfe = "🇲🇨", vfe = "🇲🇩", xfe = "🇲🇪", Afe = "🇲🇫", Sfe = "🇲🇬", Lfe = "🇲🇭", Cfe = "🇲🇰", Efe = "🇲🇱", Tfe = "🇲🇲", Dfe = "🇲🇳", qfe = "🇲🇴", jfe = "🇲🇵", Rfe = "🇲🇶", Nfe = "🇲🇷", Pfe = "🇲🇸", Ife = "🇲🇹", Ofe = "🇲🇺", Ffe = "🇲🇻", Mfe = "🇲🇼", Bfe = "🇲🇽", zfe = "🇲🇾", $fe = "🇲🇿", Gfe = "🇳🇦", Ufe = "🇳🇨", Hfe = "🇳🇪", Vfe = "🇳🇫", Wfe = "🇳🇬", Zfe = "🇳🇮", Jfe = "🇳🇱", Qfe = "🇳🇴", Yfe = "🇳🇵", Xfe = "🇳🇷", Kfe = "🇳🇺", eme = "🇳🇿", nme = "🇴🇲", tme = "🇵🇦", ome = "🇵🇪", sme = "🇵🇫", rme = "🇵🇬", cme = "🇵🇭", ame = "🇵🇰", ime = "🇵🇱", lme = "🇵🇲", ume = "🇵🇳", pme = "🇵🇷", hme = "🇵🇸", dme = "🇵🇹", fme = "🇵🇼", mme = "🇵🇾", gme = "🇶🇦", _me = "🇷🇪", bme = "🇷🇴", kme = "🇷🇸", yme = "🇷🇺", wme = "🇷🇼", vme = "🇸🇦", xme = "🇸🇧", Ame = "🇸🇨", Sme = "🇸🇩", Lme = "🇸🇪", Cme = "🇸🇬", Eme = "🇸🇭", Tme = "🇸🇮", Dme = "🇸🇯", qme = "🇸🇰", jme = "🇸🇱", Rme = "🇸🇲", Nme = "🇸🇳", Pme = "🇸🇴", Ime = "🇸🇷", Ome = "🇸🇸", Fme = "🇸🇹", Mme = "🇸🇻", Bme = "🇸🇽", zme = "🇸🇾", $me = "🇸🇿", Gme = "🇹🇦", Ume = "🇹🇨", Hme = "🇹🇩", Vme = "🇹🇫", Wme = "🇹🇬", Zme = "🇹🇭", Jme = "🇹🇯", Qme = "🇹🇰", Yme = "🇹🇱", Xme = "🇹🇲", Kme = "🇹🇳", ege = "🇹🇴", nge = "🇹🇷", tge = "🇹🇹", oge = "🇹🇻", sge = "🇹🇼", rge = "🇹🇿", cge = "🇺🇦", age = "🇺🇬", ige = "🇺🇲", lge = "🇺🇳", uge = "🇺🇸", pge = "🇺🇾", hge = "🇺🇿", dge = "🇻🇦", fge = "🇻🇨", mge = "🇻🇪", gge = "🇻🇬", _ge = "🇻🇮", bge = "🇻🇳", kge = "🇻🇺", yge = "🇼🇫", wge = "🇼🇸", vge = "🇽🇰", xge = "🇾🇪", Age = "🇾🇹", Sge = "🇿🇦", Lge = "🇿🇲", Cge = "🇿🇼", Ege = "🏴󠁧󠁢󠁥󠁮󠁧󠁿", Tge = "🏴󠁧󠁢󠁳󠁣󠁴󠁿", Dge = "🏴󠁧󠁢󠁷󠁬󠁳󠁿", qge = {
  100: "💯",
  1234: "🔢",
  grinning: $$,
  smiley: G$,
  smile: U$,
  grin: H$,
  laughing: V$,
  satisfied: W$,
  sweat_smile: Z$,
  rofl: J$,
  joy: Q$,
  slightly_smiling_face: Y$,
  upside_down_face: X$,
  wink: K$,
  blush: e5,
  innocent: n5,
  smiling_face_with_three_hearts: t5,
  heart_eyes: o5,
  star_struck: s5,
  kissing_heart: r5,
  kissing: c5,
  relaxed: a5,
  kissing_closed_eyes: i5,
  kissing_smiling_eyes: l5,
  smiling_face_with_tear: u5,
  yum: p5,
  stuck_out_tongue: h5,
  stuck_out_tongue_winking_eye: d5,
  zany_face: f5,
  stuck_out_tongue_closed_eyes: m5,
  money_mouth_face: g5,
  hugs: _5,
  hand_over_mouth: b5,
  shushing_face: k5,
  thinking: y5,
  zipper_mouth_face: w5,
  raised_eyebrow: v5,
  neutral_face: x5,
  expressionless: A5,
  no_mouth: S5,
  smirk: L5,
  unamused: C5,
  roll_eyes: E5,
  grimacing: T5,
  lying_face: D5,
  relieved: q5,
  pensive: j5,
  sleepy: R5,
  drooling_face: N5,
  sleeping: P5,
  mask: I5,
  face_with_thermometer: O5,
  face_with_head_bandage: F5,
  nauseated_face: M5,
  vomiting_face: B5,
  sneezing_face: z5,
  hot_face: $5,
  cold_face: G5,
  woozy_face: U5,
  dizzy_face: H5,
  exploding_head: V5,
  cowboy_hat_face: W5,
  partying_face: Z5,
  disguised_face: J5,
  sunglasses: Q5,
  nerd_face: Y5,
  monocle_face: X5,
  confused: K5,
  worried: e6,
  slightly_frowning_face: n6,
  frowning_face: t6,
  open_mouth: o6,
  hushed: s6,
  astonished: r6,
  flushed: c6,
  pleading_face: a6,
  frowning: i6,
  anguished: l6,
  fearful: u6,
  cold_sweat: p6,
  disappointed_relieved: h6,
  cry: d6,
  sob: f6,
  scream: m6,
  confounded: g6,
  persevere: _6,
  disappointed: b6,
  sweat: k6,
  weary: y6,
  tired_face: w6,
  yawning_face: v6,
  triumph: x6,
  rage: A6,
  pout: S6,
  angry: L6,
  cursing_face: C6,
  smiling_imp: E6,
  imp: T6,
  skull: D6,
  skull_and_crossbones: q6,
  hankey: j6,
  poop: R6,
  shit: N6,
  clown_face: P6,
  japanese_ogre: I6,
  japanese_goblin: O6,
  ghost: F6,
  alien: M6,
  space_invader: B6,
  robot: z6,
  smiley_cat: $6,
  smile_cat: G6,
  joy_cat: U6,
  heart_eyes_cat: H6,
  smirk_cat: V6,
  kissing_cat: W6,
  scream_cat: Z6,
  crying_cat_face: J6,
  pouting_cat: Q6,
  see_no_evil: Y6,
  hear_no_evil: X6,
  speak_no_evil: K6,
  kiss: e4,
  love_letter: n4,
  cupid: t4,
  gift_heart: o4,
  sparkling_heart: s4,
  heartpulse: r4,
  heartbeat: c4,
  revolving_hearts: a4,
  two_hearts: i4,
  heart_decoration: l4,
  heavy_heart_exclamation: u4,
  broken_heart: p4,
  heart: h4,
  orange_heart: d4,
  yellow_heart: f4,
  green_heart: m4,
  blue_heart: g4,
  purple_heart: _4,
  brown_heart: b4,
  black_heart: k4,
  white_heart: y4,
  anger: w4,
  boom: v4,
  collision: x4,
  dizzy: A4,
  sweat_drops: S4,
  dash: L4,
  hole: C4,
  bomb: E4,
  speech_balloon: T4,
  eye_speech_bubble: D4,
  left_speech_bubble: q4,
  right_anger_bubble: j4,
  thought_balloon: R4,
  zzz: N4,
  wave: P4,
  raised_back_of_hand: I4,
  raised_hand_with_fingers_splayed: O4,
  hand: F4,
  raised_hand: M4,
  vulcan_salute: B4,
  ok_hand: z4,
  pinched_fingers: $4,
  pinching_hand: G4,
  v: U4,
  crossed_fingers: H4,
  love_you_gesture: V4,
  metal: W4,
  call_me_hand: Z4,
  point_left: J4,
  point_right: Q4,
  point_up_2: Y4,
  middle_finger: X4,
  fu: K4,
  point_down: e8,
  point_up: n8,
  "+1": "👍",
  thumbsup: t8,
  "-1": "👎",
  thumbsdown: o8,
  fist_raised: s8,
  fist: r8,
  fist_oncoming: c8,
  facepunch: a8,
  punch: i8,
  fist_left: l8,
  fist_right: u8,
  clap: p8,
  raised_hands: h8,
  open_hands: d8,
  palms_up_together: f8,
  handshake: m8,
  pray: g8,
  writing_hand: _8,
  nail_care: b8,
  selfie: k8,
  muscle: y8,
  mechanical_arm: w8,
  mechanical_leg: v8,
  leg: x8,
  foot: A8,
  ear: S8,
  ear_with_hearing_aid: L8,
  nose: C8,
  brain: E8,
  anatomical_heart: T8,
  lungs: D8,
  tooth: q8,
  bone: j8,
  eyes: R8,
  eye: N8,
  tongue: P8,
  lips: I8,
  baby: O8,
  child: F8,
  boy: M8,
  girl: B8,
  adult: z8,
  blond_haired_person: $8,
  man: G8,
  bearded_person: U8,
  red_haired_man: H8,
  curly_haired_man: V8,
  white_haired_man: W8,
  bald_man: Z8,
  woman: J8,
  red_haired_woman: Q8,
  person_red_hair: Y8,
  curly_haired_woman: X8,
  person_curly_hair: K8,
  white_haired_woman: eG,
  person_white_hair: nG,
  bald_woman: tG,
  person_bald: oG,
  blond_haired_woman: sG,
  blonde_woman: rG,
  blond_haired_man: cG,
  older_adult: aG,
  older_man: iG,
  older_woman: lG,
  frowning_person: uG,
  frowning_man: pG,
  frowning_woman: hG,
  pouting_face: dG,
  pouting_man: fG,
  pouting_woman: mG,
  no_good: gG,
  no_good_man: _G,
  ng_man: bG,
  no_good_woman: kG,
  ng_woman: yG,
  ok_person: wG,
  ok_man: vG,
  ok_woman: xG,
  tipping_hand_person: AG,
  information_desk_person: SG,
  tipping_hand_man: LG,
  sassy_man: CG,
  tipping_hand_woman: EG,
  sassy_woman: TG,
  raising_hand: DG,
  raising_hand_man: qG,
  raising_hand_woman: jG,
  deaf_person: RG,
  deaf_man: NG,
  deaf_woman: PG,
  bow: IG,
  bowing_man: OG,
  bowing_woman: FG,
  facepalm: MG,
  man_facepalming: BG,
  woman_facepalming: zG,
  shrug: $G,
  man_shrugging: GG,
  woman_shrugging: UG,
  health_worker: HG,
  man_health_worker: VG,
  woman_health_worker: WG,
  student: ZG,
  man_student: JG,
  woman_student: QG,
  teacher: YG,
  man_teacher: XG,
  woman_teacher: KG,
  judge: eU,
  man_judge: nU,
  woman_judge: tU,
  farmer: oU,
  man_farmer: sU,
  woman_farmer: rU,
  cook: cU,
  man_cook: aU,
  woman_cook: iU,
  mechanic: lU,
  man_mechanic: uU,
  woman_mechanic: pU,
  factory_worker: hU,
  man_factory_worker: dU,
  woman_factory_worker: fU,
  office_worker: mU,
  man_office_worker: gU,
  woman_office_worker: _U,
  scientist: bU,
  man_scientist: kU,
  woman_scientist: yU,
  technologist: wU,
  man_technologist: vU,
  woman_technologist: xU,
  singer: AU,
  man_singer: SU,
  woman_singer: LU,
  artist: CU,
  man_artist: EU,
  woman_artist: TU,
  pilot: DU,
  man_pilot: qU,
  woman_pilot: jU,
  astronaut: RU,
  man_astronaut: NU,
  woman_astronaut: PU,
  firefighter: IU,
  man_firefighter: OU,
  woman_firefighter: FU,
  police_officer: MU,
  cop: BU,
  policeman: zU,
  policewoman: $U,
  detective: GU,
  male_detective: UU,
  female_detective: HU,
  guard: VU,
  guardsman: WU,
  guardswoman: ZU,
  ninja: JU,
  construction_worker: QU,
  construction_worker_man: YU,
  construction_worker_woman: XU,
  prince: KU,
  princess: e9,
  person_with_turban: n9,
  man_with_turban: t9,
  woman_with_turban: o9,
  man_with_gua_pi_mao: s9,
  woman_with_headscarf: r9,
  person_in_tuxedo: c9,
  man_in_tuxedo: a9,
  woman_in_tuxedo: i9,
  person_with_veil: l9,
  man_with_veil: u9,
  woman_with_veil: p9,
  bride_with_veil: h9,
  pregnant_woman: d9,
  breast_feeding: f9,
  woman_feeding_baby: m9,
  man_feeding_baby: g9,
  person_feeding_baby: _9,
  angel: b9,
  santa: k9,
  mrs_claus: y9,
  mx_claus: w9,
  superhero: v9,
  superhero_man: x9,
  superhero_woman: A9,
  supervillain: S9,
  supervillain_man: L9,
  supervillain_woman: C9,
  mage: E9,
  mage_man: T9,
  mage_woman: D9,
  fairy: q9,
  fairy_man: j9,
  fairy_woman: R9,
  vampire: N9,
  vampire_man: P9,
  vampire_woman: I9,
  merperson: O9,
  merman: F9,
  mermaid: M9,
  elf: B9,
  elf_man: z9,
  elf_woman: $9,
  genie: G9,
  genie_man: U9,
  genie_woman: H9,
  zombie: V9,
  zombie_man: W9,
  zombie_woman: Z9,
  massage: J9,
  massage_man: Q9,
  massage_woman: Y9,
  haircut: X9,
  haircut_man: K9,
  haircut_woman: e7,
  walking: n7,
  walking_man: t7,
  walking_woman: o7,
  standing_person: s7,
  standing_man: r7,
  standing_woman: c7,
  kneeling_person: a7,
  kneeling_man: i7,
  kneeling_woman: l7,
  person_with_probing_cane: u7,
  man_with_probing_cane: p7,
  woman_with_probing_cane: h7,
  person_in_motorized_wheelchair: d7,
  man_in_motorized_wheelchair: f7,
  woman_in_motorized_wheelchair: m7,
  person_in_manual_wheelchair: g7,
  man_in_manual_wheelchair: _7,
  woman_in_manual_wheelchair: b7,
  runner: k7,
  running: y7,
  running_man: w7,
  running_woman: v7,
  woman_dancing: x7,
  dancer: A7,
  man_dancing: S7,
  business_suit_levitating: L7,
  dancers: C7,
  dancing_men: E7,
  dancing_women: T7,
  sauna_person: D7,
  sauna_man: q7,
  sauna_woman: j7,
  climbing: R7,
  climbing_man: N7,
  climbing_woman: P7,
  person_fencing: I7,
  horse_racing: O7,
  skier: F7,
  snowboarder: M7,
  golfing: B7,
  golfing_man: z7,
  golfing_woman: $7,
  surfer: G7,
  surfing_man: U7,
  surfing_woman: H7,
  rowboat: V7,
  rowing_man: W7,
  rowing_woman: Z7,
  swimmer: J7,
  swimming_man: Q7,
  swimming_woman: Y7,
  bouncing_ball_person: X7,
  bouncing_ball_man: K7,
  basketball_man: eH,
  bouncing_ball_woman: nH,
  basketball_woman: tH,
  weight_lifting: oH,
  weight_lifting_man: sH,
  weight_lifting_woman: rH,
  bicyclist: cH,
  biking_man: aH,
  biking_woman: iH,
  mountain_bicyclist: lH,
  mountain_biking_man: uH,
  mountain_biking_woman: pH,
  cartwheeling: hH,
  man_cartwheeling: dH,
  woman_cartwheeling: fH,
  wrestling: mH,
  men_wrestling: gH,
  women_wrestling: _H,
  water_polo: bH,
  man_playing_water_polo: kH,
  woman_playing_water_polo: yH,
  handball_person: wH,
  man_playing_handball: vH,
  woman_playing_handball: xH,
  juggling_person: AH,
  man_juggling: SH,
  woman_juggling: LH,
  lotus_position: CH,
  lotus_position_man: EH,
  lotus_position_woman: TH,
  bath: DH,
  sleeping_bed: qH,
  people_holding_hands: jH,
  two_women_holding_hands: RH,
  couple: NH,
  two_men_holding_hands: PH,
  couplekiss: IH,
  couplekiss_man_woman: OH,
  couplekiss_man_man: FH,
  couplekiss_woman_woman: MH,
  couple_with_heart: BH,
  couple_with_heart_woman_man: zH,
  couple_with_heart_man_man: $H,
  couple_with_heart_woman_woman: GH,
  family: UH,
  family_man_woman_boy: HH,
  family_man_woman_girl: VH,
  family_man_woman_girl_boy: WH,
  family_man_woman_boy_boy: ZH,
  family_man_woman_girl_girl: JH,
  family_man_man_boy: QH,
  family_man_man_girl: YH,
  family_man_man_girl_boy: XH,
  family_man_man_boy_boy: KH,
  family_man_man_girl_girl: eV,
  family_woman_woman_boy: nV,
  family_woman_woman_girl: tV,
  family_woman_woman_girl_boy: oV,
  family_woman_woman_boy_boy: sV,
  family_woman_woman_girl_girl: rV,
  family_man_boy: cV,
  family_man_boy_boy: aV,
  family_man_girl: iV,
  family_man_girl_boy: lV,
  family_man_girl_girl: uV,
  family_woman_boy: pV,
  family_woman_boy_boy: hV,
  family_woman_girl: dV,
  family_woman_girl_boy: fV,
  family_woman_girl_girl: mV,
  speaking_head: gV,
  bust_in_silhouette: _V,
  busts_in_silhouette: bV,
  people_hugging: kV,
  footprints: yV,
  monkey_face: wV,
  monkey: vV,
  gorilla: xV,
  orangutan: AV,
  dog: SV,
  dog2: LV,
  guide_dog: CV,
  service_dog: EV,
  poodle: TV,
  wolf: DV,
  fox_face: qV,
  raccoon: jV,
  cat: RV,
  cat2: NV,
  black_cat: PV,
  lion: IV,
  tiger: OV,
  tiger2: FV,
  leopard: MV,
  horse: BV,
  racehorse: zV,
  unicorn: $V,
  zebra: GV,
  deer: UV,
  bison: HV,
  cow: VV,
  ox: WV,
  water_buffalo: ZV,
  cow2: JV,
  pig: QV,
  pig2: YV,
  boar: XV,
  pig_nose: KV,
  ram: eW,
  sheep: nW,
  goat: tW,
  dromedary_camel: oW,
  camel: sW,
  llama: rW,
  giraffe: cW,
  elephant: aW,
  mammoth: iW,
  rhinoceros: lW,
  hippopotamus: uW,
  mouse: pW,
  mouse2: hW,
  rat: dW,
  hamster: fW,
  rabbit: mW,
  rabbit2: gW,
  chipmunk: _W,
  beaver: bW,
  hedgehog: kW,
  bat: yW,
  bear: wW,
  polar_bear: vW,
  koala: xW,
  panda_face: AW,
  sloth: SW,
  otter: LW,
  skunk: CW,
  kangaroo: EW,
  badger: TW,
  feet: DW,
  paw_prints: qW,
  turkey: jW,
  chicken: RW,
  rooster: NW,
  hatching_chick: PW,
  baby_chick: IW,
  hatched_chick: OW,
  bird: FW,
  penguin: MW,
  dove: BW,
  eagle: zW,
  duck: $W,
  swan: GW,
  owl: UW,
  dodo: HW,
  feather: VW,
  flamingo: WW,
  peacock: ZW,
  parrot: JW,
  frog: QW,
  crocodile: YW,
  turtle: XW,
  lizard: KW,
  snake: eZ,
  dragon_face: nZ,
  dragon: tZ,
  sauropod: oZ,
  "t-rex": "🦖",
  whale: sZ,
  whale2: rZ,
  dolphin: cZ,
  flipper: aZ,
  seal: iZ,
  fish: lZ,
  tropical_fish: uZ,
  blowfish: pZ,
  shark: hZ,
  octopus: dZ,
  shell: fZ,
  snail: mZ,
  butterfly: gZ,
  bug: _Z,
  ant: bZ,
  bee: kZ,
  honeybee: yZ,
  beetle: wZ,
  lady_beetle: vZ,
  cricket: xZ,
  cockroach: AZ,
  spider: SZ,
  spider_web: LZ,
  scorpion: CZ,
  mosquito: EZ,
  fly: TZ,
  worm: DZ,
  microbe: qZ,
  bouquet: jZ,
  cherry_blossom: RZ,
  white_flower: NZ,
  rosette: PZ,
  rose: IZ,
  wilted_flower: OZ,
  hibiscus: FZ,
  sunflower: MZ,
  blossom: BZ,
  tulip: zZ,
  seedling: $Z,
  potted_plant: GZ,
  evergreen_tree: UZ,
  deciduous_tree: HZ,
  palm_tree: VZ,
  cactus: WZ,
  ear_of_rice: ZZ,
  herb: JZ,
  shamrock: QZ,
  four_leaf_clover: YZ,
  maple_leaf: XZ,
  fallen_leaf: KZ,
  leaves: eJ,
  grapes: nJ,
  melon: tJ,
  watermelon: oJ,
  tangerine: sJ,
  orange: rJ,
  mandarin: cJ,
  lemon: aJ,
  banana: iJ,
  pineapple: lJ,
  mango: uJ,
  apple: pJ,
  green_apple: hJ,
  pear: dJ,
  peach: fJ,
  cherries: mJ,
  strawberry: gJ,
  blueberries: _J,
  kiwi_fruit: bJ,
  tomato: kJ,
  olive: yJ,
  coconut: wJ,
  avocado: vJ,
  eggplant: xJ,
  potato: AJ,
  carrot: SJ,
  corn: LJ,
  hot_pepper: CJ,
  bell_pepper: EJ,
  cucumber: TJ,
  leafy_green: DJ,
  broccoli: qJ,
  garlic: jJ,
  onion: RJ,
  mushroom: NJ,
  peanuts: PJ,
  chestnut: IJ,
  bread: OJ,
  croissant: FJ,
  baguette_bread: MJ,
  flatbread: BJ,
  pretzel: zJ,
  bagel: $J,
  pancakes: GJ,
  waffle: UJ,
  cheese: HJ,
  meat_on_bone: VJ,
  poultry_leg: WJ,
  cut_of_meat: ZJ,
  bacon: JJ,
  hamburger: QJ,
  fries: YJ,
  pizza: XJ,
  hotdog: KJ,
  sandwich: eQ,
  taco: nQ,
  burrito: tQ,
  tamale: oQ,
  stuffed_flatbread: sQ,
  falafel: rQ,
  egg: cQ,
  fried_egg: aQ,
  shallow_pan_of_food: iQ,
  stew: lQ,
  fondue: uQ,
  bowl_with_spoon: pQ,
  green_salad: hQ,
  popcorn: dQ,
  butter: fQ,
  salt: mQ,
  canned_food: gQ,
  bento: _Q,
  rice_cracker: bQ,
  rice_ball: kQ,
  rice: yQ,
  curry: wQ,
  ramen: vQ,
  spaghetti: xQ,
  sweet_potato: AQ,
  oden: SQ,
  sushi: LQ,
  fried_shrimp: CQ,
  fish_cake: EQ,
  moon_cake: TQ,
  dango: DQ,
  dumpling: qQ,
  fortune_cookie: jQ,
  takeout_box: RQ,
  crab: NQ,
  lobster: PQ,
  shrimp: IQ,
  squid: OQ,
  oyster: FQ,
  icecream: MQ,
  shaved_ice: BQ,
  ice_cream: zQ,
  doughnut: $Q,
  cookie: GQ,
  birthday: UQ,
  cake: HQ,
  cupcake: VQ,
  pie: WQ,
  chocolate_bar: ZQ,
  candy: JQ,
  lollipop: QQ,
  custard: YQ,
  honey_pot: XQ,
  baby_bottle: KQ,
  milk_glass: eY,
  coffee: nY,
  teapot: tY,
  tea: oY,
  sake: sY,
  champagne: rY,
  wine_glass: cY,
  cocktail: aY,
  tropical_drink: iY,
  beer: lY,
  beers: uY,
  clinking_glasses: pY,
  tumbler_glass: hY,
  cup_with_straw: dY,
  bubble_tea: fY,
  beverage_box: mY,
  mate: gY,
  ice_cube: _Y,
  chopsticks: bY,
  plate_with_cutlery: kY,
  fork_and_knife: yY,
  spoon: wY,
  hocho: vY,
  knife: xY,
  amphora: AY,
  earth_africa: SY,
  earth_americas: LY,
  earth_asia: CY,
  globe_with_meridians: EY,
  world_map: TY,
  japan: DY,
  compass: qY,
  mountain_snow: jY,
  mountain: RY,
  volcano: NY,
  mount_fuji: PY,
  camping: IY,
  beach_umbrella: OY,
  desert: FY,
  desert_island: MY,
  national_park: BY,
  stadium: zY,
  classical_building: $Y,
  building_construction: GY,
  bricks: UY,
  rock: HY,
  wood: VY,
  hut: WY,
  houses: ZY,
  derelict_house: JY,
  house: QY,
  house_with_garden: YY,
  office: XY,
  post_office: KY,
  european_post_office: eX,
  hospital: nX,
  bank: tX,
  hotel: oX,
  love_hotel: sX,
  convenience_store: rX,
  school: cX,
  department_store: aX,
  factory: iX,
  japanese_castle: lX,
  european_castle: uX,
  wedding: pX,
  tokyo_tower: hX,
  statue_of_liberty: dX,
  church: fX,
  mosque: mX,
  hindu_temple: gX,
  synagogue: _X,
  shinto_shrine: bX,
  kaaba: kX,
  fountain: yX,
  tent: wX,
  foggy: vX,
  night_with_stars: xX,
  cityscape: AX,
  sunrise_over_mountains: SX,
  sunrise: LX,
  city_sunset: CX,
  city_sunrise: EX,
  bridge_at_night: TX,
  hotsprings: DX,
  carousel_horse: qX,
  ferris_wheel: jX,
  roller_coaster: RX,
  barber: NX,
  circus_tent: PX,
  steam_locomotive: IX,
  railway_car: OX,
  bullettrain_side: FX,
  bullettrain_front: MX,
  train2: BX,
  metro: zX,
  light_rail: $X,
  station: GX,
  tram: UX,
  monorail: HX,
  mountain_railway: VX,
  train: WX,
  bus: ZX,
  oncoming_bus: JX,
  trolleybus: QX,
  minibus: YX,
  ambulance: XX,
  fire_engine: KX,
  police_car: eK,
  oncoming_police_car: nK,
  taxi: tK,
  oncoming_taxi: oK,
  car: sK,
  red_car: rK,
  oncoming_automobile: cK,
  blue_car: aK,
  pickup_truck: iK,
  truck: lK,
  articulated_lorry: uK,
  tractor: pK,
  racing_car: hK,
  motorcycle: dK,
  motor_scooter: fK,
  manual_wheelchair: mK,
  motorized_wheelchair: gK,
  auto_rickshaw: _K,
  bike: bK,
  kick_scooter: kK,
  skateboard: yK,
  roller_skate: wK,
  busstop: vK,
  motorway: xK,
  railway_track: AK,
  oil_drum: SK,
  fuelpump: LK,
  rotating_light: CK,
  traffic_light: EK,
  vertical_traffic_light: TK,
  stop_sign: DK,
  construction: qK,
  anchor: jK,
  boat: RK,
  sailboat: NK,
  canoe: PK,
  speedboat: IK,
  passenger_ship: OK,
  ferry: FK,
  motor_boat: MK,
  ship: BK,
  airplane: zK,
  small_airplane: $K,
  flight_departure: GK,
  flight_arrival: UK,
  parachute: HK,
  seat: VK,
  helicopter: WK,
  suspension_railway: ZK,
  mountain_cableway: JK,
  aerial_tramway: QK,
  artificial_satellite: YK,
  rocket: XK,
  flying_saucer: KK,
  bellhop_bell: eee,
  luggage: nee,
  hourglass: tee,
  hourglass_flowing_sand: oee,
  watch: see,
  alarm_clock: ree,
  stopwatch: cee,
  timer_clock: aee,
  mantelpiece_clock: iee,
  clock12: lee,
  clock1230: uee,
  clock1: pee,
  clock130: hee,
  clock2: dee,
  clock230: fee,
  clock3: mee,
  clock330: gee,
  clock4: _ee,
  clock430: bee,
  clock5: kee,
  clock530: yee,
  clock6: wee,
  clock630: vee,
  clock7: xee,
  clock730: Aee,
  clock8: See,
  clock830: Lee,
  clock9: Cee,
  clock930: Eee,
  clock10: Tee,
  clock1030: Dee,
  clock11: qee,
  clock1130: jee,
  new_moon: Ree,
  waxing_crescent_moon: Nee,
  first_quarter_moon: Pee,
  moon: Iee,
  waxing_gibbous_moon: Oee,
  full_moon: Fee,
  waning_gibbous_moon: Mee,
  last_quarter_moon: Bee,
  waning_crescent_moon: zee,
  crescent_moon: $ee,
  new_moon_with_face: Gee,
  first_quarter_moon_with_face: Uee,
  last_quarter_moon_with_face: Hee,
  thermometer: Vee,
  sunny: Wee,
  full_moon_with_face: Zee,
  sun_with_face: Jee,
  ringed_planet: Qee,
  star: Yee,
  star2: Xee,
  stars: Kee,
  milky_way: ene,
  cloud: nne,
  partly_sunny: tne,
  cloud_with_lightning_and_rain: one,
  sun_behind_small_cloud: sne,
  sun_behind_large_cloud: rne,
  sun_behind_rain_cloud: cne,
  cloud_with_rain: ane,
  cloud_with_snow: ine,
  cloud_with_lightning: lne,
  tornado: une,
  fog: pne,
  wind_face: hne,
  cyclone: dne,
  rainbow: fne,
  closed_umbrella: mne,
  open_umbrella: gne,
  umbrella: _ne,
  parasol_on_ground: bne,
  zap: kne,
  snowflake: yne,
  snowman_with_snow: wne,
  snowman: vne,
  comet: xne,
  fire: Ane,
  droplet: Sne,
  ocean: Lne,
  jack_o_lantern: Cne,
  christmas_tree: Ene,
  fireworks: Tne,
  sparkler: Dne,
  firecracker: qne,
  sparkles: jne,
  balloon: Rne,
  tada: Nne,
  confetti_ball: Pne,
  tanabata_tree: Ine,
  bamboo: One,
  dolls: Fne,
  flags: Mne,
  wind_chime: Bne,
  rice_scene: zne,
  red_envelope: $ne,
  ribbon: Gne,
  gift: Une,
  reminder_ribbon: Hne,
  tickets: Vne,
  ticket: Wne,
  medal_military: Zne,
  trophy: Jne,
  medal_sports: Qne,
  "1st_place_medal": "🥇",
  "2nd_place_medal": "🥈",
  "3rd_place_medal": "🥉",
  soccer: Yne,
  baseball: Xne,
  softball: Kne,
  basketball: ete,
  volleyball: nte,
  football: tte,
  rugby_football: ote,
  tennis: ste,
  flying_disc: rte,
  bowling: cte,
  cricket_game: ate,
  field_hockey: ite,
  ice_hockey: lte,
  lacrosse: ute,
  ping_pong: pte,
  badminton: hte,
  boxing_glove: dte,
  martial_arts_uniform: fte,
  goal_net: mte,
  golf: gte,
  ice_skate: _te,
  fishing_pole_and_fish: bte,
  diving_mask: kte,
  running_shirt_with_sash: yte,
  ski: wte,
  sled: vte,
  curling_stone: xte,
  dart: Ate,
  yo_yo: Ste,
  kite: Lte,
  "8ball": "🎱",
  crystal_ball: Cte,
  magic_wand: Ete,
  nazar_amulet: Tte,
  video_game: Dte,
  joystick: qte,
  slot_machine: jte,
  game_die: Rte,
  jigsaw: Nte,
  teddy_bear: Pte,
  pinata: Ite,
  nesting_dolls: Ote,
  spades: Fte,
  hearts: Mte,
  diamonds: Bte,
  clubs: zte,
  chess_pawn: $te,
  black_joker: Gte,
  mahjong: Ute,
  flower_playing_cards: Hte,
  performing_arts: Vte,
  framed_picture: Wte,
  art: Zte,
  thread: Jte,
  sewing_needle: Qte,
  yarn: Yte,
  knot: Xte,
  eyeglasses: Kte,
  dark_sunglasses: eoe,
  goggles: noe,
  lab_coat: toe,
  safety_vest: ooe,
  necktie: soe,
  shirt: roe,
  tshirt: coe,
  jeans: aoe,
  scarf: ioe,
  gloves: loe,
  coat: uoe,
  socks: poe,
  dress: hoe,
  kimono: doe,
  sari: foe,
  one_piece_swimsuit: moe,
  swim_brief: goe,
  shorts: _oe,
  bikini: boe,
  womans_clothes: koe,
  purse: yoe,
  handbag: woe,
  pouch: voe,
  shopping: xoe,
  school_satchel: Aoe,
  thong_sandal: Soe,
  mans_shoe: Loe,
  shoe: Coe,
  athletic_shoe: Eoe,
  hiking_boot: Toe,
  flat_shoe: Doe,
  high_heel: qoe,
  sandal: joe,
  ballet_shoes: Roe,
  boot: Noe,
  crown: Poe,
  womans_hat: Ioe,
  tophat: Ooe,
  mortar_board: Foe,
  billed_cap: Moe,
  military_helmet: Boe,
  rescue_worker_helmet: zoe,
  prayer_beads: $oe,
  lipstick: Goe,
  ring: Uoe,
  gem: Hoe,
  mute: Voe,
  speaker: Woe,
  sound: Zoe,
  loud_sound: Joe,
  loudspeaker: Qoe,
  mega: Yoe,
  postal_horn: Xoe,
  bell: Koe,
  no_bell: ese,
  musical_score: nse,
  musical_note: tse,
  notes: ose,
  studio_microphone: sse,
  level_slider: rse,
  control_knobs: cse,
  microphone: ase,
  headphones: ise,
  radio: lse,
  saxophone: use,
  accordion: pse,
  guitar: hse,
  musical_keyboard: dse,
  trumpet: fse,
  violin: mse,
  banjo: gse,
  drum: _se,
  long_drum: bse,
  iphone: kse,
  calling: yse,
  phone: wse,
  telephone: vse,
  telephone_receiver: xse,
  pager: Ase,
  fax: Sse,
  battery: Lse,
  electric_plug: Cse,
  computer: Ese,
  desktop_computer: Tse,
  printer: Dse,
  keyboard: qse,
  computer_mouse: jse,
  trackball: Rse,
  minidisc: Nse,
  floppy_disk: Pse,
  cd: Ise,
  dvd: Ose,
  abacus: Fse,
  movie_camera: Mse,
  film_strip: Bse,
  film_projector: zse,
  clapper: $se,
  tv: Gse,
  camera: Use,
  camera_flash: Hse,
  video_camera: Vse,
  vhs: Wse,
  mag: Zse,
  mag_right: Jse,
  candle: Qse,
  bulb: Yse,
  flashlight: Xse,
  izakaya_lantern: Kse,
  lantern: ere,
  diya_lamp: nre,
  notebook_with_decorative_cover: tre,
  closed_book: ore,
  book: sre,
  open_book: rre,
  green_book: cre,
  blue_book: are,
  orange_book: ire,
  books: lre,
  notebook: ure,
  ledger: pre,
  page_with_curl: hre,
  scroll: dre,
  page_facing_up: fre,
  newspaper: mre,
  newspaper_roll: gre,
  bookmark_tabs: _re,
  bookmark: bre,
  label: kre,
  moneybag: yre,
  coin: wre,
  yen: vre,
  dollar: xre,
  euro: Are,
  pound: Sre,
  money_with_wings: Lre,
  credit_card: Cre,
  receipt: Ere,
  chart: Tre,
  envelope: Dre,
  email: qre,
  "e-mail": "📧",
  incoming_envelope: jre,
  envelope_with_arrow: Rre,
  outbox_tray: Nre,
  inbox_tray: Pre,
  package: "📦",
  mailbox: Ire,
  mailbox_closed: Ore,
  mailbox_with_mail: Fre,
  mailbox_with_no_mail: Mre,
  postbox: Bre,
  ballot_box: zre,
  pencil2: $re,
  black_nib: Gre,
  fountain_pen: Ure,
  pen: Hre,
  paintbrush: Vre,
  crayon: Wre,
  memo: Zre,
  pencil: Jre,
  briefcase: Qre,
  file_folder: Yre,
  open_file_folder: Xre,
  card_index_dividers: Kre,
  date: ece,
  calendar: nce,
  spiral_notepad: tce,
  spiral_calendar: oce,
  card_index: sce,
  chart_with_upwards_trend: rce,
  chart_with_downwards_trend: cce,
  bar_chart: ace,
  clipboard: ice,
  pushpin: lce,
  round_pushpin: uce,
  paperclip: pce,
  paperclips: hce,
  straight_ruler: dce,
  triangular_ruler: fce,
  scissors: mce,
  card_file_box: gce,
  file_cabinet: _ce,
  wastebasket: bce,
  lock: kce,
  unlock: yce,
  lock_with_ink_pen: wce,
  closed_lock_with_key: vce,
  key: xce,
  old_key: Ace,
  hammer: Sce,
  axe: Lce,
  pick: Cce,
  hammer_and_pick: Ece,
  hammer_and_wrench: Tce,
  dagger: Dce,
  crossed_swords: qce,
  gun: jce,
  boomerang: Rce,
  bow_and_arrow: Nce,
  shield: Pce,
  carpentry_saw: Ice,
  wrench: Oce,
  screwdriver: Fce,
  nut_and_bolt: Mce,
  gear: Bce,
  clamp: zce,
  balance_scale: $ce,
  probing_cane: Gce,
  link: Uce,
  chains: Hce,
  hook: Vce,
  toolbox: Wce,
  magnet: Zce,
  ladder: Jce,
  alembic: Qce,
  test_tube: Yce,
  petri_dish: Xce,
  dna: Kce,
  microscope: eae,
  telescope: nae,
  satellite: tae,
  syringe: oae,
  drop_of_blood: sae,
  pill: rae,
  adhesive_bandage: cae,
  stethoscope: aae,
  door: iae,
  elevator: lae,
  mirror: uae,
  window: pae,
  bed: hae,
  couch_and_lamp: dae,
  chair: fae,
  toilet: mae,
  plunger: gae,
  shower: _ae,
  bathtub: bae,
  mouse_trap: kae,
  razor: yae,
  lotion_bottle: wae,
  safety_pin: vae,
  broom: xae,
  basket: Aae,
  roll_of_paper: Sae,
  bucket: Lae,
  soap: Cae,
  toothbrush: Eae,
  sponge: Tae,
  fire_extinguisher: Dae,
  shopping_cart: qae,
  smoking: jae,
  coffin: Rae,
  headstone: Nae,
  funeral_urn: Pae,
  moyai: Iae,
  placard: Oae,
  atm: Fae,
  put_litter_in_its_place: Mae,
  potable_water: Bae,
  wheelchair: zae,
  mens: $ae,
  womens: Gae,
  restroom: Uae,
  baby_symbol: Hae,
  wc: Vae,
  passport_control: Wae,
  customs: Zae,
  baggage_claim: Jae,
  left_luggage: Qae,
  warning: Yae,
  children_crossing: Xae,
  no_entry: Kae,
  no_entry_sign: eie,
  no_bicycles: nie,
  no_smoking: tie,
  do_not_litter: oie,
  "non-potable_water": "🚱",
  no_pedestrians: sie,
  no_mobile_phones: rie,
  underage: cie,
  radioactive: aie,
  biohazard: iie,
  arrow_up: lie,
  arrow_upper_right: uie,
  arrow_right: pie,
  arrow_lower_right: hie,
  arrow_down: die,
  arrow_lower_left: fie,
  arrow_left: mie,
  arrow_upper_left: gie,
  arrow_up_down: _ie,
  left_right_arrow: bie,
  leftwards_arrow_with_hook: kie,
  arrow_right_hook: yie,
  arrow_heading_up: wie,
  arrow_heading_down: vie,
  arrows_clockwise: xie,
  arrows_counterclockwise: Aie,
  back: Sie,
  end: Lie,
  on: Cie,
  soon: Eie,
  top: Tie,
  place_of_worship: Die,
  atom_symbol: qie,
  om: jie,
  star_of_david: Rie,
  wheel_of_dharma: Nie,
  yin_yang: Pie,
  latin_cross: Iie,
  orthodox_cross: Oie,
  star_and_crescent: Fie,
  peace_symbol: Mie,
  menorah: Bie,
  six_pointed_star: zie,
  aries: $ie,
  taurus: Gie,
  gemini: Uie,
  cancer: Hie,
  leo: Vie,
  virgo: Wie,
  libra: Zie,
  scorpius: Jie,
  sagittarius: Qie,
  capricorn: Yie,
  aquarius: Xie,
  pisces: Kie,
  ophiuchus: ele,
  twisted_rightwards_arrows: nle,
  repeat: tle,
  repeat_one: ole,
  arrow_forward: sle,
  fast_forward: rle,
  next_track_button: cle,
  play_or_pause_button: ale,
  arrow_backward: ile,
  rewind: lle,
  previous_track_button: ule,
  arrow_up_small: ple,
  arrow_double_up: hle,
  arrow_down_small: dle,
  arrow_double_down: fle,
  pause_button: mle,
  stop_button: gle,
  record_button: _le,
  eject_button: ble,
  cinema: kle,
  low_brightness: yle,
  high_brightness: wle,
  signal_strength: vle,
  vibration_mode: xle,
  mobile_phone_off: Ale,
  female_sign: Sle,
  male_sign: Lle,
  transgender_symbol: Cle,
  heavy_multiplication_x: Ele,
  heavy_plus_sign: Tle,
  heavy_minus_sign: Dle,
  heavy_division_sign: qle,
  infinity: jle,
  bangbang: Rle,
  interrobang: Nle,
  question: Ple,
  grey_question: Ile,
  grey_exclamation: Ole,
  exclamation: Fle,
  heavy_exclamation_mark: Mle,
  wavy_dash: Ble,
  currency_exchange: zle,
  heavy_dollar_sign: $le,
  medical_symbol: Gle,
  recycle: Ule,
  fleur_de_lis: Hle,
  trident: Vle,
  name_badge: Wle,
  beginner: Zle,
  o: Jle,
  white_check_mark: Qle,
  ballot_box_with_check: Yle,
  heavy_check_mark: Xle,
  x: Kle,
  negative_squared_cross_mark: eue,
  curly_loop: nue,
  loop: tue,
  part_alternation_mark: oue,
  eight_spoked_asterisk: sue,
  eight_pointed_black_star: rue,
  sparkle: cue,
  copyright: aue,
  registered: iue,
  tm: lue,
  hash: uue,
  asterisk: pue,
  zero: hue,
  one: due,
  two: fue,
  three: mue,
  four: gue,
  five: _ue,
  six: bue,
  seven: kue,
  eight: yue,
  nine: wue,
  keycap_ten: vue,
  capital_abcd: xue,
  abcd: Aue,
  symbols: Sue,
  abc: Lue,
  a: Cue,
  ab: Eue,
  b: Tue,
  cl: Due,
  cool: que,
  free: jue,
  information_source: Rue,
  id: Nue,
  m: Pue,
  new: "🆕",
  ng: Iue,
  o2: Oue,
  ok: Fue,
  parking: Mue,
  sos: Bue,
  up: zue,
  vs: $ue,
  koko: Gue,
  sa: Uue,
  ideograph_advantage: Hue,
  accept: Vue,
  congratulations: Wue,
  secret: Zue,
  u6e80: Jue,
  red_circle: Que,
  orange_circle: Yue,
  yellow_circle: Xue,
  green_circle: Kue,
  large_blue_circle: epe,
  purple_circle: npe,
  brown_circle: tpe,
  black_circle: ope,
  white_circle: spe,
  red_square: rpe,
  orange_square: cpe,
  yellow_square: ape,
  green_square: ipe,
  blue_square: lpe,
  purple_square: upe,
  brown_square: ppe,
  black_large_square: hpe,
  white_large_square: dpe,
  black_medium_square: fpe,
  white_medium_square: mpe,
  black_medium_small_square: gpe,
  white_medium_small_square: _pe,
  black_small_square: bpe,
  white_small_square: kpe,
  large_orange_diamond: ype,
  large_blue_diamond: wpe,
  small_orange_diamond: vpe,
  small_blue_diamond: xpe,
  small_red_triangle: Ape,
  small_red_triangle_down: Spe,
  diamond_shape_with_a_dot_inside: Lpe,
  radio_button: Cpe,
  white_square_button: Epe,
  black_square_button: Tpe,
  checkered_flag: Dpe,
  triangular_flag_on_post: qpe,
  crossed_flags: jpe,
  black_flag: Rpe,
  white_flag: Npe,
  rainbow_flag: Ppe,
  transgender_flag: Ipe,
  pirate_flag: Ope,
  ascension_island: Fpe,
  andorra: Mpe,
  united_arab_emirates: Bpe,
  afghanistan: zpe,
  antigua_barbuda: $pe,
  anguilla: Gpe,
  albania: Upe,
  armenia: Hpe,
  angola: Vpe,
  antarctica: Wpe,
  argentina: Zpe,
  american_samoa: Jpe,
  austria: Qpe,
  australia: Ype,
  aruba: Xpe,
  aland_islands: Kpe,
  azerbaijan: ehe,
  bosnia_herzegovina: nhe,
  barbados: the,
  bangladesh: ohe,
  belgium: she,
  burkina_faso: rhe,
  bulgaria: che,
  bahrain: ahe,
  burundi: ihe,
  benin: lhe,
  st_barthelemy: uhe,
  bermuda: phe,
  brunei: hhe,
  bolivia: dhe,
  caribbean_netherlands: fhe,
  brazil: mhe,
  bahamas: ghe,
  bhutan: _he,
  bouvet_island: bhe,
  botswana: khe,
  belarus: yhe,
  belize: whe,
  canada: vhe,
  cocos_islands: xhe,
  congo_kinshasa: Ahe,
  central_african_republic: She,
  congo_brazzaville: Lhe,
  switzerland: Che,
  cote_divoire: Ehe,
  cook_islands: The,
  chile: Dhe,
  cameroon: qhe,
  cn: jhe,
  colombia: Rhe,
  clipperton_island: Nhe,
  costa_rica: Phe,
  cuba: Ihe,
  cape_verde: Ohe,
  curacao: Fhe,
  christmas_island: Mhe,
  cyprus: Bhe,
  czech_republic: zhe,
  de: $he,
  diego_garcia: Ghe,
  djibouti: Uhe,
  denmark: Hhe,
  dominica: Vhe,
  dominican_republic: Whe,
  algeria: Zhe,
  ceuta_melilla: Jhe,
  ecuador: Qhe,
  estonia: Yhe,
  egypt: Xhe,
  western_sahara: Khe,
  eritrea: ede,
  es: nde,
  ethiopia: tde,
  eu: ode,
  european_union: sde,
  finland: rde,
  fiji: cde,
  falkland_islands: ade,
  micronesia: ide,
  faroe_islands: lde,
  fr: ude,
  gabon: pde,
  gb: hde,
  uk: dde,
  grenada: fde,
  georgia: mde,
  french_guiana: gde,
  guernsey: _de,
  ghana: bde,
  gibraltar: kde,
  greenland: yde,
  gambia: wde,
  guinea: vde,
  guadeloupe: xde,
  equatorial_guinea: Ade,
  greece: Sde,
  south_georgia_south_sandwich_islands: Lde,
  guatemala: Cde,
  guam: Ede,
  guinea_bissau: Tde,
  guyana: Dde,
  hong_kong: qde,
  heard_mcdonald_islands: jde,
  honduras: Rde,
  croatia: Nde,
  haiti: Pde,
  hungary: Ide,
  canary_islands: Ode,
  indonesia: Fde,
  ireland: Mde,
  israel: Bde,
  isle_of_man: zde,
  india: $de,
  british_indian_ocean_territory: Gde,
  iraq: Ude,
  iran: Hde,
  iceland: Vde,
  it: Wde,
  jersey: Zde,
  jamaica: Jde,
  jordan: Qde,
  jp: Yde,
  kenya: Xde,
  kyrgyzstan: Kde,
  cambodia: efe,
  kiribati: nfe,
  comoros: tfe,
  st_kitts_nevis: ofe,
  north_korea: sfe,
  kr: rfe,
  kuwait: cfe,
  cayman_islands: afe,
  kazakhstan: ife,
  laos: lfe,
  lebanon: ufe,
  st_lucia: pfe,
  liechtenstein: hfe,
  sri_lanka: dfe,
  liberia: ffe,
  lesotho: mfe,
  lithuania: gfe,
  luxembourg: _fe,
  latvia: bfe,
  libya: kfe,
  morocco: yfe,
  monaco: wfe,
  moldova: vfe,
  montenegro: xfe,
  st_martin: Afe,
  madagascar: Sfe,
  marshall_islands: Lfe,
  macedonia: Cfe,
  mali: Efe,
  myanmar: Tfe,
  mongolia: Dfe,
  macau: qfe,
  northern_mariana_islands: jfe,
  martinique: Rfe,
  mauritania: Nfe,
  montserrat: Pfe,
  malta: Ife,
  mauritius: Ofe,
  maldives: Ffe,
  malawi: Mfe,
  mexico: Bfe,
  malaysia: zfe,
  mozambique: $fe,
  namibia: Gfe,
  new_caledonia: Ufe,
  niger: Hfe,
  norfolk_island: Vfe,
  nigeria: Wfe,
  nicaragua: Zfe,
  netherlands: Jfe,
  norway: Qfe,
  nepal: Yfe,
  nauru: Xfe,
  niue: Kfe,
  new_zealand: eme,
  oman: nme,
  panama: tme,
  peru: ome,
  french_polynesia: sme,
  papua_new_guinea: rme,
  philippines: cme,
  pakistan: ame,
  poland: ime,
  st_pierre_miquelon: lme,
  pitcairn_islands: ume,
  puerto_rico: pme,
  palestinian_territories: hme,
  portugal: dme,
  palau: fme,
  paraguay: mme,
  qatar: gme,
  reunion: _me,
  romania: bme,
  serbia: kme,
  ru: yme,
  rwanda: wme,
  saudi_arabia: vme,
  solomon_islands: xme,
  seychelles: Ame,
  sudan: Sme,
  sweden: Lme,
  singapore: Cme,
  st_helena: Eme,
  slovenia: Tme,
  svalbard_jan_mayen: Dme,
  slovakia: qme,
  sierra_leone: jme,
  san_marino: Rme,
  senegal: Nme,
  somalia: Pme,
  suriname: Ime,
  south_sudan: Ome,
  sao_tome_principe: Fme,
  el_salvador: Mme,
  sint_maarten: Bme,
  syria: zme,
  swaziland: $me,
  tristan_da_cunha: Gme,
  turks_caicos_islands: Ume,
  chad: Hme,
  french_southern_territories: Vme,
  togo: Wme,
  thailand: Zme,
  tajikistan: Jme,
  tokelau: Qme,
  timor_leste: Yme,
  turkmenistan: Xme,
  tunisia: Kme,
  tonga: ege,
  tr: nge,
  trinidad_tobago: tge,
  tuvalu: oge,
  taiwan: sge,
  tanzania: rge,
  ukraine: cge,
  uganda: age,
  us_outlying_islands: ige,
  united_nations: lge,
  us: uge,
  uruguay: pge,
  uzbekistan: hge,
  vatican_city: dge,
  st_vincent_grenadines: fge,
  venezuela: mge,
  british_virgin_islands: gge,
  us_virgin_islands: _ge,
  vietnam: bge,
  vanuatu: kge,
  wallis_futuna: yge,
  samoa: wge,
  kosovo: vge,
  yemen: xge,
  mayotte: Age,
  south_africa: Sge,
  zambia: Lge,
  zimbabwe: Cge,
  england: Ege,
  scotland: Tge,
  wales: Dge
};
var jge = {
  angry: [">:(", ">:-("],
  blush: [':")', ':-")'],
  broken_heart: ["</3", "<\\3"],
  // :\ and :-\ not used because of conflict with markdown escaping
  confused: [":/", ":-/"],
  // twemoji shows question
  cry: [":'(", ":'-(", ":,(", ":,-("],
  frowning: [":(", ":-("],
  heart: ["<3"],
  imp: ["]:(", "]:-("],
  innocent: ["o:)", "O:)", "o:-)", "O:-)", "0:)", "0:-)"],
  joy: [":')", ":'-)", ":,)", ":,-)", ":'D", ":'-D", ":,D", ":,-D"],
  kissing: [":*", ":-*"],
  laughing: ["x-)", "X-)"],
  neutral_face: [":|", ":-|"],
  open_mouth: [":o", ":-o", ":O", ":-O"],
  rage: [":@", ":-@"],
  smile: [":D", ":-D"],
  smiley: [":)", ":-)"],
  smiling_imp: ["]:)", "]:-)"],
  sob: [":,'(", ":,'-(", ";(", ";-("],
  stuck_out_tongue: [":P", ":-P"],
  sunglasses: ["8-)", "B-)"],
  sweat: [",:(", ",:-("],
  sweat_smile: [",:)", ",:-)"],
  unamused: [":s", ":-S", ":z", ":-Z", ":$", ":-$"],
  wink: [";)", ";-)"]
}, Rge = function(e, t) {
  return e[t].content;
}, Nge = function(e, t, o, r, s) {
  var a = e.utils.arrayReplaceAt, c = e.utils.lib.ucmicro, l = new RegExp([c.Z.source, c.P.source, c.Cc.source].join("|"));
  function i(p, h, d) {
    var f, m = 0, L = [];
    return p.replace(s, function(S, b, k) {
      var w;
      if (o.hasOwnProperty(S)) {
        if (w = o[S], b > 0 && !l.test(k[b - 1]) || b + S.length < k.length && !l.test(k[b + S.length]))
          return;
      } else
        w = S.slice(1, -1);
      b > m && (f = new d("text", "", 0), f.content = p.slice(m, b), L.push(f)), f = new d("emoji", "", 0), f.markup = w, f.content = t[w], L.push(f), m = b + S.length;
    }), m < p.length && (f = new d("text", "", 0), f.content = p.slice(m), L.push(f)), L;
  }
  return function(h) {
    var d, f, m, L, S, b = h.tokens, k = 0;
    for (f = 0, m = b.length; f < m; f++)
      if (b[f].type === "inline")
        for (L = b[f].children, d = L.length - 1; d >= 0; d--)
          S = L[d], (S.type === "link_open" || S.type === "link_close") && S.info === "auto" && (k -= S.nesting), S.type === "text" && k === 0 && r.test(S.content) && (b[f].children = L = a(
            L,
            d,
            i(S.content, S.level, h.Token)
          ));
  };
};
function Pge(n) {
  return n.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
}
var Ige = function(e) {
  var t = e.defs, o;
  e.enabled.length && (t = Object.keys(t).reduce(function(l, i) {
    return e.enabled.indexOf(i) >= 0 && (l[i] = t[i]), l;
  }, {})), o = Object.keys(e.shortcuts).reduce(function(l, i) {
    return t[i] ? Array.isArray(e.shortcuts[i]) ? (e.shortcuts[i].forEach(function(p) {
      l[p] = i;
    }), l) : (l[e.shortcuts[i]] = i, l) : l;
  }, {});
  var r = Object.keys(t), s;
  r.length === 0 ? s = "^$" : s = r.map(function(l) {
    return ":" + l + ":";
  }).concat(Object.keys(o)).sort().reverse().map(function(l) {
    return Pge(l);
  }).join("|");
  var a = RegExp(s), c = RegExp(s, "g");
  return {
    defs: t,
    shortcuts: o,
    scanRE: a,
    replaceRE: c
  };
}, Oge = Rge, Fge = Nge, Mge = Ige, Bge = function(e, t) {
  var o = {
    defs: {},
    shortcuts: {},
    enabled: []
  }, r = Mge(e.utils.assign({}, o, t || {}));
  e.renderer.rules.emoji = Oge, e.core.ruler.after(
    "linkify",
    "emoji",
    Fge(e, r.defs, r.shortcuts, r.scanRE, r.replaceRE)
  );
}, zge = qge, $ge = jge, Gge = Bge, Uge = function(e, t) {
  var o = {
    defs: zge,
    shortcuts: $ge,
    enabled: []
  }, r = e.utils.assign({}, o, t || {});
  Gge(e, r);
};
const Hge = /* @__PURE__ */ pn(Uge);
var Vge = function(e, t, o) {
  function r(f) {
    return f.trim().split(" ", 2)[0] === t;
  }
  function s(f, m, L, S, b) {
    return f[m].nesting === 1 && f[m].attrJoin("class", t), b.renderToken(f, m, L, S, b);
  }
  o = o || {};
  var a = 3, c = o.marker || ":", l = c.charCodeAt(0), i = c.length, p = o.validate || r, h = o.render || s;
  function d(f, m, L, S) {
    var b, k, w, C, y, u, g, x, _ = !1, v = f.bMarks[m] + f.tShift[m], A = f.eMarks[m];
    if (l !== f.src.charCodeAt(v))
      return !1;
    for (b = v + 1; b <= A && c[(b - v) % i] === f.src[b]; b++)
      ;
    if (w = Math.floor((b - v) / i), w < a || (b -= (b - v) % i, C = f.src.slice(v, b), y = f.src.slice(b, A), !p(y, C)))
      return !1;
    if (S)
      return !0;
    for (k = m; k++, !(k >= L || (v = f.bMarks[k] + f.tShift[k], A = f.eMarks[k], v < A && f.sCount[k] < f.blkIndent)); )
      if (l === f.src.charCodeAt(v) && !(f.sCount[k] - f.blkIndent >= 4)) {
        for (b = v + 1; b <= A && c[(b - v) % i] === f.src[b]; b++)
          ;
        if (!(Math.floor((b - v) / i) < w) && (b -= (b - v) % i, b = f.skipSpaces(b), !(b < A))) {
          _ = !0;
          break;
        }
      }
    return g = f.parentType, x = f.lineMax, f.parentType = "container", f.lineMax = k, u = f.push("container_" + t + "_open", "div", 1), u.markup = C, u.block = !0, u.info = y, u.map = [m, k], f.md.block.tokenize(f, m + 1, k), u = f.push("container_" + t + "_close", "div", -1), u.markup = f.src.slice(v, b), u.block = !0, f.parentType = g, f.lineMax = x, f.line = k + (_ ? 1 : 0), !0;
  }
  e.block.ruler.before("fence", "container_" + t, d, {
    alt: ["paragraph", "reference", "blockquote", "list"]
  }), e.renderer.rules["container_" + t + "_open"] = h, e.renderer.rules["container_" + t + "_close"] = h;
};
const ln = /* @__PURE__ */ pn(Vge);
let Wge = (n) => crypto.getRandomValues(new Uint8Array(n)), Zge = (n, e, t) => {
  let o = (2 << Math.log(n.length - 1) / Math.LN2) - 1, r = -~(1.6 * o * e / n.length);
  return (s = e) => {
    let a = "";
    for (; ; ) {
      let c = t(r), l = r;
      for (; l--; )
        if (a += n[c[l] & o] || "", a.length === s)
          return a;
    }
  };
}, Jge = (n, e = 21) => Zge(n, e, Wge), no = (n = 21) => crypto.getRandomValues(new Uint8Array(n)).reduce((e, t) => (t &= 63, t < 36 ? e += t.toString(36) : t < 62 ? e += (t - 26).toString(36).toUpperCase() : t > 62 ? e += "-" : e += "_", e), "");
const Qn = /^[a-z]+:/i, Qge = /^pathname:\/\//, Mo = Symbol("vue-md-shiki-component"), Yge = () => [
  ..."abap,actionscript-3,ada,apache,apex,apl,applescript,ara,asm,astro,awk,ballerina,bat,batch,berry,be,bibtex,bicep,blade,c,cadence,cdc,clarity,clojure,clj,cmake,cobol,codeql,ql,coffee,cpp,crystal,csharp,c#,cs,css,cue,d,dart,dax,diff,docker,dream-maker,elixir,elm,erb,erlang,erl,fish,fsharp,f#,fs,gherkin,git-commit,git-rebase,glsl,gnuplot,go,graphql,groovy,hack,haml,handlebars,hbs,haskell,hs,hcl,hlsl,html,http,imba,ini,properties,java,javascript,js,jinja-html,jison,json,json5,jsonc,jsonnet,jssm,fsl,jsx,julia,kotlin,latex,less,liquid,lisp,logo,lua,make,makefile,markdown,md,marko,matlab,mdx,mermaid,nginx,nim,nix,objective-c,objc,objective-cpp,ocaml,pascal,perl,php,plsql,postcss,powerquery,powershell,ps,ps1,prisma,prolog,proto,pug,jade,puppet,purescript,python,py,r,raku,perl6,razor,rel,riscv,rst,ruby,rb,rust,rs,sas,sass,scala,scheme,scss,shaderlab,shader,shellscript,bash,console,sh,shell,zsh,smalltalk,solidity,sparql,sql,ssh-config,stata,stylus,styl,svelte,swift,system-verilog,tasl,tcl,tex,toml,tsx,turtle,twig,typescript,ts,v,vb,cmd,verilog,vhdl,viml,vim,vimscript,vue-html,vue,wasm,wenyan,文言,wgsl,xml,xsl,yaml,yml,zenscript".split(
    ","
  ),
  ...Object.keys(Bo)
], Bo = {
  "C++": "cpp",
  "C#": "csharp"
};
function Xge(n) {
  const e = n.renderer.rules.fence;
  n.renderer.rules.fence = (...t) => {
    const [o, r] = t, s = o[r];
    s.info = s.info.replace(/\[.*\]/, "");
    let a = zo(s.info);
    Yge().includes(a) || (a = "plainText");
    const l = e(...t);
    return `<div class="language-${a}">${l}</div>`;
  };
}
function Kge(n) {
  var e;
  return ((e = n.match(/\[(.*)\]/)) == null ? void 0 : e[1]) || zo(n) || "txt";
}
const zo = (n) => n.trim().replace(/:(no-)?line-numbers({| |$).*/, "").replace(/(-vue|{| ).*$/, "").replace(/^vue-html$/, "template"), e_e = (n) => {
  n.use(...Ve("tip", "TIP", n)).use(...Ve("info", "INFO", n)).use(...Ve("warning", "WARNING", n)).use(...Ve("danger", "DANGER", n)).use(...Ve("details", "Details", n)).use(ln, "v-pre", {
    render: (e, t) => e[t].nesting === 1 ? `<div v-pre>
` : `</div>
`
  }).use(ln, "raw", {
    render: (e, t) => e[t].nesting === 1 ? `<div class="vp-raw">
` : `</div>
`
  }).use(...n_e());
};
function Ve(n, e, t) {
  return [
    ln,
    n,
    {
      render(o, r) {
        const s = o[r], a = s.info.trim().slice(n.length).trim();
        if (s.nesting === 1) {
          const c = t.renderInline(a || e);
          return n === "details" ? `<details class="${n} custom-block"><summary>${c}</summary>
` : `<div class="${n} custom-block"><p class="custom-block-title">${c}</p>
`;
        } else
          return n === "details" ? `</details>
` : `</div>
`;
      }
    }
  ];
}
function n_e() {
  return [
    ln,
    "code-group",
    {
      render(n, e) {
        if (n[e].nesting === 1) {
          const t = no(5);
          let o = "", r = 'checked="checked"';
          for (let s = e + 1; !(n[s].nesting === -1 && n[s].type === "container_code-group_close"); ++s)
            if (n[s].type === "fence" && n[s].tag === "code") {
              const a = Kge(n[s].info), c = no(7);
              o += `<input type="radio" name="group-${t}" id="tab-${c}" ${r}><label for="tab-${c}">${a}</label>`, r && (n[s].info += " active", r = "");
            }
          return `<div class="vp-code-group"><div class="tabs">${o}</div><div class="blocks">
`;
        }
        return `</div></div>
`;
      }
    }
  ];
}
function vn(n, e = {}) {
  return ({ code: t }) => {
    const o = e.tagRegExp ?? /(?:\/\/|\/\*{1,2}) *\[!code\s+([\w+-]+)(?::(\d+))?] *(?:\*{1,2}\/)?/, r = [];
    return t = t.split(`
`).map((s, a) => {
      const [c, l, i] = s.match(o) ?? [];
      return !c || !Object.keys(n).includes(l) ? s : (Array.from({ length: Number(i ?? 1) }).forEach((p, h) => {
        r.push({
          line: a + h + 1,
          classes: n[l]
        });
      }), s.replace(o, ""));
    }).join(`
`), {
      code: t,
      lineOptions: r
    };
  };
}
function Qe(n, e, t) {
  const o = new RegExp(`<${t ?? "w+"}[^>]*class="([\\w+-:;\\/* ]*)"`);
  return e = Array.isArray(e) ? e : [e], n.replace(o, (r, s) => r.replace(s, `${s} ${e}`));
}
function t_e(n = {}) {
  const e = n.commonDiffClass ?? "diff", t = n.removedLinesClasses ?? ["remove"], o = n.removedLinesClasses ?? ["add"], r = n.removeLineTag ?? "--", s = n.addLineTag ?? "++", a = n.hasDiffClass ?? "has-diff";
  return {
    name: "diff",
    handler: vn({
      [r]: [e, ...t],
      [s]: [e, ...o]
    }, n),
    postProcess: ({ code: c }) => c.includes(e) ? Qe(c, a, "pre") : c
  };
}
function o_e(n = {}) {
  const e = n.hasFocusClass ?? "has-focus", t = n.hasFocusedLinesClass ?? "has-focused-lines", o = n.focusTag ?? "focus";
  return {
    name: "focus",
    handler: vn(
      {
        [o]: [e]
      },
      n
    ),
    postProcess: ({ code: r }) => r.includes(e) ? Qe(r, t, "pre") : r
  };
}
function s_e(n = {}) {
  const e = n.hasHighlightClass ?? "has-highlight", t = n.hasHighlightedLinesClass ?? "has-highlighted-lines", o = n.highlightTag ?? "hl";
  return {
    name: "highlight",
    handler: vn({
      [o]: [e]
    }, n),
    postProcess: ({ code: r }) => r.includes(e) ? Qe(r, t, "pre") : r
  };
}
function r_e(n, e, t) {
  return n.reduce((o, r) => {
    var c;
    const { code: s, lineOptions: a } = ((c = r.handler) == null ? void 0 : c.call(r, {
      code: o.code,
      lang: t
    })) ?? o;
    return {
      code: s,
      lineOptions: [
        ...o.lineOptions,
        ...a
      ]
    };
  }, {
    code: e,
    lineOptions: []
  });
}
function c_e(n, e, t) {
  return n.reduce((o, r) => {
    var s;
    return ((s = r.postProcess) == null ? void 0 : s.call(r, {
      code: o,
      lang: t
    })) ?? o;
  }, e);
}
var $o = { exports: {} };
(function(n, e) {
  (function(t, o) {
    n.exports = o();
  })(fo, () => {
    return t = { 770: function(r, s, a) {
      var c = this && this.__importDefault || function(S) {
        return S && S.__esModule ? S : { default: S };
      };
      Object.defineProperty(s, "__esModule", { value: !0 }), s.setDefaultDebugCall = s.createOnigScanner = s.createOnigString = s.loadWASM = s.OnigScanner = s.OnigString = void 0;
      const l = c(a(418));
      let i = null, p = !1;
      class h {
        static _utf8ByteLength(b) {
          let k = 0;
          for (let w = 0, C = b.length; w < C; w++) {
            const y = b.charCodeAt(w);
            let u = y, g = !1;
            if (y >= 55296 && y <= 56319 && w + 1 < C) {
              const x = b.charCodeAt(w + 1);
              x >= 56320 && x <= 57343 && (u = 65536 + (y - 55296 << 10) | x - 56320, g = !0);
            }
            k += u <= 127 ? 1 : u <= 2047 ? 2 : u <= 65535 ? 3 : 4, g && w++;
          }
          return k;
        }
        constructor(b) {
          const k = b.length, w = h._utf8ByteLength(b), C = w !== k, y = C ? new Uint32Array(k + 1) : null;
          C && (y[k] = w);
          const u = C ? new Uint32Array(w + 1) : null;
          C && (u[w] = k);
          const g = new Uint8Array(w);
          let x = 0;
          for (let _ = 0; _ < k; _++) {
            const v = b.charCodeAt(_);
            let A = v, E = !1;
            if (v >= 55296 && v <= 56319 && _ + 1 < k) {
              const D = b.charCodeAt(_ + 1);
              D >= 56320 && D <= 57343 && (A = 65536 + (v - 55296 << 10) | D - 56320, E = !0);
            }
            C && (y[_] = x, E && (y[_ + 1] = x), A <= 127 ? u[x + 0] = _ : A <= 2047 ? (u[x + 0] = _, u[x + 1] = _) : A <= 65535 ? (u[x + 0] = _, u[x + 1] = _, u[x + 2] = _) : (u[x + 0] = _, u[x + 1] = _, u[x + 2] = _, u[x + 3] = _)), A <= 127 ? g[x++] = A : A <= 2047 ? (g[x++] = 192 | (1984 & A) >>> 6, g[x++] = 128 | (63 & A) >>> 0) : A <= 65535 ? (g[x++] = 224 | (61440 & A) >>> 12, g[x++] = 128 | (4032 & A) >>> 6, g[x++] = 128 | (63 & A) >>> 0) : (g[x++] = 240 | (1835008 & A) >>> 18, g[x++] = 128 | (258048 & A) >>> 12, g[x++] = 128 | (4032 & A) >>> 6, g[x++] = 128 | (63 & A) >>> 0), E && _++;
          }
          this.utf16Length = k, this.utf8Length = w, this.utf16Value = b, this.utf8Value = g, this.utf16OffsetToUtf8 = y, this.utf8OffsetToUtf16 = u;
        }
        createString(b) {
          const k = b._omalloc(this.utf8Length);
          return b.HEAPU8.set(this.utf8Value, k), k;
        }
      }
      class d {
        constructor(b) {
          if (this.id = ++d.LAST_ID, !i)
            throw new Error("Must invoke loadWASM first.");
          this._onigBinding = i, this.content = b;
          const k = new h(b);
          this.utf16Length = k.utf16Length, this.utf8Length = k.utf8Length, this.utf16OffsetToUtf8 = k.utf16OffsetToUtf8, this.utf8OffsetToUtf16 = k.utf8OffsetToUtf16, this.utf8Length < 1e4 && !d._sharedPtrInUse ? (d._sharedPtr || (d._sharedPtr = i._omalloc(1e4)), d._sharedPtrInUse = !0, i.HEAPU8.set(k.utf8Value, d._sharedPtr), this.ptr = d._sharedPtr) : this.ptr = k.createString(i);
        }
        convertUtf8OffsetToUtf16(b) {
          return this.utf8OffsetToUtf16 ? b < 0 ? 0 : b > this.utf8Length ? this.utf16Length : this.utf8OffsetToUtf16[b] : b;
        }
        convertUtf16OffsetToUtf8(b) {
          return this.utf16OffsetToUtf8 ? b < 0 ? 0 : b > this.utf16Length ? this.utf8Length : this.utf16OffsetToUtf8[b] : b;
        }
        dispose() {
          this.ptr === d._sharedPtr ? d._sharedPtrInUse = !1 : this._onigBinding._ofree(this.ptr);
        }
      }
      s.OnigString = d, d.LAST_ID = 0, d._sharedPtr = 0, d._sharedPtrInUse = !1;
      class f {
        constructor(b) {
          if (!i)
            throw new Error("Must invoke loadWASM first.");
          const k = [], w = [];
          for (let g = 0, x = b.length; g < x; g++) {
            const _ = new h(b[g]);
            k[g] = _.createString(i), w[g] = _.utf8Length;
          }
          const C = i._omalloc(4 * b.length);
          i.HEAPU32.set(k, C / 4);
          const y = i._omalloc(4 * b.length);
          i.HEAPU32.set(w, y / 4);
          const u = i._createOnigScanner(C, y, b.length);
          for (let g = 0, x = b.length; g < x; g++)
            i._ofree(k[g]);
          i._ofree(y), i._ofree(C), u === 0 && function(g) {
            throw new Error(g.UTF8ToString(g._getLastOnigError()));
          }(i), this._onigBinding = i, this._ptr = u;
        }
        dispose() {
          this._onigBinding._freeOnigScanner(this._ptr);
        }
        findNextMatchSync(b, k, w) {
          let C = p, y = 0;
          if (typeof w == "number" ? (8 & w && (C = !0), y = w) : typeof w == "boolean" && (C = w), typeof b == "string") {
            b = new d(b);
            const u = this._findNextMatchSync(b, k, C, y);
            return b.dispose(), u;
          }
          return this._findNextMatchSync(b, k, C, y);
        }
        _findNextMatchSync(b, k, w, C) {
          const y = this._onigBinding;
          let u;
          if (u = w ? y._findNextOnigScannerMatchDbg(this._ptr, b.id, b.ptr, b.utf8Length, b.convertUtf16OffsetToUtf8(k), C) : y._findNextOnigScannerMatch(this._ptr, b.id, b.ptr, b.utf8Length, b.convertUtf16OffsetToUtf8(k), C), u === 0)
            return null;
          const g = y.HEAPU32;
          let x = u / 4;
          const _ = g[x++], v = g[x++];
          let A = [];
          for (let E = 0; E < v; E++) {
            const D = b.convertUtf8OffsetToUtf16(g[x++]), T = b.convertUtf8OffsetToUtf16(g[x++]);
            A[E] = { start: D, end: T, length: T - D };
          }
          return { index: _, captureIndices: A };
        }
      }
      s.OnigScanner = f;
      let m = !1, L = null;
      s.loadWASM = function(S) {
        if (m)
          return L;
        let b, k, w, C;
        if (m = !0, function(y) {
          return typeof y.instantiator == "function";
        }(S))
          b = S.instantiator, k = S.print;
        else {
          let y;
          (function(u) {
            return u.data !== void 0;
          })(S) ? (y = S.data, k = S.print) : y = S, b = function(u) {
            return typeof Response < "u" && u instanceof Response;
          }(y) ? typeof WebAssembly.instantiateStreaming == "function" ? function(u) {
            return (g) => WebAssembly.instantiateStreaming(u, g);
          }(y) : function(u) {
            return async (g) => {
              const x = await u.arrayBuffer();
              return WebAssembly.instantiate(x, g);
            };
          }(y) : function(u) {
            return (g) => WebAssembly.instantiate(u, g);
          }(y);
        }
        return L = new Promise((y, u) => {
          w = y, C = u;
        }), function(y, u, g, x) {
          (0, l.default)({ print: u, instantiateWasm: (_, v) => {
            if (typeof performance > "u") {
              const A = () => Date.now();
              _.env.emscripten_get_now = A, _.wasi_snapshot_preview1.emscripten_get_now = A;
            }
            return y(_).then((A) => v(A.instance), x), {};
          } }).then((_) => {
            i = _, g();
          });
        }(b, k, w, C), L;
      }, s.createOnigString = function(S) {
        return new d(S);
      }, s.createOnigScanner = function(S) {
        return new f(S);
      }, s.setDefaultDebugCall = function(S) {
        p = S;
      };
    }, 418: (r) => {
      var s = (typeof document < "u" && document.currentScript && document.currentScript.src, function(a) {
        var c, l, i = (a = a || {}) !== void 0 ? a : {};
        i.ready = new Promise(function(N, P) {
          c = N, l = P;
        });
        var p, h = Object.assign({}, i), d = !1, f = "";
        function m(N) {
          return i.locateFile ? i.locateFile(N, f) : f + N;
        }
        p = function(N) {
          let P;
          return typeof readbuffer == "function" ? new Uint8Array(readbuffer(N)) : (P = read(N, "binary"), C(typeof P == "object"), P);
        }, typeof scriptArgs < "u" && scriptArgs, typeof onig_print < "u" && (typeof console > "u" && (console = {}), console.log = onig_print, console.warn = console.error = typeof printErr < "u" ? printErr : onig_print);
        var L, S, b = i.print || console.log.bind(console), k = i.printErr || console.warn.bind(console);
        Object.assign(i, h), h = null, i.arguments && i.arguments, i.thisProgram && i.thisProgram, i.quit && i.quit, i.wasmBinary && (L = i.wasmBinary), i.noExitRuntime, typeof WebAssembly != "object" && $("no native wasm support detected");
        var w = !1;
        function C(N, P) {
          N || $(P);
        }
        var y, u, g, x = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0;
        function _(N, P, X) {
          for (var se = P + X, W = P; N[W] && !(W >= se); )
            ++W;
          if (W - P > 16 && N.buffer && x)
            return x.decode(N.subarray(P, W));
          for (var H = ""; P < W; ) {
            var K = N[P++];
            if (128 & K) {
              var Ne = 63 & N[P++];
              if ((224 & K) != 192) {
                var Pe = 63 & N[P++];
                if ((K = (240 & K) == 224 ? (15 & K) << 12 | Ne << 6 | Pe : (7 & K) << 18 | Ne << 12 | Pe << 6 | 63 & N[P++]) < 65536)
                  H += String.fromCharCode(K);
                else {
                  var ut = K - 65536;
                  H += String.fromCharCode(55296 | ut >> 10, 56320 | 1023 & ut);
                }
              } else
                H += String.fromCharCode((31 & K) << 6 | Ne);
            } else
              H += String.fromCharCode(K);
          }
          return H;
        }
        function v(N, P) {
          return N ? _(u, N, P) : "";
        }
        function A(N) {
          y = N, i.HEAP8 = new Int8Array(N), i.HEAP16 = new Int16Array(N), i.HEAP32 = new Int32Array(N), i.HEAPU8 = u = new Uint8Array(N), i.HEAPU16 = new Uint16Array(N), i.HEAPU32 = g = new Uint32Array(N), i.HEAPF32 = new Float32Array(N), i.HEAPF64 = new Float64Array(N);
        }
        i.INITIAL_MEMORY;
        var E = [], D = [], T = [];
        function q() {
          if (i.preRun)
            for (typeof i.preRun == "function" && (i.preRun = [i.preRun]); i.preRun.length; )
              M(i.preRun.shift());
          de(E);
        }
        function R() {
          de(D);
        }
        function F() {
          if (i.postRun)
            for (typeof i.postRun == "function" && (i.postRun = [i.postRun]); i.postRun.length; )
              Z(i.postRun.shift());
          de(T);
        }
        function M(N) {
          E.unshift(N);
        }
        function O(N) {
          D.unshift(N);
        }
        function Z(N) {
          T.unshift(N);
        }
        var J = 0, V = null;
        function G(N) {
          J++, i.monitorRunDependencies && i.monitorRunDependencies(J);
        }
        function z(N) {
          if (J--, i.monitorRunDependencies && i.monitorRunDependencies(J), J == 0 && V) {
            var P = V;
            V = null, P();
          }
        }
        function $(N) {
          i.onAbort && i.onAbort(N), k(N = "Aborted(" + N + ")"), w = !0, N += ". Build with -sASSERTIONS for more info.";
          var P = new WebAssembly.RuntimeError(N);
          throw l(P), P;
        }
        var Y, j, Q = "data:application/octet-stream;base64,";
        function U(N) {
          return N.startsWith(Q);
        }
        function oe(N) {
          try {
            if (N == Y && L)
              return new Uint8Array(L);
            if (p)
              return p(N);
            throw "both async and sync fetching of the wasm failed";
          } catch (P) {
            $(P);
          }
        }
        function we() {
          return L || !d || typeof fetch != "function" ? Promise.resolve().then(function() {
            return oe(Y);
          }) : fetch(Y, { credentials: "same-origin" }).then(function(N) {
            if (!N.ok)
              throw "failed to load wasm binary file at '" + Y + "'";
            return N.arrayBuffer();
          }).catch(function() {
            return oe(Y);
          });
        }
        function He() {
          var N = { env: Se, wasi_snapshot_preview1: Se };
          function P(W, H) {
            var K = W.exports;
            i.asm = K, A((S = i.asm.memory).buffer), i.asm.__indirect_function_table, O(i.asm.__wasm_call_ctors), z();
          }
          function X(W) {
            P(W.instance);
          }
          function se(W) {
            return we().then(function(H) {
              return WebAssembly.instantiate(H, N);
            }).then(function(H) {
              return H;
            }).then(W, function(H) {
              k("failed to asynchronously prepare wasm: " + H), $(H);
            });
          }
          if (G(), i.instantiateWasm)
            try {
              return i.instantiateWasm(N, P);
            } catch (W) {
              k("Module.instantiateWasm callback failed with error: " + W), l(W);
            }
          return (L || typeof WebAssembly.instantiateStreaming != "function" || U(Y) || typeof fetch != "function" ? se(X) : fetch(Y, { credentials: "same-origin" }).then(function(W) {
            return WebAssembly.instantiateStreaming(W, N).then(X, function(H) {
              return k("wasm streaming compile failed: " + H), k("falling back to ArrayBuffer instantiation"), se(X);
            });
          })).catch(l), {};
        }
        function de(N) {
          for (; N.length > 0; )
            N.shift()(i);
        }
        function me(N, P, X) {
          u.copyWithin(N, P, P + X);
        }
        function je(N) {
          try {
            return S.grow(N - y.byteLength + 65535 >>> 16), A(S.buffer), 1;
          } catch {
          }
        }
        function ve(N) {
          var P, X = u.length, se = 2147483648;
          if ((N >>>= 0) > se)
            return !1;
          for (var W = 1; W <= 4; W *= 2) {
            var H = X * (1 + 0.2 / W);
            if (H = Math.min(H, N + 100663296), je(Math.min(se, (P = Math.max(N, H)) + (65536 - P % 65536) % 65536)))
              return !0;
          }
          return !1;
        }
        U(Y = "onig.wasm") || (Y = m(Y)), j = typeof dateNow < "u" ? dateNow : () => performance.now();
        var xe = [null, [], []];
        function Ae(N, P) {
          var X = xe[N];
          P === 0 || P === 10 ? ((N === 1 ? b : k)(_(X, 0)), X.length = 0) : X.push(P);
        }
        function ge(N, P, X, se) {
          for (var W = 0, H = 0; H < X; H++) {
            var K = g[P >> 2], Ne = g[P + 4 >> 2];
            P += 8;
            for (var Pe = 0; Pe < Ne; Pe++)
              Ae(N, u[K + Pe]);
            W += Ne;
          }
          return g[se >> 2] = W, 0;
        }
        var ee, Se = { emscripten_get_now: j, emscripten_memcpy_big: me, emscripten_resize_heap: ve, fd_write: ge };
        function Re(N) {
          function P() {
            ee || (ee = !0, i.calledRun = !0, w || (R(), c(i), i.onRuntimeInitialized && i.onRuntimeInitialized(), F()));
          }
          J > 0 || (q(), J > 0 || (i.setStatus ? (i.setStatus("Running..."), setTimeout(function() {
            setTimeout(function() {
              i.setStatus("");
            }, 1), P();
          }, 1)) : P()));
        }
        if (He(), i.___wasm_call_ctors = function() {
          return (i.___wasm_call_ctors = i.asm.__wasm_call_ctors).apply(null, arguments);
        }, i.___errno_location = function() {
          return (i.___errno_location = i.asm.__errno_location).apply(null, arguments);
        }, i._omalloc = function() {
          return (i._omalloc = i.asm.omalloc).apply(null, arguments);
        }, i._ofree = function() {
          return (i._ofree = i.asm.ofree).apply(null, arguments);
        }, i._getLastOnigError = function() {
          return (i._getLastOnigError = i.asm.getLastOnigError).apply(null, arguments);
        }, i._createOnigScanner = function() {
          return (i._createOnigScanner = i.asm.createOnigScanner).apply(null, arguments);
        }, i._freeOnigScanner = function() {
          return (i._freeOnigScanner = i.asm.freeOnigScanner).apply(null, arguments);
        }, i._findNextOnigScannerMatch = function() {
          return (i._findNextOnigScannerMatch = i.asm.findNextOnigScannerMatch).apply(null, arguments);
        }, i._findNextOnigScannerMatchDbg = function() {
          return (i._findNextOnigScannerMatchDbg = i.asm.findNextOnigScannerMatchDbg).apply(null, arguments);
        }, i.stackSave = function() {
          return (i.stackSave = i.asm.stackSave).apply(null, arguments);
        }, i.stackRestore = function() {
          return (i.stackRestore = i.asm.stackRestore).apply(null, arguments);
        }, i.stackAlloc = function() {
          return (i.stackAlloc = i.asm.stackAlloc).apply(null, arguments);
        }, i.dynCall_jiji = function() {
          return (i.dynCall_jiji = i.asm.dynCall_jiji).apply(null, arguments);
        }, i.UTF8ToString = v, V = function N() {
          ee || Re(), ee || (V = N);
        }, i.preInit)
          for (typeof i.preInit == "function" && (i.preInit = [i.preInit]); i.preInit.length > 0; )
            i.preInit.pop()();
        return Re(), a.ready;
      });
      r.exports = s;
    } }, o = {}, function r(s) {
      var a = o[s];
      if (a !== void 0)
        return a.exports;
      var c = o[s] = { exports: {} };
      return t[s].call(c.exports, c, c.exports, r), c.exports;
    }(770);
    var t, o;
  });
})($o);
var on = $o.exports, Go = { exports: {} };
(function(n, e) {
  (function(t, o) {
    n.exports = o();
  })(fo, function() {
    return (() => {
      var t = { 350: (r, s) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.UseOnigurumaFindOptions = s.DebugFlags = void 0, s.DebugFlags = { InDebugMode: typeof process < "u" && !!process.env.VSCODE_TEXTMATE_DEBUG }, s.UseOnigurumaFindOptions = !1;
      }, 36: (r, s) => {
        var a;
        Object.defineProperty(s, "__esModule", { value: !0 }), s.toOptionalTokenType = s.EncodedTokenAttributes = void 0, (a = s.EncodedTokenAttributes || (s.EncodedTokenAttributes = {})).toBinaryStr = function(c) {
          let l = c.toString(2);
          for (; l.length < 32; )
            l = "0" + l;
          return l;
        }, a.print = function(c) {
          const l = a.getLanguageId(c), i = a.getTokenType(c), p = a.getFontStyle(c), h = a.getForeground(c), d = a.getBackground(c);
          console.log({ languageId: l, tokenType: i, fontStyle: p, foreground: h, background: d });
        }, a.getLanguageId = function(c) {
          return (255 & c) >>> 0;
        }, a.getTokenType = function(c) {
          return (768 & c) >>> 8;
        }, a.containsBalancedBrackets = function(c) {
          return (1024 & c) != 0;
        }, a.getFontStyle = function(c) {
          return (30720 & c) >>> 11;
        }, a.getForeground = function(c) {
          return (16744448 & c) >>> 15;
        }, a.getBackground = function(c) {
          return (4278190080 & c) >>> 24;
        }, a.set = function(c, l, i, p, h, d, f) {
          let m = a.getLanguageId(c), L = a.getTokenType(c), S = a.containsBalancedBrackets(c) ? 1 : 0, b = a.getFontStyle(c), k = a.getForeground(c), w = a.getBackground(c);
          return l !== 0 && (m = l), i !== 8 && (L = i), p !== null && (S = p ? 1 : 0), h !== -1 && (b = h), d !== 0 && (k = d), f !== 0 && (w = f), (m << 0 | L << 8 | S << 10 | b << 11 | k << 15 | w << 24) >>> 0;
        }, s.toOptionalTokenType = function(c) {
          return c;
        };
      }, 996: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.BasicScopeAttributesProvider = s.BasicScopeAttributes = void 0;
        const c = a(878);
        class l {
          constructor(d, f) {
            this.languageId = d, this.tokenType = f;
          }
        }
        s.BasicScopeAttributes = l;
        class i {
          constructor(d, f) {
            this._getBasicScopeAttributes = new c.CachedFn((m) => {
              const L = this._scopeToLanguage(m), S = this._toStandardTokenType(m);
              return new l(L, S);
            }), this._defaultAttributes = new l(d, 8), this._embeddedLanguagesMatcher = new p(Object.entries(f || {}));
          }
          getDefaultAttributes() {
            return this._defaultAttributes;
          }
          getBasicScopeAttributes(d) {
            return d === null ? i._NULL_SCOPE_METADATA : this._getBasicScopeAttributes.get(d);
          }
          _scopeToLanguage(d) {
            return this._embeddedLanguagesMatcher.match(d) || 0;
          }
          _toStandardTokenType(d) {
            const f = d.match(i.STANDARD_TOKEN_TYPE_REGEXP);
            if (!f)
              return 8;
            switch (f[1]) {
              case "comment":
                return 1;
              case "string":
                return 2;
              case "regex":
                return 3;
              case "meta.embedded":
                return 0;
            }
            throw new Error("Unexpected match for standard token type!");
          }
        }
        s.BasicScopeAttributesProvider = i, i._NULL_SCOPE_METADATA = new l(0, 0), i.STANDARD_TOKEN_TYPE_REGEXP = /\b(comment|string|regex|meta\.embedded)\b/;
        class p {
          constructor(d) {
            if (d.length === 0)
              this.values = null, this.scopesRegExp = null;
            else {
              this.values = new Map(d);
              const f = d.map(([m, L]) => c.escapeRegExpCharacters(m));
              f.sort(), f.reverse(), this.scopesRegExp = new RegExp(`^((${f.join(")|(")}))($|\\.)`, "");
            }
          }
          match(d) {
            if (!this.scopesRegExp)
              return;
            const f = d.match(this.scopesRegExp);
            return f ? this.values.get(f[1]) : void 0;
          }
        }
      }, 947: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.LineTokens = s.BalancedBracketSelectors = s.StateStack = s.AttributedScopeStack = s.Grammar = s.createGrammar = void 0;
        const c = a(350), l = a(36), i = a(736), p = a(44), h = a(792), d = a(583), f = a(878), m = a(996), L = a(47);
        function S(x, _, v, A, E) {
          const D = i.createMatchers(_, b), T = h.RuleFactory.getCompiledRuleId(v, A, E.repository);
          for (const q of D)
            x.push({ debugSelector: _, matcher: q.matcher, ruleId: T, grammar: E, priority: q.priority });
        }
        function b(x, _) {
          if (_.length < x.length)
            return !1;
          let v = 0;
          return x.every((A) => {
            for (let E = v; E < _.length; E++)
              if (k(_[E], A))
                return v = E + 1, !0;
            return !1;
          });
        }
        function k(x, _) {
          if (!x)
            return !1;
          if (x === _)
            return !0;
          const v = _.length;
          return x.length > v && x.substr(0, v) === _ && x[v] === ".";
        }
        s.createGrammar = function(x, _, v, A, E, D, T, q) {
          return new w(x, _, v, A, E, D, T, q);
        };
        class w {
          constructor(_, v, A, E, D, T, q, R) {
            if (this._rootScopeName = _, this.balancedBracketSelectors = T, this._onigLib = R, this._basicScopeAttributesProvider = new m.BasicScopeAttributesProvider(A, E), this._rootId = -1, this._lastRuleId = 0, this._ruleId2desc = [null], this._includedGrammars = {}, this._grammarRepository = q, this._grammar = C(v, null), this._injections = null, this._tokenTypeMatchers = [], D)
              for (const F of Object.keys(D)) {
                const M = i.createMatchers(F, b);
                for (const O of M)
                  this._tokenTypeMatchers.push({ matcher: O.matcher, type: D[F] });
              }
          }
          get themeProvider() {
            return this._grammarRepository;
          }
          dispose() {
            for (const _ of this._ruleId2desc)
              _ && _.dispose();
          }
          createOnigScanner(_) {
            return this._onigLib.createOnigScanner(_);
          }
          createOnigString(_) {
            return this._onigLib.createOnigString(_);
          }
          getMetadataForScope(_) {
            return this._basicScopeAttributesProvider.getBasicScopeAttributes(_);
          }
          _collectInjections() {
            const _ = [], v = this._rootScopeName, A = ((E) => E === this._rootScopeName ? this._grammar : this.getExternalGrammar(E))(v);
            if (A) {
              const E = A.injections;
              if (E)
                for (let T in E)
                  S(_, T, E[T], this, A);
              const D = this._grammarRepository.injections(v);
              D && D.forEach((T) => {
                const q = this.getExternalGrammar(T);
                if (q) {
                  const R = q.injectionSelector;
                  R && S(_, R, q, this, q);
                }
              });
            }
            return _.sort((E, D) => E.priority - D.priority), _;
          }
          getInjections() {
            if (this._injections === null && (this._injections = this._collectInjections(), c.DebugFlags.InDebugMode && this._injections.length > 0)) {
              console.log(`Grammar ${this._rootScopeName} contains the following injections:`);
              for (const _ of this._injections)
                console.log(`  - ${_.debugSelector}`);
            }
            return this._injections;
          }
          registerRule(_) {
            const v = ++this._lastRuleId, A = _(h.ruleIdFromNumber(v));
            return this._ruleId2desc[v] = A, A;
          }
          getRule(_) {
            return this._ruleId2desc[h.ruleIdToNumber(_)];
          }
          getExternalGrammar(_, v) {
            if (this._includedGrammars[_])
              return this._includedGrammars[_];
            if (this._grammarRepository) {
              const A = this._grammarRepository.lookup(_);
              if (A)
                return this._includedGrammars[_] = C(A, v && v.$base), this._includedGrammars[_];
            }
          }
          tokenizeLine(_, v, A = 0) {
            const E = this._tokenize(_, v, !1, A);
            return { tokens: E.lineTokens.getResult(E.ruleStack, E.lineLength), ruleStack: E.ruleStack, stoppedEarly: E.stoppedEarly };
          }
          tokenizeLine2(_, v, A = 0) {
            const E = this._tokenize(_, v, !0, A);
            return { tokens: E.lineTokens.getBinaryResult(E.ruleStack, E.lineLength), ruleStack: E.ruleStack, stoppedEarly: E.stoppedEarly };
          }
          _tokenize(_, v, A, E) {
            let D;
            if (this._rootId === -1 && (this._rootId = h.RuleFactory.getCompiledRuleId(this._grammar.repository.$self, this, this._grammar.repository)), v && v !== u.NULL)
              D = !1, v.reset();
            else {
              D = !0;
              const M = this._basicScopeAttributesProvider.getDefaultAttributes(), O = this.themeProvider.getDefaults(), Z = l.EncodedTokenAttributes.set(0, M.languageId, M.tokenType, null, O.fontStyle, O.foregroundId, O.backgroundId), J = this.getRule(this._rootId).getName(null, null);
              let V;
              V = J ? y.createRootAndLookUpScopeName(J, Z, this) : y.createRoot("unknown", Z), v = new u(null, this._rootId, -1, -1, !1, null, V, V);
            }
            _ += `
`;
            const T = this.createOnigString(_), q = T.content.length, R = new g(A, _, this._tokenTypeMatchers, this.balancedBracketSelectors), F = L._tokenizeString(this, T, D, 0, v, R, !0, E);
            return p.disposeOnigString(T), { lineLength: q, lineTokens: R, ruleStack: F.stack, stoppedEarly: F.stoppedEarly };
          }
        }
        function C(x, _) {
          return (x = f.clone(x)).repository = x.repository || {}, x.repository.$self = { $vscodeTextmateLocation: x.$vscodeTextmateLocation, patterns: x.patterns, name: x.scopeName }, x.repository.$base = _ || x.repository.$self, x;
        }
        s.Grammar = w;
        class y {
          constructor(_, v, A) {
            this.parent = _, this.scopePath = v, this.tokenAttributes = A;
          }
          static createRoot(_, v) {
            return new y(null, new d.ScopeStack(null, _), v);
          }
          static createRootAndLookUpScopeName(_, v, A) {
            const E = A.getMetadataForScope(_), D = new d.ScopeStack(null, _), T = A.themeProvider.themeMatch(D), q = y.mergeAttributes(v, E, T);
            return new y(null, D, q);
          }
          get scopeName() {
            return this.scopePath.scopeName;
          }
          equals(_) {
            return y._equals(this, _);
          }
          static _equals(_, v) {
            for (; ; ) {
              if (_ === v || !_ && !v)
                return !0;
              if (!_ || !v || _.scopeName !== v.scopeName || _.tokenAttributes !== v.tokenAttributes)
                return !1;
              _ = _.parent, v = v.parent;
            }
          }
          static mergeAttributes(_, v, A) {
            let E = -1, D = 0, T = 0;
            return A !== null && (E = A.fontStyle, D = A.foregroundId, T = A.backgroundId), l.EncodedTokenAttributes.set(_, v.languageId, v.tokenType, null, E, D, T);
          }
          pushAttributed(_, v) {
            if (_ === null)
              return this;
            if (_.indexOf(" ") === -1)
              return y._pushAttributed(this, _, v);
            const A = _.split(/ /g);
            let E = this;
            for (const D of A)
              E = y._pushAttributed(E, D, v);
            return E;
          }
          static _pushAttributed(_, v, A) {
            const E = A.getMetadataForScope(v), D = _.scopePath.push(v), T = A.themeProvider.themeMatch(D), q = y.mergeAttributes(_.tokenAttributes, E, T);
            return new y(_, D, q);
          }
          getScopeNames() {
            return this.scopePath.getSegments();
          }
        }
        s.AttributedScopeStack = y;
        class u {
          constructor(_, v, A, E, D, T, q, R) {
            this.parent = _, this.ruleId = v, this.beginRuleCapturedEOL = D, this.endRule = T, this.nameScopesList = q, this.contentNameScopesList = R, this._stackElementBrand = void 0, this.depth = this.parent ? this.parent.depth + 1 : 1, this._enterPos = A, this._anchorPos = E;
          }
          equals(_) {
            return _ !== null && u._equals(this, _);
          }
          static _equals(_, v) {
            return _ === v || !!this._structuralEquals(_, v) && _.contentNameScopesList.equals(v.contentNameScopesList);
          }
          static _structuralEquals(_, v) {
            for (; ; ) {
              if (_ === v || !_ && !v)
                return !0;
              if (!_ || !v || _.depth !== v.depth || _.ruleId !== v.ruleId || _.endRule !== v.endRule)
                return !1;
              _ = _.parent, v = v.parent;
            }
          }
          clone() {
            return this;
          }
          static _reset(_) {
            for (; _; )
              _._enterPos = -1, _._anchorPos = -1, _ = _.parent;
          }
          reset() {
            u._reset(this);
          }
          pop() {
            return this.parent;
          }
          safePop() {
            return this.parent ? this.parent : this;
          }
          push(_, v, A, E, D, T, q) {
            return new u(this, _, v, A, E, D, T, q);
          }
          getEnterPos() {
            return this._enterPos;
          }
          getAnchorPos() {
            return this._anchorPos;
          }
          getRule(_) {
            return _.getRule(this.ruleId);
          }
          toString() {
            const _ = [];
            return this._writeString(_, 0), "[" + _.join(",") + "]";
          }
          _writeString(_, v) {
            return this.parent && (v = this.parent._writeString(_, v)), _[v++] = `(${this.ruleId}, TODO-${this.nameScopesList}, TODO-${this.contentNameScopesList})`, v;
          }
          withContentNameScopesList(_) {
            return this.contentNameScopesList === _ ? this : this.parent.push(this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, this.endRule, this.nameScopesList, _);
          }
          withEndRule(_) {
            return this.endRule === _ ? this : new u(this.parent, this.ruleId, this._enterPos, this._anchorPos, this.beginRuleCapturedEOL, _, this.nameScopesList, this.contentNameScopesList);
          }
          hasSameRuleAs(_) {
            let v = this;
            for (; v && v._enterPos === _._enterPos; ) {
              if (v.ruleId === _.ruleId)
                return !0;
              v = v.parent;
            }
            return !1;
          }
        }
        s.StateStack = u, u.NULL = new u(null, 0, 0, 0, !1, null, null, null), s.BalancedBracketSelectors = class {
          constructor(x, _) {
            this.allowAny = !1, this.balancedBracketScopes = x.flatMap((v) => v === "*" ? (this.allowAny = !0, []) : i.createMatchers(v, b).map((A) => A.matcher)), this.unbalancedBracketScopes = _.flatMap((v) => i.createMatchers(v, b).map((A) => A.matcher));
          }
          get matchesAlways() {
            return this.allowAny && this.unbalancedBracketScopes.length === 0;
          }
          get matchesNever() {
            return this.balancedBracketScopes.length === 0 && !this.allowAny;
          }
          match(x) {
            for (const _ of this.unbalancedBracketScopes)
              if (_(x))
                return !1;
            for (const _ of this.balancedBracketScopes)
              if (_(x))
                return !0;
            return this.allowAny;
          }
        };
        class g {
          constructor(_, v, A, E) {
            this.balancedBracketSelectors = E, this._emitBinaryTokens = _, this._tokenTypeOverrides = A, c.DebugFlags.InDebugMode ? this._lineText = v : this._lineText = null, this._tokens = [], this._binaryTokens = [], this._lastTokenEndIndex = 0;
          }
          produce(_, v) {
            this.produceFromScopes(_.contentNameScopesList, v);
          }
          produceFromScopes(_, v) {
            var E;
            if (this._lastTokenEndIndex >= v)
              return;
            if (this._emitBinaryTokens) {
              let D = _.tokenAttributes, T = !1;
              if ((E = this.balancedBracketSelectors) != null && E.matchesAlways && (T = !0), this._tokenTypeOverrides.length > 0 || this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever) {
                const q = _.getScopeNames();
                for (const R of this._tokenTypeOverrides)
                  R.matcher(q) && (D = l.EncodedTokenAttributes.set(D, 0, l.toOptionalTokenType(R.type), null, -1, 0, 0));
                this.balancedBracketSelectors && (T = this.balancedBracketSelectors.match(q));
              }
              if (T && (D = l.EncodedTokenAttributes.set(D, 0, 8, T, -1, 0, 0)), this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === D)
                return void (this._lastTokenEndIndex = v);
              if (c.DebugFlags.InDebugMode) {
                const q = _.getScopeNames();
                console.log("  token: |" + this._lineText.substring(this._lastTokenEndIndex, v).replace(/\n$/, "\\n") + "|");
                for (let R = 0; R < q.length; R++)
                  console.log("      * " + q[R]);
              }
              return this._binaryTokens.push(this._lastTokenEndIndex), this._binaryTokens.push(D), void (this._lastTokenEndIndex = v);
            }
            const A = _.getScopeNames();
            if (c.DebugFlags.InDebugMode) {
              console.log("  token: |" + this._lineText.substring(this._lastTokenEndIndex, v).replace(/\n$/, "\\n") + "|");
              for (let D = 0; D < A.length; D++)
                console.log("      * " + A[D]);
            }
            this._tokens.push({ startIndex: this._lastTokenEndIndex, endIndex: v, scopes: A }), this._lastTokenEndIndex = v;
          }
          getResult(_, v) {
            return this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === v - 1 && this._tokens.pop(), this._tokens.length === 0 && (this._lastTokenEndIndex = -1, this.produce(_, v), this._tokens[this._tokens.length - 1].startIndex = 0), this._tokens;
          }
          getBinaryResult(_, v) {
            this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === v - 1 && (this._binaryTokens.pop(), this._binaryTokens.pop()), this._binaryTokens.length === 0 && (this._lastTokenEndIndex = -1, this.produce(_, v), this._binaryTokens[this._binaryTokens.length - 2] = 0);
            const A = new Uint32Array(this._binaryTokens.length);
            for (let E = 0, D = this._binaryTokens.length; E < D; E++)
              A[E] = this._binaryTokens[E];
            return A;
          }
        }
        s.LineTokens = g;
      }, 965: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.parseInclude = s.TopLevelRepositoryReference = s.TopLevelReference = s.RelativeReference = s.SelfReference = s.BaseReference = s.ScopeDependencyProcessor = s.ExternalReferenceCollector = s.TopLevelRepositoryRuleReference = s.TopLevelRuleReference = void 0;
        const c = a(878);
        class l {
          constructor(u) {
            this.scopeName = u;
          }
          toKey() {
            return this.scopeName;
          }
        }
        s.TopLevelRuleReference = l;
        class i {
          constructor(u, g) {
            this.scopeName = u, this.ruleName = g;
          }
          toKey() {
            return `${this.scopeName}#${this.ruleName}`;
          }
        }
        s.TopLevelRepositoryRuleReference = i;
        class p {
          constructor() {
            this._references = [], this._seenReferenceKeys = /* @__PURE__ */ new Set(), this.visitedRule = /* @__PURE__ */ new Set();
          }
          get references() {
            return this._references;
          }
          add(u) {
            const g = u.toKey();
            this._seenReferenceKeys.has(g) || (this._seenReferenceKeys.add(g), this._references.push(u));
          }
        }
        function h(y, u, g, x) {
          const _ = g.lookup(y.scopeName);
          if (!_) {
            if (y.scopeName === u)
              throw new Error(`No grammar provided for <${u}>`);
            return;
          }
          const v = g.lookup(u);
          y instanceof l ? f({ baseGrammar: v, selfGrammar: _ }, x) : d(y.ruleName, { baseGrammar: v, selfGrammar: _, repository: _.repository }, x);
          const A = g.injections(y.scopeName);
          if (A)
            for (const E of A)
              x.add(new l(E));
        }
        function d(y, u, g) {
          u.repository && u.repository[y] && m([u.repository[y]], u, g);
        }
        function f(y, u) {
          y.selfGrammar.patterns && Array.isArray(y.selfGrammar.patterns) && m(y.selfGrammar.patterns, { ...y, repository: y.selfGrammar.repository }, u), y.selfGrammar.injections && m(Object.values(y.selfGrammar.injections), { ...y, repository: y.selfGrammar.repository }, u);
        }
        function m(y, u, g) {
          for (const x of y) {
            if (g.visitedRule.has(x))
              continue;
            g.visitedRule.add(x);
            const _ = x.repository ? c.mergeObjects({}, u.repository, x.repository) : u.repository;
            Array.isArray(x.patterns) && m(x.patterns, { ...u, repository: _ }, g);
            const v = x.include;
            if (!v)
              continue;
            const A = C(v);
            switch (A.kind) {
              case 0:
                f({ ...u, selfGrammar: u.baseGrammar }, g);
                break;
              case 1:
                f(u, g);
                break;
              case 2:
                d(A.ruleName, { ...u, repository: _ }, g);
                break;
              case 3:
              case 4:
                const E = A.scopeName === u.selfGrammar.scopeName ? u.selfGrammar : A.scopeName === u.baseGrammar.scopeName ? u.baseGrammar : void 0;
                if (E) {
                  const D = { baseGrammar: u.baseGrammar, selfGrammar: E, repository: _ };
                  A.kind === 4 ? d(A.ruleName, D, g) : f(D, g);
                } else
                  A.kind === 4 ? g.add(new i(A.scopeName, A.ruleName)) : g.add(new l(A.scopeName));
            }
          }
        }
        s.ExternalReferenceCollector = p, s.ScopeDependencyProcessor = class {
          constructor(y, u) {
            this.repo = y, this.initialScopeName = u, this.seenFullScopeRequests = /* @__PURE__ */ new Set(), this.seenPartialScopeRequests = /* @__PURE__ */ new Set(), this.seenFullScopeRequests.add(this.initialScopeName), this.Q = [new l(this.initialScopeName)];
          }
          processQueue() {
            const y = this.Q;
            this.Q = [];
            const u = new p();
            for (const g of y)
              h(g, this.initialScopeName, this.repo, u);
            for (const g of u.references)
              if (g instanceof l) {
                if (this.seenFullScopeRequests.has(g.scopeName))
                  continue;
                this.seenFullScopeRequests.add(g.scopeName), this.Q.push(g);
              } else {
                if (this.seenFullScopeRequests.has(g.scopeName) || this.seenPartialScopeRequests.has(g.toKey()))
                  continue;
                this.seenPartialScopeRequests.add(g.toKey()), this.Q.push(g);
              }
          }
        };
        class L {
          constructor() {
            this.kind = 0;
          }
        }
        s.BaseReference = L;
        class S {
          constructor() {
            this.kind = 1;
          }
        }
        s.SelfReference = S;
        class b {
          constructor(u) {
            this.ruleName = u, this.kind = 2;
          }
        }
        s.RelativeReference = b;
        class k {
          constructor(u) {
            this.scopeName = u, this.kind = 3;
          }
        }
        s.TopLevelReference = k;
        class w {
          constructor(u, g) {
            this.scopeName = u, this.ruleName = g, this.kind = 4;
          }
        }
        function C(y) {
          if (y === "$base")
            return new L();
          if (y === "$self")
            return new S();
          const u = y.indexOf("#");
          if (u === -1)
            return new k(y);
          if (u === 0)
            return new b(y.substring(1));
          {
            const g = y.substring(0, u), x = y.substring(u + 1);
            return new w(g, x);
          }
        }
        s.TopLevelRepositoryReference = w, s.parseInclude = C;
      }, 391: function(r, s, a) {
        var c = this && this.__createBinding || (Object.create ? function(i, p, h, d) {
          d === void 0 && (d = h), Object.defineProperty(i, d, { enumerable: !0, get: function() {
            return p[h];
          } });
        } : function(i, p, h, d) {
          d === void 0 && (d = h), i[d] = p[h];
        }), l = this && this.__exportStar || function(i, p) {
          for (var h in i)
            h === "default" || Object.prototype.hasOwnProperty.call(p, h) || c(p, i, h);
        };
        Object.defineProperty(s, "__esModule", { value: !0 }), l(a(947), s);
      }, 47: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.LocalStackElement = s._tokenizeString = void 0;
        const c = a(350), l = a(44), i = a(792), p = a(878);
        class h {
          constructor(w, C) {
            this.stack = w, this.stoppedEarly = C;
          }
        }
        function d(k, w, C, y, u, g, x, _) {
          const v = w.content.length;
          let A = !1, E = -1;
          if (x) {
            const q = function(R, F, M, O, Z, J) {
              let V = Z.beginRuleCapturedEOL ? 0 : -1;
              const G = [];
              for (let z = Z; z; z = z.pop()) {
                const $ = z.getRule(R);
                $ instanceof i.BeginWhileRule && G.push({ rule: $, stack: z });
              }
              for (let z = G.pop(); z; z = G.pop()) {
                const { ruleScanner: $, findOptions: Y } = m(z.rule, R, z.stack.endRule, M, O === V), j = $.findNextMatchSync(F, O, Y);
                if (c.DebugFlags.InDebugMode && (console.log("  scanning for while rule"), console.log($.toString())), !j) {
                  c.DebugFlags.InDebugMode && console.log("  popping " + z.rule.debugName + " - " + z.rule.debugWhileRegExp), Z = z.stack.pop();
                  break;
                }
                if (j.ruleId !== i.whileRuleId) {
                  Z = z.stack.pop();
                  break;
                }
                j.captureIndices && j.captureIndices.length && (J.produce(z.stack, j.captureIndices[0].start), S(R, F, M, z.stack, J, z.rule.whileCaptures, j.captureIndices), J.produce(z.stack, j.captureIndices[0].end), V = j.captureIndices[0].end, j.captureIndices[0].end > O && (O = j.captureIndices[0].end, M = !1));
              }
              return { stack: Z, linePos: O, anchorPosition: V, isFirstLine: M };
            }(k, w, C, y, u, g);
            u = q.stack, y = q.linePos, C = q.isFirstLine, E = q.anchorPosition;
          }
          const D = Date.now();
          for (; !A; ) {
            if (_ !== 0 && Date.now() - D > _)
              return new h(u, !0);
            T();
          }
          return new h(u, !1);
          function T() {
            c.DebugFlags.InDebugMode && (console.log(""), console.log(`@@scanNext ${y}: |${w.content.substr(y).replace(/\n$/, "\\n")}|`));
            const q = function(O, Z, J, V, G, z) {
              const $ = function(oe, we, He, de, me, je) {
                const ve = me.getRule(oe), { ruleScanner: xe, findOptions: Ae } = f(ve, oe, me.endRule, He, de === je);
                let ge = 0;
                c.DebugFlags.InDebugMode && (ge = p.performanceNow());
                const ee = xe.findNextMatchSync(we, de, Ae);
                if (c.DebugFlags.InDebugMode) {
                  const Se = p.performanceNow() - ge;
                  Se > 5 && console.warn(`Rule ${ve.debugName} (${ve.id}) matching took ${Se} against '${we}'`), console.log(`  scanning for (linePos: ${de}, anchorPosition: ${je})`), console.log(xe.toString()), ee && console.log(`matched rule id: ${ee.ruleId} from ${ee.captureIndices[0].start} to ${ee.captureIndices[0].end}`);
                }
                return ee ? { captureIndices: ee.captureIndices, matchedRuleId: ee.ruleId } : null;
              }(O, Z, J, V, G, z), Y = O.getInjections();
              if (Y.length === 0)
                return $;
              const j = function(oe, we, He, de, me, je, ve) {
                let xe, Ae = Number.MAX_VALUE, ge = null, ee = 0;
                const Se = je.contentNameScopesList.getScopeNames();
                for (let Re = 0, N = oe.length; Re < N; Re++) {
                  const P = oe[Re];
                  if (!P.matcher(Se))
                    continue;
                  const X = we.getRule(P.ruleId), { ruleScanner: se, findOptions: W } = f(X, we, null, de, me === ve), H = se.findNextMatchSync(He, me, W);
                  if (!H)
                    continue;
                  c.DebugFlags.InDebugMode && (console.log(`  matched injection: ${P.debugSelector}`), console.log(se.toString()));
                  const K = H.captureIndices[0].start;
                  if (!(K >= Ae) && (Ae = K, ge = H.captureIndices, xe = H.ruleId, ee = P.priority, Ae === me))
                    break;
                }
                return ge ? { priorityMatch: ee === -1, captureIndices: ge, matchedRuleId: xe } : null;
              }(Y, O, Z, J, V, G, z);
              if (!j)
                return $;
              if (!$)
                return j;
              const Q = $.captureIndices[0].start, U = j.captureIndices[0].start;
              return U < Q || j.priorityMatch && U === Q ? j : $;
            }(k, w, C, y, u, E);
            if (!q)
              return c.DebugFlags.InDebugMode && console.log("  no more matches."), g.produce(u, v), void (A = !0);
            const R = q.captureIndices, F = q.matchedRuleId, M = !!(R && R.length > 0) && R[0].end > y;
            if (F === i.endRuleId) {
              const O = u.getRule(k);
              c.DebugFlags.InDebugMode && console.log("  popping " + O.debugName + " - " + O.debugEndRegExp), g.produce(u, R[0].start), u = u.withContentNameScopesList(u.nameScopesList), S(k, w, C, u, g, O.endCaptures, R), g.produce(u, R[0].end);
              const Z = u;
              if (u = u.parent, E = Z.getAnchorPos(), !M && Z.getEnterPos() === y)
                return c.DebugFlags.InDebugMode && console.error("[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing"), u = Z, g.produce(u, v), void (A = !0);
            } else {
              const O = k.getRule(F);
              g.produce(u, R[0].start);
              const Z = u, J = O.getName(w.content, R), V = u.contentNameScopesList.pushAttributed(J, k);
              if (u = u.push(F, y, E, R[0].end === v, null, V, V), O instanceof i.BeginEndRule) {
                const G = O;
                c.DebugFlags.InDebugMode && console.log("  pushing " + G.debugName + " - " + G.debugBeginRegExp), S(k, w, C, u, g, G.beginCaptures, R), g.produce(u, R[0].end), E = R[0].end;
                const z = G.getContentName(w.content, R), $ = V.pushAttributed(z, k);
                if (u = u.withContentNameScopesList($), G.endHasBackReferences && (u = u.withEndRule(G.getEndWithResolvedBackReferences(w.content, R))), !M && Z.hasSameRuleAs(u))
                  return c.DebugFlags.InDebugMode && console.error("[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing"), u = u.pop(), g.produce(u, v), void (A = !0);
              } else if (O instanceof i.BeginWhileRule) {
                const G = O;
                c.DebugFlags.InDebugMode && console.log("  pushing " + G.debugName), S(k, w, C, u, g, G.beginCaptures, R), g.produce(u, R[0].end), E = R[0].end;
                const z = G.getContentName(w.content, R), $ = V.pushAttributed(z, k);
                if (u = u.withContentNameScopesList($), G.whileHasBackReferences && (u = u.withEndRule(G.getWhileWithResolvedBackReferences(w.content, R))), !M && Z.hasSameRuleAs(u))
                  return c.DebugFlags.InDebugMode && console.error("[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing"), u = u.pop(), g.produce(u, v), void (A = !0);
              } else {
                const G = O;
                if (c.DebugFlags.InDebugMode && console.log("  matched " + G.debugName + " - " + G.debugMatchRegExp), S(k, w, C, u, g, G.captures, R), g.produce(u, R[0].end), u = u.pop(), !M)
                  return c.DebugFlags.InDebugMode && console.error("[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping"), u = u.safePop(), g.produce(u, v), void (A = !0);
              }
            }
            R[0].end > y && (y = R[0].end, C = !1);
          }
        }
        function f(k, w, C, y, u) {
          return c.UseOnigurumaFindOptions ? { ruleScanner: k.compile(w, C), findOptions: L(y, u) } : { ruleScanner: k.compileAG(w, C, y, u), findOptions: 0 };
        }
        function m(k, w, C, y, u) {
          return c.UseOnigurumaFindOptions ? { ruleScanner: k.compileWhile(w, C), findOptions: L(y, u) } : { ruleScanner: k.compileWhileAG(w, C, y, u), findOptions: 0 };
        }
        function L(k, w) {
          let C = 0;
          return k || (C |= 1), w || (C |= 4), C;
        }
        function S(k, w, C, y, u, g, x) {
          if (g.length === 0)
            return;
          const _ = w.content, v = Math.min(g.length, x.length), A = [], E = x[0].end;
          for (let D = 0; D < v; D++) {
            const T = g[D];
            if (T === null)
              continue;
            const q = x[D];
            if (q.length === 0)
              continue;
            if (q.start > E)
              break;
            for (; A.length > 0 && A[A.length - 1].endPos <= q.start; )
              u.produceFromScopes(A[A.length - 1].scopes, A[A.length - 1].endPos), A.pop();
            if (A.length > 0 ? u.produceFromScopes(A[A.length - 1].scopes, q.start) : u.produce(y, q.start), T.retokenizeCapturedWithRuleId) {
              const F = T.getName(_, x), M = y.contentNameScopesList.pushAttributed(F, k), O = T.getContentName(_, x), Z = M.pushAttributed(O, k), J = y.push(T.retokenizeCapturedWithRuleId, q.start, -1, !1, null, M, Z), V = k.createOnigString(_.substring(0, q.end));
              d(k, V, C && q.start === 0, q.start, J, u, !1, 0), l.disposeOnigString(V);
              continue;
            }
            const R = T.getName(_, x);
            if (R !== null) {
              const F = (A.length > 0 ? A[A.length - 1].scopes : y.contentNameScopesList).pushAttributed(R, k);
              A.push(new b(F, q.end));
            }
          }
          for (; A.length > 0; )
            u.produceFromScopes(A[A.length - 1].scopes, A[A.length - 1].endPos), A.pop();
        }
        s._tokenizeString = d;
        class b {
          constructor(w, C) {
            this.scopes = w, this.endPos = C;
          }
        }
        s.LocalStackElement = b;
      }, 974: (r, s) => {
        function a(p, h) {
          throw new Error("Near offset " + p.pos + ": " + h + " ~~~" + p.source.substr(p.pos, 50) + "~~~");
        }
        Object.defineProperty(s, "__esModule", { value: !0 }), s.parseJSON = void 0, s.parseJSON = function(p, h, d) {
          let f = new c(p), m = new l(), L = 0, S = null, b = [], k = [];
          function w() {
            b.push(L), k.push(S);
          }
          function C() {
            L = b.pop(), S = k.pop();
          }
          function y(u) {
            a(f, u);
          }
          for (; i(f, m); ) {
            if (L === 0) {
              if (S !== null && y("too many constructs in root"), m.type === 3) {
                S = {}, d && (S.$vscodeTextmateLocation = m.toLocation(h)), w(), L = 1;
                continue;
              }
              if (m.type === 2) {
                S = [], w(), L = 4;
                continue;
              }
              y("unexpected token in root");
            }
            if (L === 2) {
              if (m.type === 5) {
                C();
                continue;
              }
              if (m.type === 7) {
                L = 3;
                continue;
              }
              y("expected , or }");
            }
            if (L === 1 || L === 3) {
              if (L === 1 && m.type === 5) {
                C();
                continue;
              }
              if (m.type === 1) {
                let u = m.value;
                if (i(f, m) && m.type === 6 || y("expected colon"), i(f, m) || y("expected value"), L = 2, m.type === 1) {
                  S[u] = m.value;
                  continue;
                }
                if (m.type === 8) {
                  S[u] = null;
                  continue;
                }
                if (m.type === 9) {
                  S[u] = !0;
                  continue;
                }
                if (m.type === 10) {
                  S[u] = !1;
                  continue;
                }
                if (m.type === 11) {
                  S[u] = parseFloat(m.value);
                  continue;
                }
                if (m.type === 2) {
                  let g = [];
                  S[u] = g, w(), L = 4, S = g;
                  continue;
                }
                if (m.type === 3) {
                  let g = {};
                  d && (g.$vscodeTextmateLocation = m.toLocation(h)), S[u] = g, w(), L = 1, S = g;
                  continue;
                }
              }
              y("unexpected token in dict");
            }
            if (L === 5) {
              if (m.type === 4) {
                C();
                continue;
              }
              if (m.type === 7) {
                L = 6;
                continue;
              }
              y("expected , or ]");
            }
            if (L === 4 || L === 6) {
              if (L === 4 && m.type === 4) {
                C();
                continue;
              }
              if (L = 5, m.type === 1) {
                S.push(m.value);
                continue;
              }
              if (m.type === 8) {
                S.push(null);
                continue;
              }
              if (m.type === 9) {
                S.push(!0);
                continue;
              }
              if (m.type === 10) {
                S.push(!1);
                continue;
              }
              if (m.type === 11) {
                S.push(parseFloat(m.value));
                continue;
              }
              if (m.type === 2) {
                let u = [];
                S.push(u), w(), L = 4, S = u;
                continue;
              }
              if (m.type === 3) {
                let u = {};
                d && (u.$vscodeTextmateLocation = m.toLocation(h)), S.push(u), w(), L = 1, S = u;
                continue;
              }
              y("unexpected token in array");
            }
            y("unknown state");
          }
          return k.length !== 0 && y("unclosed constructs"), S;
        };
        class c {
          constructor(h) {
            this.source = h, this.pos = 0, this.len = h.length, this.line = 1, this.char = 0;
          }
        }
        class l {
          constructor() {
            this.value = null, this.type = 0, this.offset = -1, this.len = -1, this.line = -1, this.char = -1;
          }
          toLocation(h) {
            return { filename: h, line: this.line, char: this.char };
          }
        }
        function i(p, h) {
          h.value = null, h.type = 0, h.offset = -1, h.len = -1, h.line = -1, h.char = -1;
          let d, f = p.source, m = p.pos, L = p.len, S = p.line, b = p.char;
          for (; ; ) {
            if (m >= L)
              return !1;
            if (d = f.charCodeAt(m), d !== 32 && d !== 9 && d !== 13) {
              if (d !== 10)
                break;
              m++, S++, b = 0;
            } else
              m++, b++;
          }
          if (h.offset = m, h.line = S, h.char = b, d === 34) {
            for (h.type = 1, m++, b++; ; ) {
              if (m >= L)
                return !1;
              if (d = f.charCodeAt(m), m++, b++, d !== 92) {
                if (d === 34)
                  break;
              } else
                m++, b++;
            }
            h.value = f.substring(h.offset + 1, m - 1).replace(/\\u([0-9A-Fa-f]{4})/g, (k, w) => String.fromCodePoint(parseInt(w, 16))).replace(/\\(.)/g, (k, w) => {
              switch (w) {
                case '"':
                  return '"';
                case "\\":
                  return "\\";
                case "/":
                  return "/";
                case "b":
                  return "\b";
                case "f":
                  return "\f";
                case "n":
                  return `
`;
                case "r":
                  return "\r";
                case "t":
                  return "	";
                default:
                  a(p, "invalid escape sequence");
              }
              throw new Error("unreachable");
            });
          } else if (d === 91)
            h.type = 2, m++, b++;
          else if (d === 123)
            h.type = 3, m++, b++;
          else if (d === 93)
            h.type = 4, m++, b++;
          else if (d === 125)
            h.type = 5, m++, b++;
          else if (d === 58)
            h.type = 6, m++, b++;
          else if (d === 44)
            h.type = 7, m++, b++;
          else if (d === 110) {
            if (h.type = 8, m++, b++, d = f.charCodeAt(m), d !== 117 || (m++, b++, d = f.charCodeAt(m), d !== 108) || (m++, b++, d = f.charCodeAt(m), d !== 108))
              return !1;
            m++, b++;
          } else if (d === 116) {
            if (h.type = 9, m++, b++, d = f.charCodeAt(m), d !== 114 || (m++, b++, d = f.charCodeAt(m), d !== 117) || (m++, b++, d = f.charCodeAt(m), d !== 101))
              return !1;
            m++, b++;
          } else if (d === 102) {
            if (h.type = 10, m++, b++, d = f.charCodeAt(m), d !== 97 || (m++, b++, d = f.charCodeAt(m), d !== 108) || (m++, b++, d = f.charCodeAt(m), d !== 115) || (m++, b++, d = f.charCodeAt(m), d !== 101))
              return !1;
            m++, b++;
          } else
            for (h.type = 11; ; ) {
              if (m >= L)
                return !1;
              if (d = f.charCodeAt(m), !(d === 46 || d >= 48 && d <= 57 || d === 101 || d === 69 || d === 45 || d === 43))
                break;
              m++, b++;
            }
          return h.len = m - h.offset, h.value === null && (h.value = f.substr(h.offset, h.len)), p.pos = m, p.line = S, p.char = b, !0;
        }
      }, 787: function(r, s, a) {
        var c = this && this.__createBinding || (Object.create ? function(m, L, S, b) {
          b === void 0 && (b = S), Object.defineProperty(m, b, { enumerable: !0, get: function() {
            return L[S];
          } });
        } : function(m, L, S, b) {
          b === void 0 && (b = S), m[b] = L[S];
        }), l = this && this.__exportStar || function(m, L) {
          for (var S in m)
            S === "default" || Object.prototype.hasOwnProperty.call(L, S) || c(L, m, S);
        };
        Object.defineProperty(s, "__esModule", { value: !0 }), s.parseRawGrammar = s.INITIAL = s.Registry = void 0;
        const i = a(391), p = a(50), h = a(652), d = a(583), f = a(965);
        l(a(44), s), s.Registry = class {
          constructor(m) {
            this._options = m, this._syncRegistry = new h.SyncRegistry(d.Theme.createFromRawTheme(m.theme, m.colorMap), m.onigLib), this._ensureGrammarCache = /* @__PURE__ */ new Map();
          }
          dispose() {
            this._syncRegistry.dispose();
          }
          setTheme(m, L) {
            this._syncRegistry.setTheme(d.Theme.createFromRawTheme(m, L));
          }
          getColorMap() {
            return this._syncRegistry.getColorMap();
          }
          loadGrammarWithEmbeddedLanguages(m, L, S) {
            return this.loadGrammarWithConfiguration(m, L, { embeddedLanguages: S });
          }
          loadGrammarWithConfiguration(m, L, S) {
            return this._loadGrammar(m, L, S.embeddedLanguages, S.tokenTypes, new i.BalancedBracketSelectors(S.balancedBracketSelectors || [], S.unbalancedBracketSelectors || []));
          }
          loadGrammar(m) {
            return this._loadGrammar(m, 0, null, null, null);
          }
          async _loadGrammar(m, L, S, b, k) {
            const w = new f.ScopeDependencyProcessor(this._syncRegistry, m);
            for (; w.Q.length > 0; )
              await Promise.all(w.Q.map((C) => this._loadSingleGrammar(C.scopeName))), w.processQueue();
            return this._grammarForScopeName(m, L, S, b, k);
          }
          async _loadSingleGrammar(m) {
            return this._ensureGrammarCache.has(m) || this._ensureGrammarCache.set(m, this._doLoadSingleGrammar(m)), this._ensureGrammarCache.get(m);
          }
          async _doLoadSingleGrammar(m) {
            const L = await this._options.loadGrammar(m);
            if (L) {
              const S = typeof this._options.getInjections == "function" ? this._options.getInjections(m) : void 0;
              this._syncRegistry.addGrammar(L, S);
            }
          }
          async addGrammar(m, L = [], S = 0, b = null) {
            return this._syncRegistry.addGrammar(m, L), await this._grammarForScopeName(m.scopeName, S, b);
          }
          _grammarForScopeName(m, L = 0, S = null, b = null, k = null) {
            return this._syncRegistry.grammarForScopeName(m, L, S, b, k);
          }
        }, s.INITIAL = i.StateStack.NULL, s.parseRawGrammar = p.parseRawGrammar;
      }, 736: (r, s) => {
        function a(c) {
          return !!c && !!c.match(/[\w\.:]+/);
        }
        Object.defineProperty(s, "__esModule", { value: !0 }), s.createMatchers = void 0, s.createMatchers = function(c, l) {
          const i = [], p = function(m) {
            let L = /([LR]:|[\w\.:][\w\.:\-]*|[\,\|\-\(\)])/g, S = L.exec(m);
            return { next: () => {
              if (!S)
                return null;
              const b = S[0];
              return S = L.exec(m), b;
            } };
          }(c);
          let h = p.next();
          for (; h !== null; ) {
            let m = 0;
            if (h.length === 2 && h.charAt(1) === ":") {
              switch (h.charAt(0)) {
                case "R":
                  m = 1;
                  break;
                case "L":
                  m = -1;
                  break;
                default:
                  console.log(`Unknown priority ${h} in scope selector`);
              }
              h = p.next();
            }
            let L = f();
            if (i.push({ matcher: L, priority: m }), h !== ",")
              break;
            h = p.next();
          }
          return i;
          function d() {
            if (h === "-") {
              h = p.next();
              const m = d();
              return (L) => !!m && !m(L);
            }
            if (h === "(") {
              h = p.next();
              const m = function() {
                const L = [];
                let S = f();
                for (; S && (L.push(S), h === "|" || h === ","); ) {
                  do
                    h = p.next();
                  while (h === "|" || h === ",");
                  S = f();
                }
                return (b) => L.some((k) => k(b));
              }();
              return h === ")" && (h = p.next()), m;
            }
            if (a(h)) {
              const m = [];
              do
                m.push(h), h = p.next();
              while (a(h));
              return (L) => l(m, L);
            }
            return null;
          }
          function f() {
            const m = [];
            let L = d();
            for (; L; )
              m.push(L), L = d();
            return (S) => m.every((b) => b(S));
          }
        };
      }, 44: (r, s) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.disposeOnigString = void 0, s.disposeOnigString = function(a) {
          typeof a.dispose == "function" && a.dispose();
        };
      }, 50: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.parseRawGrammar = void 0;
        const c = a(69), l = a(350), i = a(974);
        s.parseRawGrammar = function(p, h = null) {
          return h !== null && /\.json$/.test(h) ? (d = p, f = h, l.DebugFlags.InDebugMode ? i.parseJSON(d, f, !0) : JSON.parse(d)) : function(m, L) {
            return l.DebugFlags.InDebugMode ? c.parseWithLocation(m, L, "$vscodeTextmateLocation") : c.parsePLIST(m);
          }(p, h);
          var d, f;
        };
      }, 69: (r, s) => {
        function a(c, l, i) {
          const p = c.length;
          let h = 0, d = 1, f = 0;
          function m(j) {
            if (i === null)
              h += j;
            else
              for (; j > 0; )
                c.charCodeAt(h) === 10 ? (h++, d++, f = 0) : (h++, f++), j--;
          }
          function L(j) {
            i === null ? h = j : m(j - h);
          }
          function S() {
            for (; h < p; ) {
              let j = c.charCodeAt(h);
              if (j !== 32 && j !== 9 && j !== 13 && j !== 10)
                break;
              m(1);
            }
          }
          function b(j) {
            return c.substr(h, j.length) === j && (m(j.length), !0);
          }
          function k(j) {
            let Q = c.indexOf(j, h);
            L(Q !== -1 ? Q + j.length : p);
          }
          function w(j) {
            let Q = c.indexOf(j, h);
            if (Q !== -1) {
              let U = c.substring(h, Q);
              return L(Q + j.length), U;
            }
            {
              let U = c.substr(h);
              return L(p), U;
            }
          }
          p > 0 && c.charCodeAt(0) === 65279 && (h = 1);
          let C = 0, y = null, u = [], g = [], x = null;
          function _(j, Q) {
            u.push(C), g.push(y), C = j, y = Q;
          }
          function v() {
            if (u.length === 0)
              return A("illegal state stack");
            C = u.pop(), y = g.pop();
          }
          function A(j) {
            throw new Error("Near offset " + h + ": " + j + " ~~~" + c.substr(h, 50) + "~~~");
          }
          const E = function() {
            if (x === null)
              return A("missing <key>");
            let j = {};
            i !== null && (j[i] = { filename: l, line: d, char: f }), y[x] = j, x = null, _(1, j);
          }, D = function() {
            if (x === null)
              return A("missing <key>");
            let j = [];
            y[x] = j, x = null, _(2, j);
          }, T = function() {
            let j = {};
            i !== null && (j[i] = { filename: l, line: d, char: f }), y.push(j), _(1, j);
          }, q = function() {
            let j = [];
            y.push(j), _(2, j);
          };
          function R() {
            if (C !== 1)
              return A("unexpected </dict>");
            v();
          }
          function F() {
            return C === 1 || C !== 2 ? A("unexpected </array>") : void v();
          }
          function M(j) {
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function O(j) {
            if (isNaN(j))
              return A("cannot parse float");
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function Z(j) {
            if (isNaN(j))
              return A("cannot parse integer");
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function J(j) {
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function V(j) {
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function G(j) {
            if (C === 1) {
              if (x === null)
                return A("missing <key>");
              y[x] = j, x = null;
            } else
              C === 2 ? y.push(j) : y = j;
          }
          function z() {
            let j = w(">"), Q = !1;
            return j.charCodeAt(j.length - 1) === 47 && (Q = !0, j = j.substring(0, j.length - 1)), { name: j.trim(), isClosed: Q };
          }
          function $(j) {
            if (j.isClosed)
              return "";
            let Q = w("</");
            return k(">"), Q.replace(/&#([0-9]+);/g, function(U, oe) {
              return String.fromCodePoint(parseInt(oe, 10));
            }).replace(/&#x([0-9a-f]+);/g, function(U, oe) {
              return String.fromCodePoint(parseInt(oe, 16));
            }).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g, function(U) {
              switch (U) {
                case "&amp;":
                  return "&";
                case "&lt;":
                  return "<";
                case "&gt;":
                  return ">";
                case "&quot;":
                  return '"';
                case "&apos;":
                  return "'";
              }
              return U;
            });
          }
          for (; h < p && (S(), !(h >= p)); ) {
            const j = c.charCodeAt(h);
            if (m(1), j !== 60)
              return A("expected <");
            if (h >= p)
              return A("unexpected end of input");
            const Q = c.charCodeAt(h);
            if (Q === 63) {
              m(1), k("?>");
              continue;
            }
            if (Q === 33) {
              if (m(1), b("--")) {
                k("-->");
                continue;
              }
              k(">");
              continue;
            }
            if (Q === 47) {
              if (m(1), S(), b("plist")) {
                k(">");
                continue;
              }
              if (b("dict")) {
                k(">"), R();
                continue;
              }
              if (b("array")) {
                k(">"), F();
                continue;
              }
              return A("unexpected closed tag");
            }
            let U = z();
            switch (U.name) {
              case "dict":
                C === 1 ? E() : C === 2 ? T() : (y = {}, i !== null && (y[i] = { filename: l, line: d, char: f }), _(1, y)), U.isClosed && R();
                continue;
              case "array":
                C === 1 ? D() : C === 2 ? q() : (y = [], _(2, y)), U.isClosed && F();
                continue;
              case "key":
                Y = $(U), C !== 1 ? A("unexpected <key>") : x !== null ? A("too many <key>") : x = Y;
                continue;
              case "string":
                M($(U));
                continue;
              case "real":
                O(parseFloat($(U)));
                continue;
              case "integer":
                Z(parseInt($(U), 10));
                continue;
              case "date":
                J(new Date($(U)));
                continue;
              case "data":
                V($(U));
                continue;
              case "true":
                $(U), G(!0);
                continue;
              case "false":
                $(U), G(!1);
                continue;
            }
            if (!/^plist/.test(U.name))
              return A("unexpected opened tag " + U.name);
          }
          var Y;
          return y;
        }
        Object.defineProperty(s, "__esModule", { value: !0 }), s.parsePLIST = s.parseWithLocation = void 0, s.parseWithLocation = function(c, l, i) {
          return a(c, l, i);
        }, s.parsePLIST = function(c) {
          return a(c, null, null);
        };
      }, 652: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.SyncRegistry = void 0;
        const c = a(391);
        s.SyncRegistry = class {
          constructor(l, i) {
            this._onigLibPromise = i, this._grammars = /* @__PURE__ */ new Map(), this._rawGrammars = /* @__PURE__ */ new Map(), this._injectionGrammars = /* @__PURE__ */ new Map(), this._theme = l;
          }
          dispose() {
            for (const l of this._grammars.values())
              l.dispose();
          }
          setTheme(l) {
            this._theme = l;
          }
          getColorMap() {
            return this._theme.getColorMap();
          }
          addGrammar(l, i) {
            this._rawGrammars.set(l.scopeName, l), i && this._injectionGrammars.set(l.scopeName, i);
          }
          lookup(l) {
            return this._rawGrammars.get(l);
          }
          injections(l) {
            return this._injectionGrammars.get(l);
          }
          getDefaults() {
            return this._theme.getDefaults();
          }
          themeMatch(l) {
            return this._theme.match(l);
          }
          async grammarForScopeName(l, i, p, h, d) {
            if (!this._grammars.has(l)) {
              let f = this._rawGrammars.get(l);
              if (!f)
                return null;
              this._grammars.set(l, c.createGrammar(l, f, i, p, h, d, this, await this._onigLibPromise));
            }
            return this._grammars.get(l);
          }
        };
      }, 792: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.CompiledRule = s.RegExpSourceList = s.RegExpSource = s.RuleFactory = s.BeginWhileRule = s.BeginEndRule = s.IncludeOnlyRule = s.MatchRule = s.CaptureRule = s.Rule = s.ruleIdToNumber = s.ruleIdFromNumber = s.whileRuleId = s.endRuleId = void 0;
        const c = a(878), l = a(965), i = /\\(\d+)/, p = /\\(\d+)/g;
        s.endRuleId = -1, s.whileRuleId = -2, s.ruleIdFromNumber = function(y) {
          return y;
        }, s.ruleIdToNumber = function(y) {
          return y;
        };
        class h {
          constructor(u, g, x, _) {
            this.$location = u, this.id = g, this._name = x || null, this._nameIsCapturing = c.RegexSource.hasCaptures(this._name), this._contentName = _ || null, this._contentNameIsCapturing = c.RegexSource.hasCaptures(this._contentName);
          }
          get debugName() {
            const u = this.$location ? `${c.basename(this.$location.filename)}:${this.$location.line}` : "unknown";
            return `${this.constructor.name}#${this.id} @ ${u}`;
          }
          getName(u, g) {
            return this._nameIsCapturing && this._name !== null && u !== null && g !== null ? c.RegexSource.replaceCaptures(this._name, u, g) : this._name;
          }
          getContentName(u, g) {
            return this._contentNameIsCapturing && this._contentName !== null ? c.RegexSource.replaceCaptures(this._contentName, u, g) : this._contentName;
          }
        }
        s.Rule = h;
        class d extends h {
          constructor(u, g, x, _, v) {
            super(u, g, x, _), this.retokenizeCapturedWithRuleId = v;
          }
          dispose() {
          }
          collectPatterns(u, g) {
            throw new Error("Not supported!");
          }
          compile(u, g) {
            throw new Error("Not supported!");
          }
          compileAG(u, g, x, _) {
            throw new Error("Not supported!");
          }
        }
        s.CaptureRule = d;
        class f extends h {
          constructor(u, g, x, _, v) {
            super(u, g, x, null), this._match = new k(_, this.id), this.captures = v, this._cachedCompiledPatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }
          get debugMatchRegExp() {
            return `${this._match.source}`;
          }
          collectPatterns(u, g) {
            g.push(this._match);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u) {
            return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new w(), this.collectPatterns(u, this._cachedCompiledPatterns)), this._cachedCompiledPatterns;
          }
        }
        s.MatchRule = f;
        class m extends h {
          constructor(u, g, x, _, v) {
            super(u, g, x, _), this.patterns = v.patterns, this.hasMissingPatterns = v.hasMissingPatterns, this._cachedCompiledPatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }
          collectPatterns(u, g) {
            for (const x of this.patterns)
              u.getRule(x).collectPatterns(u, g);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u) {
            return this._cachedCompiledPatterns || (this._cachedCompiledPatterns = new w(), this.collectPatterns(u, this._cachedCompiledPatterns)), this._cachedCompiledPatterns;
          }
        }
        s.IncludeOnlyRule = m;
        class L extends h {
          constructor(u, g, x, _, v, A, E, D, T, q) {
            super(u, g, x, _), this._begin = new k(v, this.id), this.beginCaptures = A, this._end = new k(E || "￿", -1), this.endHasBackReferences = this._end.hasBackReferences, this.endCaptures = D, this.applyEndPatternLast = T || !1, this.patterns = q.patterns, this.hasMissingPatterns = q.hasMissingPatterns, this._cachedCompiledPatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null);
          }
          get debugBeginRegExp() {
            return `${this._begin.source}`;
          }
          get debugEndRegExp() {
            return `${this._end.source}`;
          }
          getEndWithResolvedBackReferences(u, g) {
            return this._end.resolveBackReferences(u, g);
          }
          collectPatterns(u, g) {
            g.push(this._begin);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u, g).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u, g).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u, g) {
            if (!this._cachedCompiledPatterns) {
              this._cachedCompiledPatterns = new w();
              for (const x of this.patterns)
                u.getRule(x).collectPatterns(u, this._cachedCompiledPatterns);
              this.applyEndPatternLast ? this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end) : this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);
            }
            return this._end.hasBackReferences && (this.applyEndPatternLast ? this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, g) : this._cachedCompiledPatterns.setSource(0, g)), this._cachedCompiledPatterns;
          }
        }
        s.BeginEndRule = L;
        class S extends h {
          constructor(u, g, x, _, v, A, E, D, T) {
            super(u, g, x, _), this._begin = new k(v, this.id), this.beginCaptures = A, this.whileCaptures = D, this._while = new k(E, s.whileRuleId), this.whileHasBackReferences = this._while.hasBackReferences, this.patterns = T.patterns, this.hasMissingPatterns = T.hasMissingPatterns, this._cachedCompiledPatterns = null, this._cachedCompiledWhilePatterns = null;
          }
          dispose() {
            this._cachedCompiledPatterns && (this._cachedCompiledPatterns.dispose(), this._cachedCompiledPatterns = null), this._cachedCompiledWhilePatterns && (this._cachedCompiledWhilePatterns.dispose(), this._cachedCompiledWhilePatterns = null);
          }
          get debugBeginRegExp() {
            return `${this._begin.source}`;
          }
          get debugWhileRegExp() {
            return `${this._while.source}`;
          }
          getWhileWithResolvedBackReferences(u, g) {
            return this._while.resolveBackReferences(u, g);
          }
          collectPatterns(u, g) {
            g.push(this._begin);
          }
          compile(u, g) {
            return this._getCachedCompiledPatterns(u).compile(u);
          }
          compileAG(u, g, x, _) {
            return this._getCachedCompiledPatterns(u).compileAG(u, x, _);
          }
          _getCachedCompiledPatterns(u) {
            if (!this._cachedCompiledPatterns) {
              this._cachedCompiledPatterns = new w();
              for (const g of this.patterns)
                u.getRule(g).collectPatterns(u, this._cachedCompiledPatterns);
            }
            return this._cachedCompiledPatterns;
          }
          compileWhile(u, g) {
            return this._getCachedCompiledWhilePatterns(u, g).compile(u);
          }
          compileWhileAG(u, g, x, _) {
            return this._getCachedCompiledWhilePatterns(u, g).compileAG(u, x, _);
          }
          _getCachedCompiledWhilePatterns(u, g) {
            return this._cachedCompiledWhilePatterns || (this._cachedCompiledWhilePatterns = new w(), this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while)), this._while.hasBackReferences && this._cachedCompiledWhilePatterns.setSource(0, g || "￿"), this._cachedCompiledWhilePatterns;
          }
        }
        s.BeginWhileRule = S;
        class b {
          static createCaptureRule(u, g, x, _, v) {
            return u.registerRule((A) => new d(g, A, x, _, v));
          }
          static getCompiledRuleId(u, g, x) {
            return u.id || g.registerRule((_) => {
              if (u.id = _, u.match)
                return new f(u.$vscodeTextmateLocation, u.id, u.name, u.match, b._compileCaptures(u.captures, g, x));
              if (u.begin === void 0) {
                u.repository && (x = c.mergeObjects({}, x, u.repository));
                let v = u.patterns;
                return v === void 0 && u.include && (v = [{ include: u.include }]), new m(u.$vscodeTextmateLocation, u.id, u.name, u.contentName, b._compilePatterns(v, g, x));
              }
              return u.while ? new S(u.$vscodeTextmateLocation, u.id, u.name, u.contentName, u.begin, b._compileCaptures(u.beginCaptures || u.captures, g, x), u.while, b._compileCaptures(u.whileCaptures || u.captures, g, x), b._compilePatterns(u.patterns, g, x)) : new L(u.$vscodeTextmateLocation, u.id, u.name, u.contentName, u.begin, b._compileCaptures(u.beginCaptures || u.captures, g, x), u.end, b._compileCaptures(u.endCaptures || u.captures, g, x), u.applyEndPatternLast, b._compilePatterns(u.patterns, g, x));
            }), u.id;
          }
          static _compileCaptures(u, g, x) {
            let _ = [];
            if (u) {
              let v = 0;
              for (const A in u) {
                if (A === "$vscodeTextmateLocation")
                  continue;
                const E = parseInt(A, 10);
                E > v && (v = E);
              }
              for (let A = 0; A <= v; A++)
                _[A] = null;
              for (const A in u) {
                if (A === "$vscodeTextmateLocation")
                  continue;
                const E = parseInt(A, 10);
                let D = 0;
                u[A].patterns && (D = b.getCompiledRuleId(u[A], g, x)), _[E] = b.createCaptureRule(g, u[A].$vscodeTextmateLocation, u[A].name, u[A].contentName, D);
              }
            }
            return _;
          }
          static _compilePatterns(u, g, x) {
            let _ = [];
            if (u)
              for (let v = 0, A = u.length; v < A; v++) {
                const E = u[v];
                let D = -1;
                if (E.include) {
                  const T = l.parseInclude(E.include);
                  switch (T.kind) {
                    case 0:
                    case 1:
                      D = b.getCompiledRuleId(x[E.include], g, x);
                      break;
                    case 2:
                      let q = x[T.ruleName];
                      q && (D = b.getCompiledRuleId(q, g, x));
                      break;
                    case 3:
                    case 4:
                      const R = T.scopeName, F = T.kind === 4 ? T.ruleName : null, M = g.getExternalGrammar(R, x);
                      if (M)
                        if (F) {
                          let O = M.repository[F];
                          O && (D = b.getCompiledRuleId(O, g, M.repository));
                        } else
                          D = b.getCompiledRuleId(M.repository.$self, g, M.repository);
                  }
                } else
                  D = b.getCompiledRuleId(E, g, x);
                if (D !== -1) {
                  const T = g.getRule(D);
                  let q = !1;
                  if ((T instanceof m || T instanceof L || T instanceof S) && T.hasMissingPatterns && T.patterns.length === 0 && (q = !0), q)
                    continue;
                  _.push(D);
                }
              }
            return { patterns: _, hasMissingPatterns: (u ? u.length : 0) !== _.length };
          }
        }
        s.RuleFactory = b;
        class k {
          constructor(u, g) {
            if (u) {
              const x = u.length;
              let _ = 0, v = [], A = !1;
              for (let E = 0; E < x; E++)
                if (u.charAt(E) === "\\" && E + 1 < x) {
                  const D = u.charAt(E + 1);
                  D === "z" ? (v.push(u.substring(_, E)), v.push("$(?!\\n)(?<!\\n)"), _ = E + 2) : D !== "A" && D !== "G" || (A = !0), E++;
                }
              this.hasAnchor = A, _ === 0 ? this.source = u : (v.push(u.substring(_, x)), this.source = v.join(""));
            } else
              this.hasAnchor = !1, this.source = u;
            this.hasAnchor ? this._anchorCache = this._buildAnchorCache() : this._anchorCache = null, this.ruleId = g, this.hasBackReferences = i.test(this.source);
          }
          clone() {
            return new k(this.source, this.ruleId);
          }
          setSource(u) {
            this.source !== u && (this.source = u, this.hasAnchor && (this._anchorCache = this._buildAnchorCache()));
          }
          resolveBackReferences(u, g) {
            let x = g.map((_) => u.substring(_.start, _.end));
            return p.lastIndex = 0, this.source.replace(p, (_, v) => c.escapeRegExpCharacters(x[parseInt(v, 10)] || ""));
          }
          _buildAnchorCache() {
            let u, g, x, _, v = [], A = [], E = [], D = [];
            for (u = 0, g = this.source.length; u < g; u++)
              x = this.source.charAt(u), v[u] = x, A[u] = x, E[u] = x, D[u] = x, x === "\\" && u + 1 < g && (_ = this.source.charAt(u + 1), _ === "A" ? (v[u + 1] = "￿", A[u + 1] = "￿", E[u + 1] = "A", D[u + 1] = "A") : _ === "G" ? (v[u + 1] = "￿", A[u + 1] = "G", E[u + 1] = "￿", D[u + 1] = "G") : (v[u + 1] = _, A[u + 1] = _, E[u + 1] = _, D[u + 1] = _), u++);
            return { A0_G0: v.join(""), A0_G1: A.join(""), A1_G0: E.join(""), A1_G1: D.join("") };
          }
          resolveAnchors(u, g) {
            return this.hasAnchor && this._anchorCache ? u ? g ? this._anchorCache.A1_G1 : this._anchorCache.A1_G0 : g ? this._anchorCache.A0_G1 : this._anchorCache.A0_G0 : this.source;
          }
        }
        s.RegExpSource = k;
        class w {
          constructor() {
            this._items = [], this._hasAnchors = !1, this._cached = null, this._anchorCache = { A0_G0: null, A0_G1: null, A1_G0: null, A1_G1: null };
          }
          dispose() {
            this._disposeCaches();
          }
          _disposeCaches() {
            this._cached && (this._cached.dispose(), this._cached = null), this._anchorCache.A0_G0 && (this._anchorCache.A0_G0.dispose(), this._anchorCache.A0_G0 = null), this._anchorCache.A0_G1 && (this._anchorCache.A0_G1.dispose(), this._anchorCache.A0_G1 = null), this._anchorCache.A1_G0 && (this._anchorCache.A1_G0.dispose(), this._anchorCache.A1_G0 = null), this._anchorCache.A1_G1 && (this._anchorCache.A1_G1.dispose(), this._anchorCache.A1_G1 = null);
          }
          push(u) {
            this._items.push(u), this._hasAnchors = this._hasAnchors || u.hasAnchor;
          }
          unshift(u) {
            this._items.unshift(u), this._hasAnchors = this._hasAnchors || u.hasAnchor;
          }
          length() {
            return this._items.length;
          }
          setSource(u, g) {
            this._items[u].source !== g && (this._disposeCaches(), this._items[u].setSource(g));
          }
          compile(u) {
            if (!this._cached) {
              let g = this._items.map((x) => x.source);
              this._cached = new C(u, g, this._items.map((x) => x.ruleId));
            }
            return this._cached;
          }
          compileAG(u, g, x) {
            return this._hasAnchors ? g ? x ? (this._anchorCache.A1_G1 || (this._anchorCache.A1_G1 = this._resolveAnchors(u, g, x)), this._anchorCache.A1_G1) : (this._anchorCache.A1_G0 || (this._anchorCache.A1_G0 = this._resolveAnchors(u, g, x)), this._anchorCache.A1_G0) : x ? (this._anchorCache.A0_G1 || (this._anchorCache.A0_G1 = this._resolveAnchors(u, g, x)), this._anchorCache.A0_G1) : (this._anchorCache.A0_G0 || (this._anchorCache.A0_G0 = this._resolveAnchors(u, g, x)), this._anchorCache.A0_G0) : this.compile(u);
          }
          _resolveAnchors(u, g, x) {
            let _ = this._items.map((v) => v.resolveAnchors(g, x));
            return new C(u, _, this._items.map((v) => v.ruleId));
          }
        }
        s.RegExpSourceList = w;
        class C {
          constructor(u, g, x) {
            this.regExps = g, this.rules = x, this.scanner = u.createOnigScanner(g);
          }
          dispose() {
            typeof this.scanner.dispose == "function" && this.scanner.dispose();
          }
          toString() {
            const u = [];
            for (let g = 0, x = this.rules.length; g < x; g++)
              u.push("   - " + this.rules[g] + ": " + this.regExps[g]);
            return u.join(`
`);
          }
          findNextMatchSync(u, g, x) {
            const _ = this.scanner.findNextMatchSync(u, g, x);
            return _ ? { ruleId: this.rules[_.index], captureIndices: _.captureIndices } : null;
          }
        }
        s.CompiledRule = C;
      }, 583: (r, s, a) => {
        Object.defineProperty(s, "__esModule", { value: !0 }), s.ThemeTrieElement = s.ThemeTrieElementRule = s.ColorMap = s.fontStyleToString = s.ParsedThemeRule = s.parseTheme = s.StyleAttributes = s.ScopeStack = s.Theme = void 0;
        const c = a(878);
        class l {
          constructor(k, w, C) {
            this._colorMap = k, this._defaults = w, this._root = C, this._cachedMatchRoot = new c.CachedFn((y) => this._root.match(y));
          }
          static createFromRawTheme(k, w) {
            return this.createFromParsedTheme(d(k), w);
          }
          static createFromParsedTheme(k, w) {
            return function(C, y) {
              C.sort((E, D) => {
                let T = c.strcmp(E.scope, D.scope);
                return T !== 0 ? T : (T = c.strArrCmp(E.parentScopes, D.parentScopes), T !== 0 ? T : E.index - D.index);
              });
              let u = 0, g = "#000000", x = "#ffffff";
              for (; C.length >= 1 && C[0].scope === ""; ) {
                let E = C.shift();
                E.fontStyle !== -1 && (u = E.fontStyle), E.foreground !== null && (g = E.foreground), E.background !== null && (x = E.background);
              }
              let _ = new m(y), v = new h(u, _.getId(g), _.getId(x)), A = new S(new L(0, null, -1, 0, 0), []);
              for (let E = 0, D = C.length; E < D; E++) {
                let T = C[E];
                A.insert(0, T.scope, T.parentScopes, T.fontStyle, _.getId(T.foreground), _.getId(T.background));
              }
              return new l(_, v, A);
            }(k, w);
          }
          getColorMap() {
            return this._colorMap.getColorMap();
          }
          getDefaults() {
            return this._defaults;
          }
          match(k) {
            if (k === null)
              return this._defaults;
            const w = k.scopeName, C = this._cachedMatchRoot.get(w).find((y) => function(u, g) {
              if (g === null)
                return !0;
              let x = 0, _ = g[x];
              for (; u; ) {
                if (p(u.scopeName, _)) {
                  if (x++, x === g.length)
                    return !0;
                  _ = g[x];
                }
                u = u.parent;
              }
              return !1;
            }(k.parent, y.parentScopes));
            return C ? new h(C.fontStyle, C.foreground, C.background) : null;
          }
        }
        s.Theme = l;
        class i {
          constructor(k, w) {
            this.parent = k, this.scopeName = w;
          }
          static from(...k) {
            let w = null;
            for (let C = 0; C < k.length; C++)
              w = new i(w, k[C]);
            return w;
          }
          push(k) {
            return new i(this, k);
          }
          getSegments() {
            let k = this;
            const w = [];
            for (; k; )
              w.push(k.scopeName), k = k.parent;
            return w.reverse(), w;
          }
          toString() {
            return this.getSegments().join(" ");
          }
        }
        function p(b, k) {
          return k === b || b.startsWith(k) && b[k.length] === ".";
        }
        s.ScopeStack = i;
        class h {
          constructor(k, w, C) {
            this.fontStyle = k, this.foregroundId = w, this.backgroundId = C;
          }
        }
        function d(b) {
          if (!b)
            return [];
          if (!b.settings || !Array.isArray(b.settings))
            return [];
          let k = b.settings, w = [], C = 0;
          for (let y = 0, u = k.length; y < u; y++) {
            let g, x = k[y];
            if (!x.settings)
              continue;
            if (typeof x.scope == "string") {
              let E = x.scope;
              E = E.replace(/^[,]+/, ""), E = E.replace(/[,]+$/, ""), g = E.split(",");
            } else
              g = Array.isArray(x.scope) ? x.scope : [""];
            let _ = -1;
            if (typeof x.settings.fontStyle == "string") {
              _ = 0;
              let E = x.settings.fontStyle.split(" ");
              for (let D = 0, T = E.length; D < T; D++)
                switch (E[D]) {
                  case "italic":
                    _ |= 1;
                    break;
                  case "bold":
                    _ |= 2;
                    break;
                  case "underline":
                    _ |= 4;
                    break;
                  case "strikethrough":
                    _ |= 8;
                }
            }
            let v = null;
            typeof x.settings.foreground == "string" && c.isValidHexColor(x.settings.foreground) && (v = x.settings.foreground);
            let A = null;
            typeof x.settings.background == "string" && c.isValidHexColor(x.settings.background) && (A = x.settings.background);
            for (let E = 0, D = g.length; E < D; E++) {
              let T = g[E].trim().split(" "), q = T[T.length - 1], R = null;
              T.length > 1 && (R = T.slice(0, T.length - 1), R.reverse()), w[C++] = new f(q, R, y, _, v, A);
            }
          }
          return w;
        }
        s.StyleAttributes = h, s.parseTheme = d;
        class f {
          constructor(k, w, C, y, u, g) {
            this.scope = k, this.parentScopes = w, this.index = C, this.fontStyle = y, this.foreground = u, this.background = g;
          }
        }
        s.ParsedThemeRule = f, s.fontStyleToString = function(b) {
          if (b === -1)
            return "not set";
          let k = "";
          return 1 & b && (k += "italic "), 2 & b && (k += "bold "), 4 & b && (k += "underline "), 8 & b && (k += "strikethrough "), k === "" && (k = "none"), k.trim();
        };
        class m {
          constructor(k) {
            if (this._lastColorId = 0, this._id2color = [], this._color2id = /* @__PURE__ */ Object.create(null), Array.isArray(k)) {
              this._isFrozen = !0;
              for (let w = 0, C = k.length; w < C; w++)
                this._color2id[k[w]] = w, this._id2color[w] = k[w];
            } else
              this._isFrozen = !1;
          }
          getId(k) {
            if (k === null)
              return 0;
            k = k.toUpperCase();
            let w = this._color2id[k];
            if (w)
              return w;
            if (this._isFrozen)
              throw new Error(`Missing color in color map - ${k}`);
            return w = ++this._lastColorId, this._color2id[k] = w, this._id2color[w] = k, w;
          }
          getColorMap() {
            return this._id2color.slice(0);
          }
        }
        s.ColorMap = m;
        class L {
          constructor(k, w, C, y, u) {
            this.scopeDepth = k, this.parentScopes = w, this.fontStyle = C, this.foreground = y, this.background = u;
          }
          clone() {
            return new L(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);
          }
          static cloneArr(k) {
            let w = [];
            for (let C = 0, y = k.length; C < y; C++)
              w[C] = k[C].clone();
            return w;
          }
          acceptOverwrite(k, w, C, y) {
            this.scopeDepth > k ? console.log("how did this happen?") : this.scopeDepth = k, w !== -1 && (this.fontStyle = w), C !== 0 && (this.foreground = C), y !== 0 && (this.background = y);
          }
        }
        s.ThemeTrieElementRule = L;
        class S {
          constructor(k, w = [], C = {}) {
            this._mainRule = k, this._children = C, this._rulesWithParentScopes = w;
          }
          static _sortBySpecificity(k) {
            return k.length === 1 || k.sort(this._cmpBySpecificity), k;
          }
          static _cmpBySpecificity(k, w) {
            if (k.scopeDepth === w.scopeDepth) {
              const C = k.parentScopes, y = w.parentScopes;
              let u = C === null ? 0 : C.length, g = y === null ? 0 : y.length;
              if (u === g)
                for (let x = 0; x < u; x++) {
                  const _ = C[x].length, v = y[x].length;
                  if (_ !== v)
                    return v - _;
                }
              return g - u;
            }
            return w.scopeDepth - k.scopeDepth;
          }
          match(k) {
            if (k === "")
              return S._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));
            let w, C, y = k.indexOf(".");
            return y === -1 ? (w = k, C = "") : (w = k.substring(0, y), C = k.substring(y + 1)), this._children.hasOwnProperty(w) ? this._children[w].match(C) : S._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));
          }
          insert(k, w, C, y, u, g) {
            if (w === "")
              return void this._doInsertHere(k, C, y, u, g);
            let x, _, v, A = w.indexOf(".");
            A === -1 ? (x = w, _ = "") : (x = w.substring(0, A), _ = w.substring(A + 1)), this._children.hasOwnProperty(x) ? v = this._children[x] : (v = new S(this._mainRule.clone(), L.cloneArr(this._rulesWithParentScopes)), this._children[x] = v), v.insert(k + 1, _, C, y, u, g);
          }
          _doInsertHere(k, w, C, y, u) {
            if (w !== null) {
              for (let g = 0, x = this._rulesWithParentScopes.length; g < x; g++) {
                let _ = this._rulesWithParentScopes[g];
                if (c.strArrCmp(_.parentScopes, w) === 0)
                  return void _.acceptOverwrite(k, C, y, u);
              }
              C === -1 && (C = this._mainRule.fontStyle), y === 0 && (y = this._mainRule.foreground), u === 0 && (u = this._mainRule.background), this._rulesWithParentScopes.push(new L(k, w, C, y, u));
            } else
              this._mainRule.acceptOverwrite(k, C, y, u);
          }
        }
        s.ThemeTrieElement = S;
      }, 878: (r, s) => {
        function a(i) {
          return Array.isArray(i) ? function(p) {
            let h = [];
            for (let d = 0, f = p.length; d < f; d++)
              h[d] = a(p[d]);
            return h;
          }(i) : typeof i == "object" ? function(p) {
            let h = {};
            for (let d in p)
              h[d] = a(p[d]);
            return h;
          }(i) : i;
        }
        Object.defineProperty(s, "__esModule", { value: !0 }), s.performanceNow = s.CachedFn = s.escapeRegExpCharacters = s.isValidHexColor = s.strArrCmp = s.strcmp = s.RegexSource = s.basename = s.mergeObjects = s.clone = void 0, s.clone = function(i) {
          return a(i);
        }, s.mergeObjects = function(i, ...p) {
          return p.forEach((h) => {
            for (let d in h)
              i[d] = h[d];
          }), i;
        }, s.basename = function i(p) {
          const h = ~p.lastIndexOf("/") || ~p.lastIndexOf("\\");
          return h === 0 ? p : ~h == p.length - 1 ? i(p.substring(0, p.length - 1)) : p.substr(1 + ~h);
        };
        let c = /\$(\d+)|\${(\d+):\/(downcase|upcase)}/g;
        function l(i, p) {
          return i < p ? -1 : i > p ? 1 : 0;
        }
        s.RegexSource = class {
          static hasCaptures(i) {
            return i !== null && (c.lastIndex = 0, c.test(i));
          }
          static replaceCaptures(i, p, h) {
            return i.replace(c, (d, f, m, L) => {
              let S = h[parseInt(f || m, 10)];
              if (!S)
                return d;
              {
                let b = p.substring(S.start, S.end);
                for (; b[0] === "."; )
                  b = b.substring(1);
                switch (L) {
                  case "downcase":
                    return b.toLowerCase();
                  case "upcase":
                    return b.toUpperCase();
                  default:
                    return b;
                }
              }
            });
          }
        }, s.strcmp = l, s.strArrCmp = function(i, p) {
          if (i === null && p === null)
            return 0;
          if (!i)
            return -1;
          if (!p)
            return 1;
          let h = i.length, d = p.length;
          if (h === d) {
            for (let f = 0; f < h; f++) {
              let m = l(i[f], p[f]);
              if (m !== 0)
                return m;
            }
            return 0;
          }
          return h - d;
        }, s.isValidHexColor = function(i) {
          return !!(/^#[0-9a-f]{6}$/i.test(i) || /^#[0-9a-f]{8}$/i.test(i) || /^#[0-9a-f]{3}$/i.test(i) || /^#[0-9a-f]{4}$/i.test(i));
        }, s.escapeRegExpCharacters = function(i) {
          return i.replace(/[\-\\\{\}\*\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&");
        }, s.CachedFn = class {
          constructor(i) {
            this.fn = i, this.cache = /* @__PURE__ */ new Map();
          }
          get(i) {
            if (this.cache.has(i))
              return this.cache.get(i);
            const p = this.fn(i);
            return this.cache.set(i, p), p;
          }
        }, s.performanceNow = typeof performance > "u" ? function() {
          return Date.now();
        } : function() {
          return performance.now();
        };
      } }, o = {};
      return function r(s) {
        var a = o[s];
        if (a !== void 0)
          return a.exports;
        var c = o[s] = { exports: {} };
        return t[s].call(c.exports, c, c.exports, r), c.exports;
      }(787);
    })();
  });
})(Go);
var Uo = Go.exports;
const xn = [
  {
    id: "abap",
    scopeName: "source.abap",
    path: "abap.tmLanguage.json",
    samplePath: "abap.sample"
  },
  {
    id: "actionscript-3",
    scopeName: "source.actionscript.3",
    path: "actionscript-3.tmLanguage.json",
    samplePath: "actionscript-3.sample"
  },
  {
    id: "ada",
    scopeName: "source.ada",
    path: "ada.tmLanguage.json",
    samplePath: "ada.sample"
  },
  {
    id: "apache",
    scopeName: "source.apacheconf",
    path: "apache.tmLanguage.json"
  },
  {
    id: "apex",
    scopeName: "source.apex",
    path: "apex.tmLanguage.json",
    samplePath: "apex.sample"
  },
  {
    id: "apl",
    scopeName: "source.apl",
    path: "apl.tmLanguage.json",
    embeddedLangs: ["html", "xml", "css", "javascript", "json"]
  },
  {
    id: "applescript",
    scopeName: "source.applescript",
    path: "applescript.tmLanguage.json",
    samplePath: "applescript.sample"
  },
  {
    id: "ara",
    scopeName: "source.ara",
    path: "ara.tmLanguage.json",
    samplePath: "ara.sample"
  },
  {
    id: "asm",
    scopeName: "source.asm.x86_64",
    path: "asm.tmLanguage.json",
    samplePath: "asm.sample"
  },
  {
    id: "astro",
    scopeName: "source.astro",
    path: "astro.tmLanguage.json",
    samplePath: "astro.sample",
    embeddedLangs: ["json", "javascript", "typescript", "stylus", "sass", "css", "scss", "less", "postcss", "tsx"]
  },
  {
    id: "awk",
    scopeName: "source.awk",
    path: "awk.tmLanguage.json",
    samplePath: "awk.sample"
  },
  {
    id: "ballerina",
    scopeName: "source.ballerina",
    path: "ballerina.tmLanguage.json",
    samplePath: "ballerina.sample"
  },
  {
    id: "bat",
    scopeName: "source.batchfile",
    path: "bat.tmLanguage.json",
    samplePath: "bat.sample",
    aliases: ["batch"]
  },
  {
    id: "berry",
    scopeName: "source.berry",
    path: "berry.tmLanguage.json",
    samplePath: "berry.sample",
    aliases: ["be"]
  },
  {
    id: "bibtex",
    scopeName: "text.bibtex",
    path: "bibtex.tmLanguage.json"
  },
  {
    id: "bicep",
    scopeName: "source.bicep",
    path: "bicep.tmLanguage.json",
    samplePath: "bicep.sample"
  },
  {
    id: "blade",
    scopeName: "text.html.php.blade",
    path: "blade.tmLanguage.json",
    samplePath: "blade.sample",
    embeddedLangs: ["html", "xml", "sql", "javascript", "json", "css"]
  },
  {
    id: "c",
    scopeName: "source.c",
    path: "c.tmLanguage.json",
    samplePath: "c.sample"
  },
  {
    id: "cadence",
    scopeName: "source.cadence",
    path: "cadence.tmLanguage.json",
    samplePath: "cadence.sample",
    aliases: ["cdc"]
  },
  {
    id: "clarity",
    scopeName: "source.clar",
    path: "clarity.tmLanguage.json",
    samplePath: "clarity.sample"
  },
  {
    id: "clojure",
    scopeName: "source.clojure",
    path: "clojure.tmLanguage.json",
    samplePath: "clojure.sample",
    aliases: ["clj"]
  },
  {
    id: "cmake",
    scopeName: "source.cmake",
    path: "cmake.tmLanguage.json",
    samplePath: "cmake.sample"
  },
  {
    id: "cobol",
    scopeName: "source.cobol",
    path: "cobol.tmLanguage.json",
    samplePath: "cobol.sample",
    embeddedLangs: ["sql", "html", "java"]
  },
  {
    id: "codeql",
    scopeName: "source.ql",
    path: "codeql.tmLanguage.json",
    samplePath: "codeql.sample",
    aliases: ["ql"],
    embeddedLangs: ["markdown"]
  },
  {
    id: "coffee",
    scopeName: "source.coffee",
    path: "coffee.tmLanguage.json",
    samplePath: "coffee.sample",
    embeddedLangs: ["javascript"]
  },
  {
    id: "cpp",
    scopeName: "source.cpp",
    path: "cpp.tmLanguage.json",
    samplePath: "cpp.sample",
    embeddedLangs: ["glsl", "sql"]
  },
  {
    id: "crystal",
    scopeName: "source.crystal",
    path: "crystal.tmLanguage.json",
    samplePath: "crystal.sample",
    embeddedLangs: ["html", "sql", "css", "c", "javascript", "shellscript"]
  },
  {
    id: "csharp",
    scopeName: "source.cs",
    path: "csharp.tmLanguage.json",
    samplePath: "csharp.sample",
    aliases: ["c#", "cs"]
  },
  {
    id: "css",
    scopeName: "source.css",
    path: "css.tmLanguage.json",
    samplePath: "css.sample"
  },
  {
    id: "cue",
    scopeName: "source.cue",
    path: "cue.tmLanguage.json",
    samplePath: "cue.sample"
  },
  {
    id: "d",
    scopeName: "source.d",
    path: "d.tmLanguage.json",
    samplePath: "d.sample"
  },
  {
    id: "dart",
    scopeName: "source.dart",
    path: "dart.tmLanguage.json",
    samplePath: "dart.sample"
  },
  {
    id: "dax",
    scopeName: "source.dax",
    path: "dax.tmLanguage.json",
    samplePath: "dax.sample"
  },
  {
    id: "diff",
    scopeName: "source.diff",
    path: "diff.tmLanguage.json",
    samplePath: "diff.sample"
  },
  {
    id: "docker",
    scopeName: "source.dockerfile",
    path: "docker.tmLanguage.json",
    samplePath: "docker.sample"
  },
  {
    id: "dream-maker",
    scopeName: "source.dm",
    path: "dream-maker.tmLanguage.json"
  },
  {
    id: "elixir",
    scopeName: "source.elixir",
    path: "elixir.tmLanguage.json",
    samplePath: "elixir.sample",
    embeddedLangs: ["html"]
  },
  {
    id: "elm",
    scopeName: "source.elm",
    path: "elm.tmLanguage.json",
    samplePath: "elm.sample",
    embeddedLangs: ["glsl"]
  },
  {
    id: "erb",
    scopeName: "text.html.erb",
    path: "erb.tmLanguage.json",
    samplePath: "erb.sample",
    embeddedLangs: ["html", "ruby"]
  },
  {
    id: "erlang",
    scopeName: "source.erlang",
    path: "erlang.tmLanguage.json",
    samplePath: "erlang.sample",
    aliases: ["erl"]
  },
  {
    id: "fish",
    scopeName: "source.fish",
    path: "fish.tmLanguage.json",
    samplePath: "fish.sample"
  },
  {
    id: "fsharp",
    scopeName: "source.fsharp",
    path: "fsharp.tmLanguage.json",
    samplePath: "fsharp.sample",
    aliases: ["f#", "fs"],
    embeddedLangs: ["markdown"]
  },
  {
    id: "gherkin",
    scopeName: "text.gherkin.feature",
    path: "gherkin.tmLanguage.json"
  },
  {
    id: "git-commit",
    scopeName: "text.git-commit",
    path: "git-commit.tmLanguage.json",
    embeddedLangs: ["diff"]
  },
  {
    id: "git-rebase",
    scopeName: "text.git-rebase",
    path: "git-rebase.tmLanguage.json",
    embeddedLangs: ["shellscript"]
  },
  {
    id: "glsl",
    scopeName: "source.glsl",
    path: "glsl.tmLanguage.json",
    samplePath: "glsl.sample",
    embeddedLangs: ["c"]
  },
  {
    id: "gnuplot",
    scopeName: "source.gnuplot",
    path: "gnuplot.tmLanguage.json"
  },
  {
    id: "go",
    scopeName: "source.go",
    path: "go.tmLanguage.json",
    samplePath: "go.sample"
  },
  {
    id: "graphql",
    scopeName: "source.graphql",
    path: "graphql.tmLanguage.json",
    embeddedLangs: ["javascript", "typescript", "jsx", "tsx"]
  },
  {
    id: "groovy",
    scopeName: "source.groovy",
    path: "groovy.tmLanguage.json"
  },
  {
    id: "hack",
    scopeName: "source.hack",
    path: "hack.tmLanguage.json",
    embeddedLangs: ["html", "sql"]
  },
  {
    id: "haml",
    scopeName: "text.haml",
    path: "haml.tmLanguage.json",
    embeddedLangs: ["ruby", "javascript", "sass", "coffee", "markdown", "css"]
  },
  {
    id: "handlebars",
    scopeName: "text.html.handlebars",
    path: "handlebars.tmLanguage.json",
    aliases: ["hbs"],
    embeddedLangs: ["html", "css", "javascript", "yaml"]
  },
  {
    id: "haskell",
    scopeName: "source.haskell",
    path: "haskell.tmLanguage.json",
    aliases: ["hs"]
  },
  {
    id: "hcl",
    scopeName: "source.hcl",
    path: "hcl.tmLanguage.json",
    samplePath: "hcl.sample"
  },
  {
    id: "hlsl",
    scopeName: "source.hlsl",
    path: "hlsl.tmLanguage.json"
  },
  {
    id: "html",
    scopeName: "text.html.basic",
    path: "html.tmLanguage.json",
    samplePath: "html.sample",
    embeddedLangs: ["javascript", "css"]
  },
  {
    id: "http",
    scopeName: "source.http",
    path: "http.tmLanguage.json",
    samplePath: "http.sample",
    embeddedLangs: ["shellscript", "json", "xml", "graphql"]
  },
  {
    id: "imba",
    scopeName: "source.imba",
    path: "imba.tmLanguage.json",
    samplePath: "imba.sample"
  },
  {
    id: "ini",
    scopeName: "source.ini",
    path: "ini.tmLanguage.json",
    aliases: ["properties"]
  },
  {
    id: "java",
    scopeName: "source.java",
    path: "java.tmLanguage.json",
    samplePath: "java.sample"
  },
  {
    id: "javascript",
    scopeName: "source.js",
    path: "javascript.tmLanguage.json",
    samplePath: "javascript.sample",
    aliases: ["js"]
  },
  {
    id: "jinja-html",
    scopeName: "text.html.jinja",
    path: "jinja-html.tmLanguage.json",
    embeddedLangs: ["html"]
  },
  {
    id: "jison",
    scopeName: "source.jison",
    path: "jison.tmLanguage.json",
    samplePath: "jison.sample",
    embeddedLangs: ["javascript"]
  },
  {
    id: "json",
    scopeName: "source.json",
    path: "json.tmLanguage.json"
  },
  {
    id: "json5",
    scopeName: "source.json5",
    path: "json5.tmLanguage.json",
    samplePath: "json5.sample"
  },
  {
    id: "jsonc",
    scopeName: "source.json.comments",
    path: "jsonc.tmLanguage.json"
  },
  {
    id: "jsonnet",
    scopeName: "source.jsonnet",
    path: "jsonnet.tmLanguage.json"
  },
  {
    id: "jssm",
    scopeName: "source.jssm",
    path: "jssm.tmLanguage.json",
    samplePath: "jssm.sample",
    aliases: ["fsl"]
  },
  {
    id: "jsx",
    scopeName: "source.js.jsx",
    path: "jsx.tmLanguage.json"
  },
  {
    id: "julia",
    scopeName: "source.julia",
    path: "julia.tmLanguage.json",
    embeddedLangs: ["cpp", "python", "javascript", "r", "sql"]
  },
  {
    id: "kotlin",
    scopeName: "source.kotlin",
    path: "kotlin.tmLanguage.json"
  },
  {
    id: "latex",
    scopeName: "text.tex.latex",
    path: "latex.tmLanguage.json",
    embeddedLangs: ["tex", "css", "haskell", "html", "xml", "java", "lua", "julia", "ruby", "javascript", "typescript", "python", "yaml", "rust", "scala", "gnuplot"]
  },
  {
    id: "less",
    scopeName: "source.css.less",
    path: "less.tmLanguage.json",
    embeddedLangs: ["css"]
  },
  {
    id: "liquid",
    scopeName: "text.html.liquid",
    path: "liquid.tmLanguage.json",
    samplePath: "liquid.sample",
    embeddedLangs: ["html", "css", "json", "javascript"]
  },
  {
    id: "lisp",
    scopeName: "source.lisp",
    path: "lisp.tmLanguage.json"
  },
  {
    id: "logo",
    scopeName: "source.logo",
    path: "logo.tmLanguage.json"
  },
  {
    id: "lua",
    scopeName: "source.lua",
    path: "lua.tmLanguage.json",
    embeddedLangs: ["c"]
  },
  {
    id: "make",
    scopeName: "source.makefile",
    path: "make.tmLanguage.json",
    aliases: ["makefile"]
  },
  {
    id: "markdown",
    scopeName: "text.html.markdown",
    path: "markdown.tmLanguage.json",
    aliases: ["md"],
    embeddedLangs: ["css", "html", "ini", "java", "lua", "make", "perl", "r", "ruby", "php", "sql", "vb", "xml", "xsl", "yaml", "bat", "clojure", "coffee", "c", "cpp", "diff", "docker", "git-commit", "git-rebase", "go", "groovy", "pug", "javascript", "json", "jsonc", "less", "objective-c", "swift", "scss", "raku", "powershell", "python", "julia", "rust", "scala", "shellscript", "typescript", "tsx", "csharp", "fsharp", "dart", "handlebars", "erlang", "elixir", "latex", "bibtex"]
  },
  {
    id: "marko",
    scopeName: "text.marko",
    path: "marko.tmLanguage.json",
    embeddedLangs: ["css", "less", "scss", "typescript"]
  },
  {
    id: "matlab",
    scopeName: "source.matlab",
    path: "matlab.tmLanguage.json"
  },
  {
    id: "mdx",
    scopeName: "text.html.markdown.jsx",
    path: "mdx.tmLanguage.json",
    embeddedLangs: ["jsx", "markdown"]
  },
  {
    id: "mermaid",
    scopeName: "source.mermaid",
    path: "mermaid.tmLanguage.json"
  },
  {
    id: "nginx",
    scopeName: "source.nginx",
    path: "nginx.tmLanguage.json",
    embeddedLangs: ["lua"]
  },
  {
    id: "nim",
    scopeName: "source.nim",
    path: "nim.tmLanguage.json",
    embeddedLangs: ["c", "html", "xml", "javascript", "css", "glsl", "markdown"]
  },
  {
    id: "nix",
    scopeName: "source.nix",
    path: "nix.tmLanguage.json"
  },
  {
    id: "objective-c",
    scopeName: "source.objc",
    path: "objective-c.tmLanguage.json",
    aliases: ["objc"]
  },
  {
    id: "objective-cpp",
    scopeName: "source.objcpp",
    path: "objective-cpp.tmLanguage.json"
  },
  {
    id: "ocaml",
    scopeName: "source.ocaml",
    path: "ocaml.tmLanguage.json"
  },
  {
    id: "pascal",
    scopeName: "source.pascal",
    path: "pascal.tmLanguage.json"
  },
  {
    id: "perl",
    scopeName: "source.perl",
    path: "perl.tmLanguage.json",
    embeddedLangs: ["html", "xml", "css", "javascript", "sql"]
  },
  {
    id: "php",
    scopeName: "source.php",
    path: "php.tmLanguage.json",
    embeddedLangs: ["html", "xml", "sql", "javascript", "json", "css"]
  },
  {
    id: "plsql",
    scopeName: "source.plsql.oracle",
    path: "plsql.tmLanguage.json"
  },
  {
    id: "postcss",
    scopeName: "source.css.postcss",
    path: "postcss.tmLanguage.json"
  },
  {
    id: "powerquery",
    scopeName: "source.powerquery",
    path: "powerquery.tmLanguage.json",
    samplePath: "powerquery.sample"
  },
  {
    id: "powershell",
    scopeName: "source.powershell",
    path: "powershell.tmLanguage.json",
    aliases: ["ps", "ps1"]
  },
  {
    id: "prisma",
    scopeName: "source.prisma",
    path: "prisma.tmLanguage.json",
    samplePath: "prisma.sample"
  },
  {
    id: "prolog",
    scopeName: "source.prolog",
    path: "prolog.tmLanguage.json"
  },
  {
    id: "proto",
    scopeName: "source.proto",
    path: "proto.tmLanguage.json",
    samplePath: "proto.sample"
  },
  {
    id: "pug",
    scopeName: "text.pug",
    path: "pug.tmLanguage.json",
    aliases: ["jade"],
    embeddedLangs: ["javascript", "css", "sass", "scss", "stylus", "coffee", "html"]
  },
  {
    id: "puppet",
    scopeName: "source.puppet",
    path: "puppet.tmLanguage.json"
  },
  {
    id: "purescript",
    scopeName: "source.purescript",
    path: "purescript.tmLanguage.json"
  },
  {
    id: "python",
    scopeName: "source.python",
    path: "python.tmLanguage.json",
    samplePath: "python.sample",
    aliases: ["py"]
  },
  {
    id: "r",
    scopeName: "source.r",
    path: "r.tmLanguage.json"
  },
  {
    id: "raku",
    scopeName: "source.perl.6",
    path: "raku.tmLanguage.json",
    aliases: ["perl6"]
  },
  {
    id: "razor",
    scopeName: "text.aspnetcorerazor",
    path: "razor.tmLanguage.json",
    embeddedLangs: ["html", "csharp"]
  },
  {
    id: "rel",
    scopeName: "source.rel",
    path: "rel.tmLanguage.json",
    samplePath: "rel.sample"
  },
  {
    id: "riscv",
    scopeName: "source.riscv",
    path: "riscv.tmLanguage.json"
  },
  {
    id: "rst",
    scopeName: "source.rst",
    path: "rst.tmLanguage.json",
    embeddedLangs: ["cpp", "python", "javascript", "shellscript", "yaml", "cmake", "ruby"]
  },
  {
    id: "ruby",
    scopeName: "source.ruby",
    path: "ruby.tmLanguage.json",
    samplePath: "ruby.sample",
    aliases: ["rb"],
    embeddedLangs: ["html", "xml", "sql", "css", "c", "javascript", "shellscript", "lua"]
  },
  {
    id: "rust",
    scopeName: "source.rust",
    path: "rust.tmLanguage.json",
    aliases: ["rs"]
  },
  {
    id: "sas",
    scopeName: "source.sas",
    path: "sas.tmLanguage.json",
    embeddedLangs: ["sql"]
  },
  {
    id: "sass",
    scopeName: "source.sass",
    path: "sass.tmLanguage.json"
  },
  {
    id: "scala",
    scopeName: "source.scala",
    path: "scala.tmLanguage.json"
  },
  {
    id: "scheme",
    scopeName: "source.scheme",
    path: "scheme.tmLanguage.json"
  },
  {
    id: "scss",
    scopeName: "source.css.scss",
    path: "scss.tmLanguage.json",
    embeddedLangs: ["css"]
  },
  {
    id: "shaderlab",
    scopeName: "source.shaderlab",
    path: "shaderlab.tmLanguage.json",
    aliases: ["shader"],
    embeddedLangs: ["hlsl"]
  },
  {
    id: "shellscript",
    scopeName: "source.shell",
    path: "shellscript.tmLanguage.json",
    aliases: ["bash", "console", "sh", "shell", "zsh"]
  },
  {
    id: "smalltalk",
    scopeName: "source.smalltalk",
    path: "smalltalk.tmLanguage.json"
  },
  {
    id: "solidity",
    scopeName: "source.solidity",
    path: "solidity.tmLanguage.json"
  },
  {
    id: "sparql",
    scopeName: "source.sparql",
    path: "sparql.tmLanguage.json",
    samplePath: "sparql.sample",
    embeddedLangs: ["turtle"]
  },
  {
    id: "sql",
    scopeName: "source.sql",
    path: "sql.tmLanguage.json"
  },
  {
    id: "ssh-config",
    scopeName: "source.ssh-config",
    path: "ssh-config.tmLanguage.json"
  },
  {
    id: "stata",
    scopeName: "source.stata",
    path: "stata.tmLanguage.json",
    samplePath: "stata.sample",
    embeddedLangs: ["sql"]
  },
  {
    id: "stylus",
    scopeName: "source.stylus",
    path: "stylus.tmLanguage.json",
    aliases: ["styl"]
  },
  {
    id: "svelte",
    scopeName: "source.svelte",
    path: "svelte.tmLanguage.json",
    embeddedLangs: ["javascript", "typescript", "coffee", "stylus", "sass", "css", "scss", "less", "postcss", "pug", "markdown"]
  },
  {
    id: "swift",
    scopeName: "source.swift",
    path: "swift.tmLanguage.json"
  },
  {
    id: "system-verilog",
    scopeName: "source.systemverilog",
    path: "system-verilog.tmLanguage.json"
  },
  {
    id: "tasl",
    scopeName: "source.tasl",
    path: "tasl.tmLanguage.json",
    samplePath: "tasl.sample"
  },
  {
    id: "tcl",
    scopeName: "source.tcl",
    path: "tcl.tmLanguage.json"
  },
  {
    id: "tex",
    scopeName: "text.tex",
    path: "tex.tmLanguage.json",
    embeddedLangs: ["r"]
  },
  {
    id: "toml",
    scopeName: "source.toml",
    path: "toml.tmLanguage.json"
  },
  {
    id: "tsx",
    scopeName: "source.tsx",
    path: "tsx.tmLanguage.json",
    samplePath: "tsx.sample"
  },
  {
    id: "turtle",
    scopeName: "source.turtle",
    path: "turtle.tmLanguage.json",
    samplePath: "turtle.sample"
  },
  {
    id: "twig",
    scopeName: "text.html.twig",
    path: "twig.tmLanguage.json",
    embeddedLangs: ["css", "javascript", "php", "python", "ruby"]
  },
  {
    id: "typescript",
    scopeName: "source.ts",
    path: "typescript.tmLanguage.json",
    aliases: ["ts"]
  },
  {
    id: "v",
    scopeName: "source.v",
    path: "v.tmLanguage.json",
    samplePath: "v.sample"
  },
  {
    id: "vb",
    scopeName: "source.asp.vb.net",
    path: "vb.tmLanguage.json",
    aliases: ["cmd"]
  },
  {
    id: "verilog",
    scopeName: "source.verilog",
    path: "verilog.tmLanguage.json"
  },
  {
    id: "vhdl",
    scopeName: "source.vhdl",
    path: "vhdl.tmLanguage.json"
  },
  {
    id: "viml",
    scopeName: "source.viml",
    path: "viml.tmLanguage.json",
    aliases: ["vim", "vimscript"]
  },
  {
    id: "vue-html",
    scopeName: "text.html.vue-html",
    path: "vue-html.tmLanguage.json",
    embeddedLangs: ["vue", "javascript"]
  },
  {
    id: "vue",
    scopeName: "source.vue",
    path: "vue.tmLanguage.json",
    embeddedLangs: ["html", "markdown", "pug", "stylus", "sass", "css", "scss", "less", "javascript", "typescript", "jsx", "tsx", "json", "jsonc", "json5", "yaml", "toml", "graphql"]
  },
  {
    id: "wasm",
    scopeName: "source.wat",
    path: "wasm.tmLanguage.json"
  },
  {
    id: "wenyan",
    scopeName: "source.wenyan",
    path: "wenyan.tmLanguage.json",
    aliases: ["文言"]
  },
  {
    id: "wgsl",
    scopeName: "source.wgsl",
    path: "wgsl.tmLanguage.json",
    samplePath: "wgsl.sample"
  },
  {
    id: "xml",
    scopeName: "text.xml",
    path: "xml.tmLanguage.json",
    embeddedLangs: ["java"]
  },
  {
    id: "xsl",
    scopeName: "text.xml.xsl",
    path: "xsl.tmLanguage.json",
    embeddedLangs: ["xml"]
  },
  {
    id: "yaml",
    scopeName: "source.yaml",
    path: "yaml.tmLanguage.json",
    aliases: ["yml"]
  },
  {
    id: "zenscript",
    scopeName: "source.zenscript",
    path: "zenscript.tmLanguage.json",
    samplePath: "zenscript.sample"
  }
];
var ke = /* @__PURE__ */ ((n) => (n[n.NotSet = -1] = "NotSet", n[n.None = 0] = "None", n[n.Italic = 1] = "Italic", n[n.Bold = 2] = "Bold", n[n.Underline = 4] = "Underline", n))(ke || {});
class ne {
  static toBinaryStr(e) {
    let t = e.toString(2);
    for (; t.length < 32; )
      t = "0" + t;
    return t;
  }
  static printMetadata(e) {
    let t = ne.getLanguageId(e), o = ne.getTokenType(e), r = ne.getFontStyle(e), s = ne.getForeground(e), a = ne.getBackground(e);
    console.log({
      languageId: t,
      tokenType: o,
      fontStyle: r,
      foreground: s,
      background: a
    });
  }
  static getLanguageId(e) {
    return (e & 255) >>> 0;
  }
  static getTokenType(e) {
    return (e & 768) >>> 8;
  }
  static getFontStyle(e) {
    return (e & 14336) >>> 11;
  }
  static getForeground(e) {
    return (e & 8372224) >>> 15;
  }
  static getBackground(e) {
    return (e & 4286578688) >>> 24;
  }
  static containsBalancedBrackets(e) {
    return (e & 1024) !== 0;
  }
  static set(e, t, o, r, s, a) {
    let c = ne.getLanguageId(e), l = ne.getTokenType(e), i = ne.getFontStyle(e), p = ne.getForeground(e), h = ne.getBackground(e), d = ne.containsBalancedBrackets(
      e
    ) ? 1 : 0;
    return t !== 0 && (c = t), o !== 0 && (l = o === 8 ? 0 : o), r !== -1 && (i = r), s !== 0 && (p = s), a !== 0 && (h = a), (c << 0 | l << 8 | i << 11 | d << 10 | p << 15 | h << 24) >>> 0;
  }
}
function a_e(n) {
  return n.endsWith("/") || n.endsWith("\\") ? n.slice(0, -1) : n;
}
function i_e(n) {
  return n.startsWith("./") ? n.slice(2) : n;
}
function Ho(n) {
  const e = n.split(/[\/\\]/g);
  return e.slice(0, e.length - 1);
}
function Vo(...n) {
  return n.map(a_e).map(i_e).join("/");
}
function l_e(n, e) {
  const t = /* @__PURE__ */ new Map();
  for (const o of n) {
    const r = e(o);
    t.has(r) ? t.get(r).push(o) : t.set(r, [o]);
  }
  return t;
}
function u_e(n, e = !1) {
  const t = n.length;
  let o = 0, r = "", s = 0, a = 16, c = 0, l = 0, i = 0, p = 0, h = 0;
  function d(w, C) {
    let y = 0, u = 0;
    for (; y < w || !C; ) {
      let g = n.charCodeAt(o);
      if (g >= 48 && g <= 57)
        u = u * 16 + g - 48;
      else if (g >= 65 && g <= 70)
        u = u * 16 + g - 65 + 10;
      else if (g >= 97 && g <= 102)
        u = u * 16 + g - 97 + 10;
      else
        break;
      o++, y++;
    }
    return y < w && (u = -1), u;
  }
  function f(w) {
    o = w, r = "", s = 0, a = 16, h = 0;
  }
  function m() {
    let w = o;
    if (n.charCodeAt(o) === 48)
      o++;
    else
      for (o++; o < n.length && Oe(n.charCodeAt(o)); )
        o++;
    if (o < n.length && n.charCodeAt(o) === 46)
      if (o++, o < n.length && Oe(n.charCodeAt(o)))
        for (o++; o < n.length && Oe(n.charCodeAt(o)); )
          o++;
      else
        return h = 3, n.substring(w, o);
    let C = o;
    if (o < n.length && (n.charCodeAt(o) === 69 || n.charCodeAt(o) === 101))
      if (o++, (o < n.length && n.charCodeAt(o) === 43 || n.charCodeAt(o) === 45) && o++, o < n.length && Oe(n.charCodeAt(o))) {
        for (o++; o < n.length && Oe(n.charCodeAt(o)); )
          o++;
        C = o;
      } else
        h = 3;
    return n.substring(w, C);
  }
  function L() {
    let w = "", C = o;
    for (; ; ) {
      if (o >= t) {
        w += n.substring(C, o), h = 2;
        break;
      }
      const y = n.charCodeAt(o);
      if (y === 34) {
        w += n.substring(C, o), o++;
        break;
      }
      if (y === 92) {
        if (w += n.substring(C, o), o++, o >= t) {
          h = 2;
          break;
        }
        switch (n.charCodeAt(o++)) {
          case 34:
            w += '"';
            break;
          case 92:
            w += "\\";
            break;
          case 47:
            w += "/";
            break;
          case 98:
            w += "\b";
            break;
          case 102:
            w += "\f";
            break;
          case 110:
            w += `
`;
            break;
          case 114:
            w += "\r";
            break;
          case 116:
            w += "	";
            break;
          case 117:
            const g = d(4, !0);
            g >= 0 ? w += String.fromCharCode(g) : h = 4;
            break;
          default:
            h = 5;
        }
        C = o;
        continue;
      }
      if (y >= 0 && y <= 31)
        if (We(y)) {
          w += n.substring(C, o), h = 2;
          break;
        } else
          h = 6;
      o++;
    }
    return w;
  }
  function S() {
    if (r = "", h = 0, s = o, l = c, p = i, o >= t)
      return s = t, a = 17;
    let w = n.charCodeAt(o);
    if (Mn(w)) {
      do
        o++, r += String.fromCharCode(w), w = n.charCodeAt(o);
      while (Mn(w));
      return a = 15;
    }
    if (We(w))
      return o++, r += String.fromCharCode(w), w === 13 && n.charCodeAt(o) === 10 && (o++, r += `
`), c++, i = o, a = 14;
    switch (w) {
      case 123:
        return o++, a = 1;
      case 125:
        return o++, a = 2;
      case 91:
        return o++, a = 3;
      case 93:
        return o++, a = 4;
      case 58:
        return o++, a = 6;
      case 44:
        return o++, a = 5;
      case 34:
        return o++, r = L(), a = 10;
      case 47:
        const C = o - 1;
        if (n.charCodeAt(o + 1) === 47) {
          for (o += 2; o < t && !We(n.charCodeAt(o)); )
            o++;
          return r = n.substring(C, o), a = 12;
        }
        if (n.charCodeAt(o + 1) === 42) {
          o += 2;
          const y = t - 1;
          let u = !1;
          for (; o < y; ) {
            const g = n.charCodeAt(o);
            if (g === 42 && n.charCodeAt(o + 1) === 47) {
              o += 2, u = !0;
              break;
            }
            o++, We(g) && (g === 13 && n.charCodeAt(o) === 10 && o++, c++, i = o);
          }
          return u || (o++, h = 1), r = n.substring(C, o), a = 13;
        }
        return r += String.fromCharCode(w), o++, a = 16;
      case 45:
        if (r += String.fromCharCode(w), o++, o === t || !Oe(n.charCodeAt(o)))
          return a = 16;
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
        return r += m(), a = 11;
      default:
        for (; o < t && b(w); )
          o++, w = n.charCodeAt(o);
        if (s !== o) {
          switch (r = n.substring(s, o), r) {
            case "true":
              return a = 8;
            case "false":
              return a = 9;
            case "null":
              return a = 7;
          }
          return a = 16;
        }
        return r += String.fromCharCode(w), o++, a = 16;
    }
  }
  function b(w) {
    if (Mn(w) || We(w))
      return !1;
    switch (w) {
      case 125:
      case 93:
      case 123:
      case 91:
      case 34:
      case 58:
      case 44:
      case 47:
        return !1;
    }
    return !0;
  }
  function k() {
    let w;
    do
      w = S();
    while (w >= 12 && w <= 15);
    return w;
  }
  return {
    setPosition: f,
    getPosition: () => o,
    scan: e ? k : S,
    getToken: () => a,
    getTokenValue: () => r,
    getTokenOffset: () => s,
    getTokenLength: () => o - s,
    getTokenStartLine: () => l,
    getTokenStartCharacter: () => s - p,
    getTokenError: () => h
  };
}
function Mn(n) {
  return n === 32 || n === 9;
}
function We(n) {
  return n === 10 || n === 13;
}
function Oe(n) {
  return n >= 48 && n <= 57;
}
var to;
(function(n) {
  n[n.lineFeed = 10] = "lineFeed", n[n.carriageReturn = 13] = "carriageReturn", n[n.space = 32] = "space", n[n._0 = 48] = "_0", n[n._1 = 49] = "_1", n[n._2 = 50] = "_2", n[n._3 = 51] = "_3", n[n._4 = 52] = "_4", n[n._5 = 53] = "_5", n[n._6 = 54] = "_6", n[n._7 = 55] = "_7", n[n._8 = 56] = "_8", n[n._9 = 57] = "_9", n[n.a = 97] = "a", n[n.b = 98] = "b", n[n.c = 99] = "c", n[n.d = 100] = "d", n[n.e = 101] = "e", n[n.f = 102] = "f", n[n.g = 103] = "g", n[n.h = 104] = "h", n[n.i = 105] = "i", n[n.j = 106] = "j", n[n.k = 107] = "k", n[n.l = 108] = "l", n[n.m = 109] = "m", n[n.n = 110] = "n", n[n.o = 111] = "o", n[n.p = 112] = "p", n[n.q = 113] = "q", n[n.r = 114] = "r", n[n.s = 115] = "s", n[n.t = 116] = "t", n[n.u = 117] = "u", n[n.v = 118] = "v", n[n.w = 119] = "w", n[n.x = 120] = "x", n[n.y = 121] = "y", n[n.z = 122] = "z", n[n.A = 65] = "A", n[n.B = 66] = "B", n[n.C = 67] = "C", n[n.D = 68] = "D", n[n.E = 69] = "E", n[n.F = 70] = "F", n[n.G = 71] = "G", n[n.H = 72] = "H", n[n.I = 73] = "I", n[n.J = 74] = "J", n[n.K = 75] = "K", n[n.L = 76] = "L", n[n.M = 77] = "M", n[n.N = 78] = "N", n[n.O = 79] = "O", n[n.P = 80] = "P", n[n.Q = 81] = "Q", n[n.R = 82] = "R", n[n.S = 83] = "S", n[n.T = 84] = "T", n[n.U = 85] = "U", n[n.V = 86] = "V", n[n.W = 87] = "W", n[n.X = 88] = "X", n[n.Y = 89] = "Y", n[n.Z = 90] = "Z", n[n.asterisk = 42] = "asterisk", n[n.backslash = 92] = "backslash", n[n.closeBrace = 125] = "closeBrace", n[n.closeBracket = 93] = "closeBracket", n[n.colon = 58] = "colon", n[n.comma = 44] = "comma", n[n.dot = 46] = "dot", n[n.doubleQuote = 34] = "doubleQuote", n[n.minus = 45] = "minus", n[n.openBrace = 123] = "openBrace", n[n.openBracket = 91] = "openBracket", n[n.plus = 43] = "plus", n[n.slash = 47] = "slash", n[n.formFeed = 12] = "formFeed", n[n.tab = 9] = "tab";
})(to || (to = {}));
var un;
(function(n) {
  n.DEFAULT = {
    allowTrailingComma: !1
  };
})(un || (un = {}));
function p_e(n, e = [], t = un.DEFAULT) {
  let o = null, r = [];
  const s = [];
  function a(l) {
    Array.isArray(r) ? r.push(l) : o !== null && (r[o] = l);
  }
  return h_e(n, {
    onObjectBegin: () => {
      const l = {};
      a(l), s.push(r), r = l, o = null;
    },
    onObjectProperty: (l) => {
      o = l;
    },
    onObjectEnd: () => {
      r = s.pop();
    },
    onArrayBegin: () => {
      const l = [];
      a(l), s.push(r), r = l, o = null;
    },
    onArrayEnd: () => {
      r = s.pop();
    },
    onLiteralValue: a,
    onError: (l, i, p) => {
      e.push({ error: l, offset: i, length: p });
    }
  }, t), r[0];
}
function h_e(n, e, t = un.DEFAULT) {
  const o = u_e(n, !1), r = [];
  function s(E) {
    return E ? () => E(o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter()) : () => !0;
  }
  function a(E) {
    return E ? () => E(o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter(), () => r.slice()) : () => !0;
  }
  function c(E) {
    return E ? (D) => E(D, o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter()) : () => !0;
  }
  function l(E) {
    return E ? (D) => E(D, o.getTokenOffset(), o.getTokenLength(), o.getTokenStartLine(), o.getTokenStartCharacter(), () => r.slice()) : () => !0;
  }
  const i = a(e.onObjectBegin), p = l(e.onObjectProperty), h = s(e.onObjectEnd), d = a(e.onArrayBegin), f = s(e.onArrayEnd), m = l(e.onLiteralValue), L = c(e.onSeparator), S = s(e.onComment), b = c(e.onError), k = t && t.disallowComments, w = t && t.allowTrailingComma;
  function C() {
    for (; ; ) {
      const E = o.scan();
      switch (o.getTokenError()) {
        case 4:
          y(
            14
            /* ParseErrorCode.InvalidUnicode */
          );
          break;
        case 5:
          y(
            15
            /* ParseErrorCode.InvalidEscapeCharacter */
          );
          break;
        case 3:
          y(
            13
            /* ParseErrorCode.UnexpectedEndOfNumber */
          );
          break;
        case 1:
          k || y(
            11
            /* ParseErrorCode.UnexpectedEndOfComment */
          );
          break;
        case 2:
          y(
            12
            /* ParseErrorCode.UnexpectedEndOfString */
          );
          break;
        case 6:
          y(
            16
            /* ParseErrorCode.InvalidCharacter */
          );
          break;
      }
      switch (E) {
        case 12:
        case 13:
          k ? y(
            10
            /* ParseErrorCode.InvalidCommentToken */
          ) : S();
          break;
        case 16:
          y(
            1
            /* ParseErrorCode.InvalidSymbol */
          );
          break;
        case 15:
        case 14:
          break;
        default:
          return E;
      }
    }
  }
  function y(E, D = [], T = []) {
    if (b(E), D.length + T.length > 0) {
      let q = o.getToken();
      for (; q !== 17; ) {
        if (D.indexOf(q) !== -1) {
          C();
          break;
        } else if (T.indexOf(q) !== -1)
          break;
        q = C();
      }
    }
  }
  function u(E) {
    const D = o.getTokenValue();
    return E ? m(D) : (p(D), r.push(D)), C(), !0;
  }
  function g() {
    switch (o.getToken()) {
      case 11:
        const E = o.getTokenValue();
        let D = Number(E);
        isNaN(D) && (y(
          2
          /* ParseErrorCode.InvalidNumberFormat */
        ), D = 0), m(D);
        break;
      case 7:
        m(null);
        break;
      case 8:
        m(!0);
        break;
      case 9:
        m(!1);
        break;
      default:
        return !1;
    }
    return C(), !0;
  }
  function x() {
    return o.getToken() !== 10 ? (y(3, [], [
      2,
      5
      /* SyntaxKind.CommaToken */
    ]), !1) : (u(!1), o.getToken() === 6 ? (L(":"), C(), A() || y(4, [], [
      2,
      5
      /* SyntaxKind.CommaToken */
    ])) : y(5, [], [
      2,
      5
      /* SyntaxKind.CommaToken */
    ]), r.pop(), !0);
  }
  function _() {
    i(), C();
    let E = !1;
    for (; o.getToken() !== 2 && o.getToken() !== 17; ) {
      if (o.getToken() === 5) {
        if (E || y(4, [], []), L(","), C(), o.getToken() === 2 && w)
          break;
      } else
        E && y(6, [], []);
      x() || y(4, [], [
        2,
        5
        /* SyntaxKind.CommaToken */
      ]), E = !0;
    }
    return h(), o.getToken() !== 2 ? y(7, [
      2
      /* SyntaxKind.CloseBraceToken */
    ], []) : C(), !0;
  }
  function v() {
    d(), C();
    let E = !0, D = !1;
    for (; o.getToken() !== 4 && o.getToken() !== 17; ) {
      if (o.getToken() === 5) {
        if (D || y(4, [], []), L(","), C(), o.getToken() === 4 && w)
          break;
      } else
        D && y(6, [], []);
      E ? (r.push(0), E = !1) : r[r.length - 1]++, A() || y(4, [], [
        4,
        5
        /* SyntaxKind.CommaToken */
      ]), D = !0;
    }
    return f(), E || r.pop(), o.getToken() !== 4 ? y(8, [
      4
      /* SyntaxKind.CloseBracketToken */
    ], []) : C(), !0;
  }
  function A() {
    switch (o.getToken()) {
      case 3:
        return v();
      case 1:
        return _();
      case 10:
        return u(!0);
      default:
        return g();
    }
  }
  return C(), o.getToken() === 17 ? t.allowEmptyContent ? !0 : (y(4, [], []), !1) : A() ? (o.getToken() !== 17 && y(9, [], []), !0) : (y(4, [], []), !1);
}
var oo;
(function(n) {
  n[n.None = 0] = "None", n[n.UnexpectedEndOfComment = 1] = "UnexpectedEndOfComment", n[n.UnexpectedEndOfString = 2] = "UnexpectedEndOfString", n[n.UnexpectedEndOfNumber = 3] = "UnexpectedEndOfNumber", n[n.InvalidUnicode = 4] = "InvalidUnicode", n[n.InvalidEscapeCharacter = 5] = "InvalidEscapeCharacter", n[n.InvalidCharacter = 6] = "InvalidCharacter";
})(oo || (oo = {}));
var so;
(function(n) {
  n[n.OpenBraceToken = 1] = "OpenBraceToken", n[n.CloseBraceToken = 2] = "CloseBraceToken", n[n.OpenBracketToken = 3] = "OpenBracketToken", n[n.CloseBracketToken = 4] = "CloseBracketToken", n[n.CommaToken = 5] = "CommaToken", n[n.ColonToken = 6] = "ColonToken", n[n.NullKeyword = 7] = "NullKeyword", n[n.TrueKeyword = 8] = "TrueKeyword", n[n.FalseKeyword = 9] = "FalseKeyword", n[n.StringLiteral = 10] = "StringLiteral", n[n.NumericLiteral = 11] = "NumericLiteral", n[n.LineCommentTrivia = 12] = "LineCommentTrivia", n[n.BlockCommentTrivia = 13] = "BlockCommentTrivia", n[n.LineBreakTrivia = 14] = "LineBreakTrivia", n[n.Trivia = 15] = "Trivia", n[n.Unknown = 16] = "Unknown", n[n.EOF = 17] = "EOF";
})(so || (so = {}));
const d_e = p_e;
var ro;
(function(n) {
  n[n.InvalidSymbol = 1] = "InvalidSymbol", n[n.InvalidNumberFormat = 2] = "InvalidNumberFormat", n[n.PropertyNameExpected = 3] = "PropertyNameExpected", n[n.ValueExpected = 4] = "ValueExpected", n[n.ColonExpected = 5] = "ColonExpected", n[n.CommaExpected = 6] = "CommaExpected", n[n.CloseBraceExpected = 7] = "CloseBraceExpected", n[n.CloseBracketExpected = 8] = "CloseBracketExpected", n[n.EndOfFileExpected = 9] = "EndOfFileExpected", n[n.InvalidCommentToken = 10] = "InvalidCommentToken", n[n.UnexpectedEndOfComment = 11] = "UnexpectedEndOfComment", n[n.UnexpectedEndOfString = 12] = "UnexpectedEndOfString", n[n.UnexpectedEndOfNumber = 13] = "UnexpectedEndOfNumber", n[n.InvalidUnicode = 14] = "InvalidUnicode", n[n.InvalidEscapeCharacter = 15] = "InvalidEscapeCharacter", n[n.InvalidCharacter = 16] = "InvalidCharacter";
})(ro || (ro = {}));
const f_e = typeof self < "u" && typeof self.WorkerGlobalScope < "u", m_e = "process" in globalThis && typeof process < "u" && typeof process.release < "u" && process.release.name === "node", lt = f_e || !m_e;
let g_e = "";
const __e = "dist/";
let Bn = null;
async function b_e(n) {
  if (!Bn) {
    let e;
    if (lt)
      e = on.loadWASM({
        data: await fetch(Wo(Vo(...Ho(n), "onig.wasm")))
      });
    else {
      const o = require("path").join(require.resolve("vscode-oniguruma"), "../onig.wasm"), s = require("fs").readFileSync(o).buffer;
      e = on.loadWASM(s);
    }
    Bn = e.then(() => ({
      createOnigScanner(t) {
        return on.createOnigScanner(t);
      },
      createOnigString(t) {
        return on.createOnigString(t);
      }
    }));
  }
  return Bn;
}
function Wo(n) {
  if (lt)
    return `${g_e}${n}`;
  {
    const e = require("path");
    return e.isAbsolute(n) ? n : e.resolve(__dirname, "..", n);
  }
}
async function k_e(n) {
  const e = Wo(n);
  return lt ? await fetch(e).then((t) => t.text()) : await require("fs").promises.readFile(e, "utf-8");
}
async function Zo(n) {
  const e = [], t = d_e(await k_e(n), e, {
    allowTrailingComma: !0
  });
  if (e.length)
    throw e[0];
  return t;
}
async function Jo(n) {
  let e = await Zo(n);
  const t = Qo(e);
  if (t.include) {
    const o = await Jo(Vo(...Ho(n), t.include));
    o.settings && (t.settings = o.settings.concat(t.settings)), o.bg && !t.bg && (t.bg = o.bg), o.colors && (t.colors = { ...o.colors, ...t.colors }), delete t.include;
  }
  return t;
}
async function y_e(n) {
  return await Zo(n);
}
function w_e(n) {
  n.settings || (n.settings = []), !(n.settings[0] && n.settings[0].settings && !n.settings[0].scope) && n.settings.unshift({
    settings: {
      foreground: n.fg,
      background: n.bg
    }
  });
}
function Qo(n) {
  const e = n.type || "dark", t = {
    name: n.name,
    type: e,
    ...n,
    ...v_e(n)
  };
  return n.include && (t.include = n.include), n.tokenColors && (t.settings = n.tokenColors, delete t.tokenColors), w_e(t), t;
}
const co = { light: "#333333", dark: "#bbbbbb" }, ao = { light: "#fffffe", dark: "#1e1e1e" };
function v_e(n) {
  var s, a, c, l;
  let e, t, o = n.settings ? n.settings : n.tokenColors;
  const r = o ? o.find((i) => !i.name && !i.scope) : void 0;
  return (s = r == null ? void 0 : r.settings) != null && s.foreground && (e = r.settings.foreground), (a = r == null ? void 0 : r.settings) != null && a.background && (t = r.settings.background), !e && ((c = n == null ? void 0 : n.colors) != null && c["editor.foreground"]) && (e = n.colors["editor.foreground"]), !t && ((l = n == null ? void 0 : n.colors) != null && l["editor.background"]) && (t = n.colors["editor.background"]), e || (e = n.type === "light" ? co.light : co.dark), t || (t = n.type === "light" ? ao.light : ao.dark), {
    fg: e,
    bg: t
  };
}
class x_e {
  constructor(e, t) {
    this.languagesPath = "languages/", this.languageMap = {}, this.scopeToLangMap = {}, this._onigLibPromise = e, this._onigLibName = t;
  }
  get onigLib() {
    return this._onigLibPromise;
  }
  getOnigLibName() {
    return this._onigLibName;
  }
  getLangRegistration(e) {
    return this.languageMap[e];
  }
  async loadGrammar(e) {
    const t = this.scopeToLangMap[e];
    if (!t)
      return null;
    if (t.grammar)
      return t.grammar;
    const o = await y_e(
      xn.includes(t) ? `${this.languagesPath}${t.path}` : t.path
    );
    return t.grammar = o, o;
  }
  addLanguage(e) {
    this.languageMap[e.id] = e, e.aliases && e.aliases.forEach((t) => {
      this.languageMap[t] = e;
    }), this.scopeToLangMap[e.scopeName] = e;
  }
}
function A_e(n, e, t, o, r) {
  let s = t.split(/\r\n|\r|\n/), a = Uo.INITIAL, c = [], l = [];
  for (let i = 0, p = s.length; i < p; i++) {
    let h = s[i];
    if (h === "") {
      c = [], l.push([]);
      continue;
    }
    let d, f, m;
    r.includeExplanation && (d = o.tokenizeLine(h, a), f = d.tokens, m = 0);
    let L = o.tokenizeLine2(h, a), S = L.tokens.length / 2;
    for (let b = 0; b < S; b++) {
      let k = L.tokens[2 * b], w = b + 1 < S ? L.tokens[2 * b + 2] : h.length;
      if (k === w)
        continue;
      let C = L.tokens[2 * b + 1], y = ne.getForeground(C), u = e[y], g = ne.getFontStyle(C), x = [];
      if (r.includeExplanation) {
        let _ = 0;
        for (; k + _ < w; ) {
          let v = f[m], A = h.substring(
            v.startIndex,
            v.endIndex
          );
          _ += A.length, x.push({
            content: A,
            scopes: S_e(n, v.scopes)
          }), m++;
        }
      }
      c.push({
        content: h.substring(k, w),
        color: u,
        fontStyle: g,
        explanation: x
      });
    }
    l.push(c), c = [], a = L.ruleStack;
  }
  return l;
}
function S_e(n, e) {
  let t = [];
  for (let o = 0, r = e.length; o < r; o++) {
    let s = e.slice(0, o), a = e[o];
    t[o] = {
      scopeName: a,
      themeMatches: C_e(n, a, s)
    };
  }
  return t;
}
function io(n, e) {
  let t = n + ".";
  return n === e || e.substring(0, t.length) === t;
}
function L_e(n, e, t, o) {
  if (!io(n, t))
    return !1;
  let r = e.length - 1, s = o.length - 1;
  for (; r >= 0 && s >= 0; )
    io(e[r], o[s]) && r--, s--;
  return r === -1;
}
function C_e(n, e, t) {
  let o = [], r = 0;
  for (let s = 0, a = n.settings.length; s < a; s++) {
    let c = n.settings[s], l;
    if (typeof c.scope == "string")
      l = c.scope.split(/,/).map((i) => i.trim());
    else if (Array.isArray(c.scope))
      l = c.scope;
    else
      continue;
    for (let i = 0, p = l.length; i < p; i++) {
      let d = l[i].split(/ /), f = d[d.length - 1], m = d.slice(0, d.length - 1);
      L_e(f, m, e, t) && (o[r++] = c, i = p);
    }
  }
  return o;
}
var De = [
  "black",
  "red",
  "green",
  "yellow",
  "blue",
  "magenta",
  "cyan",
  "white",
  "brightBlack",
  "brightRed",
  "brightGreen",
  "brightYellow",
  "brightBlue",
  "brightMagenta",
  "brightCyan",
  "brightWhite"
], zn = {
  1: "bold",
  2: "dim",
  3: "italic",
  4: "underline",
  7: "reverse",
  9: "strikethrough"
};
function E_e(n, e) {
  const t = n.indexOf("\x1B", e);
  if (t !== -1 && n[t + 1] === "[") {
    const o = n.indexOf("m", t);
    return {
      sequence: n.substring(t + 2, o).split(";"),
      startPosition: t,
      position: o + 1
    };
  }
  return {
    position: n.length
  };
}
function lo(n) {
  const e = n.shift();
  if (e === "2") {
    const t = n.splice(0, 3).map((o) => Number.parseInt(o));
    return t.length !== 3 || t.some((o) => Number.isNaN(o)) ? void 0 : {
      type: "rgb",
      rgb: t
    };
  } else if (e === "5") {
    const t = n.shift();
    if (t)
      return { type: "table", index: Number(t) };
  }
}
function T_e(n) {
  const e = [];
  for (; n.length > 0; ) {
    const t = n.shift();
    if (!t)
      continue;
    const o = Number.parseInt(t);
    if (!Number.isNaN(o))
      if (o === 0)
        e.push({ type: "resetAll" });
      else if (o <= 9)
        zn[o] && e.push({
          type: "setDecoration",
          value: zn[o]
        });
      else if (o <= 29) {
        const r = zn[o - 20];
        r && e.push({
          type: "resetDecoration",
          value: r
        });
      } else if (o <= 37)
        e.push({
          type: "setForegroundColor",
          value: { type: "named", name: De[o - 30] }
        });
      else if (o === 38) {
        const r = lo(n);
        r && e.push({
          type: "setForegroundColor",
          value: r
        });
      } else if (o === 39)
        e.push({
          type: "resetForegroundColor"
        });
      else if (o <= 47)
        e.push({
          type: "setBackgroundColor",
          value: { type: "named", name: De[o - 40] }
        });
      else if (o === 48) {
        const r = lo(n);
        r && e.push({
          type: "setBackgroundColor",
          value: r
        });
      } else
        o === 49 ? e.push({
          type: "resetBackgroundColor"
        }) : o >= 90 && o <= 97 ? e.push({
          type: "setForegroundColor",
          value: { type: "named", name: De[o - 90 + 8] }
        }) : o >= 100 && o <= 107 && e.push({
          type: "setBackgroundColor",
          value: { type: "named", name: De[o - 100 + 8] }
        });
  }
  return e;
}
function D_e() {
  let n = null, e = null, t = /* @__PURE__ */ new Set();
  return {
    parse(o) {
      const r = [];
      let s = 0;
      do {
        const a = E_e(o, s), c = a.sequence ? o.substring(s, a.startPosition) : o.substring(s);
        if (c.length > 0 && r.push({
          value: c,
          foreground: n,
          background: e,
          decorations: new Set(t)
        }), a.sequence) {
          const l = T_e(a.sequence);
          for (const i of l)
            i.type === "resetAll" ? (n = null, e = null, t.clear()) : i.type === "resetForegroundColor" ? n = null : i.type === "resetBackgroundColor" ? e = null : i.type === "resetDecoration" && t.delete(i.value);
          for (const i of l)
            i.type === "setForegroundColor" ? n = i.value : i.type === "setBackgroundColor" ? e = i.value : i.type === "setDecoration" && t.add(i.value);
        }
        s = a.position;
      } while (s < o.length);
      return r;
    }
  };
}
var q_e = {
  black: "#000000",
  red: "#bb0000",
  green: "#00bb00",
  yellow: "#bbbb00",
  blue: "#0000bb",
  magenta: "#ff00ff",
  cyan: "#00bbbb",
  white: "#eeeeee",
  brightBlack: "#555555",
  brightRed: "#ff5555",
  brightGreen: "#00ff00",
  brightYellow: "#ffff55",
  brightBlue: "#5555ff",
  brightMagenta: "#ff55ff",
  brightCyan: "#55ffff",
  brightWhite: "#ffffff"
};
function j_e(n = q_e) {
  function e(c) {
    return n[c];
  }
  function t(c) {
    return `#${c.map((l) => Math.max(0, Math.min(l, 255)).toString(16).padStart(2, "0")).join("")}`;
  }
  let o;
  function r() {
    if (o)
      return o;
    o = [];
    for (let i = 0; i < De.length; i++)
      o.push(e(De[i]));
    let c = [0, 95, 135, 175, 215, 255];
    for (let i = 0; i < 6; i++)
      for (let p = 0; p < 6; p++)
        for (let h = 0; h < 6; h++)
          o.push(t([c[i], c[p], c[h]]));
    let l = 8;
    for (let i = 0; i < 24; i++, l += 10)
      o.push(t([l, l, l]));
    return o;
  }
  function s(c) {
    return r()[c];
  }
  function a(c) {
    switch (c.type) {
      case "named":
        return e(c.name);
      case "rgb":
        return t(c.rgb);
      case "table":
        return s(c.index);
    }
  }
  return {
    value: a
  };
}
function R_e(n, e) {
  const t = e.split(/\r?\n/), o = j_e(
    Object.fromEntries(
      De.map((s) => [
        s,
        n.colors[`terminal.ansi${s[0].toUpperCase()}${s.substring(1)}`]
      ])
    )
  ), r = D_e();
  return t.map(
    (s) => r.parse(s).map((a) => {
      let c;
      a.decorations.has("reverse") ? c = a.background ? o.value(a.background) : n.bg : c = a.foreground ? o.value(a.foreground) : n.fg, a.decorations.has("dim") && (c = N_e(c));
      let l = ke.None;
      return a.decorations.has("bold") && (l |= ke.Bold), a.decorations.has("italic") && (l |= ke.Italic), a.decorations.has("underline") && (l |= ke.Underline), {
        content: a.value,
        color: c,
        fontStyle: l
      };
    })
  );
}
function N_e(n) {
  const e = n.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);
  if (e)
    if (e[3]) {
      const t = Math.round(Number.parseInt(e[3], 16) / 2).toString(16).padStart(2, "0");
      return `#${e[1]}${e[2]}${t}`;
    } else
      return e[2] ? `#${e[1]}${e[2]}80` : `#${Array.from(e[1]).map((t) => `${t}${t}`).join("")}80`;
  return n;
}
const P_e = {
  pre({ className: n, style: e, children: t }) {
    return `<pre class="${n}" style="${e}" tabindex="0">${t}</pre>`;
  },
  code({ children: n }) {
    return `<code>${n}</code>`;
  },
  line({ className: n, children: e }) {
    return `<span class="${n}">${e}</span>`;
  },
  token({ style: n, children: e }) {
    return `<span style="${n}">${e}</span>`;
  }
};
function uo(n, e = {}) {
  const t = e.bg || "#fff", o = l_e(e.lineOptions ?? [], (a) => a.line), r = e.elements || {};
  function s(a = "", c = {}, l) {
    const i = r[a] || P_e[a];
    return i ? (l = l.filter(Boolean), i({
      ...c,
      children: a === "code" ? l.join(`
`) : l.join("")
    })) : "";
  }
  return s(
    "pre",
    { className: "shiki " + (e.themeName || ""), style: `background-color: ${t}` },
    [
      e.langId ? `<div class="language-id">${e.langId}</div>` : "",
      s(
        "code",
        {},
        n.map((a, c) => {
          const l = c + 1, i = o.get(l) ?? [], p = F_e(i).join(" ");
          return s(
            "line",
            {
              className: p,
              lines: n,
              line: a,
              index: c
            },
            a.map((h, d) => {
              const f = [`color: ${h.color || e.fg}`];
              return h.fontStyle & ke.Italic && f.push("font-style: italic"), h.fontStyle & ke.Bold && f.push("font-weight: bold"), h.fontStyle & ke.Underline && f.push("text-decoration: underline"), s(
                "token",
                {
                  style: f.join("; "),
                  tokens: a,
                  token: h,
                  index: d
                },
                [O_e(h.content)]
              );
            })
          );
        })
      )
    ]
  );
}
const I_e = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
function O_e(n) {
  return n.replace(/[&<>"']/g, (e) => I_e[e]);
}
function F_e(n) {
  const e = /* @__PURE__ */ new Set(["line"]);
  for (const t of n)
    for (const o of t.classes ?? [])
      e.add(o);
  return Array.from(e);
}
class M_e extends Uo.Registry {
  constructor(e) {
    super(e), this._resolver = e, this.themesPath = "themes/", this._resolvedThemes = {}, this._resolvedGrammars = {}, this._langGraph = /* @__PURE__ */ new Map(), this._langMap = xn.reduce((t, o) => (t[o.id] = o, t), {});
  }
  getTheme(e) {
    return typeof e == "string" ? this._resolvedThemes[e] : e;
  }
  async loadTheme(e) {
    return typeof e == "string" ? (this._resolvedThemes[e] || (this._resolvedThemes[e] = await Jo(`${this.themesPath}${e}.json`)), this._resolvedThemes[e]) : (e = Qo(e), e.name && (this._resolvedThemes[e.name] = e), e);
  }
  async loadThemes(e) {
    return await Promise.all(e.map((t) => this.loadTheme(t)));
  }
  getLoadedThemes() {
    return Object.keys(this._resolvedThemes);
  }
  getGrammar(e) {
    return this._resolvedGrammars[e];
  }
  async loadLanguage(e) {
    var s;
    const o = {
      embeddedLanguages: (s = e.embeddedLangs) == null ? void 0 : s.reduce(async (a, c, l) => {
        if (!this.getLoadedLanguages().includes(c) && this._resolver.getLangRegistration(c))
          return await this._resolver.loadGrammar(this._resolver.getLangRegistration(c).scopeName), a[this._resolver.getLangRegistration(c).scopeName] = l + 2, a;
      }, {}),
      balancedBracketSelectors: e.balancedBracketSelectors || ["*"],
      unbalancedBracketSelectors: e.unbalancedBracketSelectors || []
    }, r = await this.loadGrammarWithConfiguration(e.scopeName, 1, o);
    this._resolvedGrammars[e.id] = r, e.aliases && e.aliases.forEach((a) => {
      this._resolvedGrammars[a] = r;
    });
  }
  async loadLanguages(e) {
    for (const o of e)
      this.resolveEmbeddedLanguages(o);
    const t = Array.from(this._langGraph.values());
    for (const o of t)
      this._resolver.addLanguage(o);
    for (const o of t)
      await this.loadLanguage(o);
  }
  getLoadedLanguages() {
    return Object.keys(this._resolvedGrammars);
  }
  resolveEmbeddedLanguages(e) {
    if (this._langGraph.has(e.id) || this._langGraph.set(e.id, e), e.embeddedLangs)
      for (const t of e.embeddedLangs)
        this._langGraph.set(t, this._langMap[t]);
  }
}
function Yo(n) {
  return typeof n == "string" ? xn.find((e) => {
    var t;
    return e.id === n || ((t = e.aliases) == null ? void 0 : t.includes(n));
  }) : n;
}
function B_e(n) {
  var r;
  let e = xn, t = n.themes || [], o = (r = n.paths) != null && r.wasm ? n.paths.wasm.endsWith("/") ? n.paths.wasm : n.paths.wasm + "/" : __e;
  return n.langs && (e = n.langs.map(Yo)), n.theme && t.unshift(n.theme), t.length || (t = ["nord"]), { _languages: e, _themes: t, _wasmPath: o };
}
async function z_e(n) {
  var x, _;
  const { _languages: e, _themes: t, _wasmPath: o } = B_e(n), r = new x_e(b_e(o), "vscode-oniguruma"), s = new M_e(r);
  (x = n.paths) != null && x.themes && (s.themesPath = n.paths.themes.endsWith("/") ? n.paths.themes : n.paths.themes + "/"), (_ = n.paths) != null && _.languages && (r.languagesPath = n.paths.languages.endsWith("/") ? n.paths.languages : n.paths.languages + "/");
  const c = (await s.loadThemes(t))[0];
  let l;
  await s.loadLanguages(e);
  let i = {
    "#000001": "var(--shiki-color-text)",
    "#000002": "var(--shiki-color-background)",
    "#000004": "var(--shiki-token-constant)",
    "#000005": "var(--shiki-token-string)",
    "#000006": "var(--shiki-token-comment)",
    "#000007": "var(--shiki-token-keyword)",
    "#000008": "var(--shiki-token-parameter)",
    "#000009": "var(--shiki-token-function)",
    "#000010": "var(--shiki-token-string-expression)",
    "#000011": "var(--shiki-token-punctuation)",
    "#000012": "var(--shiki-token-link)"
  };
  function p(v) {
    i = v;
  }
  function h(v, A) {
    v.bg = i[v.bg] || v.bg, v.fg = i[v.fg] || v.fg, A.forEach((E, D) => {
      A[D] = i[E] || E;
    });
  }
  function d(v) {
    const A = v ? s.getTheme(v) : c;
    if (!A)
      throw Error(`No theme registration for ${v}`);
    (!l || l.name !== A.name) && (s.setTheme(A), l = A);
    const E = s.getColorMap();
    return A.type === "css" && h(A, E), { _theme: A, _colorMap: E };
  }
  function f(v) {
    const A = s.getGrammar(v);
    if (!A)
      throw Error(`No language registration for ${v}`);
    return { _grammar: A };
  }
  function m(v, A = "text", E, D = { includeExplanation: !0 }) {
    if ($_e(A))
      return [...v.split(/\r\n|\r|\n/).map((M) => [{ content: M }])];
    const { _grammar: T } = f(A), { _theme: q, _colorMap: R } = d(E);
    return A_e(q, R, v, T, D);
  }
  function L(v, A) {
    const { _theme: E } = d(A);
    return R_e(E, v);
  }
  function S(v, A = "text", E) {
    let D;
    typeof A == "object" ? D = A : D = {
      lang: A,
      theme: E
    };
    const T = m(v, D.lang, D.theme, {
      includeExplanation: !1
    }), { _theme: q } = d(D.theme);
    return uo(T, {
      fg: q.fg,
      bg: q.bg,
      lineOptions: D == null ? void 0 : D.lineOptions,
      themeName: q.name
    });
  }
  function b(v, A) {
    const E = L(v, A == null ? void 0 : A.theme), { _theme: D } = d(A == null ? void 0 : A.theme);
    return uo(E, {
      fg: D.fg,
      bg: D.bg,
      lineOptions: A == null ? void 0 : A.lineOptions,
      themeName: D.name
    });
  }
  async function k(v) {
    await s.loadTheme(v);
  }
  async function w(v) {
    const A = Yo(v);
    r.addLanguage(A), await s.loadLanguage(A);
  }
  function C() {
    return s.getLoadedThemes();
  }
  function y() {
    return s.getLoadedLanguages();
  }
  function u(v) {
    const { _theme: A } = d(v);
    return A.bg;
  }
  function g(v) {
    const { _theme: A } = d(v);
    return A.fg;
  }
  return {
    codeToThemedTokens: m,
    codeToHtml: S,
    ansiToThemedTokens: L,
    ansiToHtml: b,
    getTheme: (v) => d(v)._theme,
    loadTheme: k,
    loadLanguage: w,
    getBackgroundColor: u,
    getForegroundColor: g,
    getLoadedThemes: C,
    getLoadedLanguages: y,
    setColorReplacements: p
  };
}
function $_e(n) {
  return !n || ["plaintext", "txt", "text"].includes(n);
}
async function G_e(n = {}) {
  const e = await z_e(n), t = n.processors ?? [];
  return {
    ...e,
    codeToHtml: (o, r) => {
      const s = typeof r == "object" ? r.lang : r, a = typeof r == "object" ? r.lineOptions ?? [] : [], c = typeof r == "object" ? r.theme : void 0, { code: l, lineOptions: i } = r_e(t, o, s), p = e.codeToHtml(l, {
        lang: s,
        theme: c,
        lineOptions: [
          ...i,
          ...a
        ]
      });
      return c_e(t, p, s);
    }
  };
}
const U_e = Jge("abcdefghijklmnopqrstuvwxyz", 10), H_e = (n) => {
  n = n.replace(/^(?:\[.*?\])?.*?([\d,-]+).*/, "$1").trim();
  const e = [];
  return n ? (n.split(",").map((t) => t.split("-").map((o) => parseInt(o, 10))).forEach(([t, o]) => {
    t && o ? e.push(...Array.from({ length: o - t + 1 }, (r, s) => t + s)) : e.push(t);
  }), e.map((t) => ({
    line: t,
    classes: ["highlighted"]
  }))) : [];
}, V_e = {
  name: "error-level",
  handler: vn({
    error: ["highlighted", "error"],
    warning: ["highlighted", "warning"]
  })
};
async function W_e(n = "material-theme-palenight", e = [], t = "", o = console) {
  const r = typeof n == "string" || "name" in n, s = (L) => typeof L == "string" ? L : L.name, a = [
    o_e(),
    s_e({ hasHighlightClass: "highlighted" }),
    t_e(),
    V_e
  ], c = await G_e({
    themes: r ? [n] : [n.dark, n.light],
    // something wrong with shiki, cannot dynamic load css
    langs: ["css", ...e],
    processors: a
  }), l = async (L) => {
    L && !c.getLoadedLanguages().includes(L) && await c.loadLanguage(L);
  };
  await l(t);
  const i = /<pre[^>]*(style=".*?")/, p = /^<pre(.*?)>/, h = /-vue$/, d = /:(no-)?line-numbers$/, f = /\{\{.*?\}\}/g;
  return { plugin: (L, S, b) => {
    const k = h.test(S) ? "" : "v-pre";
    S = S.replace(d, "").replace(h, "").toLowerCase() || t, S && !c.getLoadedLanguages().includes(S) && S !== "ansi" && S !== "txt" && o.warn(
      // c.yellow(
      `
The language '${S}' is not loaded, falling back to '${t || "txt"}' for syntax highlighting.`
      // )
    );
    const w = H_e(b), C = (E) => E.replace(p, (D, T) => `<pre ${k}${T.replace(' tabindex="0"', "")}>`).replace(i, (D, T) => D.replace(T, "")), y = /* @__PURE__ */ new Map(), u = (E) => k ? E : E.replace(f, (D) => {
      let T = y.get(D);
      return T || (T = U_e(), y.set(D, T)), T;
    }), g = (E) => (y.forEach((D, T) => {
      E = E.replace(new RegExp(D, "gi"), T);
    }), E), x = (E) => E.replace(/(<span class="line highlighted">)(<\/span>)/g, "$1<wbr>$2");
    L = u(L);
    const _ = (E) => {
      let D;
      try {
        D = S === "ansi" ? c.ansiToHtml(L, {
          lineOptions: w,
          theme: s(E)
        }) : c.codeToHtml(L, {
          lang: S,
          lineOptions: w,
          theme: s(E)
        });
      } catch {
        D = c.ansiToHtml(L, {
          lineOptions: w,
          theme: s(E)
        });
      }
      return x(C(g(D)));
    };
    if (r)
      return _(n);
    const v = Qe(_(n.dark), "vp-code-dark", "pre"), A = Qe(_(n.light), "vp-code-light", "pre");
    return v + A;
  }, highlighter: c, loadLang: l };
}
const $n = /{([\d,-]+)}/, Z_e = (n) => {
  const e = n.renderer.rules.fence;
  n.renderer.rules.fence = (...t) => {
    const [o, r] = t, s = o[r], a = s.attrs && s.attrs[0];
    let c = null;
    if (!a) {
      const l = s.info;
      if (!l || !$n.test(l))
        return e(...t);
      const i = l.replace($n, "").trim();
      s.info = i, c = $n.exec(l)[1];
    }
    return !c && (c = a[0], !c || !/[\d,-]+/.test(c)) ? e(...t) : (s.info += " " + c, e(...t));
  };
}, J_e = (n) => {
  const e = n.renderer.rules.image;
  n.renderer.rules.image = (t, o, r, s, a) => {
    const c = t[o];
    let l = c.attrGet("src");
    return l && !Qn.test(l) && (/^\.?\//.test(l) || (l = "./" + l), c.attrSet("src", decodeURIComponent(l))), e(t, o, r, s, a);
  };
}, Q_e = (n, e = !1) => {
  const t = n.renderer.rules.fence;
  n.renderer.rules.fence = (...o) => {
    const r = t(...o), [s, a] = o, c = s[a].info;
    if (!e && !/:line-numbers($| )/.test(c) || e && /:no-line-numbers($| )/.test(c))
      return r;
    const i = r.slice(
      r.indexOf("<code>"),
      r.indexOf("</code>")
    ).split(`
`), h = `<div class="line-numbers-wrapper" aria-hidden="true">${[
      ...Array(
        i.length - (i[i.length - 1] === '<span class="line"></span>' ? 1 : 0)
      )
    ].map((f, m) => `<span class="line-number">${m + 1}</span><br>`).join("")}</div>`;
    return r.replace(/<\/div>$/, `${h}</div>`).replace(/"(language-[^"]*?)"/, '"$1 line-numbers-mode"');
  };
}, Y_e = /(^|.*\/)index.md(#?.*)$/i, X_e = (n, e, t) => {
  n.renderer.rules.link_open = (s, a, c, l, i) => {
    const p = s[a], h = p.attrIndex("href");
    if (h >= 0) {
      const d = p.attrs[h], f = d[1];
      Qn.test(f) ? (Object.entries(e).forEach(([L, S]) => {
        p.attrSet(L, S);
      }), f.replace(Qn, "").startsWith("//localhost:") && r(f, l), d[1] = f.replace(Qge, "")) : (// internal anchor links
      !f.startsWith("#") && // mail links
      !f.startsWith("mailto:") && // links to files (other than html/md)
      !/\.(?!html|md)\w+($|\?)/i.test(f) ? o(d, l) : f.startsWith("#") && (d[1] = decodeURI(d[1])), d[1].startsWith("/") && (d[1] = `${t}${d[1]}`.replace(/\/+/g, "/"))), d[1] = d[1].replace(/\bimport\.meta/g, "import%2Emeta").replace(/\bprocess\.env/g, "process%2Eenv");
    }
    return i.renderToken(s, a, c);
  };
  function o(s, a) {
    let c = s[1];
    const l = c.match(Y_e);
    if (l) {
      const [, i, p] = l;
      c = i + p;
    } else {
      let i = c.replace(/[?#].*$/, "");
      i.endsWith(".md") && (i = i.replace(/\.md$/, a.cleanUrls ? "" : ".html")), !a.cleanUrls && !i.endsWith(".html") && !i.endsWith("/") && (i += ".html");
      const p = new URL(c, "http://a.com");
      c = i + p.search + p.hash;
    }
    !c.startsWith("/") && !/^\.\//.test(c) && (c = "./" + c), r(c.replace(/\.html$/, ""), a), s[1] = decodeURI(c);
  }
  function r(s, a) {
    (a.links || (a.links = [])).push(s);
  }
}, K_e = async (n = {}, e = "/", t = console) => {
  var c;
  const { plugin: o, highlighter: r, loadLang: s } = await W_e(n.theme, n.languages, n.defaultHighlightLang, t), a = C$({
    html: !0,
    linkify: !0,
    highlight: n.highlight || o,
    ...n
  });
  return a.linkify.set({ fuzzyLink: !1 }), a.use(Z_e).use(Xge).use(e_e).use(J_e).use(X_e, { target: "_blank", rel: "noreferrer", ...n.externalLinks }, e).use(Q_e, n.lineNumbers), (c = n.attrs) != null && c.disable || a.use(z$, n.attrs), a.use(Hge), a.use(Te, {
    slugify: sn,
    permalink: Te.permalink.linkInsideHeader({
      symbol: "&ZeroWidthSpace;",
      renderAttrs: (l, i) => {
        const p = i.tokens.findIndex((d) => {
          const f = d.attrs, m = f == null ? void 0 : f.find((L) => L[0] === "id");
          return m && l === m[1];
        });
        return {
          "aria-label": `Permalink to "${i.tokens[p + 1].content}"`
        };
      }
    }),
    ...n.anchor
  }), n.headers && a.use(ds, {
    level: [2, 3, 4, 5, 6],
    slugify: sn,
    ...typeof n.headers == "boolean" ? void 0 : n.headers
  }), a.use(fs).use(_s, {
    ...n.toc
  }), n.config && n.config(a), { md: a, highlighter: r, loadLang: s };
}, ebe = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
}, nbe = /* @__PURE__ */ ie("path", {
  fill: "none",
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2",
  d: "M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2M7 11l5 5l5-5m-5-7v12"
}, null, -1), tbe = [
  nbe
];
function obe(n, e) {
  return ce(), fe("svg", ebe, tbe);
}
const sbe = { name: "tabler-download", render: obe }, rbe = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
}, cbe = /* @__PURE__ */ ie("path", {
  fill: "none",
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2",
  d: "m5 12l5 5L20 7"
}, null, -1), abe = [
  cbe
];
function ibe(n, e) {
  return ce(), fe("svg", rbe, abe);
}
const lbe = { name: "tabler-check", render: ibe }, ube = {
  viewBox: "0 0 24 24",
  width: "1.2em",
  height: "1.2em"
}, pbe = /* @__PURE__ */ ie("g", {
  fill: "none",
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2"
}, [
  /* @__PURE__ */ ie("path", { d: "M8 10a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2z" }),
  /* @__PURE__ */ ie("path", { d: "M16 8V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2" })
], -1), hbe = [
  pbe
];
function dbe(n, e) {
  return ce(), fe("svg", ube, hbe);
}
const fbe = { name: "tabler-copy", render: dbe };
async function mbe(n) {
  try {
    return navigator.clipboard.writeText(n);
  } catch {
    const e = document.createElement("textarea"), t = document.activeElement;
    e.value = n, e.setAttribute("readonly", ""), e.style.contain = "strict", e.style.position = "absolute", e.style.left = "-9999px", e.style.fontSize = "12pt";
    const o = document.getSelection(), r = o ? o.rangeCount > 0 && o.getRangeAt(0) : null;
    document.body.appendChild(e), e.select(), e.selectionStart = 0, e.selectionEnd = n.length, document.execCommand("copy"), document.body.removeChild(e), r && (o.removeAllRanges(), o.addRange(r)), t && t.focus();
  }
}
const gbe = (n, e = !1) => {
  const t = "ABCDEFGHJKLMNPQRSTUVWXY3456789";
  let o = "";
  for (let r = 0; r < n.valueOf(); r++)
    o += t.charAt(Math.floor(Math.random() * t.length));
  return e ? o.toLowerCase() : o;
}, _be = {
  javascript: ".js",
  python: ".py",
  java: ".java",
  c: ".c",
  cpp: ".cpp",
  "c++": ".cpp",
  "c#": ".cs",
  ruby: ".rb",
  php: ".php",
  swift: ".swift",
  "objective-c": ".m",
  kotlin: ".kt",
  typescript: ".ts",
  go: ".go",
  perl: ".pl",
  rust: ".rs",
  scala: ".scala",
  haskell: ".hs",
  lua: ".lua",
  shell: ".sh",
  sql: ".sql",
  html: ".html",
  css: ".css"
  // add more file extensions here, make sure the key is same as language prop in CodeBlock.tsx component
}, bbe = (n, e, t = "Enter file name") => {
  const o = _be[n] || ".file", r = `file-${gbe(3, !0)}${o}`, s = window.prompt(t || "", r);
  if (!s)
    return;
  const a = new Blob([e], { type: "text/plain" }), c = URL.createObjectURL(a), l = document.createElement("a");
  l.download = s, l.href = c, l.style.display = "none", document.body.appendChild(l), l.click(), document.body.removeChild(l), URL.revokeObjectURL(c);
}, kbe = { class: "vp-header" }, ybe = { class: "ctrl" }, Yn = /* @__PURE__ */ Xn({
  __name: "VueMarkDownHeader",
  props: {
    lang: {
      type: String,
      default: "txt"
    },
    copyTxt: {
      type: String,
      default: "Copy"
    },
    copiedTxt: {
      type: String,
      default: "Copied"
    },
    item: {
      type: String,
      default: ""
    },
    downloadTxt: {
      type: String,
      default: "Enter file name"
    }
  },
  setup(n) {
    const e = n, t = Me(!1), o = Me(null), r = Gn(() => t.value ? e.copiedTxt : e.copyTxt);
    function s() {
      const c = /* @__PURE__ */ new Map();
      mbe(e.item).then(() => {
        t.value = !0, clearTimeout(c.get(o.value));
        const l = setTimeout(() => {
          t.value = !1, c.delete(o.value);
        }, 2e3);
        c.set(o.value, l);
      });
    }
    function a() {
      bbe(e.lang, e.item, e.downloadTxt);
    }
    return (c, l) => {
      const i = fbe, p = lbe, h = sbe;
      return ce(), fe("div", kbe, [
        Xo(c.$slots, "default", {}, () => [
          ie("div", null, Un(n.lang), 1)
        ]),
        ie("div", ybe, [
          ie("div", {
            class: "copyRef ctrl",
            onClick: s,
            ref_key: "copyRef",
            ref: o
          }, [
            t.value ? (ce(), pt(p, { key: 1 })) : (ce(), pt(i, { key: 0 })),
            ie("span", null, Un(Ko(r)), 1)
          ], 512),
          _e(h, {
            class: "copyRef",
            onClick: a
          })
        ])
      ]);
    };
  }
}), wbe = { class: "tabs" }, vbe = ["onClick"], xbe = ["innerHTML"], Abe = /* @__PURE__ */ Xn({
  __name: "VueGroupCode",
  props: {
    names: {
      type: Object,
      required: !0
    },
    blocks: {
      type: Object,
      required: !0
    }
  },
  setup(n) {
    const e = Me(0);
    function t(o) {
      e.value = o;
    }
    return (o, r) => (ce(), fe(An, null, [
      _e(Yn, null, {
        default: es(() => [
          ie("div", wbe, [
            (ce(!0), fe(An, null, ht(n.names, (s, a) => (ce(), fe("span", {
              key: a,
              onClick: () => t(a),
              class: dt({ active: e.value === a })
            }, Un(s), 11, vbe))), 128))
          ])
        ]),
        _: 1
      }),
      (ce(!0), fe(An, null, ht(n.blocks, (s, a) => ns((ce(), fe("div", {
        innerHTML: s.innerHTML,
        class: dt(s.className),
        key: a
      }, null, 10, xbe)), [
        [ts, e.value === a]
      ])), 128))
    ], 64));
  }
});
function Sbe(n) {
  let e = n;
  const t = /以下是(.+)续写的代码：\n\n/, o = e.match(t);
  if (o) {
    const s = o[1];
    e = e.replace(t, `以下是${s}续写的代码：

\`\`\`${s.toLocaleLowerCase()}

`);
  }
  const r = /\n```\n/g;
  return e = e.replace(r, "\n``` \n"), e;
}
const Cbe = /* @__PURE__ */ Xn({
  components: {
    VueMarkDownHeader: Yn
  },
  props: {
    content: {
      type: String,
      required: !0
    },
    style: {
      type: Object,
      default: () => {
      }
    },
    class: {
      type: String,
      default: ""
    },
    stream: {
      type: Boolean,
      default: !1
    }
  },
  setup(n, {
    expose: e
  }) {
    const t = Me(""), o = Me(), r = Me();
    e({
      render: t,
      md: o,
      loadLangFn: r
    });
    const s = new RegExp("(?<=```)\\S+", "g"), {
      stream: a,
      class: c,
      style: l
    } = os(n), i = Gn(() => ["vp-doc", c.value]);
    function p(L, S = "") {
      let b = "";
      const w = new DOMParser().parseFromString(L, "text/html"), C = /shellscript|shell|bash|sh|zsh/.test(S);
      return w.querySelectorAll("span.line:not(.diff.remove)").forEach((y) => b += (y.textContent || "") + `
`), C && (b = b.replace(/^ *(\$|>) /gm, "").trim()), b.slice(0, -1);
    }
    const h = Gn(() => Sbe(n.content || ""));
    function d(L) {
      if (L.nodeType === Node.TEXT_NODE)
        return L.textContent;
      if (L.nodeType === Node.ELEMENT_NODE) {
        const S = L, b = /^language-/, k = Array.from(S.classList).some((y) => b.test(y)), w = /vp-code-group/;
        if (Array.from(S.classList).some((y) => w.test(y))) {
          const u = Array.from(S.querySelectorAll(".tabs label")).map((x) => x.innerText), g = S.querySelectorAll(".blocks div");
          return _e(Abe, {
            names: u,
            blocks: g
          }, null);
        } else if (k) {
          const y = S.className.match(/language-(\w+)/), u = y ? y[1] : "plain", g = p(S.innerHTML, u), x = S.innerHTML;
          return _e("div", {
            class: i.value,
            style: {
              ...l
            }
          }, [_e("slot", {
            name: "code",
            item: g,
            html: g,
            lang: u
          }, [_e(Yn, {
            lang: u,
            item: g
          }, null)]), _e("div", {
            class: S.className,
            innerHTML: x
          }, null)]);
        } else {
          const y = Array.from(S.childNodes).map(d).flat(), u = {};
          for (let g = 0; g < S.attributes.length; g++) {
            const x = S.attributes[g];
            u[x.name] = x.value;
          }
          return as(S.tagName, {
            ...u
          }, y);
        }
      }
    }
    async function f() {
      var S;
      const L = Array.from(h.value.matchAll(s)).map((b) => b[0]);
      if (L && r.value)
        for (let b = 0; b < L.length; b++) {
          const k = L[b];
          try {
            const w = Bo[k.toLocaleUpperCase()] || k;
            await r.value(w);
          } catch {
            continue;
          }
        }
      t.value = ((S = o.value) == null ? void 0 : S.render(h.value)) || "";
    }
    ss(h, async () => await f()), rs(async () => {
      const {
        md: L,
        loadLang: S
      } = await cs(Mo);
      o.value = L, r.value = S, await f();
    });
    function m() {
      const S = new DOMParser().parseFromString(t.value, "text/html"), b = d(S.body);
      return _e("div", {
        class: [i.value, {
          "result-streaming": a.value
        }],
        style: {
          ...l.value
        }
      }, [b]);
    }
    return () => m();
  }
}), Ebe = {
  install(n, e = {
    theme: "dracula-soft",
    defaultHighlightLang: "javascript"
  }) {
    const t = K_e({
      ...e
    });
    n.provide(Mo, t);
  }
};
export {
  Yn as VueMarkDownHeader,
  Cbe as VueMarkdownIt,
  Ebe as default
};
